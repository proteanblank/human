"use strict";/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var u0=Object.defineProperty;var ZR=Object.getOwnPropertyDescriptor;var YR=Object.getOwnPropertyNames;var JR=Object.prototype.hasOwnProperty;var QR=(e,t,r)=>t in e?u0(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var wo=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,r)=>(typeof require!="undefined"?require:t)[r]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Ts=(e,t)=>{for(var r in t)u0(e,r,{get:t[r],enumerable:!0})},e$=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of YR(t))!JR.call(e,a)&&a!==r&&u0(e,a,{get:()=>t[a],enumerable:!(n=ZR(t,a))||n.enumerable});return e};var t$=e=>e$(u0({},"__esModule",{value:!0}),e);var fe=(e,t,r)=>(QR(e,typeof t!="symbol"?t+"":t,r),r),b4=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};var Np=(e,t,r)=>(b4(e,t,"read from private field"),r?r.call(e):t.get(e)),Ep=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},Rp=(e,t,r,n)=>(b4(e,t,"write to private field"),n?n.call(e,r):t.set(e,r),r);var GAe={};Ts(GAe,{Human:()=>Jb,default:()=>Jb,defaults:()=>Ns,draw:()=>jb,env:()=>he,match:()=>Yb,models:()=>B1});function se(...e){let t=new Date,r=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(r,"Human:",...e)}function v4(e,t){let r=e.endsWith("/")?"":"/",a=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${r}${t}`;if(!a.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${a}`);return a}var oe=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function Cg(e,t,r="config",n=[]){for(let a of Object.keys(t))if(typeof t[a]=="object")Cg(e[a],t[a],a,n);else{let s=e&&typeof e[a]!="undefined";s||n.push({reason:"unknown property",where:`${r}.${a} = ${t[a]}`});let i=e&&typeof e[a]==typeof t[a];s&&!i&&n.push({reason:"property type mismatch",where:`${r}.${a} = ${t[a]}`,expected:typeof e[a]})}return t.debug&&r==="config"&&n.length>0&&se("invalid configuration",n),n}function jt(...e){let t=r=>r&&typeof r=="object";return e.reduce((r,n)=>(Object.keys(n||{}).forEach(a=>{let s=r[a],i=n[a];Array.isArray(s)&&Array.isArray(i)?r[a]=s.concat(...i):t(s)&&t(i)?r[a]=jt(s,i):r[a]=i}),r),{})}var Ns={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var Ue={};Ts(Ue,{Abs:()=>Yo,Acos:()=>Yu,Acosh:()=>Ju,AdadeltaOptimizer:()=>mm,AdagradOptimizer:()=>gm,AdamOptimizer:()=>ym,AdamaxOptimizer:()=>Am,Add:()=>ns,AddN:()=>ti,All:()=>Qu,Any:()=>ed,ArgMax:()=>ri,ArgMin:()=>td,Asin:()=>rd,Asinh:()=>nd,Atan:()=>ad,Atan2:()=>id,Atanh:()=>sd,AvgPool:()=>ni,AvgPool3D:()=>hh,AvgPool3DGrad:()=>wf,AvgPoolGrad:()=>vf,BackendWasm:()=>xT,BatchMatMul:()=>ai,BatchToSpaceND:()=>Jo,Bincount:()=>kf,BroadcastArgs:()=>If,BroadcastTo:()=>w6,Callback:()=>bk,CallbackList:()=>b8,Cast:()=>si,Ceil:()=>ii,ClipByValue:()=>as,Complex:()=>ch,ComplexAbs:()=>fh,Concat:()=>Qo,Conv2D:()=>oi,Conv2DBackpropFilter:()=>Sf,Conv2DBackpropInput:()=>li,Conv3D:()=>mh,Conv3DBackpropFilterV2:()=>Cf,Conv3DBackpropInputV2:()=>Tf,Cos:()=>ui,Cosh:()=>di,CropAndResize:()=>tl,Cumprod:()=>el,Cumsum:()=>pi,CustomCallback:()=>w8,DataStorage:()=>ph,DenseBincount:()=>Nf,DepthToSpace:()=>rl,DepthwiseConv2dNative:()=>hi,DepthwiseConv2dNativeBackpropFilter:()=>Ef,DepthwiseConv2dNativeBackpropInput:()=>Rf,Diag:()=>$f,Dilation2D:()=>gh,Dilation2DBackpropFilter:()=>D0,Dilation2DBackpropInput:()=>O0,ENV:()=>Ia,EarlyStopping:()=>vk,Einsum:()=>yh,Elu:()=>fi,EluGrad:()=>Mf,Environment:()=>b6,Equal:()=>nl,Erf:()=>od,Exp:()=>mi,ExpandDims:()=>al,Expm1:()=>sl,FFT:()=>Ff,Fill:()=>ld,FlipLeftRight:()=>il,Floor:()=>gi,FloorDiv:()=>yi,FromPixels:()=>Qp,FusedBatchNorm:()=>Ai,FusedConv2D:()=>Ws,FusedDepthwiseConv2D:()=>Vs,GPGPUContext:()=>Fu,GatherNd:()=>ll,GatherV2:()=>ol,GraphModel:()=>rc,Greater:()=>ul,GreaterEqual:()=>xi,History:()=>v8,IFFT:()=>_f,Identity:()=>bi,Imag:()=>Ah,InputSpec:()=>Yt,IsFinite:()=>ud,IsInf:()=>dd,IsNan:()=>pd,KernelBackend:()=>Xu,LRN:()=>xh,LRNGrad:()=>zf,LayerVariable:()=>p8,LayersModel:()=>es,LeakyRelu:()=>vi,Less:()=>dl,LessEqual:()=>pl,LinSpace:()=>Pf,Log:()=>wi,Log1p:()=>hd,LogSoftmax:()=>I6,LogicalAnd:()=>hl,LogicalNot:()=>cl,LogicalOr:()=>cd,LogicalXor:()=>k6,LowerBound:()=>H$,MathBackendCPU:()=>OA,MathBackendWebGL:()=>ic,Max:()=>ki,MaxPool:()=>Si,MaxPool3D:()=>bh,MaxPool3DGrad:()=>Df,MaxPoolGrad:()=>Of,MaxPoolWithArgmax:()=>Lf,Maximum:()=>Ii,Mean:()=>Ci,Min:()=>Ti,Minimum:()=>Ni,MirrorPad:()=>Ei,Mod:()=>fd,MomentumOptimizer:()=>xm,Multinomial:()=>Bf,Multiply:()=>Ri,Neg:()=>fl,NonMaxSuppressionV3:()=>gl,NonMaxSuppressionV4:()=>md,NonMaxSuppressionV5:()=>yl,NotEqual:()=>ml,OP_SCOPE_SUFFIX:()=>Zy,OneHot:()=>xl,OnesLike:()=>Al,Optimizer:()=>ls,OptimizerConstructors:()=>Rs,Pack:()=>bl,PadV2:()=>$i,Pool:()=>q$,Pow:()=>Mi,Prelu:()=>Fi,Prod:()=>_i,RMSPropOptimizer:()=>bm,RNN:()=>us,Range:()=>gd,Rank:()=>E6,Real:()=>vh,RealDiv:()=>ci,Reciprocal:()=>yd,Reduction:()=>jw,Relu:()=>Pi,Relu6:()=>Di,Reshape:()=>vl,ResizeBilinear:()=>Oi,ResizeBilinearGrad:()=>Vf,ResizeNearestNeighbor:()=>zi,ResizeNearestNeighborGrad:()=>Wf,Reverse:()=>wl,RotateWithOffset:()=>zl,Round:()=>kl,Rsqrt:()=>Li,SGDOptimizer:()=>Hh,ScatterNd:()=>Il,SearchSorted:()=>Gf,Select:()=>Sl,Selu:()=>Ad,Sequential:()=>_m,Sigmoid:()=>Wi,Sign:()=>xd,Sin:()=>Bi,Sinh:()=>Tl,Slice:()=>Cl,Softmax:()=>Ui,Softplus:()=>bd,SpaceToBatchND:()=>Nl,SparseFillEmptyRows:()=>wh,SparseReshape:()=>vd,SparseSegmentMean:()=>kh,SparseSegmentSum:()=>Ih,SparseToDense:()=>Sh,SplitV:()=>El,Sqrt:()=>Vi,Square:()=>wd,SquaredDifference:()=>ji,Step:()=>Ki,StridedSlice:()=>Rl,StringNGrams:()=>kd,StringSplit:()=>Ch,StringToHashBucketFast:()=>Th,Sub:()=>Hi,Sum:()=>Gi,SymbolicTensor:()=>ga,Tan:()=>$l,Tanh:()=>qi,Tensor:()=>Qe,TensorBuffer:()=>or,Tile:()=>ss,TopK:()=>Ml,Transform:()=>Fl,Transpose:()=>Pa,Unique:()=>Uf,Unpack:()=>_l,UnsortedSegmentSum:()=>Nh,UpperBound:()=>K$,Variable:()=>rh,ZerosLike:()=>Pl,_FusedMatMul:()=>Bs,abs:()=>sr,acos:()=>yv,acosh:()=>Av,add:()=>le,addN:()=>Hf,all:()=>m3,any:()=>U0,argMax:()=>Pn,argMin:()=>xv,asin:()=>bv,asinh:()=>vv,atan:()=>wv,atan2:()=>kv,atanh:()=>Iv,avgPool:()=>qf,avgPool3d:()=>y3,backend:()=>Bn,backend_util:()=>T,basicLSTMCell:()=>Nv,batchNorm:()=>Oh,batchNorm2d:()=>A3,batchNorm3d:()=>x3,batchNorm4d:()=>b3,batchToSpaceND:()=>Kf,bincount:()=>v3,booleanMaskAsync:()=>Mw,broadcastArgs:()=>Ev,broadcastTo:()=>qp,broadcast_util:()=>Dl,browser:()=>Wn,buffer:()=>Oe,callbacks:()=>eH,cast:()=>me,ceil:()=>Rv,clipByValue:()=>xn,clone:()=>Nr,complex:()=>ts,concat:()=>Ct,concat1d:()=>w3,concat2d:()=>Ll,concat3d:()=>k3,concat4d:()=>I3,constraints:()=>g8,conv1d:()=>S3,conv2d:()=>Us,conv2dTranspose:()=>T3,conv3d:()=>N3,conv3dTranspose:()=>E3,copyRegisteredKernels:()=>J$,cos:()=>Xf,cosh:()=>R3,cosineWindow:()=>dm,cumprod:()=>H0,cumsum:()=>$3,customGrad:()=>La,data:()=>Hk,denseBincount:()=>Mv,deprecationWarn:()=>a3,depthToSpace:()=>Fv,depthwiseConv2d:()=>Dh,deregisterOp:()=>nH,device_util:()=>Mh,diag:()=>_v,dilation2d:()=>Pv,disableDeprecationWarnings:()=>CF,dispose:()=>ee,disposeVariables:()=>TF,div:()=>pe,divNoNan:()=>zv,dot:()=>Ov,dropout:()=>Q3,einsum:()=>Dv,elu:()=>Lh,enableDebugMode:()=>SF,enableProdMode:()=>n3,enclosingPowerOfTwo:()=>e5,engine:()=>Xt,env:()=>Y,equal:()=>zn,erf:()=>Lv,euclideanNorm:()=>Uv,exp:()=>On,expandDims:()=>Zt,expm1:()=>jv,eye:()=>Zf,fft:()=>om,fill:()=>Sd,findBackend:()=>i3,findBackendFactory:()=>$F,floor:()=>Wh,floorDiv:()=>Ph,forceHalfFloat:()=>dS,fused:()=>Bu,gather:()=>Vh,gatherND:()=>zw,gather_util:()=>l3,getBackend:()=>qr,getGradient:()=>Ug,getKernel:()=>L0,getKernelsForBackend:()=>Oa,getThreadsCount:()=>D3e,gpgpu_util:()=>WI,grad:()=>JP,grads:()=>QP,greater:()=>wn,greaterEqual:()=>Bl,ifft:()=>sh,imag:()=>_h,image:()=>Te,inTopKAsync:()=>Ow,initializers:()=>y8,input:()=>z8,io:()=>yn,irfft:()=>K3,isFinite:()=>Hv,isInf:()=>qv,isNaN:()=>Kv,keep:()=>gr,kernel_impls:()=>ea,layers:()=>A8,leakyRelu:()=>Yf,less:()=>_3,lessEqual:()=>Wl,linalg:()=>n5,linspace:()=>Xv,loadGraphModel:()=>iq,loadGraphModelSync:()=>oq,loadLayersModel:()=>pU,localResponseNormalization:()=>Zv,log:()=>Dn,log1p:()=>Jf,logSigmoid:()=>Jv,logSoftmax:()=>P3,logSumExp:()=>z3,logicalAnd:()=>ba,logicalNot:()=>em,logicalOr:()=>O3,logicalXor:()=>Qv,losses:()=>Kw,lowerBound:()=>ew,matMul:()=>Ye,math:()=>Q6,max:()=>Ar,maxPool:()=>rm,maxPool3d:()=>D3,maxPoolWithArgmax:()=>tw,maximum:()=>is,mean:()=>Gt,memory:()=>G0,meshgrid:()=>rw,metrics:()=>yk,min:()=>js,minimum:()=>Gh,mirrorPad:()=>nw,mod:()=>Td,model:()=>uU,models:()=>Ak,moments:()=>Uh,movingAverage:()=>Fw,mul:()=>L,multiRNNCell:()=>aw,multinomial:()=>sw,neg:()=>Ft,nextFrame:()=>a5,norm:()=>Bh,notEqual:()=>Du,oneHot:()=>ah,ones:()=>An,onesLike:()=>Ln,op:()=>W,outerProduct:()=>iw,pad:()=>Qn,pad1d:()=>ow,pad2d:()=>lw,pad3d:()=>uw,pad4d:()=>dw,pool:()=>pw,pow:()=>Hs,prelu:()=>am,print:()=>e3,prod:()=>hw,profile:()=>NF,rand:()=>cw,randomGamma:()=>fw,randomNormal:()=>sm,randomStandardNormal:()=>mw,randomUniform:()=>Nd,range:()=>Lu,ready:()=>Id,real:()=>zu,reciprocal:()=>gw,registerBackend:()=>Ol,registerCallbackConstructor:()=>hU,registerGradient:()=>S6,registerKernel:()=>Jn,registerOp:()=>rH,regularizers:()=>xk,relu:()=>Va,relu6:()=>W3,removeBackend:()=>RF,reshape:()=>G,reverse:()=>Zn,reverse1d:()=>yw,reverse2d:()=>Aw,reverse3d:()=>xw,reverse4d:()=>bw,rfft:()=>lm,round:()=>V3,rsqrt:()=>G3,scalar:()=>Ie,scatterND:()=>_w,scatter_util:()=>u3,searchSorted:()=>tm,selu:()=>U3,separableConv2d:()=>j3,sequential:()=>dU,serialization:()=>ue,setBackend:()=>s3,setPlatform:()=>MF,setThreadsCount:()=>O3e,setWasmPath:()=>z3e,setWasmPaths:()=>vx,setWebGLContext:()=>jm,setdiff1dAsync:()=>vw,shared:()=>Gm,sigmoid:()=>Er,sign:()=>ww,signal:()=>qw,sin:()=>H3,sinh:()=>q3,slice:()=>_e,slice1d:()=>jh,slice2d:()=>im,slice3d:()=>Yi,slice4d:()=>qs,slice_util:()=>Lt,softmax:()=>Ed,softplus:()=>Cd,spaceToBatchND:()=>nm,sparse:()=>Xw,sparseToDense:()=>Pw,spectral:()=>Hw,split:()=>Jt,sqrt:()=>$r,square:()=>vt,squaredDifference:()=>X3,squeeze:()=>nt,stack:()=>dr,step:()=>Rd,stridedSlice:()=>kw,string:()=>Zw,sub:()=>ce,sum:()=>ke,sumOutType:()=>$h,tan:()=>Iw,tanh:()=>Ou,tensor:()=>ut,tensor1d:()=>$t,tensor2d:()=>Kn,tensor3d:()=>o3,tensor4d:()=>Sw,tensor5d:()=>Cw,tensor6d:()=>Tw,tensor_util:()=>ya,test_util:()=>fv,tidy:()=>J,tile:()=>qn,time:()=>EF,topk:()=>Nw,train:()=>Co,transpose:()=>et,truncatedNormal:()=>um,unique:()=>Ew,unregisterGradient:()=>Y$,unregisterKernel:()=>Z$,unsortedSegmentSum:()=>Z3,unstack:()=>ln,upcastType:()=>Rr,upperBound:()=>Rw,util:()=>v,valueAndGrad:()=>ez,valueAndGrads:()=>tz,variable:()=>Y3,variableGrads:()=>Yv,version:()=>cc,version_converter:()=>uq,version_core:()=>f3,version_cpu:()=>XK,version_layers:()=>T5,version_wasm:()=>L3e,version_webgl:()=>Sre,webgl:()=>Cre,webgl_util:()=>pI,webgpu:()=>hC,where:()=>Ur,whereAsync:()=>J3,zeros:()=>Ot,zerosLike:()=>at});var bu=(e=>typeof wo!="undefined"?wo:typeof Proxy!="undefined"?new Proxy(e,{get:(t,r)=>(typeof wo!="undefined"?wo:t)[r]}):e)(function(e){if(typeof wo!="undefined")return wo.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),r$=Object.create,gf=Object.defineProperty,n$=Object.getOwnPropertyDescriptor,o6=Object.getOwnPropertyNames,a$=Object.getPrototypeOf,s$=Object.prototype.hasOwnProperty,i$=e=>gf(e,"__esModule",{value:!0}),o$=(e=>typeof bu!="undefined"?bu:typeof Proxy!="undefined"?new Proxy(e,{get:(t,r)=>(typeof bu!="undefined"?bu:t)[r]}):e)(function(e){if(typeof bu!="undefined")return bu.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),pr=(e,t)=>function(){return t||(0,e[o6(e)[0]])((t={exports:{}}).exports,t),t.exports},Be=(e,t)=>{for(var r in t)gf(e,r,{get:t[r],enumerable:!0})},l$=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of o6(t))!s$.call(e,a)&&(r||a!=="default")&&gf(e,a,{get:()=>t[a],enumerable:!(n=n$(t,a))||n.enumerable});return e},Xo=(e,t)=>l$(i$(gf(e!=null?r$(a$(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),u$=pr({"src/node_modules/long/src/long.js"(e,t){t.exports=n;var r=null;try{r=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function n(S,O,z){this.low=S|0,this.high=O|0,this.unsigned=!!z}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}n.isLong=a;var s={},i={};function o(S,O){var z,j,K;return O?(S>>>=0,(K=0<=S&&S<256)&&(j=i[S],j)?j:(z=u(S,(S|0)<0?-1:0,!0),K&&(i[S]=z),z)):(S|=0,(K=-128<=S&&S<128)&&(j=s[S],j)?j:(z=u(S,S<0?-1:0,!1),K&&(s[S]=z),z))}n.fromInt=o;function l(S,O){if(isNaN(S))return O?b:x;if(O){if(S<0)return b;if(S>=g)return R}else{if(S<=-y)return F;if(S+1>=y)return E}return S<0?l(-S,O).neg():u(S%m|0,S/m|0,O)}n.fromNumber=l;function u(S,O,z){return new n(S,O,z)}n.fromBits=u;var p=Math.pow;function h(S,O,z){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof O=="number"?(z=O,O=!1):O=!!O,z=z||10,z<2||36<z)throw RangeError("radix");var j;if((j=S.indexOf("-"))>0)throw Error("interior hyphen");if(j===0)return h(S.substring(1),O,z).neg();for(var K=l(p(z,8)),D=x,Z=0;Z<S.length;Z+=8){var V=Math.min(8,S.length-Z),re=parseInt(S.substring(Z,Z+V),z);if(V<8){var Q=l(p(z,V));D=D.mul(Q).add(l(re))}else D=D.mul(K),D=D.add(l(re))}return D.unsigned=O,D}n.fromString=h;function d(S,O){return typeof S=="number"?l(S,O):typeof S=="string"?h(S,O):u(S.low,S.high,typeof O=="boolean"?O:S.unsigned)}n.fromValue=d;var c=1<<16,f=1<<24,m=c*c,g=m*m,y=g/2,A=o(f),x=o(0);n.ZERO=x;var b=o(0,!0);n.UZERO=b;var w=o(1);n.ONE=w;var I=o(1,!0);n.UONE=I;var C=o(-1);n.NEG_ONE=C;var E=u(-1,2147483647,!1);n.MAX_VALUE=E;var R=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=R;var F=u(0,-2147483648,!1);n.MIN_VALUE=F;var $=n.prototype;$.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},$.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(F)){var O=l(S),z=this.div(O),j=z.mul(O).sub(this);return z.toString(S)+j.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var K=l(p(S,6),this.unsigned),D=this,Z="";;){var V=D.div(K),re=D.sub(V.mul(K)).toInt()>>>0,Q=re.toString(S);if(D=V,D.isZero())return Q+Z;for(;Q.length<6;)Q="0"+Q;Z=""+Q+Z}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(F)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,O=31;O>0&&(S&1<<O)==0;O--);return this.high!=0?O+33:O+1},$.isZero=function(){return this.high===0&&this.low===0},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return(this.low&1)===1},$.isEven=function(){return(this.low&1)===0},$.equals=function(S){return a(S)||(S=d(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},$.eq=$.equals,$.notEquals=function(S){return!this.eq(S)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(S){return this.comp(S)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(S){return this.comp(S)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(S){return this.comp(S)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(S){return this.comp(S)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(S){if(a(S)||(S=d(S)),this.eq(S))return 0;var O=this.isNegative(),z=S.isNegative();return O&&!z?-1:!O&&z?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(F)?F:this.not().add(w)},$.neg=$.negate,$.add=function(S){a(S)||(S=d(S));var O=this.high>>>16,z=this.high&65535,j=this.low>>>16,K=this.low&65535,D=S.high>>>16,Z=S.high&65535,V=S.low>>>16,re=S.low&65535,Q=0,ie=0,X=0,ae=0;return ae+=K+re,X+=ae>>>16,ae&=65535,X+=j+V,ie+=X>>>16,X&=65535,ie+=z+Z,Q+=ie>>>16,ie&=65535,Q+=O+D,Q&=65535,u(X<<16|ae,Q<<16|ie,this.unsigned)},$.subtract=function(S){return a(S)||(S=d(S)),this.add(S.neg())},$.sub=$.subtract,$.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=d(S)),r){var O=r.mul(this.low,this.high,S.low,S.high);return u(O,r.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(F))return S.isOdd()?F:x;if(S.eq(F))return this.isOdd()?F:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(A)&&S.lt(A))return l(this.toNumber()*S.toNumber(),this.unsigned);var z=this.high>>>16,j=this.high&65535,K=this.low>>>16,D=this.low&65535,Z=S.high>>>16,V=S.high&65535,re=S.low>>>16,Q=S.low&65535,ie=0,X=0,ae=0,de=0;return de+=D*Q,ae+=de>>>16,de&=65535,ae+=K*Q,X+=ae>>>16,ae&=65535,ae+=D*re,X+=ae>>>16,ae&=65535,X+=j*Q,ie+=X>>>16,X&=65535,X+=K*re,ie+=X>>>16,X&=65535,X+=D*V,ie+=X>>>16,X&=65535,ie+=z*Q+j*re+K*V+D*Z,ie&=65535,u(ae<<16|de,ie<<16|X,this.unsigned)},$.mul=$.multiply,$.divide=function(S){if(a(S)||(S=d(S)),S.isZero())throw Error("division by zero");if(r){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var O=(this.unsigned?r.div_u:r.div_s)(this.low,this.high,S.low,S.high);return u(O,r.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:x;var z,j,K;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return b;if(S.gt(this.shru(1)))return I;K=b}else{if(this.eq(F)){if(S.eq(w)||S.eq(C))return F;if(S.eq(F))return w;var D=this.shr(1);return z=D.div(S).shl(1),z.eq(x)?S.isNegative()?w:C:(j=this.sub(S.mul(z)),K=z.add(j.div(S)),K)}else if(S.eq(F))return this.unsigned?b:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();K=x}for(j=this;j.gte(S);){z=Math.max(1,Math.floor(j.toNumber()/S.toNumber()));for(var Z=Math.ceil(Math.log(z)/Math.LN2),V=Z<=48?1:p(2,Z-48),re=l(z),Q=re.mul(S);Q.isNegative()||Q.gt(j);)z-=V,re=l(z,this.unsigned),Q=re.mul(S);re.isZero()&&(re=w),K=K.add(re),j=j.sub(Q)}return K},$.div=$.divide,$.modulo=function(S){if(a(S)||(S=d(S)),r){var O=(this.unsigned?r.rem_u:r.rem_s)(this.low,this.high,S.low,S.high);return u(O,r.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return u(~this.low,~this.high,this.unsigned)},$.and=function(S){return a(S)||(S=d(S)),u(this.low&S.low,this.high&S.high,this.unsigned)},$.or=function(S){return a(S)||(S=d(S)),u(this.low|S.low,this.high|S.high,this.unsigned)},$.xor=function(S){return a(S)||(S=d(S)),u(this.low^S.low,this.high^S.high,this.unsigned)},$.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):u(0,this.low<<S-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?u(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):u(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var O=this.high;if(S<32){var z=this.low;return u(z>>>S|O<<32-S,O>>>S,this.unsigned)}else return S===32?u(O,0,this.unsigned):u(O>>>S-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},$.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var S=this.high,O=this.low;return[O&255,O>>>8&255,O>>>16&255,O>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},$.toBytesBE=function(){var S=this.high,O=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,O>>>24,O>>>16&255,O>>>8&255,O&255]},n.fromBytes=function(S,O,z){return z?n.fromBytesLE(S,O):n.fromBytesBE(S,O)},n.fromBytesLE=function(S,O){return new n(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,O)},n.fromBytesBE=function(S,O){return new n(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],O)}}}),d$=pr({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),p$=pr({"(disabled):util"(){}}),h$=pr({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(r,n,a){function s(u){var p=this,h=l();p.next=function(){var d=2091639*p.s0+p.c*23283064365386963e-26;return p.s0=p.s1,p.s1=p.s2,p.s2=d-(p.c=d|0)},p.c=1,p.s0=h(" "),p.s1=h(" "),p.s2=h(" "),p.s0-=h(u),p.s0<0&&(p.s0+=1),p.s1-=h(u),p.s1<0&&(p.s1+=1),p.s2-=h(u),p.s2<0&&(p.s2+=1),h=null}function i(u,p){return p.c=u.c,p.s0=u.s0,p.s1=u.s1,p.s2=u.s2,p}function o(u,p){var h=new s(u),d=p&&p.state,c=h.next;return c.int32=function(){return h.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,d&&(typeof d=="object"&&i(d,h),c.state=function(){return i(h,{})}),c}function l(){var u=4022871197,p=function(h){h=String(h);for(var d=0;d<h.length;d++){u+=h.charCodeAt(d);var c=.02519603282416938*u;u=c>>>0,c-=u,c*=u,u=c>>>0,c-=u,u+=c*4294967296}return(u>>>0)*23283064365386963e-26};return p}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),c$=pr({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(r,n,a){function s(l){var u=this,p="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:p+=l;for(var h=0;h<p.length+64;h++)u.x^=p.charCodeAt(h)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,f=(p.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=p.next,d.quick=d,h&&(typeof h=="object"&&i(h,p),d.state=function(){return i(p,{})}),d}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),f$=pr({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(r,n,a){function s(l){var u=this,p="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:p+=l;for(var h=0;h<p.length+64;h++)u.x^=p.charCodeAt(h)|0,h==p.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,f=(p.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=p.next,d.quick=d,h&&(typeof h=="object"&&i(h,p),d.state=function(){return i(p,{})}),d}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),m$=pr({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(r,n,a){function s(l){var u=this;u.next=function(){var h=u.x,d=u.i,c,f,m;return c=h[d],c^=c>>>7,f=c^c<<24,c=h[d+1&7],f^=c^c>>>10,c=h[d+3&7],f^=c^c>>>3,c=h[d+4&7],f^=c^c<<7,c=h[d+7&7],c=c^c<<13,f^=c^c<<9,h[d]=f,u.i=d+1&7,f};function p(h,d){var c,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,c=0;c<d.length;++c)m[c&7]=m[c&7]<<15^d.charCodeAt(c)+m[c+1&7]<<13;for(;m.length<8;)m.push(0);for(c=0;c<8&&m[c]===0;++c);for(c==8?f=m[7]=-1:f=m[c],h.x=m,h.i=0,c=256;c>0;--c)h.next()}p(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,f=(p.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=p.next,d.quick=d,h&&(h.x&&i(h,p),d.state=function(){return i(p,{})}),d}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),g$=pr({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(r,n,a){function s(l){var u=this;u.next=function(){var h=u.w,d=u.X,c=u.i,f,m;return u.w=h=h+1640531527|0,m=d[c+34&127],f=d[c=c+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[c]=m^f,u.i=c,m+(h^h>>>16)|0};function p(h,d){var c,f,m,g,y,A=[],x=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,x=Math.max(x,d.length)),m=0,g=-32;g<x;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,c=A[g&127]^=f+y,m=c==0?m+1:0);for(m>=128&&(A[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=A[m+34&127],c=A[m=m+1&127],f^=f<<13,c^=c<<17,f^=f>>>15,c^=c>>>12,A[m]=f^c;h.w=y,h.X=A,h.i=m}p(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,f=(p.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=p.next,d.quick=d,h&&(h.X&&i(h,p),d.state=function(){return i(p,{})}),d}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),y$=pr({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(r,n,a){function s(l){var u=this,p="";u.next=function(){var d=u.b,c=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^c,c=c-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^c,u.c=c=c-f|0,u.d=f<<16^c>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):p+=l;for(var h=0;h<p.length+20;h++)u.b^=p.charCodeAt(h)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var p=new s(l),h=u&&u.state,d=function(){return(p.next()>>>0)/4294967296};return d.double=function(){do var c=p.next()>>>11,f=(p.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},d.int32=p.next,d.quick=d,h&&(typeof h=="object"&&i(h,p),d.state=function(){return i(p,{})}),d}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),A$=pr({"(disabled):crypto"(){}}),x$=pr({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(r,n,a){var s=256,i=6,o=52,l="random",u=a.pow(s,i),p=a.pow(2,o),h=p*2,d=s-1,c;function f(w,I,C){var E=[];I=I==!0?{entropy:!0}:I||{};var R=A(y(I.entropy?[w,b(n)]:w==null?x():w,3),E),F=new m(E),$=function(){for(var S=F.g(i),O=u,z=0;S<p;)S=(S+z)*s,O*=s,z=F.g(1);for(;S>=h;)S/=2,O/=2,z>>>=1;return(S+z)/O};return $.int32=function(){return F.g(4)|0},$.quick=function(){return F.g(4)/4294967296},$.double=$,A(b(F.S),n),(I.pass||C||function(S,O,z,j){return j&&(j.S&&g(j,F),S.state=function(){return g(F,{})}),z?(a[l]=S,O):S})($,R,"global"in I?I.global:this==a,I.state)}function m(w){var I,C=w.length,E=this,R=0,F=E.i=E.j=0,$=E.S=[];for(C||(w=[C++]);R<s;)$[R]=R++;for(R=0;R<s;R++)$[R]=$[F=d&F+w[R%C]+(I=$[R])],$[F]=I;(E.g=function(S){for(var O,z=0,j=E.i,K=E.j,D=E.S;S--;)O=D[j=d&j+1],z=z*s+D[d&(D[j]=D[K=d&K+O])+(D[K]=O)];return E.i=j,E.j=K,z})(s)}function g(w,I){return I.i=w.i,I.j=w.j,I.S=w.S.slice(),I}function y(w,I){var C=[],E=typeof w,R;if(I&&E=="object")for(R in w)try{C.push(y(w[R],I-1))}catch(F){}return C.length?C:E=="string"?w:w+"\0"}function A(w,I){for(var C=w+"",E,R=0;R<C.length;)I[d&R]=d&(E^=I[d&R]*19)+C.charCodeAt(R++);return b(I)}function x(){try{var w;return c&&(w=c.randomBytes)?w=w(s):(w=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch(E){var I=r.navigator,C=I&&I.plugins;return[+new Date,r,C,r.screen,b(n)]}}function b(w){return String.fromCharCode.apply(0,w)}if(A(a.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{c=A$()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):a["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),yf=pr({"src/node_modules/seedrandom/index.js"(e,t){var r=h$(),n=c$(),a=f$(),s=m$(),i=g$(),o=y$(),l=x$();l.alea=r,l.xor128=n,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),l6=pr({"(disabled):src/node_modules/string_decoder/index.js"(){}}),Af=pr({"(disabled):fs"(){}}),_0=pr({"(disabled):path"(){}}),u6=pr({"(disabled):worker_threads"(){}}),b$=pr({"(disabled):perf_hooks"(){}}),v$=pr({"(disabled):os"(){}}),w$=pr({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var r=(()=>{var n=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(n=n||__filename),function(a){a=a||{};function s(){return Fe.buffer!=Dr&&oa(Fe.buffer),Nc}function i(){return Fe.buffer!=Dr&&oa(Fe.buffer),Ec}function o(){return Fe.buffer!=Dr&&oa(Fe.buffer),yp}function l(){return Fe.buffer!=Dr&&oa(Fe.buffer),Rc}function u(){return Fe.buffer!=Dr&&oa(Fe.buffer),$c}function p(){return Fe.buffer!=Dr&&oa(Fe.buffer),Mc}function h(){return Fe.buffer!=Dr&&oa(Fe.buffer),Fc}var d=typeof a!="undefined"?a:{},c,f;d.ready=new Promise(function(N,_){c=N,f=_});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),y=[],A="./this.program",x=(N,_)=>{throw _},b=typeof window=="object",w=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=d.ENVIRONMENT_IS_PTHREAD||!1,E="";function R(N){return d.locateFile?d.locateFile(N,E):E+N}var F,$,S,O;function z(N){N instanceof Cp||Q("exiting due to exception: "+N)}var j,K,D;if(I){w?E=_0().dirname(E)+"/":E=__dirname+"/",D=()=>{K||(j=Af(),K=_0())},F=function(_,U){return D(),_=K.normalize(_),j.readFileSync(_,U?void 0:"utf8")},S=_=>{var U=F(_,!0);return U.buffer||(U=new Uint8Array(U)),U},$=(_,U,te)=>{D(),_=K.normalize(_),j.readFile(_,function(ge,xe){ge?te(ge):U(xe.buffer)})},process.argv.length>1&&(A=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(_){if(!(_ instanceof Cp))throw _}),process.on("unhandledRejection",function(_){throw _}),x=(_,U)=>{if(yo())throw process.exitCode=_,U;z(U),process.exit(_)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=u6()}catch(_){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),_}global.Worker=N.Worker}else(b||w)&&(w?E=self.location.href:typeof document!="undefined"&&document.currentScript&&(E=document.currentScript.src),n&&(E=n),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",I||(F=N=>{var _=new XMLHttpRequest;return _.open("GET",N,!1),_.send(null),_.responseText},w&&(S=N=>{var _=new XMLHttpRequest;return _.open("GET",N,!1),_.responseType="arraybuffer",_.send(null),new Uint8Array(_.response)}),$=(N,_,U)=>{var te=new XMLHttpRequest;te.open("GET",N,!0),te.responseType="arraybuffer",te.onload=()=>{if(te.status==200||te.status==0&&te.response){_(te.response);return}U()},te.onerror=U,te.send(null)}),O=N=>document.title=N);I&&typeof performance=="undefined"&&(global.performance=b$().performance);var Z=console.log.bind(console),V=console.warn.bind(console);I&&(D(),Z=N=>j.writeSync(1,N+`
`),V=N=>j.writeSync(2,N+`
`));var re=d.print||Z,Q=d.printErr||V;Object.assign(d,g),g=null,d.arguments&&(y=d.arguments),d.thisProgram&&(A=d.thisProgram),d.quit&&(x=d.quit);var ie=4;function X(N){X.shown||(X.shown={}),X.shown[N]||(X.shown[N]=1,Q(N))}function ae(N,_){if(typeof WebAssembly.Function=="function"){for(var U={i:"i32",j:"i64",f:"f32",d:"f64"},te={parameters:[],results:_[0]=="v"?[]:[U[_[0]]]},ge=1;ge<_.length;++ge)te.parameters.push(U[_[ge]]);return new WebAssembly.Function(te,N)}var xe=[1,0,1,96],Ce=_.slice(0,1),Pe=_.slice(1),zt={i:127,j:126,f:125,d:124};xe.push(Pe.length);for(var ge=0;ge<Pe.length;++ge)xe.push(zt[Pe[ge]]);Ce=="v"?xe.push(0):xe=xe.concat([1,zt[Ce]]),xe[1]=xe.length-2;var pa=new Uint8Array([0,97,115,109,1,0,0,0].concat(xe,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),ha=new WebAssembly.Module(pa),l0=new WebAssembly.Instance(ha,{e:{f:N}}),Tp=l0.exports.f;return Tp}var de=[],be;function ve(){if(de.length)return de.pop();try{$n.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return $n.length-1}function Ee(N,_){for(var U=N;U<N+_;U++){var te=hu(U);te&&be.set(te,U)}}var $e=0,De=N=>{$e=N},Ve=Atomics.load,Xe=Atomics.store,ot=Atomics.compareExchange,ht;d.wasmBinary&&(ht=d.wasmBinary);var ct=d.noExitRuntime||!0;typeof WebAssembly!="object"&&uu("no native wasm support detected");var Fe,kt,bt=!1,Or;function cr(N,_){N||uu(_)}function tn(N){var _=d["_"+N];return _}function nr(N,_,U,te,ge){var xe={string:function(Mn){var xu=0;if(Mn!=null&&Mn!==0){var x4=(Mn.length<<2)+1;xu=Au(x4),mo(Mn,xu,x4)}return xu},array:function(Mn){var xu=Au(Mn.length);return Ka(Mn,xu),xu}};function Ce(Mn){return _==="string"?Rn(Mn):_==="boolean"?Boolean(Mn):Mn}var Pe=tn(N),zt=[],pa=0;if(te)for(var ha=0;ha<te.length;ha++){var l0=xe[U[ha]];l0?(pa===0&&(pa=Ig()),zt[ha]=l0(te[ha])):zt[ha]=te[ha]}var Tp=Pe.apply(null,zt);function XR(Mn){return pa!==0&&a0(pa),Ce(Mn)}return Tp=XR(Tp),Tp}function fr(N,_,U,te){U=U||[];var ge=U.every(function(Ce){return Ce==="number"}),xe=_!=="string";return xe&&ge&&!te?tn(N):function(){return nr(N,_,U,arguments,te)}}var ia=1;function rn(N){var _=new TextDecoder(N);this.decode=U=>(U.buffer instanceof SharedArrayBuffer&&(U=new Uint8Array(U)),_.decode.call(_,U))}var ar=typeof TextDecoder!="undefined"?new rn("utf8"):void 0;function En(N,_,U){for(var te=_+U,ge=_;N[ge]&&!(ge>=te);)++ge;if(ge-_>16&&N.subarray&&ar)return ar.decode(N.subarray(_,ge));for(var xe="";_<ge;){var Ce=N[_++];if(!(Ce&128)){xe+=String.fromCharCode(Ce);continue}var Pe=N[_++]&63;if((Ce&224)==192){xe+=String.fromCharCode((Ce&31)<<6|Pe);continue}var zt=N[_++]&63;if((Ce&240)==224?Ce=(Ce&15)<<12|Pe<<6|zt:Ce=(Ce&7)<<18|Pe<<12|zt<<6|N[_++]&63,Ce<65536)xe+=String.fromCharCode(Ce);else{var pa=Ce-65536;xe+=String.fromCharCode(55296|pa>>10,56320|pa&1023)}}return xe}function Rn(N,_){return N?En(i(),N,_):""}function ws(N,_,U,te){if(!(te>0))return 0;for(var ge=U,xe=U+te-1,Ce=0;Ce<N.length;++Ce){var Pe=N.charCodeAt(Ce);if(Pe>=55296&&Pe<=57343){var zt=N.charCodeAt(++Ce);Pe=65536+((Pe&1023)<<10)|zt&1023}if(Pe<=127){if(U>=xe)break;_[U++]=Pe}else if(Pe<=2047){if(U+1>=xe)break;_[U++]=192|Pe>>6,_[U++]=128|Pe&63}else if(Pe<=65535){if(U+2>=xe)break;_[U++]=224|Pe>>12,_[U++]=128|Pe>>6&63,_[U++]=128|Pe&63}else{if(U+3>=xe)break;_[U++]=240|Pe>>18,_[U++]=128|Pe>>12&63,_[U++]=128|Pe>>6&63,_[U++]=128|Pe&63}}return _[U]=0,U-ge}function mo(N,_,U){return ws(N,i(),_,U)}function Tc(N){for(var _=0,U=0;U<N.length;++U){var te=N.charCodeAt(U);te>=55296&&te<=57343&&(te=65536+((te&1023)<<10)|N.charCodeAt(++U)&1023),te<=127?++_:te<=2047?_+=2:te<=65535?_+=3:_+=4}return _}var ks=typeof TextDecoder!="undefined"?new rn("utf-16le"):void 0;function Ka(N,_){s().set(N,_)}function gp(N,_,U){for(var te=0;te<N.length;++te)s()[_++>>0]=N.charCodeAt(te);U||(s()[_>>0]=0)}function ou(N,_){return N%_>0&&(N+=_-N%_),N}var Dr,Nc,Ec,yp,Rc,$c,Qb,Mc,Fc;C&&(Dr=d.buffer);function oa(N){Dr=N,d.HEAP8=Nc=new Int8Array(N),d.HEAP16=yp=new Int16Array(N),d.HEAP32=$c=new Int32Array(N),d.HEAPU8=Ec=new Uint8Array(N),d.HEAPU16=Rc=new Uint16Array(N),d.HEAPU32=Qb=new Uint32Array(N),d.HEAPF32=Mc=new Float32Array(N),d.HEAPF64=Fc=new Float64Array(N)}var _c=d.INITIAL_MEMORY||16777216;if(C)Fe=d.wasmMemory,Dr=d.buffer;else if(d.wasmMemory)Fe=d.wasmMemory;else if(Fe=new WebAssembly.Memory({initial:_c/65536,maximum:32768,shared:!0}),!(Fe.buffer instanceof SharedArrayBuffer))throw Q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Fe&&(Dr=Fe.buffer),_c=Dr.byteLength,oa(Dr);var $n,lu=[],Is=[],j1=[],Pc=[],go=!1,H1=!1,zc=0;function yo(){return ct||zc>0}function Lr(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)e4(d.preRun.shift());Wc(lu)}function Ap(){go=!0,!C&&Wc(Is)}function q1(){C||(ze.terminateAllThreads(),H1=!0)}function K1(){if(!C){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)xp(d.postRun.shift());Wc(Pc)}}function e4(N){lu.unshift(N)}function t4(N){Is.unshift(N)}function xp(N){Pc.unshift(N)}var Ss=0,Oc=null,la=null;function bp(N){Ss++,d.monitorRunDependencies&&d.monitorRunDependencies(Ss)}function r4(N){if(Ss--,d.monitorRunDependencies&&d.monitorRunDependencies(Ss),Ss==0&&(Oc!==null&&(clearInterval(Oc),Oc=null),la)){var _=la;la=null,_()}}d.preloadedImages={},d.preloadedAudios={};function uu(N){C?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",Q(N),bt=!0,Or=1,N+=". Build with -s ASSERTIONS=1 for more info.";var _=new WebAssembly.RuntimeError(N);throw f(_),_}var X1="data:application/octet-stream;base64,";function Dc(N){return N.startsWith(X1)}function Lc(N){return N.startsWith("file://")}var Br;Br="tfjs-backend-wasm-threaded-simd.wasm",Dc(Br)||(Br=R(Br));function Bc(N){try{if(N==Br&&ht)return new Uint8Array(ht);if(S)return S(N);throw"both async and sync fetching of the wasm failed"}catch(_){uu(_)}}function du(){if(!ht&&(b||w)){if(typeof fetch=="function"&&!Lc(Br))return fetch(Br,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+Br+"'";return N.arrayBuffer()}).catch(function(){return Bc(Br)});if($)return new Promise(function(N,_){$(Br,function(U){N(new Uint8Array(U))},_)})}return Promise.resolve().then(function(){return Bc(Br)})}function Z1(){var N={env:Qc,wasi_snapshot_preview1:Qc};function _(Ce,Pe){var zt=Ce.exports;if(d.asm=zt,n2(d.asm.emscripten_tls_init),$n=d.asm.__indirect_function_table,t4(d.asm.__wasm_call_ctors),kt=Pe,!C){var pa=ze.unusedWorkers.length;ze.unusedWorkers.forEach(function(ha){ze.loadWasmModuleToWorker(ha,function(){--pa||r4("wasm-instantiate")})})}}C||bp("wasm-instantiate");function U(Ce){_(Ce.instance,Ce.module)}function te(Ce){return du().then(function(Pe){return WebAssembly.instantiate(Pe,N)}).then(function(Pe){return Pe}).then(Ce,function(Pe){Q("failed to asynchronously prepare wasm: "+Pe),uu(Pe)})}function ge(){return!ht&&typeof WebAssembly.instantiateStreaming=="function"&&!Dc(Br)&&!Lc(Br)&&typeof fetch=="function"?fetch(Br,{credentials:"same-origin"}).then(function(Ce){var Pe=WebAssembly.instantiateStreaming(Ce,N);return Pe.then(U,function(zt){return Q("wasm streaming compile failed: "+zt),Q("falling back to ArrayBuffer instantiation"),te(U)})}):te(U)}if(d.instantiateWasm)try{var xe=d.instantiateWasm(N,_);return xe}catch(Ce){return Q("Module.instantiateWasm callback failed with error: "+Ce),!1}return ge().catch(f),{}}var n4,a4,Y1={};function Wc(N){for(;N.length>0;){var _=N.shift();if(typeof _=="function"){_(d);continue}var U=_.func;typeof U=="number"?_.arg===void 0?hu(U)():hu(U)(_.arg):U(_.arg===void 0?null:_.arg)}}function pu(N){var _=Ig(),U=N();return a0(_),U}function nR(N){return N}function s4(N){var _=/\b_Z[\w\d_]+/g;return N.replace(_,function(U){var te=U;return U===te?U:te+" ["+U+"]"})}function J1(N){u()[N>>2]=0;var _=ze.pthreads[N];delete ze.pthreads[N],_.worker.terminate(),kg(N),ze.runningWorkers.splice(ze.runningWorkers.indexOf(_.worker),1),_.worker.pthread=void 0}function Q1(N){var _=ze.pthreads[N];_.worker.postMessage({cmd:"cancel"})}function Vc(N){var _=ze.pthreads[N];if(_){u()[N>>2]=0;var U=_.worker;ze.returnWorkerToPool(U)}}function Gc(N){HR(N)}function e2(N){if(N instanceof Cp||N=="unwind")return Or;x(1,N)}var ze={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){C?ze.initWorker():ze.initMainThread()},initMainThread:function(){for(var N=8,_=0;_<N;++_)ze.allocateUnusedWorker()},initWorker:function(){ct=!1},pthreads:{},setExitStatus:function(N){Or=N},terminateAllThreads:function(){for(var N in ze.pthreads){var _=ze.pthreads[N];_&&_.worker&&ze.returnWorkerToPool(_.worker)}for(var U=0;U<ze.unusedWorkers.length;++U){var te=ze.unusedWorkers[U];te.terminate()}ze.unusedWorkers=[]},returnWorkerToPool:function(N){ze.runWithoutMainThreadQueuedCalls(function(){delete ze.pthreads[N.pthread.threadInfoStruct],ze.unusedWorkers.push(N),ze.runningWorkers.splice(ze.runningWorkers.indexOf(N),1),kg(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){u()[A4>>2]=0;try{N()}finally{u()[A4>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in ze.tlsInitFunctions)ze.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,_){N.onmessage=U=>{var te=U.data,ge=te.cmd;if(N.pthread&&(ze.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),te.targetThread&&te.targetThread!=n0()){var xe=ze.pthreads[te.targetThread];xe?xe.worker.postMessage(te,te.transferList):Q('Internal error! Worker sent a message "'+ge+'" to target pthread '+te.targetThread+", but that thread no longer exists!"),ze.currentProxiedOperationCallerThread=void 0;return}ge==="processQueuedMainThreadWork"?c4():ge==="spawnThread"?jc(te):ge==="cleanupThread"?Vc(te.thread):ge==="killThread"?J1(te.thread):ge==="cancelThread"?Q1(te.thread):ge==="loaded"?(N.loaded=!0,_&&_(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ge==="print"?re("Thread "+te.threadId+": "+te.text):ge==="printErr"?Q("Thread "+te.threadId+": "+te.text):ge==="alert"?alert("Thread "+te.threadId+": "+te.text):te.target==="setimmediate"?N.postMessage(te):ge==="onAbort"?d.onAbort&&d.onAbort(te.arg):Q("worker sent an unknown command "+ge),ze.currentProxiedOperationCallerThread=void 0},N.onerror=U=>{var te="worker sent an error!";throw Q(te+" "+U.filename+":"+U.lineno+": "+U.message),U},I&&(N.on("message",function(U){N.onmessage({data:U})}),N.on("error",function(U){N.onerror(U)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||n,wasmMemory:Fe,wasmModule:kt})},allocateUnusedWorker:function(){var N=R("tfjs-backend-wasm-threaded-simd.worker.js");ze.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return ze.unusedWorkers.length==0&&(ze.allocateUnusedWorker(),ze.loadWasmModuleToWorker(ze.unusedWorkers[0])),ze.unusedWorkers.pop()}};function t2(){var N=n0(),_=u()[N+44>>2],U=u()[N+48>>2],te=_-U;y4(_,te),a0(_)}d.establishStackSpace=t2;function Uc(N){if(C)return bo(1,0,N);try{Gc(N)}catch(_){e2(_)}}var Ao=[];function hu(N){var _=Ao[N];return _||(N>=Ao.length&&(Ao.length=N+1),Ao[N]=_=$n.get(N)),_}function r2(N,_){return hu(N)(_)}d.invokeEntryPoint=r2;function i4(){var N=new Error;if(!N.stack){try{throw new Error}catch(_){N=_}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function n2(N,_,U){ze.tlsInitFunctions.push(N)}function o4(N,_){$n.set(N,_),Ao[N]=_}var xo;I?xo=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:C?xo=()=>performance.now()-d.__performance_now_clock_drift:xo=()=>performance.now();var a2=!0;function s2(N){return u()[h4()>>2]=N,N}function i2(N,_){var U;if(N===0)U=Date.now();else if((N===1||N===4)&&a2)U=xo();else return s2(28),-1;return u()[_>>2]=U/1e3|0,u()[_+4>>2]=U%1e3*1e3*1e3|0,0}function o2(N,_){return i2(N,_)}function l2(N){f4(N,!w,1,!b),ze.threadInit()}function u2(N){C?postMessage({cmd:"cleanupThread",thread:N}):Vc(N)}function jc(N){var _=ze.getNewWorker();if(!_)return 6;ze.runningWorkers.push(_);var U=ze.pthreads[N.pthread_ptr]={worker:_,threadInfoStruct:N.pthread_ptr};_.pthread=U;var te={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return _.runPthread=()=>{te.time=performance.now(),_.postMessage(te,N.transferList)},_.loaded&&(_.runPthread(),delete _.runPthread),0}function d2(N,_,U,te){if(typeof SharedArrayBuffer=="undefined")return Q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ge=[],xe=0;if(C&&(ge.length===0||xe))return m4(687865856,N,_,U,te);if(xe)return xe;var Ce={startRoutine:U,pthread_ptr:N,arg:te,transferList:ge};return C?(Ce.cmd="spawnThread",postMessage(Ce,ge),0):jc(Ce)}function p2(){return 2097152}function h2(N,_){if(N==_)postMessage({cmd:"processQueuedMainThreadWork"});else if(C)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var U=ze.pthreads[N],te=U&&U.worker;if(!te)return;te.postMessage({cmd:"processThreadQueue"})}return 1}function c2(){uu("")}function f2(){I||w||X("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Hc(){return 2147483648}function m2(N,_,U){i().copyWithin(N,_,_+U)}function g2(){return I?v$().cpus().length:navigator.hardwareConcurrency}function bo(N,_){var U=arguments.length-2,te=arguments;return pu(function(){for(var ge=U,xe=Au(ge*8),Ce=xe>>3,Pe=0;Pe<U;Pe++){var zt=te[2+Pe];h()[Ce+Pe]=zt}return g4(N,ge,xe,_)})}var vp=[];function y2(N,_,U){vp.length=_;for(var te=U>>3,ge=0;ge<_;ge++)vp[ge]=h()[te+ge];var xe=N<0,Ce=xe?Y1[-N-1]:z2[N];return Ce.apply(null,vp)}function A2(N){try{return Fe.grow(N-Dr.byteLength+65535>>>16),oa(Fe.buffer),1}catch(_){}}function x2(N){var _=i().length;if(N=N>>>0,N<=_)return!1;var U=Hc();if(N>U)return!1;for(var te=1;te<=4;te*=2){var ge=_*(1+.2/te);ge=Math.min(ge,N+100663296);var xe=Math.min(U,ou(Math.max(N,ge),65536)),Ce=A2(xe);if(Ce)return!0}return!1}var Ke={inEventHandler:0,removeAllEventListeners:function(){for(var N=Ke.eventHandlers.length-1;N>=0;--N)Ke._removeHandler(N);Ke.eventHandlers=[],Ke.deferredCalls=[]},registerRemoveEventListeners:function(){Ke.removeEventListenersRegistered||(j1.push(Ke.removeAllEventListeners),Ke.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,_,U){function te(Ce,Pe){if(Ce.length!=Pe.length)return!1;for(var zt in Ce)if(Ce[zt]!=Pe[zt])return!1;return!0}for(var ge in Ke.deferredCalls){var xe=Ke.deferredCalls[ge];if(xe.targetFunction==N&&te(xe.argsList,U))return}Ke.deferredCalls.push({targetFunction:N,precedence:_,argsList:U}),Ke.deferredCalls.sort(function(Ce,Pe){return Ce.precedence<Pe.precedence})},removeDeferredCalls:function(N){for(var _=0;_<Ke.deferredCalls.length;++_)Ke.deferredCalls[_].targetFunction==N&&(Ke.deferredCalls.splice(_,1),--_)},canPerformEventHandlerRequests:function(){return Ke.inEventHandler&&Ke.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Ke.canPerformEventHandlerRequests())for(var N=0;N<Ke.deferredCalls.length;++N){var _=Ke.deferredCalls[N];Ke.deferredCalls.splice(N,1),--N,_.targetFunction.apply(null,_.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,_){for(var U=0;U<Ke.eventHandlers.length;++U)Ke.eventHandlers[U].target==N&&(!_||_==Ke.eventHandlers[U].eventTypeString)&&Ke._removeHandler(U--)},_removeHandler:function(N){var _=Ke.eventHandlers[N];_.target.removeEventListener(_.eventTypeString,_.eventListenerFunc,_.useCapture),Ke.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var _=function(te){++Ke.inEventHandler,Ke.currentEventHandler=N,Ke.runDeferredCalls(),N.handlerFunc(te),Ke.runDeferredCalls(),--Ke.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=_,N.target.addEventListener(N.eventTypeString,_,N.useCapture),Ke.eventHandlers.push(N),Ke.registerRemoveEventListeners();else for(var U=0;U<Ke.eventHandlers.length;++U)Ke.eventHandlers[U].target==N.target&&Ke.eventHandlers[U].eventTypeString==N.eventTypeString&&Ke._removeHandler(U--)},queueEventHandlerOnThread_iiii:function(N,_,U,te,ge){pu(function(){var xe=Au(12);u()[xe>>2]=U,u()[xe+4>>2]=te,u()[xe+8>>2]=ge,wg(N,637534208,_,te,xe)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return ze.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function b2(N){var _=Tc(N)+1,U=vg(_);return mo(N,U,_),U}function v2(N,_,U,te){pu(function(){var ge=Au(12),xe=0;_&&(xe=b2(_)),u()[ge>>2]=xe,u()[ge+4>>2]=U,u()[ge+8>>2]=te,wg(N,657457152,0,xe,ge)})}function w2(N,_,U,te){_=_?Rn(_):"",v2(N,_,U,te)}function k2(N){return N>2?Rn(N):N}var I2=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function S2(N){N=k2(N);var _=I2[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return _}function wp(N){return S2(N)}function qc(N,_,U){var te=wp(N);if(!te)return-4;if(te.canvasSharedPtr&&(u()[te.canvasSharedPtr>>2]=_,u()[te.canvasSharedPtr+4>>2]=U),te.offscreenCanvas||!te.controlTransferredOffscreen){te.offscreenCanvas&&(te=te.offscreenCanvas);var ge=!1;if(te.GLctxObject&&te.GLctxObject.GLctx){var xe=te.GLctxObject.GLctx.getParameter(2978);ge=xe[0]===0&&xe[1]===0&&xe[2]===te.width&&xe[3]===te.height}te.width=_,te.height=U,ge&&te.GLctxObject.GLctx.viewport(0,0,_,U)}else if(te.canvasSharedPtr){var Ce=u()[te.canvasSharedPtr+8>>2];return w2(Ce,N,_,U),1}else return-4;return 0}function Kc(N,_,U){return C?bo(2,1,N,_,U):qc(N,_,U)}function C2(N,_,U){var te=wp(N);return te?qc(N,_,U):Kc(N,_,U)}function T2(){throw"unwind"}function N2(N){var _=N.getExtension("ANGLE_instanced_arrays");if(_)return N.vertexAttribDivisor=function(U,te){_.vertexAttribDivisorANGLE(U,te)},N.drawArraysInstanced=function(U,te,ge,xe){_.drawArraysInstancedANGLE(U,te,ge,xe)},N.drawElementsInstanced=function(U,te,ge,xe,Ce){_.drawElementsInstancedANGLE(U,te,ge,xe,Ce)},1}function E2(N){var _=N.getExtension("OES_vertex_array_object");if(_)return N.createVertexArray=function(){return _.createVertexArrayOES()},N.deleteVertexArray=function(U){_.deleteVertexArrayOES(U)},N.bindVertexArray=function(U){_.bindVertexArrayOES(U)},N.isVertexArray=function(U){return _.isVertexArrayOES(U)},1}function R2(N){var _=N.getExtension("WEBGL_draw_buffers");if(_)return N.drawBuffers=function(U,te){_.drawBuffersWEBGL(U,te)},1}function $2(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var Pt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(N){Pt.lastError||(Pt.lastError=N)},getNewId:function(N){for(var _=Pt.counter++,U=N.length;U<_;U++)N[U]=null;return _},getSource:function(N,_,U,te){for(var ge="",xe=0;xe<_;++xe){var Ce=te?u()[te+xe*4>>2]:-1;ge+=Rn(u()[U+xe*4>>2],Ce<0?void 0:Ce)}return ge},createContext:function(N,_){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ge,xe){var Ce=N.getContextSafariWebGL2Fixed(ge,xe);return ge=="webgl"==Ce instanceof WebGLRenderingContext?Ce:null});var U=N.getContext("webgl",_);if(!U)return 0;var te=Pt.registerContext(U,_);return te},registerContext:function(N,_){var U=vg(8);u()[U+4>>2]=n0();var te={handle:U,attributes:_,version:_.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=te),Pt.contexts[U]=te,(typeof _.enableExtensionsByDefault=="undefined"||_.enableExtensionsByDefault)&&Pt.initExtensions(te),U},makeContextCurrent:function(N){return Pt.currentContext=Pt.contexts[N],d.ctx=Jc=Pt.currentContext&&Pt.currentContext.GLctx,!(N&&!Jc)},getContext:function(N){return Pt.contexts[N]},deleteContext:function(N){Pt.currentContext===Pt.contexts[N]&&(Pt.currentContext=null),typeof Ke=="object"&&Ke.removeAllHandlersOnTarget(Pt.contexts[N].GLctx.canvas),Pt.contexts[N]&&Pt.contexts[N].GLctx.canvas&&(Pt.contexts[N].GLctx.canvas.GLctxObject=void 0),p4(Pt.contexts[N].handle),Pt.contexts[N]=null},initExtensions:function(N){if(N||(N=Pt.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var _=N.GLctx;N2(_),E2(_),R2(_),_.disjointTimerQueryExt=_.getExtension("EXT_disjoint_timer_query"),$2(_);var U=_.getSupportedExtensions()||[];U.forEach(function(te){!te.includes("lose_context")&&!te.includes("debug")&&_.getExtension(te)})}}},M2=["default","low-power","high-performance"];function F2(N,_){var U=_>>2,te=u()[U+6],ge={alpha:!!u()[U+0],depth:!!u()[U+1],stencil:!!u()[U+2],antialias:!!u()[U+3],premultipliedAlpha:!!u()[U+4],preserveDrawingBuffer:!!u()[U+5],powerPreference:M2[te],failIfMajorPerformanceCaveat:!!u()[U+7],majorVersion:u()[U+8],minorVersion:u()[U+9],enableExtensionsByDefault:u()[U+10],explicitSwapControl:u()[U+11],proxyContextToMainThread:u()[U+12],renderViaOffscreenBackBuffer:u()[U+13]},xe=wp(N);if(!xe||ge.explicitSwapControl)return 0;var Ce=Pt.createContext(xe,ge);return Ce}function _2(N,_){return F2(N,_)}var cu={mappings:{},buffers:[null,[],[]],printChar:function(N,_){var U=cu.buffers[N];_===0||_===10?((N===1?re:Q)(En(U,0)),U.length=0):U.push(_)},varargs:void 0,get:function(){cu.varargs+=4;var N=u()[cu.varargs-4>>2];return N},getStr:function(N){var _=Rn(N);return _},get64:function(N,_){return N}};function Xc(N){return C?bo(3,1,N):0}function Zc(N,_,U,te,ge){if(C)return bo(4,1,N,_,U,te,ge)}function Yc(N,_,U,te){if(C)return bo(5,1,N,_,U,te);for(var ge=0,xe=0;xe<U;xe++){var Ce=u()[_>>2],Pe=u()[_+4>>2];_+=8;for(var zt=0;zt<Pe;zt++)cu.printChar(N,i()[Ce+zt]);ge+=Pe}return u()[te>>2]=ge,0}function P2(N){De(N)}ze.init();var Jc,z2=[null,Uc,Kc,Xc,Zc,Yc],l4=!1,Qc={__clock_gettime:o2,__emscripten_init_main_thread_js:l2,__emscripten_thread_cleanup:u2,__pthread_create_js:d2,_emscripten_default_pthread_stack_size:p2,_emscripten_notify_thread_queue:h2,abort:c2,emscripten_check_blocking_allowed:f2,emscripten_get_heap_max:Hc,emscripten_get_now:xo,emscripten_memcpy_big:m2,emscripten_num_logical_cores:g2,emscripten_receive_on_main_thread_js:y2,emscripten_resize_heap:x2,emscripten_set_canvas_element_size:C2,emscripten_unwind_to_js_event_loop:T2,emscripten_webgl_create_context:_2,exit:Gc,fd_close:Xc,fd_seek:Zc,fd_write:Yc,memory:Fe||d.wasmMemory,setTempRet0:P2},u4=Z1(),O2=d.___wasm_call_ctors=function(){return(O2=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},D2=d._init=function(){return(D2=d._init=d.asm.init).apply(null,arguments)},L2=d._init_with_threads_count=function(){return(L2=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},B2=d._get_threads_count=function(){return(B2=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},W2=d._register_tensor=function(){return(W2=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},V2=d._dispose_data=function(){return(V2=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},G2=d._dispose=function(){return(G2=d._dispose=d.asm.dispose).apply(null,arguments)},U2=d._Abs=function(){return(U2=d._Abs=d.asm.Abs).apply(null,arguments)},j2=d._Add=function(){return(j2=d._Add=d.asm.Add).apply(null,arguments)},H2=d._AddN=function(){return(H2=d._AddN=d.asm.AddN).apply(null,arguments)},q2=d._All=function(){return(q2=d._All=d.asm.All).apply(null,arguments)},K2=d._Any=function(){return(K2=d._Any=d.asm.Any).apply(null,arguments)},X2=d._ArgMax=function(){return(X2=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},Z2=d._AvgPool=function(){return(Z2=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},Y2=d._BatchMatMul=function(){return(Y2=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},J2=d._Ceil=function(){return(J2=d._Ceil=d.asm.Ceil).apply(null,arguments)},Q2=d._ClipByValue=function(){return(Q2=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},eg=d._Conv2D=function(){return(eg=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},tg=d._Conv2DBackpropInput=function(){return(tg=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},rg=d._Cos=function(){return(rg=d._Cos=d.asm.Cos).apply(null,arguments)},ng=d._Cosh=function(){return(ng=d._Cosh=d.asm.Cosh).apply(null,arguments)},ag=d._CropAndResize=function(){return(ag=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},sg=d._Cumprod=function(){return(sg=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},ig=d._Cumsum=function(){return(ig=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},og=d._DepthToSpace=function(){return(og=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},lg=d._DepthwiseConv2dNative=function(){return(lg=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},ug=d._Elu=function(){return(ug=d._Elu=d.asm.Elu).apply(null,arguments)},dg=d._Equal=function(){return(dg=d._Equal=d.asm.Equal).apply(null,arguments)},pg=d._Exp=function(){return(pg=d._Exp=d.asm.Exp).apply(null,arguments)},hg=d._FlipLeftRight=function(){return(hg=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},cg=d._Floor=function(){return(cg=d._Floor=d.asm.Floor).apply(null,arguments)},fg=d._FloorDiv=function(){return(fg=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},mg=d._FusedBatchNorm=function(){return(mg=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},gg=d._FusedConv2D=function(){return(gg=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},e0=d._FusedDepthwiseConv2D=function(){return(e0=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},t0=d._Gather=function(){return(t0=d._Gather=d.asm.Gather).apply(null,arguments)},kp=d._GatherNd=function(){return(kp=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},yg=d._Greater=function(){return(yg=d._Greater=d.asm.Greater).apply(null,arguments)},Ag=d._GreaterEqual=function(){return(Ag=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},fu=d._LeakyRelu=function(){return(fu=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},Ip=d._Less=function(){return(Ip=d._Less=d.asm.Less).apply(null,arguments)},Sp=d._LessEqual=function(){return(Sp=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d4=d._Log=function(){return(d4=d._Log=d.asm.Log).apply(null,arguments)},mu=d._LogicalAnd=function(){return(mu=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},gu=d._LogicalNot=function(){return(gu=d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},xg=d._LogicalOr=function(){return(xg=d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},H=d._LogicalXor=function(){return(H=d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},ne=d._Max=function(){return(ne=d._Max=d.asm.Max).apply(null,arguments)},ye=d._MaxPool=function(){return(ye=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},Re=d._Maximum=function(){return(Re=d._Maximum=d.asm.Maximum).apply(null,arguments)},lt=d._Mean=function(){return(lt=d._Mean=d.asm.Mean).apply(null,arguments)},ft=d._Min=function(){return(ft=d._Min=d.asm.Min).apply(null,arguments)},Ze=d._Minimum=function(){return(Ze=d._Minimum=d.asm.Minimum).apply(null,arguments)},qe=d._MirrorPad=function(){return(qe=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},Kt=d._Multiply=function(){return(Kt=d._Multiply=d.asm.Multiply).apply(null,arguments)},ua=d._Neg=function(){return(ua=d._Neg=d.asm.Neg).apply(null,arguments)},da=d._NonMaxSuppressionV3=function(){return(da=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},yu=d._NonMaxSuppressionV4=function(){return(yu=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},vo=d._NonMaxSuppressionV5=function(){return(vo=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},bg=d._NotEqual=function(){return(bg=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},nn=d._OneHot=function(){return(nn=d._OneHot=d.asm.OneHot).apply(null,arguments)},Cs=d._PadV2=function(){return(Cs=d._PadV2=d.asm.PadV2).apply(null,arguments)},r0=d._Pow=function(){return(r0=d._Pow=d.asm.Pow).apply(null,arguments)},aR=d._Prelu=function(){return(aR=d._Prelu=d.asm.Prelu).apply(null,arguments)},sR=d._Prod=function(){return(sR=d._Prod=d.asm.Prod).apply(null,arguments)},iR=d._RealDiv=function(){return(iR=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},oR=d._Relu=function(){return(oR=d._Relu=d.asm.Relu).apply(null,arguments)},lR=d._Relu6=function(){return(lR=d._Relu6=d.asm.Relu6).apply(null,arguments)},uR=d._ResizeBilinear=function(){return(uR=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},dR=d._ResizeNearestNeighbor=function(){return(dR=d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},pR=d._Reverse=function(){return(pR=d._Reverse=d.asm.Reverse).apply(null,arguments)},hR=d._RotateWithOffset=function(){return(hR=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},cR=d._Round=function(){return(cR=d._Round=d.asm.Round).apply(null,arguments)},fR=d._Rsqrt=function(){return(fR=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},mR=d._ScatterNd=function(){return(mR=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},gR=d._SelectV2=function(){return(gR=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},yR=d._Sigmoid=function(){return(yR=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},AR=d._Sin=function(){return(AR=d._Sin=d.asm.Sin).apply(null,arguments)},xR=d._Softmax=function(){return(xR=d._Softmax=d.asm.Softmax).apply(null,arguments)},bR=d._SparseFillEmptyRows=function(){return(bR=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},vR=d._SparseReshape=function(){return(vR=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},wR=d._SparseSegmentReduction=function(){return(wR=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},kR=d._Sqrt=function(){return(kR=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},IR=d._Square=function(){return(IR=d._Square=d.asm.Square).apply(null,arguments)},SR=d._SquaredDifference=function(){return(SR=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},CR=d._Step=function(){return(CR=d._Step=d.asm.Step).apply(null,arguments)},TR=d._StridedSlice=function(){return(TR=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},NR=d._Sub=function(){return(NR=d._Sub=d.asm.Sub).apply(null,arguments)},ER=d._Sum=function(){return(ER=d._Sum=d.asm.Sum).apply(null,arguments)},RR=d._Tan=function(){return(RR=d._Tan=d.asm.Tan).apply(null,arguments)},$R=d._Tanh=function(){return($R=d._Tanh=d.asm.Tanh).apply(null,arguments)},MR=d._Tile=function(){return(MR=d._Tile=d.asm.Tile).apply(null,arguments)},FR=d._TopK=function(){return(FR=d._TopK=d.asm.TopK).apply(null,arguments)},_R=d._Transform=function(){return(_R=d._Transform=d.asm.Transform).apply(null,arguments)},PR=d._Transpose=function(){return(PR=d._Transpose=d.asm.Transpose).apply(null,arguments)},zR=d.__FusedMatMul=function(){return(zR=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},vg=d._malloc=function(){return(vg=d._malloc=d.asm.malloc).apply(null,arguments)},p4=d._free=function(){return(p4=d._free=d.asm.free).apply(null,arguments)},OR=d._emscripten_tls_init=function(){return(OR=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},h4=d.___errno_location=function(){return(h4=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},n0=d._pthread_self=function(){return(n0=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},c4=d._emscripten_main_thread_process_queued_calls=function(){return(c4=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},DR=d.__emscripten_thread_crashed=function(){return(DR=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},f4=d.__emscripten_thread_init=function(){return(f4=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},LR=d._emscripten_current_thread_process_queued_calls=function(){return(LR=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},BR=d._emscripten_main_browser_thread_id=function(){return(BR=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},WR=d._emscripten_sync_run_in_main_thread_2=function(){return(WR=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},m4=d._emscripten_sync_run_in_main_thread_4=function(){return(m4=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},g4=d._emscripten_run_in_main_runtime_thread_js=function(){return(g4=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},wg=d._emscripten_dispatch_to_thread_=function(){return(wg=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},kg=d.__emscripten_thread_free_data=function(){return(kg=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},VR=d.__emscripten_thread_exit=function(){return(VR=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},GR=d._memalign=function(){return(GR=d._memalign=d.asm.memalign).apply(null,arguments)},y4=d._emscripten_stack_set_limits=function(){return(y4=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},Ig=d.stackSave=function(){return(Ig=d.stackSave=d.asm.stackSave).apply(null,arguments)},a0=d.stackRestore=function(){return(a0=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Au=d.stackAlloc=function(){return(Au=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},UR=d.dynCall_iijjiiii=function(){return(UR=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},jR=d.dynCall_jiji=function(){return(jR=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},A4=d.__emscripten_allow_main_runtime_queued_calls=21664;d.cwrap=fr,d.keepRuntimeAlive=yo,d.PThread=ze,d.PThread=ze,d.wasmMemory=Fe,d.ExitStatus=Cp;var s0;function Cp(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}la=function N(){s0||Sg(),s0||(la=N)};function Sg(N){if(N=N||y,Ss>0)return;if(C){c(d),Ap(),postMessage({cmd:"loaded"});return}if(Lr(),Ss>0)return;function _(){s0||(s0=!0,d.calledRun=!0,!bt&&(Ap(),c(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),K1()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),_()},1)):_()}d.run=Sg;function HR(N,_){if(Or=N,!_&&C)throw Uc(N),"unwind";yo()||q1(),qR(N)}function qR(N){Or=N,yo()||(ze.terminateAllThreads(),d.onExit&&d.onExit(N),bt=!0),x(N,new Cp(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();Sg();var i0;m&&(i0={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var o0;if(typeof WasmBackendModule!="undefined")o0=WasmBackendModule;else if(typeof a!="undefined")o0=a;else throw new Error("Could not find wasm module in post.js");if(i0){var KR=o0._dispose;o0._dispose=function(){KR(),i0.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),i0.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=r:typeof define=="function"&&define.amd?define([],function(){return r}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=r)}}),k$=pr({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var r=(()=>{var n=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(n=n||__filename),function(a){a=a||{};var s=typeof a!="undefined"?a:{},i,o;s.ready=new Promise(function(H,ne){i=H,o=ne});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},s),p=[],h="./this.program",d=(H,ne)=>{throw ne},c=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(H){return s.locateFile?s.locateFile(H,g):g+H}var A,x,b,w;function I(H){H instanceof Ip||$("exiting due to exception: "+H)}var C,E,R;m?(f?g=_0().dirname(g)+"/":g=__dirname+"/",R=()=>{E||(C=Af(),E=_0())},A=function(H,ne){return R(),H=E.normalize(H),C.readFileSync(H,ne?void 0:"utf8")},b=H=>{var ne=A(H,!0);return ne.buffer||(ne=new Uint8Array(ne)),ne},x=(H,ne,ye)=>{R(),H=E.normalize(H),C.readFile(H,function(Re,lt){Re?ye(Re):ne(lt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),p=process.argv.slice(2),process.on("uncaughtException",function(H){if(!(H instanceof Ip))throw H}),process.on("unhandledRejection",function(H){throw H}),d=(H,ne)=>{if(yp())throw process.exitCode=H,ne;I(ne),process.exit(H)},s.inspect=function(){return"[Emscripten Module object]"}):(c||f)&&(f?g=self.location.href:typeof document!="undefined"&&document.currentScript&&(g=document.currentScript.src),n&&(g=n),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",A=H=>{var ne=new XMLHttpRequest;return ne.open("GET",H,!1),ne.send(null),ne.responseText},f&&(b=H=>{var ne=new XMLHttpRequest;return ne.open("GET",H,!1),ne.responseType="arraybuffer",ne.send(null),new Uint8Array(ne.response)}),x=(H,ne,ye)=>{var Re=new XMLHttpRequest;Re.open("GET",H,!0),Re.responseType="arraybuffer",Re.onload=()=>{if(Re.status==200||Re.status==0&&Re.response){ne(Re.response);return}ye()},Re.onerror=ye,Re.send(null)},w=H=>document.title=H);var F=s.print||console.log.bind(console),$=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(p=s.arguments),s.thisProgram&&(h=s.thisProgram),s.quit&&(d=s.quit);var S=4;function O(H){O.shown||(O.shown={}),O.shown[H]||(O.shown[H]=1,$(H))}function z(H,ne){if(typeof WebAssembly.Function=="function"){for(var ye={i:"i32",j:"i64",f:"f32",d:"f64"},Re={parameters:[],results:ne[0]=="v"?[]:[ye[ne[0]]]},lt=1;lt<ne.length;++lt)Re.parameters.push(ye[ne[lt]]);return new WebAssembly.Function(Re,H)}var ft=[1,0,1,96],Ze=ne.slice(0,1),qe=ne.slice(1),Kt={i:127,j:126,f:125,d:124};ft.push(qe.length);for(var lt=0;lt<qe.length;++lt)ft.push(Kt[qe[lt]]);Ze=="v"?ft.push(0):ft=ft.concat([1,Kt[Ze]]),ft[1]=ft.length-2;var ua=new Uint8Array([0,97,115,109,1,0,0,0].concat(ft,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),da=new WebAssembly.Module(ua),yu=new WebAssembly.Instance(da,{e:{f:H}}),vo=yu.exports.f;return vo}var j=[],K;function D(){if(j.length)return j.pop();try{ks.grow(1)}catch(H){throw H instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":H}return ks.length-1}function Z(H,ne){for(var ye=H;ye<H+ne;ye++){var Re=bp(ye);Re&&K.set(Re,ye)}}var V=0,re=H=>{V=H},Q;s.wasmBinary&&(Q=s.wasmBinary);var ie=s.noExitRuntime||!0;typeof WebAssembly!="object"&&go("no native wasm support detected");var X,ae=!1,de;function be(H,ne){H||go(ne)}function ve(H){var ne=s["_"+H];return ne}function Ee(H,ne,ye,Re,lt){var ft={string:function(nn){var Cs=0;if(nn!=null&&nn!==0){var r0=(nn.length<<2)+1;Cs=kp(r0),ct(nn,Cs,r0)}return Cs},array:function(nn){var Cs=kp(nn.length);return bt(nn,Cs),Cs}};function Ze(nn){return ne==="string"?ot(nn):ne==="boolean"?Boolean(nn):nn}var qe=ve(H),Kt=[],ua=0;if(Re)for(var da=0;da<Re.length;da++){var yu=ft[ye[da]];yu?(ua===0&&(ua=e0()),Kt[da]=yu(Re[da])):Kt[da]=Re[da]}var vo=qe.apply(null,Kt);function bg(nn){return ua!==0&&t0(ua),Ze(nn)}return vo=bg(vo),vo}function $e(H,ne,ye,Re){ye=ye||[];var lt=ye.every(function(Ze){return Ze==="number"}),ft=ne!=="string";return ft&&lt&&!Re?ve(H):function(){return Ee(H,ne,ye,arguments,Re)}}var De=1,Ve=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Xe(H,ne,ye){for(var Re=ne+ye,lt=ne;H[lt]&&!(lt>=Re);)++lt;if(lt-ne>16&&H.subarray&&Ve)return Ve.decode(H.subarray(ne,lt));for(var ft="";ne<lt;){var Ze=H[ne++];if(!(Ze&128)){ft+=String.fromCharCode(Ze);continue}var qe=H[ne++]&63;if((Ze&224)==192){ft+=String.fromCharCode((Ze&31)<<6|qe);continue}var Kt=H[ne++]&63;if((Ze&240)==224?Ze=(Ze&15)<<12|qe<<6|Kt:Ze=(Ze&7)<<18|qe<<12|Kt<<6|H[ne++]&63,Ze<65536)ft+=String.fromCharCode(Ze);else{var ua=Ze-65536;ft+=String.fromCharCode(55296|ua>>10,56320|ua&1023)}}return ft}function ot(H,ne){return H?Xe(fr,H,ne):""}function ht(H,ne,ye,Re){if(!(Re>0))return 0;for(var lt=ye,ft=ye+Re-1,Ze=0;Ze<H.length;++Ze){var qe=H.charCodeAt(Ze);if(qe>=55296&&qe<=57343){var Kt=H.charCodeAt(++Ze);qe=65536+((qe&1023)<<10)|Kt&1023}if(qe<=127){if(ye>=ft)break;ne[ye++]=qe}else if(qe<=2047){if(ye+1>=ft)break;ne[ye++]=192|qe>>6,ne[ye++]=128|qe&63}else if(qe<=65535){if(ye+2>=ft)break;ne[ye++]=224|qe>>12,ne[ye++]=128|qe>>6&63,ne[ye++]=128|qe&63}else{if(ye+3>=ft)break;ne[ye++]=240|qe>>18,ne[ye++]=128|qe>>12&63,ne[ye++]=128|qe>>6&63,ne[ye++]=128|qe&63}}return ne[ye]=0,ye-lt}function ct(H,ne,ye){return ht(H,fr,ne,ye)}function Fe(H){for(var ne=0,ye=0;ye<H.length;++ye){var Re=H.charCodeAt(ye);Re>=55296&&Re<=57343&&(Re=65536+((Re&1023)<<10)|H.charCodeAt(++ye)&1023),Re<=127?++ne:Re<=2047?ne+=2:Re<=65535?ne+=3:ne+=4}return ne}var kt=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):void 0;function bt(H,ne){nr.set(H,ne)}function Or(H,ne,ye){for(var Re=0;Re<H.length;++Re)nr[ne++>>0]=H.charCodeAt(Re);ye||(nr[ne>>0]=0)}function cr(H,ne){return H%ne>0&&(H+=ne-H%ne),H}var tn,nr,fr,ia,rn,ar,En,Rn,ws;function mo(H){tn=H,s.HEAP8=nr=new Int8Array(H),s.HEAP16=ia=new Int16Array(H),s.HEAP32=ar=new Int32Array(H),s.HEAPU8=fr=new Uint8Array(H),s.HEAPU16=rn=new Uint16Array(H),s.HEAPU32=En=new Uint32Array(H),s.HEAPF32=Rn=new Float32Array(H),s.HEAPF64=ws=new Float64Array(H)}var Tc=s.INITIAL_MEMORY||16777216,ks,Ka=[],gp=[],ou=[],Dr=!1,Nc=!1,Ec=0;function yp(){return ie||Ec>0}function Rc(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)Fc(s.preRun.shift());xp(Ka)}function $c(){Dr=!0,xp(gp)}function Qb(){Nc=!0}function Mc(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)_c(s.postRun.shift());xp(ou)}function Fc(H){Ka.unshift(H)}function oa(H){gp.unshift(H)}function _c(H){ou.unshift(H)}var $n=0,lu=null,Is=null;function j1(H){$n++,s.monitorRunDependencies&&s.monitorRunDependencies($n)}function Pc(H){if($n--,s.monitorRunDependencies&&s.monitorRunDependencies($n),$n==0&&(lu!==null&&(clearInterval(lu),lu=null),Is)){var ne=Is;Is=null,ne()}}s.preloadedImages={},s.preloadedAudios={};function go(H){s.onAbort&&s.onAbort(H),H="Aborted("+H+")",$(H),ae=!0,de=1,H+=". Build with -s ASSERTIONS=1 for more info.";var ne=new WebAssembly.RuntimeError(H);throw o(ne),ne}var H1="data:application/octet-stream;base64,";function zc(H){return H.startsWith(H1)}function yo(H){return H.startsWith("file://")}var Lr;Lr="tfjs-backend-wasm.wasm",zc(Lr)||(Lr=y(Lr));function Ap(H){try{if(H==Lr&&Q)return new Uint8Array(Q);if(b)return b(H);throw"both async and sync fetching of the wasm failed"}catch(ne){go(ne)}}function q1(){if(!Q&&(c||f)){if(typeof fetch=="function"&&!yo(Lr))return fetch(Lr,{credentials:"same-origin"}).then(function(H){if(!H.ok)throw"failed to load wasm binary file at '"+Lr+"'";return H.arrayBuffer()}).catch(function(){return Ap(Lr)});if(x)return new Promise(function(H,ne){x(Lr,function(ye){H(new Uint8Array(ye))},ne)})}return Promise.resolve().then(function(){return Ap(Lr)})}function K1(){var H={env:pu,wasi_snapshot_preview1:pu};function ne(Ze,qe){var Kt=Ze.exports;s.asm=Kt,X=s.asm.memory,mo(X.buffer),ks=s.asm.__indirect_function_table,oa(s.asm.__wasm_call_ctors),Pc("wasm-instantiate")}j1("wasm-instantiate");function ye(Ze){ne(Ze.instance)}function Re(Ze){return q1().then(function(qe){return WebAssembly.instantiate(qe,H)}).then(function(qe){return qe}).then(Ze,function(qe){$("failed to asynchronously prepare wasm: "+qe),go(qe)})}function lt(){return!Q&&typeof WebAssembly.instantiateStreaming=="function"&&!zc(Lr)&&!yo(Lr)&&typeof fetch=="function"?fetch(Lr,{credentials:"same-origin"}).then(function(Ze){var qe=WebAssembly.instantiateStreaming(Ze,H);return qe.then(ye,function(Kt){return $("wasm streaming compile failed: "+Kt),$("falling back to ArrayBuffer instantiation"),Re(ye)})}):Re(ye)}if(s.instantiateWasm)try{var ft=s.instantiateWasm(H,ne);return ft}catch(Ze){return $("Module.instantiateWasm callback failed with error: "+Ze),!1}return lt().catch(o),{}}var e4,t4;function xp(H){for(;H.length>0;){var ne=H.shift();if(typeof ne=="function"){ne(s);continue}var ye=ne.func;typeof ye=="number"?ne.arg===void 0?bp(ye)():bp(ye)(ne.arg):ye(ne.arg===void 0?null:ne.arg)}}function Ss(H){return H}function Oc(H){var ne=/\b_Z[\w\d_]+/g;return H.replace(ne,function(ye){var Re=ye;return ye===Re?ye:Re+" ["+ye+"]"})}var la=[];function bp(H){var ne=la[H];return ne||(H>=la.length&&(la.length=H+1),la[H]=ne=ks.get(H)),ne}function r4(){var H=new Error;if(!H.stack){try{throw new Error}catch(ne){H=ne}if(!H.stack)return"(no stack trace available)"}return H.stack.toString()}function uu(H,ne){ks.set(H,ne),la[H]=ne}function X1(){go("")}function Dc(H,ne,ye){fr.copyWithin(H,ne,ne+ye)}function Lc(){return 2147483648}function Br(H){try{return X.grow(H-tn.byteLength+65535>>>16),mo(X.buffer),1}catch(ne){}}function Bc(H){var ne=fr.length;H=H>>>0;var ye=Lc();if(H>ye)return!1;for(var Re=1;Re<=4;Re*=2){var lt=ne*(1+.2/Re);lt=Math.min(lt,H+100663296);var ft=Math.min(ye,cr(Math.max(H,lt),65536)),Ze=Br(ft);if(Ze)return!0}return!1}var du={mappings:{},buffers:[null,[],[]],printChar:function(H,ne){var ye=du.buffers[H];ne===0||ne===10?((H===1?F:$)(Xe(ye,0)),ye.length=0):ye.push(ne)},varargs:void 0,get:function(){du.varargs+=4;var H=ar[du.varargs-4>>2];return H},getStr:function(H){var ne=ot(H);return ne},get64:function(H,ne){return H}};function Z1(H){return 0}function n4(H,ne,ye,Re,lt){}function a4(H,ne,ye,Re){for(var lt=0,ft=0;ft<ye;ft++){var Ze=ar[ne>>2],qe=ar[ne+4>>2];ne+=8;for(var Kt=0;Kt<qe;Kt++)du.printChar(H,fr[Ze+Kt]);lt+=qe}return ar[Re>>2]=lt,0}function Y1(H){re(H)}var Wc=!1,pu={abort:X1,emscripten_memcpy_big:Dc,emscripten_resize_heap:Bc,fd_close:Z1,fd_seek:n4,fd_write:a4,setTempRet0:Y1},nR=K1(),s4=s.___wasm_call_ctors=function(){return(s4=s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},J1=s._init=function(){return(J1=s._init=s.asm.init).apply(null,arguments)},Q1=s._init_with_threads_count=function(){return(Q1=s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},Vc=s._get_threads_count=function(){return(Vc=s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},Gc=s._register_tensor=function(){return(Gc=s._register_tensor=s.asm.register_tensor).apply(null,arguments)},e2=s._dispose_data=function(){return(e2=s._dispose_data=s.asm.dispose_data).apply(null,arguments)},ze=s._dispose=function(){return(ze=s._dispose=s.asm.dispose).apply(null,arguments)},t2=s._Abs=function(){return(t2=s._Abs=s.asm.Abs).apply(null,arguments)},Uc=s._Add=function(){return(Uc=s._Add=s.asm.Add).apply(null,arguments)},Ao=s._AddN=function(){return(Ao=s._AddN=s.asm.AddN).apply(null,arguments)},hu=s._All=function(){return(hu=s._All=s.asm.All).apply(null,arguments)},r2=s._Any=function(){return(r2=s._Any=s.asm.Any).apply(null,arguments)},i4=s._ArgMax=function(){return(i4=s._ArgMax=s.asm.ArgMax).apply(null,arguments)},n2=s._AvgPool=function(){return(n2=s._AvgPool=s.asm.AvgPool).apply(null,arguments)},o4=s._BatchMatMul=function(){return(o4=s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},xo=s._Ceil=function(){return(xo=s._Ceil=s.asm.Ceil).apply(null,arguments)},a2=s._ClipByValue=function(){return(a2=s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s2=s._Conv2D=function(){return(s2=s._Conv2D=s.asm.Conv2D).apply(null,arguments)},i2=s._Conv2DBackpropInput=function(){return(i2=s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},o2=s._Cos=function(){return(o2=s._Cos=s.asm.Cos).apply(null,arguments)},l2=s._Cosh=function(){return(l2=s._Cosh=s.asm.Cosh).apply(null,arguments)},u2=s._CropAndResize=function(){return(u2=s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},jc=s._Cumprod=function(){return(jc=s._Cumprod=s.asm.Cumprod).apply(null,arguments)},d2=s._Cumsum=function(){return(d2=s._Cumsum=s.asm.Cumsum).apply(null,arguments)},p2=s._DepthToSpace=function(){return(p2=s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},h2=s._DepthwiseConv2dNative=function(){return(h2=s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},c2=s._Elu=function(){return(c2=s._Elu=s.asm.Elu).apply(null,arguments)},f2=s._Equal=function(){return(f2=s._Equal=s.asm.Equal).apply(null,arguments)},Hc=s._Exp=function(){return(Hc=s._Exp=s.asm.Exp).apply(null,arguments)},m2=s._FlipLeftRight=function(){return(m2=s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},g2=s._Floor=function(){return(g2=s._Floor=s.asm.Floor).apply(null,arguments)},bo=s._FloorDiv=function(){return(bo=s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},vp=s._FusedBatchNorm=function(){return(vp=s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},y2=s._FusedConv2D=function(){return(y2=s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},A2=s._FusedDepthwiseConv2D=function(){return(A2=s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},x2=s._Gather=function(){return(x2=s._Gather=s.asm.Gather).apply(null,arguments)},Ke=s._GatherNd=function(){return(Ke=s._GatherNd=s.asm.GatherNd).apply(null,arguments)},b2=s._Greater=function(){return(b2=s._Greater=s.asm.Greater).apply(null,arguments)},v2=s._GreaterEqual=function(){return(v2=s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},w2=s._LeakyRelu=function(){return(w2=s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},k2=s._Less=function(){return(k2=s._Less=s.asm.Less).apply(null,arguments)},I2=s._LessEqual=function(){return(I2=s._LessEqual=s.asm.LessEqual).apply(null,arguments)},S2=s._Log=function(){return(S2=s._Log=s.asm.Log).apply(null,arguments)},wp=s._LogicalAnd=function(){return(wp=s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},qc=s._LogicalNot=function(){return(qc=s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},Kc=s._LogicalOr=function(){return(Kc=s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},C2=s._LogicalXor=function(){return(C2=s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},T2=s._Max=function(){return(T2=s._Max=s.asm.Max).apply(null,arguments)},N2=s._MaxPool=function(){return(N2=s._MaxPool=s.asm.MaxPool).apply(null,arguments)},E2=s._Maximum=function(){return(E2=s._Maximum=s.asm.Maximum).apply(null,arguments)},R2=s._Mean=function(){return(R2=s._Mean=s.asm.Mean).apply(null,arguments)},$2=s._Min=function(){return($2=s._Min=s.asm.Min).apply(null,arguments)},Pt=s._Minimum=function(){return(Pt=s._Minimum=s.asm.Minimum).apply(null,arguments)},M2=s._MirrorPad=function(){return(M2=s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},F2=s._Multiply=function(){return(F2=s._Multiply=s.asm.Multiply).apply(null,arguments)},_2=s._Neg=function(){return(_2=s._Neg=s.asm.Neg).apply(null,arguments)},cu=s._NonMaxSuppressionV3=function(){return(cu=s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},Xc=s._NonMaxSuppressionV4=function(){return(Xc=s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},Zc=s._NonMaxSuppressionV5=function(){return(Zc=s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},Yc=s._NotEqual=function(){return(Yc=s._NotEqual=s.asm.NotEqual).apply(null,arguments)},P2=s._OneHot=function(){return(P2=s._OneHot=s.asm.OneHot).apply(null,arguments)},Jc=s._PadV2=function(){return(Jc=s._PadV2=s.asm.PadV2).apply(null,arguments)},z2=s._Pow=function(){return(z2=s._Pow=s.asm.Pow).apply(null,arguments)},l4=s._Prelu=function(){return(l4=s._Prelu=s.asm.Prelu).apply(null,arguments)},Qc=s._Prod=function(){return(Qc=s._Prod=s.asm.Prod).apply(null,arguments)},u4=s._RealDiv=function(){return(u4=s._RealDiv=s.asm.RealDiv).apply(null,arguments)},O2=s._Relu=function(){return(O2=s._Relu=s.asm.Relu).apply(null,arguments)},D2=s._Relu6=function(){return(D2=s._Relu6=s.asm.Relu6).apply(null,arguments)},L2=s._ResizeBilinear=function(){return(L2=s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},B2=s._ResizeNearestNeighbor=function(){return(B2=s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},W2=s._Reverse=function(){return(W2=s._Reverse=s.asm.Reverse).apply(null,arguments)},V2=s._RotateWithOffset=function(){return(V2=s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},G2=s._Round=function(){return(G2=s._Round=s.asm.Round).apply(null,arguments)},U2=s._Rsqrt=function(){return(U2=s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},j2=s._ScatterNd=function(){return(j2=s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},H2=s._SelectV2=function(){return(H2=s._SelectV2=s.asm.SelectV2).apply(null,arguments)},q2=s._Sigmoid=function(){return(q2=s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},K2=s._Sin=function(){return(K2=s._Sin=s.asm.Sin).apply(null,arguments)},X2=s._Softmax=function(){return(X2=s._Softmax=s.asm.Softmax).apply(null,arguments)},Z2=s._SparseFillEmptyRows=function(){return(Z2=s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},Y2=s._SparseReshape=function(){return(Y2=s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},J2=s._SparseSegmentReduction=function(){return(J2=s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},Q2=s._Sqrt=function(){return(Q2=s._Sqrt=s.asm.Sqrt).apply(null,arguments)},eg=s._Square=function(){return(eg=s._Square=s.asm.Square).apply(null,arguments)},tg=s._SquaredDifference=function(){return(tg=s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},rg=s._Step=function(){return(rg=s._Step=s.asm.Step).apply(null,arguments)},ng=s._StridedSlice=function(){return(ng=s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},ag=s._Sub=function(){return(ag=s._Sub=s.asm.Sub).apply(null,arguments)},sg=s._Sum=function(){return(sg=s._Sum=s.asm.Sum).apply(null,arguments)},ig=s._Tan=function(){return(ig=s._Tan=s.asm.Tan).apply(null,arguments)},og=s._Tanh=function(){return(og=s._Tanh=s.asm.Tanh).apply(null,arguments)},lg=s._Tile=function(){return(lg=s._Tile=s.asm.Tile).apply(null,arguments)},ug=s._TopK=function(){return(ug=s._TopK=s.asm.TopK).apply(null,arguments)},dg=s._Transform=function(){return(dg=s._Transform=s.asm.Transform).apply(null,arguments)},pg=s._Transpose=function(){return(pg=s._Transpose=s.asm.Transpose).apply(null,arguments)},hg=s.__FusedMatMul=function(){return(hg=s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},cg=s._malloc=function(){return(cg=s._malloc=s.asm.malloc).apply(null,arguments)},fg=s._free=function(){return(fg=s._free=s.asm.free).apply(null,arguments)},mg=s.___errno_location=function(){return(mg=s.___errno_location=s.asm.__errno_location).apply(null,arguments)},gg=s._emscripten_main_thread_process_queued_calls=function(){return(gg=s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},e0=s.stackSave=function(){return(e0=s.stackSave=s.asm.stackSave).apply(null,arguments)},t0=s.stackRestore=function(){return(t0=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},kp=s.stackAlloc=function(){return(kp=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},yg=s.dynCall_iijjiiii=function(){return(yg=s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},Ag=s.dynCall_jiji=function(){return(Ag=s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};s.cwrap=$e;var fu;function Ip(H){this.name="ExitStatus",this.message="Program terminated with exit("+H+")",this.status=H}Is=function H(){fu||Sp(),fu||(Is=H)};function Sp(H){if(H=H||p,$n>0||(Rc(),$n>0))return;function ne(){fu||(fu=!0,s.calledRun=!0,!ae&&($c(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Mc()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),ne()},1)):ne()}s.run=Sp;function d4(H){de=H,yp()||(s.onExit&&s.onExit(H),ae=!0),d(H,new Ip(H))}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();Sp();var mu;l&&(mu={uncaughtException:process.listeners("uncaughtException").filter(function(H){return!l.uncaughtException.indexOf(H)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(H){return!l.unhandledRejection.indexOf(H)>-1})});var gu;if(typeof a!="undefined")gu=a;else if(typeof WasmBackendModuleThreadedSimd!="undefined")gu=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(mu){var xg=gu._dispose;gu._dispose=function(){xg(),mu.uncaughtException.forEach(function(H){process.removeListener("uncaughtException",H)}),mu.unhandledRejection.forEach(function(H){process.removeListener("unhandledRejection",H)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=r:typeof define=="function"&&define.amd?define([],function(){return r}):typeof e=="object"&&(e.WasmBackendModule=r)}}),I$=1e-7,S$=1e-4,ph=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Xu=class{refCount(e){return Fn("refCount")}incRef(e){return Fn("incRef")}timerAvailable(){return!0}time(e){return Fn("time")}read(e){return Fn("read")}readSync(e){return Fn("readSync")}readToGPU(e,t){return Fn("readToGPU")}numDataIds(){return Fn("numDataIds")}disposeData(e,t){return Fn("disposeData")}write(e,t,r){return Fn("write")}move(e,t,r,n,a){return Fn("move")}memory(){return Fn("memory")}floatPrecision(){return Fn("floatPrecision")}epsilon(){return this.floatPrecision()===32?I$:S$}dispose(){return Fn("dispose")}};function Fn(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function d6(e){let t=e.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,P0(e,t,r)}function C$(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let r=e.length,n=0;for(;r>0;)n=Math.random()*r|0,r--,P0(e,r,n),P0(t,r,n)}function Jp(e,t,r){return Math.max(e,Math.min(t,r))}function T$(e){return e%2===0?e:e+1}function P0(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}function N$(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t}function E$(e,t){let r=Math.random();return t*r+(1-r)*e}function R$(e,t){let r=0;for(let n=0;n<e.length;n++){let a=Number(e[n])-Number(t[n]);r+=a*a}return r}function P(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Hr(e,t,r=""){P(ei(e,t),()=>r+` Shapes ${e} and ${t} must match`)}function Zo(e){P(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Lo(e,t=[],r=!1){if(t==null&&(t=[]),Array.isArray(e)||Tr(e)&&!r)for(let n=0;n<e.length;++n)Lo(e[n],t,r);else t.push(e);return t}function St(e){if(e.length===0)return 1;let t=e[0];for(let r=1;r<e.length;r++)t*=e[r];return t}function $$(e){return e.length===0}function ei(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function _u(e){return e%1===0}function M$(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function F$(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function _$(e){let t=new Uint32Array(e);for(let r=0;r<e;++r)t[r]=r;return d6(t),t}function Hp(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function P$(e,t=n=>0,r){return new Promise((n,a)=>{let s=0,i=()=>{if(e()){n();return}s++;let o=t(s);if(r!=null&&s>=r){a();return}setTimeout(i,o)};i()})}function z$(e,t){let r=1,n=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)r*=e[s];else if(e[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==r)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(r===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%r!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${r}`);let a=e.slice();return a[n]=t/r,a}function Yn(e,t){let r=t.length;return e=e==null?t.map((n,a)=>a):[].concat(e),P(e.every(n=>n>=-r&&n<r),()=>`All values in axis param must be in range [-${r}, ${r}) but got axis ${e}`),P(e.every(n=>_u(n)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(n=>n<0?r+n:n)}function p6(e,t){let r=[],n=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:Yn(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(r.push(e[o]),n.push(o)),s[i]<=o&&i++}e[o]!==1&&(r.push(e[o]),n.push(o))}return{newShape:r,keptDims:n}}function h6(e,t){let r=null;if(e==null||e==="float32")r=new Float32Array(t);else if(e==="int32")r=new Int32Array(t);else if(e==="bool")r=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return r}function c6(e,t){let r=null;if(e==null||e==="float32")r=new Float32Array(t);else if(e==="int32")r=new Int32Array(t);else if(e==="bool")r=new Uint8Array(t);else if(e==="string")r=new Array(t);else throw new Error(`Unknown data type ${e}`);return r}function f6(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function m6(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function O$(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Tr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Gg(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function g6(e){if(e==null)return 0;let t=0;return e.forEach(r=>t+=r.length),t}function Fs(e){return typeof e=="string"||e instanceof String}function y6(e){return typeof e=="boolean"}function A6(e){return typeof e=="number"}function xf(e){return Array.isArray(e)?xf(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":A6(e)?"float32":Fs(e)?"string":y6(e)?"bool":"float32"}function Ls(e){return!!(e&&e.constructor&&e.call&&e.apply)}function z0(e,t){for(let r=t;r<e;++r)if(e%r===0)return r;return e}function Zu(e){let t=e.length;if(t<2)return[];let r=new Array(t-1);r[t-2]=e[t-1];for(let n=t-3;n>=0;--n)r[n]=r[n+1]*e[n+1];return r}function x6(e,t,r,n=!1){let a=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let i=0;i<s;i++)a[i]=r[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,u)=>l*u)*(n?2:1);for(let l=0;l<s;l++)a[l]=x6(e+l*o,i,r,n)}return a}function Eu(e,t,r=!1){if(e.length===0)return t[0];let n=e.reduce((a,s)=>a*s)*(r?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${r?" for a complex tensor":""}.`);return x6(0,e,t,r)}function Gy(e,t){let r=bf(e,t);for(let n=0;n<r.length;n++)r[n]=1;return r}function bf(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function D$(e,t){let r=e.reduce((n,a)=>n*a,1);if(t==null||t==="float32")return Eu(e,new Float32Array(r));if(t==="int32")return Eu(e,new Int32Array(r));if(t==="bool")return Eu(e,new Uint8Array(r));throw new Error(`Unknown data type ${t}`)}function Uy(e){e.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function L$(e,t,r){if(t===0)return 0;if(t===1)return e[0];let n=e[e.length-1];for(let a=0;a<e.length-1;++a)n+=r[a]*e[a];return n}function B$(e,t,r){if(t===0)return[];if(t===1)return[e];let n=new Array(t);for(let a=0;a<n.length-1;++a)n[a]=Math.floor(e/r[a]),e-=n[a]*r[a];return n[n.length-1]=e,n}function jy(e){return e&&e.then&&typeof e.then=="function"}var w4="tfjsflags",b6=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=W$,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){let n=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${n}.`),this.set(e,n)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(jy(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);w4 in e&&e[w4].split(",").forEach(t=>{let[r,n]=t.split(":");this.urlFlags[r]=G$(r,n)})}};function W$(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(r,...n)=>(V$(t,n[0],n[1]),n.join("="))),t}function V$(e,t,r){e[decodeURIComponent(t)]=decodeURIComponent(r||"")}function G$(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return Ia}var Ia=null;function U$(e){Ia=e}var Tg;function v6(){if(Tg==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Tg=e}return Tg}function j$(){let e=v6();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Hy(e,t){let r=j$();if(r.has(e))return r.get(e);{let n=t();return r.set(e,n),r.get(e)}}var Yo="Abs",Yu="Acos",Ju="Acosh",ns="Add",ti="AddN",Qu="All",ed="Any",ri="ArgMax",td="ArgMin",rd="Asin",nd="Asinh",ad="Atan",sd="Atanh",id="Atan2",ni="AvgPool",vf="AvgPoolGrad",hh="AvgPool3D",wf="AvgPool3DGrad",ai="BatchMatMul",Jo="BatchToSpaceND",kf="Bincount",w6="BroadcastTo",If="BroadcastArgs",si="Cast",ii="Ceil",as="ClipByValue",ch="Complex",fh="ComplexAbs",Qo="Concat",oi="Conv2D",Sf="Conv2DBackpropFilter",li="Conv2DBackpropInput",mh="Conv3D",Cf="Conv3DBackpropFilterV2",Tf="Conv3DBackpropInputV2",ui="Cos",di="Cosh",el="Cumprod",pi="Cumsum",tl="CropAndResize",Nf="DenseBincount",rl="DepthToSpace",hi="DepthwiseConv2dNative",Ef="DepthwiseConv2dNativeBackpropFilter",Rf="DepthwiseConv2dNativeBackpropInput",$f="Diag",gh="Dilation2D",O0="Dilation2DBackpropInput",D0="Dilation2DBackpropFilter",ci="RealDiv",yh="Einsum",fi="Elu",Mf="EluGrad",od="Erf",nl="Equal",mi="Exp",al="ExpandDims",sl="Expm1",Ff="FFT",ld="Fill",il="FlipLeftRight",gi="Floor",yi="FloorDiv",Ai="FusedBatchNorm",ol="GatherV2",ll="GatherNd",ul="Greater",xi="GreaterEqual",bi="Identity",_f="IFFT",Ah="Imag",ud="IsFinite",dd="IsInf",pd="IsNan",vi="LeakyRelu",dl="Less",pl="LessEqual",Pf="LinSpace",wi="Log",hd="Log1p",hl="LogicalAnd",cl="LogicalNot",cd="LogicalOr",k6="LogicalXor",I6="LogSoftmax",H$="LowerBound",xh="LRN",zf="LRNGrad",ki="Max",Ii="Maximum",Si="MaxPool",Of="MaxPoolGrad",bh="MaxPool3D",Df="MaxPool3DGrad",Lf="MaxPoolWithArgmax",Ci="Mean",Ti="Min",Ni="Minimum",Ei="MirrorPad",fd="Mod",Bf="Multinomial",Ri="Multiply",fl="Neg",ml="NotEqual",gl="NonMaxSuppressionV3",md="NonMaxSuppressionV4",yl="NonMaxSuppressionV5",Al="OnesLike",xl="OneHot",bl="Pack",$i="PadV2",q$="Pool",Mi="Pow",Fi="Prelu",_i="Prod",gd="Range",vh="Real",yd="Reciprocal",Pi="Relu",vl="Reshape",zi="ResizeNearestNeighbor",Wf="ResizeNearestNeighborGrad",Oi="ResizeBilinear",Vf="ResizeBilinearGrad",Di="Relu6",wl="Reverse",kl="Round",Li="Rsqrt",Il="ScatterNd",Gf="SearchSorted",Sl="Select",Ad="Selu",Cl="Slice",Bi="Sin",Tl="Sinh",xd="Sign",Wi="Sigmoid",bd="Softplus",Vi="Sqrt",Gi="Sum",Nl="SpaceToBatchND",El="SplitV",Ui="Softmax",wh="SparseFillEmptyRows",vd="SparseReshape",kh="SparseSegmentMean",Ih="SparseSegmentSum",Sh="SparseToDense",ji="SquaredDifference",wd="Square",Rl="StridedSlice",kd="StringNGrams",Ch="StringSplit",Th="StringToHashBucketFast",Hi="Sub",$l="Tan",qi="Tanh",ss="Tile",Ml="TopK",Fl="Transform",Pa="Transpose",Uf="Unique",_l="Unpack",Nh="UnsortedSegmentSum",K$="UpperBound",Pl="ZerosLike",Ki="Step",Qp="FromPixels",zl="RotateWithOffset",Bs="_FusedMatMul",Ws="FusedConv2D",Vs="FusedDepthwiseConv2D";function Ms(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function X$(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var Pu=Hy("kernelRegistry",()=>new Map),eh=Hy("gradRegistry",()=>new Map);function L0(e,t){let r=qy(e,t);return Pu.get(r)}function Ug(e){return eh.get(e)}function Oa(e){let t=Pu.entries(),r=[];for(;;){let{done:n,value:a}=t.next();if(n)break;let[s,i]=a,[o]=s.split("_");o===e&&r.push(i)}return r}function Jn(e){let{kernelName:t,backendName:r}=e,n=qy(t,r);Pu.has(n)&&Ms(`The kernel '${t}' for backend '${r}' is already registered`),Pu.set(n,e)}function S6(e){let{kernelName:t}=e;eh.has(t)&&Y().getBool("DEBUG")&&Ms(`Overriding the gradient for '${t}'`),eh.set(t,e)}function Z$(e,t){let r=qy(e,t);if(!Pu.has(r))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Pu.delete(r)}function Y$(e){if(!eh.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);eh.delete(e)}function J$(e,t){Oa(e).forEach(r=>{let n=Object.assign({},r,{backendName:t});Jn(n)})}function qy(e,t){return`${t}_${e}`}var v={};Be(v,{arraysEqual:()=>ei,assert:()=>P,assertNonNegativeIntegerDimensions:()=>Uy,assertNonNull:()=>Zo,assertShapesMatch:()=>Hr,bytesFromStringArray:()=>g6,bytesPerElement:()=>Gg,checkConversionForErrors:()=>f6,clamp:()=>Jp,computeStrides:()=>Zu,createScalarValue:()=>aM,createShuffledIndices:()=>_$,decodeString:()=>B0,distSquared:()=>R$,encodeString:()=>Rh,fetch:()=>iM,fingerPrint64:()=>nM,flatten:()=>Lo,getArrayFromDType:()=>c6,getTypedArrayFromDType:()=>h6,hasEncodingLoss:()=>O$,hexToLong:()=>Eh,indexToLoc:()=>B$,inferDtype:()=>xf,inferFromImplicitShape:()=>z$,isBoolean:()=>y6,isFunction:()=>Ls,isInt:()=>_u,isNumber:()=>A6,isPromise:()=>jy,isScalarShape:()=>$$,isString:()=>Fs,isTypedArray:()=>Tr,isValidDtype:()=>m6,locToIndex:()=>L$,makeOnesTypedArray:()=>Gy,makeZerosNestedTypedArray:()=>D$,makeZerosTypedArray:()=>bf,nearestDivisor:()=>z0,nearestLargerEven:()=>T$,now:()=>th,parseAxisParam:()=>Yn,randUniform:()=>E$,repeatedTry:()=>P$,rightPad:()=>Hp,shuffle:()=>d6,shuffleCombo:()=>C$,sizeFromShape:()=>St,sizeToSquarishShape:()=>F$,squeezeShape:()=>p6,sum:()=>N$,swap:()=>P0,tanh:()=>M$,toNestedArray:()=>Eu,toTypedArray:()=>jf});var k4=Xo(u$()),No=k4.default||k4;function Eh(e){return No.fromString(e,!0,16)}var C6=Eh("c3a5c85c97cb3127"),So=Eh("b492b66fbe98f273"),Wr=Eh("9ae16a3b2f90404f");function jg(e){return e.xor(e.shru(47))}function T6(e,t,r){let n=e.slice(t,t+r);return No.fromBytes(Array.from(n),!0,!0)}function It(e,t){return T6(e,t,8)}function I4(e,t){return T6(e,t,4)}function mr(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Ps(e,t,r=Eh("9ddfea08eb382d69")){let n=e.xor(t).mul(r);n=n.xor(n.shru(47));let a=t.xor(n).mul(r);return a=a.xor(a.shru(47)),a=a.mul(r),a}function Q$(e,t,r,n,a,s){a=a.add(e),s=mr(s.add(a).add(n),21);let i=a;return a=a.add(t),a=a.add(r),s=s.add(mr(a,44)),[a.add(n),s.add(i)]}function d0(e,t,r,n){return Q$(It(e,t),It(e,t+8),It(e,t+16),It(e,t+24),r,n)}function eM(e,t=e.length){if(t>=8){let r=Wr.add(t*2),n=It(e,0).add(Wr),a=It(e,t-8),s=mr(a,37).mul(r).add(n),i=mr(n,25).add(a).mul(r);return Ps(s,i,r)}if(t>=4){let r=Wr.add(t*2),n=I4(e,0);return Ps(n.shl(3).add(t),I4(e,t-4),r)}if(t>0){let r=e[0],n=e[t>>1],a=e[t-1],s=r+(n<<8),i=t+(a<<2);return jg(Wr.mul(s).xor(C6.mul(i))).mul(Wr)}return Wr}function tM(e,t=e.length){let r=Wr.add(t*2),n=It(e,0).mul(So),a=It(e,8),s=It(e,t-8).mul(r),i=It(e,t-16).mul(Wr);return Ps(mr(n.add(a),43).add(mr(s,30)).add(i),n.add(mr(a.add(Wr),18)).add(s),r)}function rM(e,t=e.length){let r=Wr.add(t*2),n=It(e,0).mul(Wr),a=It(e,8),s=It(e,t-8).mul(r),i=It(e,t-16).mul(Wr),o=mr(n.add(a),43).add(mr(s,30)).add(i),l=Ps(o,n.add(mr(a.add(Wr),18)).add(s),r),u=It(e,16).mul(r),p=It(e,24),h=o.add(It(e,t-32)).mul(r),d=l.add(It(e,t-24)).mul(r);return Ps(mr(u.add(p),43).add(mr(h,30)).add(d),u.add(mr(p.add(n),18)).add(h),r)}function nM(e,t=e.length){let r=No.fromNumber(81,!0);if(t<=32)return t<=16?eM(e,t):tM(e,t);if(t<=64)return rM(e,t);let n=r,a=r.mul(So).add(113),s=jg(a.mul(Wr).add(113)).mul(Wr),i=[No.UZERO,No.UZERO],o=[No.UZERO,No.UZERO];n=n.mul(Wr).add(It(e,0));let l=0,u=(t-1>>6)*64,p=u+(t-1&63)-63;do n=mr(n.add(a).add(i[0]).add(It(e,l+8)),37).mul(So),a=mr(a.add(i[1]).add(It(e,l+48)),42).mul(So),n=n.xor(o[1]),a=a.add(i[0]).add(It(e,l+40)),s=mr(s.add(o[0]),33).mul(So),i=d0(e,l,i[1].mul(So),n.add(o[0])),o=d0(e,l+32,s.add(o[1]),a.add(It(e,l+16))),[s,n]=[n,s],l+=64;while(l!==u);let h=So.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),n=mr(n.add(a).add(i[0]).add(It(e,l+8)),37).mul(h),a=mr(a.add(i[1]).add(It(e,l+48)),42).mul(h),n=n.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(It(e,l+40))),s=mr(s.add(o[0]),33).mul(h),i=d0(e,l,i[1].mul(h),n.add(o[0])),o=d0(e,l+32,s.add(o[1]),a.add(It(e,l+16))),[s,n]=[n,s],Ps(Ps(i[0],o[0],h).add(jg(a).mul(C6)).add(s),Ps(i[1],o[1],h).add(n),h)}function aM(e,t){return t==="string"?Rh(e):jf([e],t)}function sM(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function jf(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Lo(e)),Y().getBool("DEBUG")&&f6(e,t),sM(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let r=new Uint8Array(e.length);for(let n=0;n<r.length;++n)Math.round(e[n])!==0&&(r[n]=1);return r}else throw new Error(`Unknown data type ${t}`)}function th(){return Y().platform.now()}function iM(e,t){return Y().platform.fetch(e,t)}function Rh(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function B0(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var oM=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new uM)}profileKernel(e,t,r){let n,a=()=>{n=r()},s,i=th();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of n)o.dataSync();s=Promise.resolve({kernelMs:th()-i})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<n.length;o++){let l=n[o];l.data().then(u=>{lM(u,l.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:r,timeMs:n,inputs:a,extraInfo:s}=e;r.forEach(i=>{Promise.all([i.data(),n,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function lM(e,t,r){if(t!=="float32")return!1;for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${r}'`),!0}return!1}var uM=class{logKernelProfile(e,t,r,n,a,s){let i=typeof n=="number"?Hp(`${n}ms`,9):n.error,o=Hp(e,25),l=t.rank,u=t.size,p=Hp(t.shape.toString(),14),h="";for(let d in a){let c=a[d];if(c!=null){let f=c.shape||t.shape,m=f.length;h+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${p}	%c${u}	%c${h}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function dM(e,t,r){let n={},a={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],p=u.inputs;for(let h in p){let d=p[h],c=!1;for(let f=0;f<t.length;f++)if(n[d.id]){u.outputs.forEach(m=>n[m.id]=!0),c=!0,a[u.id]=!0;break}if(c)break}}let s={};s[r.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],p=u.inputs;for(let h=0;h<u.outputs.length;h++)if(s[u.outputs[h].id]){for(let d in p)s[p[d].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(a[u.id]&&i[u.id]){let p={};for(let d in u.inputs){let c=u.inputs[d];n[c.id]&&(p[d]=c)}let h=Object.assign({},u);h.inputs=p,h.outputs=u.outputs,o.push(h)}}return o}function pM(e,t,r,n){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=r(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let p=s.inputs[l];if(!ei(u.shape,p.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${p.shape}'`);if(e[p.id]==null)e[p.id]=u;else{let h=e[p.id];e[p.id]=n(h,u),h.dispose()}}}}var S4=20,$p=3,Ng=7;function hM(e,t,r,n){let a=Zu(t),s=cM(e,t,r,a),i=t.length,o=I0(e,t,r,a,s),l=["Tensor"];return n&&(l.push(`  dtype: ${r}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function cM(e,t,r,n){let a=St(t),s=n[n.length-1],i=new Array(s).fill(0),o=t.length,l=r==="complex64"?zp(e):e;if(o>1)for(let u=0;u<a/s;u++){let p=u*s;for(let h=0;h<s;h++)i[h]=Math.max(i[h],Pp(l[p+h],0,r).length)}return i}function Pp(e,t,r){let n;return Array.isArray(e)?n=`${parseFloat(e[0].toFixed(Ng))} + ${parseFloat(e[1].toFixed(Ng))}j`:Fs(e)?n=`'${e}'`:r==="bool"?n=N6(e):n=parseFloat(e.toFixed(Ng)).toString(),Hp(n,t)}function N6(e){return e===0?"false":"true"}function I0(e,t,r,n,a,s=!0){let i=r==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(r==="complex64"){let m=zp(e);return[Pp(m[0],0,r)]}return r==="bool"?[N6(e[0])]:[e[0].toString()]}if(l===1){if(o>S4){let g=$p*i,y=Array.from(e.slice(0,g)),A=Array.from(e.slice((o-$p)*i,o*i));return r==="complex64"&&(y=zp(y),A=zp(A)),["["+y.map((x,b)=>Pp(x,a[b],r)).join(", ")+", ..., "+A.map((x,b)=>Pp(x,a[o-$p+b],r)).join(", ")+"]"]}let m=r==="complex64"?zp(e):Array.from(e);return["["+m.map((g,y)=>Pp(g,a[y],r)).join(", ")+"]"]}let u=t.slice(1),p=n.slice(1),h=n[0]*i,d=[];if(o>S4){for(let m=0;m<$p;m++){let g=m*h,y=g+h;d.push(...I0(e.slice(g,y),u,r,p,a,!1))}d.push("...");for(let m=o-$p;m<o;m++){let g=m*h,y=g+h;d.push(...I0(e.slice(g,y),u,r,p,a,m===o-1))}}else for(let m=0;m<o;m++){let g=m*h,y=g+h;d.push(...I0(e.slice(g,y),u,r,p,a,m===o-1))}let c=l===2?",":"";d[0]="["+d[0]+c;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+c;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function zp(e){let t=[];for(let r=0;r<e.length;r+=2)t.push([e[r],e[r+1]]);return t}var or=class{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=St(e),r!=null){let n=r.length;P(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||c6(t,this.size),this.strides=Zu(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let r=e[e.length-1];for(let n=0;n<e.length-1;++n)r+=this.strides[n]*e[n];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ca().makeTensor(this.values,this.shape,this.dtype)}},ca=null,Cu=null,fM=null;function mM(e){ca=e}function gM(e){Cu=e}function yM(e){fM=e}var Qe=class{constructor(e,t,r,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=St(e),this.strides=Zu(e),this.dataId=r,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Cu.buffer(this.shape,this.dtype,e)}bufferSync(){return Cu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Eu(this.shape,e,this.dtype==="complex64")}arraySync(){return Eu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=ca().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(r=>B0(r))}catch(r){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ca().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ca().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>B0(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ca().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ca().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Cu.print(this,e)}clone(){return this.throwIfDisposed(),Cu.clone(this)}toString(e=!1){let t=this.dataSync();return hM(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Cu.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),ca().makeVariable(this,e,t,r)}};Object.defineProperty(Qe,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function AM(){return Hy("Tensor",()=>Qe)}AM();var rh=class extends Qe{constructor(e,t,r,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ei(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ca().disposeTensor(this),this.dataId=e.dataId,ca().incRef(this,null)}dispose(){ca().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(rh,Symbol.hasInstance,{value:e=>e instanceof Qe&&e.assign!=null&&e.assign instanceof Function});var ya={};Be(ya,{assertTypesMatch:()=>_6,getTensorsInContainer:()=>Ky,isTensorInList:()=>bM,makeTypesMatch:()=>Bt});var E6=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(E6||{}),R6=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(R6||{}),$6=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))($6||{}),M6=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(M6||{}),F6=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(F6||{}),xM={float32:M6,int32:R6,bool:$6,complex64:F6};function Rr(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return xM[e][t]}function $h(e){return Rr(e,"int32")}function Bt(e,t){if(e.dtype===t.dtype)return[e,t];let r=Rr(e.dtype,t.dtype);return[e.cast(r),t.cast(r)]}function _6(e,t){P(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function bM(e,t){return t.some(r=>r.id===e.id)}function Ky(e){let t=[];return P6(e,t,new Set),t}function P6(e,t,r){if(e==null)return;if(e instanceof Qe){t.push(e);return}if(!vM(e))return;let n=e;for(let a in n){let s=n[a];r.has(s)||(r.add(s),P6(s,t,r))}}function vM(e){return Array.isArray(e)||typeof e=="object"}function Eg(e){return e.kernelName!=null}var C4=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Hg=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new C4}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Ms(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new oM(this.backendInstance),!0}setupRegisteredKernels(){Oa(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Oa(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let r=t.factory();if(r&&!(r instanceof Xu)&&typeof r.then=="function"){let n=++this.pendingBackendInitId,a=r.then(s=>n<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(n<this.pendingBackendInitId||(this.pendingBackendInit=null,Ms(`Initialization of backend ${e} failed`),Ms(s.stack||s.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Ms(`Initialization of backend ${e} failed`),Ms(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t],{success:n,asyncInit:a}=this.initializeBackend(r);if(a||n)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let r=this.state.tensorInfo.get(t),n=r.backend,a=this.readSync(t),s=n.refCount(t);n.disposeData(t,!0),r.backend=e,e.move(t,a,r.shape,r.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let n;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,r){e();try{let n=r();return t(),n}catch(n){throw t(),n}}nextTensorId(){return Hg.nextTensorId++}nextVariableId(){return Hg.nextVariableId++}clone(e){let t=B.runKernel(bi,{x:e}),r={x:e},n=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return B.runKernel(si,o,l)}}),a=[];return this.addTapeNode(this.state.activeScope.name,r,[t],n,a,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,L0(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){let n=this.backend.numDataIds(),a=0;r.forEach(o=>{a+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=n-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[],n=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,l=Eg(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Eg(e)){let{kernelName:c,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=L0(c,this.backendName);P(g!=null,()=>`Cannot find registered kernel '${c}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let A=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,A);let x=A.map(b=>b.rank!=null?b:this.makeTensorFromTensorInfo(b));if(n){let b=this.getTensorsForGradient(c,f,x);r=this.saveTensorsForBackwardMode(b)}return x}}else{let{forwardFunc:c}=e,f=m=>{!n||(r=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>c(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:u,attrs:p}=e,h=Eg(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),n&&this.addTapeNode(l,u,t,h,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(c=>u[c]!=null?u[c].shape:null),outputShapes:t.map(c=>c.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,r){let n=Ug(e);if(n!=null){let a=n.inputsToSave||[],s=n.outputsToSave||[],i;n.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=a.map(l=>t[l]);let o=r.filter((l,u)=>s[u]);return i.concat(o)}return[]}makeTensor(e,t,r,n){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",n=n||this.backend;let a=e;r==="string"&&Fs(e[0])&&(a=e.map(o=>Rh(o)));let s=n.write(a,t,r),i=new Qe(t,r,s,this.nextTensorId());if(this.trackTensor(i,n),r==="string"){let o=this.state.tensorInfo.get(s),l=g6(a);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,r,n){r=r||"float32";let a={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(a,n)}makeTensorFromTensorInfo(e,t){let{dataId:r,shape:n,dtype:a}=e,s=new Qe(n,a,r,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,r,n){r=r||this.nextVariableId().toString(),n!=null&&n!==e.dtype&&(e=e.cast(n));let a=new rh(e,t,r,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Gg(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof rh||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let r=e.size*Gg(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(n=>n.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let n of this.state.activeProfile.kernels)n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,n,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:a},o=Ug(e);o!=null&&(n=o.gradFunc),n!=null&&(i.gradient=l=>(l=l.map((u,p)=>{if(u==null){let h=r[p],d=bf(h.size,h.dtype);return this.makeTensor(d,h.shape,h.dtype)}return u}),n(l.length>1?l:l[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Ky(e),r=new Set(t.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){let s=this.state.activeScope.track[a];!s.kept&&!r.has(s.id)&&s.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(a=>{!a.kept&&a.scopeId===n.id&&this.track(a)})}gradients(e,t,r,n=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(a instanceof Qe,()=>"The result y returned by f() must be a tensor.");let s=dM(this.state.activeTape,t,a);if(!n&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[a.id]=r==null?wM(a.shape):r,pM(i,s,l=>this.tidy(l),kM);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:a,grads:o}})}customGrad(e){return P(Ls(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(i=>i instanceof Qe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r,n={};t.forEach((i,o)=>{n[o]=i});let a=(i,o)=>(r=e(...t,o),P(r.value instanceof Qe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ls(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),s=(i,o)=>{let l=r.gradFunc(i,o),u=Array.isArray(l)?l:[l];P(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(u.every(h=>h instanceof Qe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return u.forEach((h,d)=>{p[d]=()=>h}),p};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:n})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=th(),r=await this.backend.time(e);return r.wallMs=th()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new C4;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Xy=Hg;Xy.nextTensorId=0;Xy.nextVariableId=0;function wM(e){let t=Gy(St(e),"float32");return B.makeTensor(t,e,"float32")}function z6(){let e=v6();if(e._tfengine==null){let t=new b6(e);e._tfengine=new Xy(t)}return U$(e._tfengine.ENV),mM(()=>e._tfengine),e._tfengine}var B=z6();function kM(e,t){let r={a:e,b:t};return B.runKernel(ns,r)}var Mh={};Be(Mh,{isBrowser:()=>O6,isMobile:()=>CM,mockIsMobile:()=>SM});function IM(){return typeof navigator!="undefined"&&navigator!=null}var qg;function SM(e){qg=e}function CM(e){if(qg!==void 0)return qg;if(e||IM()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let r=e;return r.userAgentData&&r.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function O6(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Xn=Y();Xn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Xn.registerFlag("IS_BROWSER",()=>O6());Xn.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Xn.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Xn.registerFlag("PROD",()=>!1);Xn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Xn.getBool("DEBUG"));Xn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Xn.registerFlag("IS_TEST",()=>!1);Xn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Xn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Xn.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Da(e,t){let r=e;if(Tr(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let n=[];for(;Array.isArray(r)||Tr(r)&&t!=="string";)n.push(r.length),r=r[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&D6(e,n,[]),n}function D6(e,t,r){if(r=r||[],!Array.isArray(e)&&!Tr(e)){P(t.length===0,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),P(e.length===t[0],()=>`Element arr[${r.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let n=t.slice(1);for(let a=0;a<e.length;++a)D6(e[a],n,r.concat(a))}function T4(e,t,r,n){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${r}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function M(e,t,r,n="numeric"){if(e instanceof Qe)return T4(n,e.dtype,t,r),e;let a=xf(e);if(a!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(a=n),T4(n,a,t,r),e==null||!Tr(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${r}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Da(e,a);!Tr(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?jf(e,a):Lo(e,[],!0);return B.makeTensor(i,s,a)}function nh(e,t,r,n="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${r} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>M(a,`${t}[${s}]`,r,n))}var Zy="__op";function W(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let r=t[0],n=e[r];r.endsWith("_")&&(r=r.substring(0,r.length-1)),r=r+Zy;let a=(...s)=>{B.startScope(r);try{let i=n(...s);return jy(i)&&console.error("Cannot return a Promise inside of tidy."),B.endScope(i),i}catch(i){throw B.endScope(null),i}};return Object.defineProperty(a,"name",{value:r,configurable:!0}),a}function TM(e,t){let r=M(e,"real","complex"),n=M(t,"imag","complex");Hr(r.shape,n.shape,`real and imag shapes, ${r.shape} and ${n.shape}, must match in call to tf.complex().`);let a={real:r,imag:n};return B.runKernel(ch,a)}var ts=W({complex_:TM});function Xi(e,t,r,n){if(n==null&&(n=xf(e)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Tr(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Uy(t);let a=St(t),s=St(r);P(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<r.length;++i){let o=r[i],l=i===r.length-1?o!==St(t.slice(i)):!0;P(r[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${r}) does not match the provided shape (${t}). `)}}return!Tr(e)&&!Array.isArray(e)&&(e=[e]),t=t||r,e=n!=="string"?jf(e,n):Lo(e,[],!0),B.makeTensor(e,t,n)}function ut(e,t,r){let n=Da(e,r);return Xi(e,t,n,r)}var Kg={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},W0=4;async function NM(e,t){let r=[],n=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let p=new Promise(async h=>{let d=await l.bytes(),c=d.reduce((g,y)=>g+y.length,0)+W0*d.length,f=new Uint8Array(c),m=0;for(let g=0;g<d.length;g++){let y=d[g],A=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(A,m),m+=W0,f.set(y,m),m+=y.length}h(f)});n.push(p)}else n.push(l.data());t!=null&&(u.group=t),r.push(u)}let s=await Promise.all(n);return{data:EM(s),specs:r}}function L6(e,t){let r={},n,a=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,u=St(l),p;if("quantization"in s){let h=s.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${s.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=Kg[h.dtype],c=e.slice(a,a+u*d),f=h.dtype==="uint8"?new Uint8Array(c):new Uint16Array(c);if(o==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){p=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];p[m]=g*h.scale+h.min}}else if(h.dtype==="float16")n===void 0&&(n=PM()),p=n(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(o==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);p=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];p[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);a+=u*d}else if(o==="string"){let h=St(s.shape);p=[];for(let d=0;d<h;d++){let c=new Uint32Array(e.slice(a,a+W0))[0];a+=W0;let f=new Uint8Array(e.slice(a,a+c));p.push(f),a+=c}}else{let h=Kg[o],d=e.slice(a,a+u*h);if(o==="float32")p=new Float32Array(d);else if(o==="int32")p=new Int32Array(d);else if(o==="bool")p=new Uint8Array(d);else if(o==="complex64"){p=new Float32Array(d);let c=new Float32Array(p.length/2),f=new Float32Array(p.length/2);for(let y=0;y<c.length;y++)c[y]=p[y*2],f[y]=p[y*2+1];let m=ut(c,l,"float32"),g=ut(f,l,"float32");r[i]=ts(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);a+=u*h}o!=="complex64"&&(r[i]=ut(p,l,o))}return r}function EM(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,r=[];e.forEach(s=>{if(t+=s.byteLength,r.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),a=0;return r.forEach(s=>{n.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),n.buffer}var Yy=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function N4(e){return Yy?Buffer.byteLength(e):new Blob([e]).size}function RM(e){if(Yy)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),r="";for(let n=0,a=t.length;n<a;n++)r+=String.fromCharCode(t[n]);return btoa(r)}function $M(e){if(Yy){let n=Buffer.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(e),r=new Uint8Array(t.length);for(let n=0;n<t.length;++n)r.set([t.charCodeAt(n)],n);return r.buffer}function Jy(e){if(e.length===1)return e[0];let t=0;e.forEach(a=>{t+=a.byteLength});let r=new Uint8Array(t),n=0;return e.forEach(a=>{r.set(new Uint8Array(a),n),n+=a.byteLength}),r.buffer}function E4(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let r=e.split(t);return r[r.length-1]}function B6(e,t){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),r}async function Qy(e,t){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[n,a]=await t(e.weightsManifest);r.weightSpecs=n,r.weightData=a}return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),r}function Fh(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:N4(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:N4(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function MM(){let e=r=>{let n=r<<13,a=0;for(;(n&8388608)===0;)a-=8388608,n<<=1;return n&=-8388609,a+=947912704,n|a},t=new Uint32Array(2048);t[0]=0;for(let r=1;r<1024;r++)t[r]=e(r);for(let r=1024;r<2048;r++)t[r]=939524096+(r-1024<<13);return t}function FM(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function _M(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function PM(){let e=MM(),t=FM(),r=_M();return n=>{let a=new ArrayBuffer(4*n.length),s=new Uint32Array(a);for(let i=0;i<n.length;i++){let o=n[i],l=e[r[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(a)}}var Vt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Vt.instance==null&&(Vt.instance=new Vt),Vt.instance}static registerSaveRouter(e){Vt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Vt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Vt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Vt.getHandlers(e,"load",t)}static getHandlers(e,t,r){let n=[];return(t==="load"?Vt.getInstance().loadRouters:Vt.getInstance().saveRouters).forEach(a=>{let s=a(e,r);s!==null&&n.push(s)}),n}},zM=e=>Vt.registerSaveRouter(e),OM=e=>Vt.registerLoadRouter(e),DM=e=>Vt.getSaveHandlers(e),LM=(e,t)=>Vt.getLoadHandlers(e,t),Xg="tensorflowjs",Zg=1,Mo="models_store",_s="model_info_store";function W6(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Yg(e){let t=e.result;t.createObjectStore(Mo,{keyPath:"modelPath"}),t.createObjectStore(_s,{keyPath:"modelPath"})}var Bo=class{constructor(e){if(this.indexedDB=W6(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,n)=>{let a=this.indexedDB.open(Xg,Zg);a.onupgradeneeded=()=>Yg(a),a.onsuccess=()=>{let s=a.result;if(t==null){let i=s.transaction(Mo,"readonly"),o=i.objectStore(Mo).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(o.result.modelArtifacts)},o.onerror=l=>(s.close(),n(o.error)),i.oncomplete=()=>s.close()}else{let i=Fh(t),o=s.transaction(_s,"readwrite"),l=o.objectStore(_s),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),p;u.onsuccess=()=>{p=s.transaction(Mo,"readwrite");let h=p.objectStore(Mo).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});h.onsuccess=()=>r({modelArtifactsInfo:i}),h.onerror=d=>{l=o.objectStore(_s);let c=l.delete(this.modelPath);c.onsuccess=()=>(s.close(),n(h.error)),c.onerror=f=>(s.close(),n(h.error))}},u.onerror=h=>(s.close(),n(u.error)),o.oncomplete=()=>{p==null?s.close():p.oncomplete=()=>s.close()}}},a.onerror=s=>n(a.error)})}};Bo.URL_SCHEME="indexeddb://";var V6=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Bo.URL_SCHEME)?BM(e.slice(Bo.URL_SCHEME.length)):null;Vt.registerSaveRouter(V6);Vt.registerLoadRouter(V6);function BM(e){return new Bo(e)}function WM(e){return e.startsWith(Bo.URL_SCHEME)?e.slice(Bo.URL_SCHEME.length):e}var VM=class{constructor(){this.indexedDB=W6()}async listModels(){return new Promise((e,t)=>{let r=this.indexedDB.open(Xg,Zg);r.onupgradeneeded=()=>Yg(r),r.onsuccess=()=>{let n=r.result,a=n.transaction(_s,"readonly"),s=a.objectStore(_s).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(n.close(),t(s.error)),a.oncomplete=()=>n.close()},r.onerror=n=>t(r.error)})}async removeModel(e){return e=WM(e),new Promise((t,r)=>{let n=this.indexedDB.open(Xg,Zg);n.onupgradeneeded=()=>Yg(n),n.onsuccess=()=>{let a=n.result,s=a.transaction(_s,"readwrite"),i=s.objectStore(_s),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return a.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=i.delete(e),p=()=>{l=a.transaction(Mo,"readwrite");let h=l.objectStore(Mo).delete(e);h.onsuccess=()=>t(o.result.modelArtifactsInfo),h.onerror=d=>r(o.error)};u.onsuccess=p,u.onerror=h=>(p(),a.close(),r(o.error))}},o.onerror=u=>(a.close(),r(o.error)),s.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}},n.onerror=a=>r(n.error)})}},Ja="/",Tu="tensorflowjs_models",G6="info",GM="model_topology",UM="weight_specs",jM="weight_data",HM="model_metadata";function U6(e){return{info:[Tu,e,G6].join(Ja),topology:[Tu,e,GM].join(Ja),weightSpecs:[Tu,e,UM].join(Ja),weightData:[Tu,e,jM].join(Ja),modelMetadata:[Tu,e,HM].join(Ja)}}function j6(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function qM(e){let t=e.split(Ja);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ja)}function KM(e){return e.startsWith(Wo.URL_SCHEME)?e.slice(Wo.URL_SCHEME.length):e}var Wo=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=U6(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),n=Fh(e);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,RM(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:n}}catch(a){throw j6(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){let i=JSON.parse(a);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=$M(s),t}};Wo.URL_SCHEME="localstorage://";var H6=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Wo.URL_SCHEME)?XM(e.slice(Wo.URL_SCHEME.length)):null;Vt.registerSaveRouter(H6);Vt.registerLoadRouter(H6);function XM(e){return new Wo(e)}var ZM=class{constructor(){P(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Tu+Ja,r=Ja+G6;for(let n=0;n<this.LS.length;++n){let a=this.LS.key(n);if(a.startsWith(t)&&a.endsWith(r)){let s=qM(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=KM(e);let t=U6(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let r=JSON.parse(this.LS.getItem(t.info));return j6(t),r}},Ru="://",an=class{constructor(){this.managers={}}static getInstance(){return an.instance==null&&(an.instance=new an),an.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ru)&&(e=e.slice(0,e.indexOf(Ru))),P(e.length>0,()=>"scheme must not be an empty string.");let r=an.getInstance();P(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){let t=an.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(an.getInstance().managers)}};function S0(e){if(e.indexOf(Ru)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${an.getSchemes().join(",")}`);return{scheme:e.split(Ru)[0],path:e.split(Ru)[1]}}async function q6(e,t,r=!1){P(e!==t,()=>`Old path and new path are the same: '${e}'`);let n=Vt.getLoadHandlers(e);P(n.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),P(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${e}.`);let a=n[0],s=Vt.getSaveHandlers(t);P(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),P(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let i=s[0],o=S0(e).scheme,l=S0(e).path,u=o===S0(e).scheme,p=await a.load();r&&u&&await an.getManager(o).removeModel(l);let h=await i.save(p);return r&&!u&&await an.getManager(o).removeModel(l),h.modelArtifactsInfo}async function YM(){let e=an.getSchemes(),t={};for(let r of e){let n=await an.getManager(r).listModels();for(let a in n){let s=r+Ru+a;t[s]=n[a]}}return t}async function JM(e){let t=S0(e);return an.getManager(t.scheme).removeModel(t.path)}async function QM(e,t){return q6(e,t,!1)}async function eF(e,t){return q6(e,t,!0)}var tF=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new tF);try{an.registerManager(Wo.URL_SCHEME,new ZM)}catch(e){}try{an.registerManager(Bo.URL_SCHEME,new VM)}catch(e){}}var rF={importFetch:()=>d$()},Rg,nF=class{constructor(){this.util=p$(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(Rg==null&&(Rg=rF.importFetch()),Rg(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&!Y().get("IS_BROWSER")&&Y().setPlatform("node",new nF);function Oe(e,t="float32",r){return t=t||"float32",Uy(e),new or(e,t,r)}function aF(e,t){let r=M(e,"x","cast");if(!m6(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&r.dtype!=="string"||t!=="string"&&r.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:r},a={dtype:t};return B.runKernel(si,n,a)}var me=W({cast_:aF});function sF(e){let t={x:M(e,"x","clone","string_or_numeric")};return B.runKernel(bi,t)}var Nr=W({clone_:sF});function e3(e,t=!1){console.log(e.toString(t))}z6();var iF={buffer:Oe,cast:me,clone:Nr,print:e3};gM(iF);var yn={};Be(yn,{browserFiles:()=>cF,browserHTTPRequest:()=>AF,concatenateArrayBuffers:()=>Jy,copyModel:()=>QM,decodeWeights:()=>L6,encodeWeights:()=>NM,fromMemory:()=>bF,fromMemorySync:()=>J6,getLoadHandlers:()=>LM,getModelArtifactsForJSON:()=>Qy,getModelArtifactsInfoForJSON:()=>Fh,getSaveHandlers:()=>DM,http:()=>r3,isHTTPScheme:()=>Qg,listModels:()=>YM,loadWeights:()=>fF,moveModel:()=>eF,registerLoadRouter:()=>OM,registerSaveRouter:()=>zM,removeModel:()=>JM,weightsLoaderFactory:()=>X6,withSaveHandler:()=>vF,withSaveHandlerSync:()=>wF});var oF="model",lF=".json",uF=".weights.bin";function R4(e){return new Promise(t=>setTimeout(t)).then(e)}var Jg=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Jg.URL_SCHEME)&&(e=e.slice(Jg.URL_SCHEME.length)),(e==null||e.length===0)&&(e=oF),this.modelJsonFileName=e+lF,this.weightDataFileName=e+uF}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],n=B6(e,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await R4(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await R4(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Fh(e)}}}},V0=Jg;V0.URL_SCHEME="downloads://";var dF=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let r=new FileReader;r.onload=n=>{let a=JSON.parse(n.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=Qy(a,o=>this.loadWeights(o));e(i)},r.onerror=n=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){let t=[],r=[];for(let s of e)t.push(...s.weights),r.push(...s.paths);let n=this.checkManifestAndWeightFiles(e),a=r.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(a).then(s=>[t,Jy(s)])}loadWeightsFile(e,t){return new Promise((r,n)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;r(i)},a.onerror=s=>n(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],r=this.weightsFiles.map(a=>E4(a.name)),n={};for(let a of e)a.paths.forEach(s=>{let i=E4(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),r.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);n[s]=this.weightsFiles[r.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},pF=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(V0.URL_SCHEME)?hF(e.slice(V0.URL_SCHEME.length)):null;Vt.registerSaveRouter(pF);function hF(e="model"){return new V0(e)}function cF(e){return new dF(e)}function $4(e,t,r,n){i(e),r=r==null?0:r,n=n==null?1:n,o(r,n);let a=0,s=l=>(l.then(u=>{let p=r+ ++a/e.length*(n-r);return t(p),u}),l);function i(l){P(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),P(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(s))}async function K6(e,t){t==null&&(t={});let r=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,n=e.map(u=>r(u,t.requestInit,{isBinary:!0})),a=0,s=.5,i=(t.onProgress==null?await Promise.all(n):await $4(n,t.onProgress,a,s)).map(u=>u.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await $4(i,t.onProgress,o,l)}async function fF(e,t="",r,n){return X6(a=>K6(a,{requestInit:n}))(e,t,r)}function X6(e){return async(t,r="",n)=>{let a=t.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],o=[];if(t.forEach((c,f)=>{let m=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,A=Kg[y]*St(g.shape),x=()=>{a[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:m,sizeBytes:A})};n!=null?n.forEach((b,w)=>{b===g.name&&(x(),i[w]=!0)}):x(),o.push(g.name),m+=A})}),!i.every(c=>c)){let c=n.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((c,f,m)=>(f&&c.push(m),c),[]),u=[];l.forEach(c=>{t[c].paths.forEach(f=>{let m=r+(r.endsWith("/")?"":"/")+f;u.push(m)})});let p=await e(u),h={},d=0;return l.forEach(c=>{let f=t[c].paths.length,m=0;for(let x=0;x<f;x++)m+=p[d+x].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),A=0;for(let x=0;x<f;x++){let b=new Uint8Array(p[d+x]);y.set(b,A),A+=b.byteLength}s[c].forEach(x=>{let b=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),w=L6(b,[x.manifestEntry]);for(let I in w)h[I]=w[I]}),d+=f}),h}}var mF="application/octet-stream",gF="application/json",t3=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=B6(e,r);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:gF}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:mF}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Fh(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(a){let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let r=t.modelTopology,n=t.weightsManifest;if(r==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Qy(t,a=>this.loadWeights(a))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[r,n]=yF(t),a=this.weightPathPrefix||r,s=[];for(let u of e)s.push(...u.weights);let i=[],o=[];for(let u of e)for(let p of u.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(p)):i.push(a+p+n);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await K6(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Jy(l)]}};t3.URL_SCHEME_REGEX=/^https?:\/\//;function yF(e){let t=e.lastIndexOf("/"),r=e.lastIndexOf("?"),n=e.substring(0,t),a=r>t?e.substring(r):"";return[n+"/",a]}function Qg(e){return e.match(t3.URL_SCHEME_REGEX)!=null}var Z6=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let r=!0;if(Array.isArray(e)?r=e.every(n=>Qg(n)):r=Qg(e),r)return r3(e,t)}return null};Vt.registerSaveRouter(Z6);Vt.registerLoadRouter(Z6);function r3(e,t){return new t3(e,t)}function AF(e,t){return r3(e,t)}var $g=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Y6=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},xF=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function bF(e,t,r,n){let a=arguments;return new xF(J6(...a))}function J6(e,t,r,n){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new $g(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $g({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $g({modelTopology:e,weightSpecs:t,weightData:r,trainingConfig:n}))}function vF(e){return new Y6(e)}function wF(e){return new Y6(e)}var Q6={};Be(Q6,{confusionMatrix:()=>DF});function kF(e,t,r=!1,n=!1){let a=M(e,"a","matMul"),s=M(t,"b","matMul");[a,s]=Bt(a,s);let i={a,b:s},o={transposeA:r,transposeB:n};return B.runKernel(ai,i,o)}var Ye=W({matMul_:kF});function IF(e,t,r=1,n=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:M(e,"indices","oneHot","int32")},s={depth:t,onValue:r,offValue:n};return B.runKernel(xl,a,s)}var ah=W({oneHot_:IF});function n3(){Y().set("PROD",!0)}function SF(){Y().set("DEBUG",!0)}function CF(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function a3(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}yM(a3);function TF(){B.disposeVariables()}function Xt(){return B}function G0(){return B.memory()}function NF(e){return B.profile(e)}function J(e,t){return B.tidy(e,t)}function ee(e){Ky(e).forEach(t=>t.dispose())}function gr(e){return B.keep(e)}function EF(e){return B.time(e)}function s3(e){return B.setBackend(e)}function Id(){return B.ready()}function qr(){return B.backendName}function RF(e){B.removeBackend(e)}function i3(e){return B.findBackend(e)}function $F(e){return B.findBackendFactory(e)}function Ol(e,t,r=1){return B.registerBackend(e,t,r)}function Bn(){return B.backend}function MF(e,t){Y().setPlatform(e,t)}function FF(e){let t={input:M(e,"input","imag")};return B.runKernel(Ah,t)}var _h=W({imag_:FF});function _F(e){let t={x:M(e,"x","neg")};return B.runKernel(fl,t)}var Ft=W({neg_:_F});function PF(e){let t={input:M(e,"input","real")};return B.runKernel(vh,t)}var zu=W({real_:PF});function zF(e,t,r){let n=M(e,"x","transpose");if(t==null&&(t=n.shape.map((i,o)=>o).reverse()),P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(i=>{P(i>=0&&i<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let a={x:n},s={perm:t};return n.dtype==="complex64"?J(()=>{let i=zu(n),o=_h(n);return i=B.runKernel(Pa,{x:i},s),o=B.runKernel(Pa,{x:o},s),r&&(o=Ft(o)),ts(i,o)}):B.runKernel(Pa,a,s)}var et=W({transpose_:zF});function OF(e,t,r){let n=M(e,"labels","confusionMatrix"),a=M(t,"predictions","confusionMatrix");P(r==null||r>0&&Number.isInteger(r),()=>`If provided, numClasses must be a positive integer, but got ${r}`),P(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),P(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),P(n.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),P(r>0&&Number.isInteger(r),()=>`numClasses is required to be a positive integer, but got ${r}`);let s=ah(me(n,"int32"),r),i=ah(me(a,"int32"),r),o=et(s),l=Ye(o,i);return me(l,"int32")}var DF=W({confusionMatrix_:OF}),Dl={};Be(Dl,{assertAndGetBroadcastShape:()=>xt,getBroadcastDims:()=>ev,getReductionAxes:()=>Qt});function ev(e,t){let r=e.length,n=[];for(let a=0;a<r;a++){let s=r-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&n.unshift(s)}return n}function Qt(e,t){let r=[];for(let n=0;n<t.length;n++){let a=e[e.length-n-1],s=t.length-n-1,i=t[s];(a==null||a===1&&i>1)&&r.unshift(s)}return r}function xt(e,t){let r=[],n=Math.max(e.length,t.length);for(let a=0;a<n;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)r.unshift(i);else if(i===1)r.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else r.unshift(s)}return r}var Wn={};Be(Wn,{fromPixels:()=>jF,fromPixelsAsync:()=>GF,toPixels:()=>UF});function o3(e,t,r){if(Zo(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Da(e,r);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Xi(e,t,n,r)}var ko;function tv(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let r=!1,n=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)r=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(L0(Qp,B.backendName)!=null){let d={pixels:e},c={numChannels:t};return B.runKernel(Qp,d,c)}let[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],p;if(i)p=e.getContext("2d").getImageData(0,0,l,u).data;else if(n||r)p=e.data;else if(s||a||o){if(ko==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")ko=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ko=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ko.canvas.width=l,ko.canvas.height=u,ko.drawImage(e,0,0,l,u),p=ko.getImageData(0,0,l,u).data}let h;if(t===4)h=new Int32Array(p);else{let d=l*u;h=new Int32Array(d*t);for(let c=0;c<d;c++)for(let f=0;f<t;++f)h[c*t+f]=p[c*4+f]}return o3(h,[u,l,t],"int32")}function LF(e){return e!=null&&e.data instanceof Uint8Array}function BF(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function WF(e){return e!=null&&e.width!==0&&e.height!==0}function VF(e){return BF()&&!(e instanceof ImageBitmap)&&WF(e)&&!LF(e)}async function GF(e,t=3){let r=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&VF(e)){let n;try{n=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){n=null}n!=null&&n.width===e.width&&n.height===e.height?r=n:r=e}else r=e;return tv(r,t)}async function UF(e,t){let r=M(e,"img","toPixels");if(!(e instanceof Qe)){let u=r;r=me(u,"int32"),u.dispose()}if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let[n,a]=r.shape.slice(0,2),s=r.rank===2?1:r.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`);let i=await r.data(),o=r.dtype==="float32"?255:1,l=new Uint8ClampedArray(a*n*4);for(let u=0;u<n*a;++u){let p=[0,0,0,255];for(let d=0;d<s;d++){let c=i[u*s+d];if(r.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(r.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(p[0]=c*o,p[1]=c*o,p[2]=c*o):p[d]=c*o}let h=u*4;l[h+0]=Math.round(p[0]),l[h+1]=Math.round(p[1]),l[h+2]=Math.round(p[2]),l[h+3]=Math.round(p[3])}if(t!=null){t.width=a,t.height=n;let u=t.getContext("2d"),p=new ImageData(l,a,n);u.putImageData(p,0,0)}return r!==e&&r.dispose(),l}var jF=W({fromPixels_:tv}),l3={};Be(l3,{prepareAndValidate:()=>rv});function rv(e,t){let r=e.shape.length,n=t.shape.length;if(r<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${r}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>r)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${r}`);if(St(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let u=1;for(let h=s;h<r;++h)u*=o[h],l.push(o[h]);let p=[...Zu(e.shape).map(h=>h/u),1].slice(0,s);return[l,i,u,p]}var u3={};Be(u3,{calculateShapes:()=>nv,validateInput:()=>p3,validateUpdateShape:()=>d3});function d3(e,t,r){let n=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${r.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${a}.`;if(r.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<n+(r.rank-a))throw new Error(s+` Output shape length < ${n+(r.rank-a)}`);if(r.rank!==a+e.length-n)throw new Error(s+` update.rank != ${a+e.length-n}`);for(let i=0;i<a;++i)if(r.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${r.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<r.rank-a;++i)if(r.shape[i+a]!==e[i+n])throw new Error(s+` updates.shape[${i+a}] (${r.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function p3(e,t,r){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(r.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${r}`);if(r.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}d3(r,t,e)}function nv(e,t,r){let n=t.shape.length,a=n>1?t.shape[n-1]:1,s=r.length,i=1;for(let h=a;h<s;++h)i*=r[h];let o=a<1?1:a,l=St(t.shape)/o,u=[...Zu(r.slice(0,a)),1],p=St(r);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:p}}var Lt={};Be(Lt,{assertParamsValid:()=>qF,computeFlatOffset:()=>JF,computeOutShape:()=>XF,getNormalizedAxes:()=>ZF,isSliceContinous:()=>YF,maskToAxes:()=>KF,parseSliceParams:()=>hv,sliceInfo:()=>QF,startForAxis:()=>dv,startIndicesWithElidedDims:()=>ov,stopForAxis:()=>pv,stopIndicesWithElidedDims:()=>lv,stridesForAxis:()=>uv,stridesWithElidedDims:()=>av});var ey=-2,HF=-1;function qF(e,t,r){let n=e.shape.length;P(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),P(n===r.length,()=>`Error in slice${n}D: Length of size ${r} must match the rank of the array (${n}).`);for(let a=0;a<n;++a)P(t[a]+r[a]<=e.shape[a],()=>`Error in slice${n}D: begin[${a}] + size[${a}] (${t[a]+r[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function KF(e){let t=[],r=0;for(;e>0;)e&1&&t.push(r),e/=2,r++;return t}function XF(e,t,r){let n=[];for(let a=0;a<e.length;a++)n[a]=Math.ceil((t[a]-e[a])/r[a]);return n}function av(e,t,r,n){let a=[...e];for(let s=a.length;s<n.length;s++)a.push(1);for(let s=0;s<r;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function sv(e,t,r){return r<=e?r:r-(t-1)}function iv(e,t){let r=[];for(let n=0;n<e;n++)r.push(t+n);return r}function ZF(e,t,r,n,a,s,i,o,l){let u=e.length,p=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&r>0){let c=t[0],f=r+1;p=ov(i,c,f,n,e),h=lv(o,c,f,a,e),d=av(s,c,f,e)}else for(let c=0;c<u;c++)p[c]=dv(i,n,s,e,c,l),h[c]=pv(o,a,s,e,c,l),d[c]=uv(s,c,l);return{begin:p,end:h,strides:d}}function ov(e,t,r,n,a){let s=[...a],i=iv(r,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=sv(t,r,o),u=n[l];e&1<<l&&(u=0),s[o]=u}return s}function lv(e,t,r,n,a){let s=[...a],i=iv(r,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=sv(t,r,o),u=n[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++){let l=a[o];s[o]<0&&(s[o]+=l),s[o]=Jp(0,s[o],a[o])}return s}function uv(e,t,r){let n=e[t];return(r&1<<t||n==null)&&(n=1),n}function dv(e,t,r,n,a,s){let i=t[a],o=r[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=n[a];return i<0&&(i+=l),i=Jp(0,i,l-1),i}function pv(e,t,r,n,a,s){let i=t[a],o=r[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=n[a];return i<0&&(i+=l),o>0?i=Jp(0,i,l):i=Jp(-1,i,l-1),i}function YF(e,t,r){let n=r.length;for(let a=0;a<r.length;a++)if(r[a]>1){n=a;break}for(let a=n+1;a<r.length;a++)if(t[a]>0||r[a]!==e[a])return!1;return!0}function JF(e,t){let r=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)r+=e[n]*t[n];return r}function hv(e,t,r){let n,a=e.shape.length;typeof t=="number"?n=[t,...new Array(a-1).fill(0)]:t.length<a?n=t.concat(new Array(a-t.length).fill(0)):n=t.slice(),n.forEach(i=>{P(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return r==null?s=new Array(a).fill(-1):typeof r=="number"?s=[r,...new Array(a-1).fill(-1)]:r.length<a?s=r.concat(new Array(a-r.length).fill(-1)):s=r,s=s.map((i,o)=>i>=0?i:(P(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-n[o])),[n,s]}function QF(e,t,r,n,a,s,i,o,l){let u;if(n==null?(u=new Array(t.length),u.fill(1)):u=n,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:r.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let A=0;A<h.dims;A++)p&&(1<<A&o)!==0&&h.numAddAxisAfterEllipsis++,1<<A&i&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};e_(h,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(d.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let x=!!(d.shrinkAxisMask&1<<A),b=e[A];if(b===-1){g.push(x?1:-1);continue}let w=[d.beginMask&1<<A,d.endMask&1<<A],I=[d.strides[A]>0?0:-1,d.strides[A]>0?b:b-1];if(x&&d.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[A]===1;let C=!!(d.beginMask&1<<A&&d.endMask&1<<A);if(d.beginValid&&d.endValid){if(x){let $=d.begin[A]<0?b+d.begin[A]:d.begin[A];if(d.begin[A]=$,d.end[A]=d.begin[A]+1,$<0||$>=b)throw Error(`slice index ${d.begin[A]} of dimension ${A} out of bounds.`)}else d.begin[A]=M4(d.begin[A],0,d.strides[A],b,w,I),d.end[A]=M4(d.end[A],1,d.strides[A],b,w,I);let F=d.strides[A]===1&&d.begin[A]===0&&d.end[A]===b;c=c&&F,f=f&&(A===0&&d.strides[A]===1||F)}else c=c&&d.strides[A]===1&&C,f=f&&(A===0&&d.strides[A]===1||C);let E,R=!1;if(d.beginValid&&d.endValid?(E=d.end[A]-d.begin[A],R=!0):x?(E=1,R=!0):C&&b>=0&&(d.strides[A]<0?E=-b:E=b,R=!0),R){let F;E===0||E<0!=d.strides[A]<0?F=0:F=Math.trunc(E/d.strides[A])+(E%d.strides[A]!==0?1:0),g.push(F)}else g.push(-1)}for(let A=0;A<d.finalShapeGatherIndices.length;++A){let x=d.finalShapeGatherIndices[A];x>=0?y.push(g[x]):x===ey&&y.push(1)}return{finalShapeSparse:y.filter((A,x)=>d.finalShapeGatherIndices[x]!==ey),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function e_(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let r=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<e.dims;n++)if(1<<n&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-n)+1+e.numAddAxisAfterEllipsis,t.dims);for(;r<a;r++)t.begin[r]=0,t.end[r]=0,t.strides[r]=1,t.beginMask|=1<<r,t.endMask|=1<<r,t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[r]=n}else if(1<<n&e.newAxisMask)t.finalShapeGatherIndices.push(ey),t.finalShapeGatherIndicesSparse.push(-1);else{if(r===t.begin.length)throw Error(`Index out of range using input dim ${r}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[r]=e.begin[n]),e.end!=null&&(t.end[r]=e.end[n]),t.strides[r]=e.strides[n],e.beginMask&1<<n&&(t.beginMask|=1<<r),e.endMask&1<<n&&(t.endMask|=1<<r),e.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(HF),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<r):(t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[r]=n,r++}}function M4(e,t,r,n,a,s){if(a[t])return r>0?s[t]:s[t+1&1];{let i=e<0?n+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var ue={};Be(ue,{Serializable:()=>cv,SerializationMap:()=>Eo,registerClass:()=>Zi});var cv=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Eo=class{constructor(){this.classNameMap={}}static getMap(){return Eo.instance==null&&(Eo.instance=new Eo),Eo.instance}static register(e){Eo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Zi(e){P(e.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),P(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Eo.register(e)}var fv={};Be(fv,{TEST_EPSILON_FLOAT16:()=>mv,encodeStrings:()=>gv,expectArrayBuffersEqual:()=>o_,expectArraysClose:()=>r_,expectArraysEqual:()=>a_,expectNumbersClose:()=>s_,expectPromiseToFail:()=>n_,expectValuesInRange:()=>i_,testEpsilon:()=>h3});var t_=.001,mv=.1;function r_(e,t,r){return r==null&&(r=h3()),ty(e,t,(n,a)=>c3(n,a,r))}function h3(){return B.backend.floatPrecision()===32?t_:mv}function ty(e,t,r){let n=!0;if((Tr(e)||Tr(t))&&(n=!1),Tr(e)&&Tr(t)&&(n=!0),n){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Da(e),o=Da(t);if(!ei(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=Tr(e)?e:Lo(e),s=Tr(t)?t:Lo(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],l=s[i];if(!r(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${a}.
Expected: ${s}.`)}}function n_(e,t){e().then(()=>t.fail(),()=>t())}function a_(e,t){let r=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Fs(e)||Fs(e[0])||Fs(t)||Fs(t[0])?ty(e,r,(n,a)=>n==a):ty(e,t,(n,a)=>c3(n,a,0))}function s_(e,t,r){if(r==null&&(r=h3()),!c3(e,t,r))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function c3(e,t,r){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>r)}function i_(e,t,r){for(let n=0;n<e.length;n++)if(e[n]<t||e[n]>r)throw new Error(`Value out of range:${e[n]} low: ${t}, high: ${r}`)}function o_(e,t){let r=new Float32Array(e),n=new Float32Array(t);if(r.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${r.length}`);for(let a=0;a<n.length;a++)if(r[a]!==n[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${n[a]} but got ${r[a]} instead`)}function gv(e){for(let t=0;t<e.length;t++){let r=e[t];Array.isArray(r)?gv(r):e[t]=Rh(r)}return e}var f3="0.0.0";function l_(e,t){let r=M(e,"a","add"),n=M(t,"b","add");[r,n]=Bt(r,n);let a={a:r,b:n};return B.runKernel(ns,a)}var le=W({add_:l_});function u_(e,t){let r=M(e,"a","floorDiv"),n=M(t,"b","floorDiv");[r,n]=Bt(r,n);let a={a:r,b:n};return B.runKernel(yi,a)}var Ph=W({floorDiv_:u_});function d_(e,t){let r=M(e,"a","div"),n=M(t,"b","div");if([r,n]=Bt(r,n),r.dtype==="int32"&&n.dtype==="int32")return Ph(r,n);let a={a:r,b:n},s={};return B.runKernel(ci,a,s)}var pe=W({div_:d_});function p_(e,t){let r=M(e,"a","mul"),n=M(t,"b","mul");[r,n]=Bt(r,n);let a={a:r,b:n};return B.runKernel(Ri,a)}var L=W({mul_:p_});function h_(e){let t=M(e,"x","abs");if(t.dtype==="complex64"){let r={x:t};return B.runKernel(fh,r)}else{let r={x:t};return B.runKernel(Yo,r)}}var sr=W({abs_:h_});function c_(e){let t={x:M(e,"x","acos")};return B.runKernel(Yu,t)}var yv=W({acos_:c_});function f_(e){let t={x:M(e,"x","acosh")};return B.runKernel(Ju,t)}var Av=W({acosh_:f_});function m_(e){P(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),P(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>M(a,`tensors${s}`,"addN")),r=t[0];t.forEach(a=>{if(a.dtype!==r.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!ei(a.shape,r.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return B.runKernel(ti,n)}var Hf=W({addN_:m_});function g_(e,t=null,r=!1){let n={x:M(e,"x","all","bool")},a={axis:t,keepDims:r};return B.runKernel(Qu,n,a)}var m3=W({all_:g_});function y_(e,t=null,r=!1){let n={x:M(e,"x","any","bool")},a={axis:t,keepDims:r};return B.runKernel(ed,n,a)}var U0=W({any_:y_});function A_(e,t=0){let r={x:M(e,"x","argMax")},n={axis:t};return B.runKernel(ri,r,n)}var Pn=W({argMax_:A_});function x_(e,t=0){let r={x:M(e,"x","argMin")},n={axis:t};return B.runKernel(td,r,n)}var xv=W({argMin_:x_});function b_(e){let t={x:M(e,"x","asin")};return B.runKernel(rd,t)}var bv=W({asin_:b_});function v_(e){let t={x:M(e,"x","asinh")};return B.runKernel(nd,t)}var vv=W({asinh_:v_});function w_(e){let t={x:M(e,"x","atan")};return B.runKernel(ad,t)}var wv=W({atan_:w_});function k_(e,t){let r=M(e,"a","atan2"),n=M(t,"b","atan2");[r,n]=Bt(r,n);let a={a:r,b:n};return B.runKernel(id,a)}var kv=W({atan2_:k_});function I_(e){let t={x:M(e,"x","atanh")};return B.runKernel(sd,t)}var Iv=W({atanh_:I_});function S_(e,t,r,n,a="NHWC",s){let i=e[3],o=[...t,i],l=Tv(a);return zh(e,o,r,s,n,null,null,l)}function Sv(e,t,r,n,a,s,i="channelsLast"){let[o,l]=j0(t),u;if(i==="channelsLast")u=[o,l,e[3],e[3]];else if(i==="channelsFirst")u=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return zh(e,u,r,n,a,s,!1,i)}function C_(e,t,r,n,a,s,i="NDHWC"){let[o,l,u]=ry(t),p,h;if(i==="NDHWC")h="channelsLast",p=[o,l,u,e[4],e[4]];else if(i==="NCDHW")h="channelsFirst",p=[o,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Cv(e,p,r,n,a,!1,h,s)}function zh(e,t,r,n,a,s,i=!1,o="channelsLast"){let[l,u,p,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,p,h]=e;else if(o==="channelsFirst")[l,h,u,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,c,,f]=t,[m,g]=j0(r),[y,A]=j0(n),x=$u(d,y),b=$u(c,A),{padInfo:w,outHeight:I,outWidth:C}=E_(a,u,p,m,g,x,b,s,o),E=i?f*h:f,R;return o==="channelsFirst"?R=[l,E,I,C]:o==="channelsLast"&&(R=[l,I,C,E]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:h,outHeight:I,outWidth:C,outChannels:E,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:A,inShape:e,outShape:R,filterShape:t}}function Cv(e,t,r,n,a,s=!1,i="channelsLast",o){let[l,u,p,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,p,h,d]=e;else if(i==="channelsFirst")[l,d,u,p,h]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,f,m,,g]=t,[y,A,x]=ry(r),[b,w,I]=ry(n),C=$u(c,b),E=$u(f,w),R=$u(m,I),{padInfo:F,outDepth:$,outHeight:S,outWidth:O}=R_(a,u,p,h,y,A,x,C,E,R,o),z=s?g*d:g,j;return i==="channelsFirst"?j=[l,z,$,S,O]:i==="channelsLast"&&(j=[l,$,S,O,z]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:h,inChannels:d,outDepth:$,outHeight:S,outWidth:O,outChannels:z,padInfo:F,strideDepth:y,strideHeight:A,strideWidth:x,filterDepth:c,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:w,dilationWidth:I,inShape:e,outShape:j,filterShape:t}}function T_(e,t,r,n,a){n==null&&(n=g3(e,t,r));let s=e[0],i=e[1],o=Po((s-t+2*n)/r+1,a),l=Po((i-t+2*n)/r+1,a);return[o,l]}function N_(e,t,r,n,a,s){a==null&&(a=g3(e,t,n));let i=e[0],o=e[1],l=e[2],u=Po((i-t+2*a)/n+1,s),p=Po((o-t+2*a)/n+1,s),h=Po((l-t+2*a)/n+1,s);return[u,p,h,r]}function g3(e,t,r,n=1){let a=$u(t,n);return Math.floor((e[0]*(r-1)-r+a)/2)}function j0(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function ry(e){return typeof e=="number"?[e,e,e]:e}function $u(e,t){return t<=1?e:e+(e-1)*(t-1)}function E_(e,t,r,n,a,s,i,o,l){let u,p,h;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let d=T_([t,r],s,n,e,o);p=d[0],h=d[1]}else if(e==="same"){p=Math.ceil(t/n),h=Math.ceil(r/a);let d=Math.max(0,(p-1)*n+s-t),c=Math.max(0,(h-1)*a+i-r),f=Math.floor(d/2),m=d-f,g=Math.floor(c/2),y=c-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/n),h=Math.ceil((r-i+1)/a);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:d===0&&c===0&&f===0&&m===0?"VALID":"EXPLICIT"},p=Po((t-s+d+c)/n+1,o),h=Po((r-i+f+m)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:p,outWidth:h}}function R_(e,t,r,n,a,s,i,o,l,u,p){let h,d,c,f;if(typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let m=N_([t,r,n,1],o,1,a,e,p);d=m[0],c=m[1],f=m[2]}else if(e==="same"){d=Math.ceil(t/a),c=Math.ceil(r/s),f=Math.ceil(n/i);let m=(d-1)*a+o-t,g=(c-1)*s+l-r,y=(f-1)*i+u-n,A=Math.floor(m/2),x=m-A,b=Math.floor(g/2),w=g-b,I=Math.floor(y/2),C=y-I;h={top:b,bottom:w,left:I,right:C,front:A,back:x,type:"SAME"}}else if(e==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((r-l+1)/s),f=Math.ceil((n-u+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:d,outHeight:c,outWidth:f}}function Po(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Gs(e){let[t,r,n]=j0(e);return t===1&&r===1&&n===1}function Wa(e,t){return Gs(e)||Gs(t)}function Tv(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Kr(e,t,r){if(r!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);if(typeof t=="number")P(_u(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(a=>{P(_u(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function $_(e,t){let r={x:M(e,"x","reshape","string_or_numeric")},n={shape:t};return B.runKernel(vl,r,n)}var G=W({reshape_:$_});function M_(e,t,r,n,a){let s=M(e,"x","avgPool","float32"),i=1;P(Wa(r,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=G(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Kr("avgPool",n,a);let u={x:o},p={filterSize:t,strides:r,pad:n,dimRoundingMode:a},h=B.runKernel(ni,u,p);return h=me(h,s.dtype),l?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var qf=W({avgPool_:M_});function F_(e,t,r,n,a,s="NDHWC"){let i=M(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),P(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Kr("avgPool3d",n,a);let u={x:o},p={filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:s},h=B.runKernel(hh,u,p);return h=me(h,o.dtype),l?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var y3=W({avgPool3d_:F_});function __(e,t=0){P(e.length>=1,()=>"Pass at least one tensor to concat");let r=nh(e,"tensors","concat","string_or_numeric");if(r[0].dtype==="complex64"&&r.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),r.length===1)return Nr(r[0]);let n=r,a={axis:t};return B.runKernel(Qo,n,a)}var Ct=W({concat_:__});function P_(e){let t={x:M(e,"x","sigmoid","float32")};return B.runKernel(Wi,t)}var Er=W({sigmoid_:P_});function z_(e,t,r){let n=M(e,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let a={x:n},s={begin:t,size:r};return B.runKernel(Cl,a,s)}var _e=W({slice_:z_});function O_(e){let t={x:M(e,"x","tanh","float32")};return B.runKernel(qi,t)}var Ou=W({tanh_:O_});function D_(e,t,r,n,a,s){let i=M(e,"forgetBias","basicLSTMCell"),o=M(t,"lstmKernel","basicLSTMCell"),l=M(r,"lstmBias","basicLSTMCell"),u=M(n,"data","basicLSTMCell"),p=M(a,"c","basicLSTMCell"),h=M(s,"h","basicLSTMCell"),d=Ct([u,h],1),c=Ye(d,o),f=le(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=_e(f,[0,0],y),x=_e(f,[0,g],y),b=_e(f,[0,g*2],y),w=_e(f,[0,g*3],y),I=le(L(Er(A),Ou(x)),L(p,Er(le(i,b)))),C=L(Ou(I),Er(w));return[I,C]}var Nv=W({basicLSTMCell_:D_});function L_(e,t,r){let n=M(e,"x","batchToSpaceND"),a=t.reduce((o,l)=>o*l);P(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),P(r.length===t.length,()=>`crops.length is ${r.length} but should be equal to blockShape.length  ${t.length}`),P(n.shape[0]%a===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:n},i={blockShape:t,crops:r};return B.runKernel(Jo,s,i)}var Kf=W({batchToSpaceND_:L_});function B_(e){let t;return e.rank===0||e.rank===1?t=G(e,[1,1,1,e.size]):e.rank===2?t=G(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function W_(e,t,r,n,a,s){s==null&&(s=.001);let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(r,"variance","batchNorm"),u;a!=null&&(u=M(a,"scale","batchNorm"));let p;n!=null&&(p=M(n,"offset","batchNorm")),P(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(p==null||o.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:B_(i),scale:u,offset:p,mean:o,variance:l},d={varianceEpsilon:s},c=B.runKernel(Ai,h,d);return G(c,i.shape)}var Oh=W({batchNorm_:W_});function V_(e,t,r,n,a,s){let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(r,"variance","batchNorm"),u;a!=null&&(u=M(a,"scale","batchNorm"));let p;return n!=null&&(p=M(n,"offset","batchNorm")),P(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),P(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),p!=null&&P(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),Oh(i,o,l,p,u,s)}var A3=W({batchNorm2d_:V_});function G_(e,t,r,n,a,s){let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(r,"variance","batchNorm"),u;a!=null&&(u=M(a,"scale","batchNorm"));let p;return n!=null&&(p=M(n,"offset","batchNorm")),P(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),P(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),p!=null&&P(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),Oh(i,o,l,p,u,s)}var x3=W({batchNorm3d_:G_});function U_(e,t,r,n,a,s){let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(r,"variance","batchNorm"),u;a!=null&&(u=M(a,"scale","batchNorm"));let p;return n!=null&&(p=M(n,"offset","batchNorm")),P(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),P(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),p!=null&&P(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),Oh(i,o,l,p,u,s)}var b3=W({batchNorm4d_:U_});function j_(e,t,r){let n=M(e,"x","bincount"),a=M(t,"weights","bincount");P(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),P(r>=0,()=>`size must be non-negative, but got ${r}.`),P(a.size===n.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${a.shape}.`);let s={x:n,weights:a},i={size:r};return B.runKernel(kf,s,i)}var v3=W({bincount_:j_});function H_(e,t){let r=M(e,"s0","broadcastArgs","int32"),n=M(t,"s1","broadcastArgs","int32");if(r.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${r.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let a={s0:r,s1:n};return B.runKernel(If,a)}var Ev=W({broadcastArgs_:H_});function q_(e,t){let r=M(e,"broadcastTo","x"),n=r.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<r.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${r.rank}.`);if(t.length>r.rank){let l=r.shape.slice();for(;l.length<t.length;)l.unshift(1);r=G(r,l)}let a=r.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(r.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return Nr(r);let i={x:r},o={reps:s};return B.runKernel(ss,i,o)}var qp=W({broadcastTo_:q_});function K_(e){let t={x:M(e,"x","ceil","float32")};return B.runKernel(ii,t)}var Rv=W({ceil_:K_});function X_(e,t,r){let n=M(e,"x","clipByValue");P(t<=r,()=>`Error in clip: min (${t}) must be less than or equal to max (${r}).`);let a={x:n},s={clipValueMin:t,clipValueMax:r};return B.runKernel(as,a,s)}var xn=W({clipByValue_:X_});function Z_(e){return Ct(e,0)}var w3=W({concat1d_:Z_});function Y_(e,t){return Ct(e,t)}var Ll=W({concat2d_:Y_});function J_(e,t){return Ct(e,t)}var k3=W({concat3d_:J_});function Q_(e,t){return Ct(e,t)}var I3=W({concat4d_:Q_});function eP(e,t,r,n,a="NHWC",s=[1,1],i){let o=M(e,"x","conv2d","float32"),l=M(t,"filter","conv2d","float32"),u=o,p=!1;o.rank===3&&(p=!0,u=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Kr("conv2d",n,i);let h=a==="NHWC"?u.shape[3]:u.shape[1];P(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),P(Wa(r,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`);let d={x:u,filter:l},c={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i},f=B.runKernel(oi,d,c);return p?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Us=W({conv2d_:eP});function tP(e,t,r,n,a="NWC",s=1,i){let o=M(e,"x","conv1d"),l=M(t,"filter","conv1d"),u=o,p=!1;o.rank===2&&(p=!0,u=G(o,[1,o.shape[0],o.shape[1]])),P(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),P(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Kr("conv1d",n,i),P(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),P(Wa(r,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${r} and dilation '${s}'`),P(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=G(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=G(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=Us(d,h,[1,r],n,"NHWC",[1,s],i);return p?G(c,[c.shape[2],c.shape[3]]):G(c,[c.shape[0],c.shape[2],c.shape[3]])}var S3=W({conv1d_:tP});function rP(e,t,r,n,a,s="NHWC",i){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;t.rank===3&&(u=!0,l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),P(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),P(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),P(r.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${r.rank}`);let p=s==="NHWC"?o[3]:o[1],h=s==="NHWC"?l.shape[3]:l.shape[1];P(p===r.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${r.shape[2]}.`),P(h===r.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${r.shape[3]}.`),Kr("conv2dDerInput",a,i);let d={dy:l,filter:r},c={strides:n,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=B.runKernel(li,d,c);return u?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var C3=W({conv2DBackpropInput_:rP});function nP(e,t,r,n,a,s){let i=M(e,"x","conv2dTranspose"),o=M(t,"filter","conv2dTranspose");return C3(r,i,o,n,a,"NHWC",s)}var T3=W({conv2dTranspose_:nP});function aP(e,t,r,n,a="NDHWC",s=[1,1,1]){let i=M(e,"x","conv3d"),o=M(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),P(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),P(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),P(Wa(r,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),P(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);let p={x:l,filter:o},h={strides:r,pad:n,dataFormat:a,dilations:s},d=B.runKernel(mh,p,h);return u?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var N3=W({conv3d_:aP});function sP(e,t,r,n,a){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];P(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),P(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),P(r.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${r.rank}`),P(l===r.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${r.shape[3]}.`),P(u===r.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${r.shape[4]}.`);let p={dy:i,filter:r},h={pad:a,strides:n,inputShape:s},d=B.runKernel(Tf,p,h);return o?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var $v=W({conv3DBackpropInput_:sP});function iP(e,t,r,n,a){let s=M(e,"x","conv3dTranspose"),i=M(t,"filter","conv3dTranspose");return $v(r,s,i,n,a)}var E3=W({conv3dTranspose_:iP});function oP(e){let t={x:M(e,"x","cos","float32")};return B.runKernel(ui,t)}var Xf=W({cos_:oP});function lP(e){let t={x:M(e,"x","cosh","float32")};return B.runKernel(di,t)}var R3=W({cosh_:lP});function uP(e,t=0,r=!1,n=!1){let a={x:M(e,"x","cumprod")},s={axis:t,exclusive:r,reverse:n};return B.runKernel(el,a,s)}var H0=W({cumprod_:uP});function dP(e,t=0,r=!1,n=!1){let a={x:M(e,"x","cumsum")},s={axis:t,exclusive:r,reverse:n};return B.runKernel(pi,a,s)}var $3=W({cumsum_:dP});function pP(e,t,r,n=!1){let a=M(e,"x","denseBincount"),s=M(t,"weights","denseBincount");P(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),P(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),P(r>=0,()=>`size must be non-negative, but got ${r}.`),P(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:r,binaryOutput:n};return B.runKernel(Nf,i,o)}var Mv=W({denseBincount_:pP});function hP(e,t,r="NHWC"){let n=M(e,"x","depthToSpace","float32"),a=r==="NHWC"?n.shape[1]:n.shape[2],s=r==="NHWC"?n.shape[2]:n.shape[3],i=r==="NHWC"?n.shape[3]:n.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${n.shape}`),P(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),P(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${n.shape}`);let o={x:n},l={blockSize:t,dataFormat:r};return B.runKernel(rl,o,l)}var Fv=W({depthToSpace_:hP});function cP(e,t,r,n,a="NHWC",s=[1,1],i){let o=M(e,"x","depthwiseConv2d","float32"),l=M(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;o.rank===3&&(p=!0,u=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h=a==="NHWC"?u.shape[3]:u.shape[1];P(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Kr("depthwiseConv2d",n,i);let d={x:u,filter:l},c={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i},f=B.runKernel(hi,d,c);return p?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Dh=W({depthwiseConv2d_:cP});function fP(e){let t={x:M(e,"x","diag")};return B.runKernel($f,t)}var _v=W({diag_:fP});function mP(e,t,r,n,a=[1,1],s="NHWC"){let i=M(e,"x","dilation2d"),o=M(t,"filter","dilation2d");P(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),P(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),P(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let p={x:l,filter:o},h={strides:r,pad:n,dilations:a},d=B.runKernel(gh,p,h);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Pv=W({dilation2d_:mP});function gP(e,t){let r=M(e,"a","equal","string_or_numeric"),n=M(t,"b","equal","string_or_numeric");[r,n]=Bt(r,n),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(nl,a)}var zn=W({equal_:gP});function yP(e,t,r){let n=M(t,"a","where"),a=M(r,"b","where"),s=M(e,"condition","where","bool"),i=xt(xt(s.shape,n.shape),a.shape),o=qp(s,i),l=qp(n,i),u=qp(a,i),p={condition:o,t:l,e:u};return B.runKernel(Sl,p)}var Ur=W({where_:yP});function AP(e){let t={x:M(e,"x","zerosLike")};return B.runKernel(Pl,t)}var at=W({zerosLike_:AP});function xP(e,t){let r=M(e,"a","div"),n=M(t,"b","div");[r,n]=Bt(r,n);let a=pe(r,n),s=at(a),i=zn(n,s);return Ur(i,s,a)}var zv=W({divNoNan_:xP});function bP(e,t){let r=M(e,"t1","dot"),n=M(t,"t2","dot");P((r.rank===1||r.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${r.rank} and ${n.rank}.`);let a=r.rank===1?r.size:r.shape[1],s=n.rank===1?n.size:n.shape[0];if(P(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),r.rank===1&&n.rank===1){let i=G(r,[1,-1]),o=G(n,[-1,1]),l=Ye(i,o);return G(l,[])}else if(r.rank===1&&n.rank===2){let i=G(r,[1,-1]),o=G(n,[n.shape[0],n.shape[1]]),l=Ye(i,o);return G(l,[l.size])}else if(r.rank===2&&n.rank===1){let i=G(n,[-1,1]),o=Ye(r,i);return G(o,[o.size])}else{let i=G(n,[n.shape[0],n.shape[1]]);return Ye(r,i)}}var Ov=W({dot_:bP});function vP(e,...t){let r=t.map((a,s)=>M(a,`tensors${s}`,"einsum")),n={equation:e};return B.runKernel(yh,r,n)}var Dv=W({einsum_:vP});function wP(e){let t={x:M(e,"x","elu","float32")};return B.runKernel(fi,t)}var Lh=W({elu_:wP});function kP(e){let t=M(e,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=me(t,"float32"));let r={x:t};return B.runKernel(od,r)}var Lv=W({erf_:kP});function M3(e,t){for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0}function Bv(e,t,r){let n=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<n;o++)r.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function Wv(e,t){let r=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&r.push(e[s]);let a=t.map(s=>e[s]);return[r,a]}function Vo(e,t){let r=t.map(n=>1);return Bv(e,r,t)}function IP(e,t,r){P(M3(t,r),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${r} input.`)}function Vv(e,t){if(M3(e,t))return null;let r=[];for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);return e.forEach(n=>r.push(n)),r}function F3(e){return e.map((t,r)=>[r,t]).sort((t,r)=>t[1]-r[1]).map(t=>t[0])}function SP(e,t){let r=[];for(let n=t-e;n<t;++n)r.push(n);return r}function CP(e,t=null,r=!1){let n={x:M(e,"x","max")},a={reductionIndices:t,keepDims:r};return B.runKernel(ki,n,a)}var Ar=W({max_:CP});function TP(e,t=null,r=!1){let n={x:M(e,"x","min")},a={axis:t,keepDims:r};return B.runKernel(Ti,n,a)}var js=W({min_:TP});function NP(e,t){let r=M(e,"base","pow"),n=M(t,"exp","pow");[r,n]=Bt(r,n);let a={a:r,b:n};return B.runKernel(Mi,a)}var Hs=W({pow_:NP});function Ie(e,t){if((Tr(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Tr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Xi(e,[],[],t)}function EP(e){let t={x:M(e,"x","sqrt","float32")};return B.runKernel(Vi,t)}var $r=W({sqrt_:EP});function RP(e){let t=M(e,"x","square"),r={};return B.runKernel("Square",{x:t},r)}var vt=W({square_:RP});function $P(e,t=null,r=!1){let n=M(e,"x","sum");n.dtype==="bool"&&(n=me(n,"int32"));let a={x:n},s={axis:t,keepDims:r};return B.runKernel(Gi,a,s)}var ke=W({sum_:$P});function MP(e,t="euclidean",r=null,n=!1){e=M(e,"x","norm");let a=Gv(e,t,r),s=a.shape;if(n){let i=Yn(r,e.shape);s=Vo(a.shape,i)}return G(a,s)}function Gv(e,t,r=null){if(e.rank===0)return sr(e);if(e.rank!==1&&r===null)return Gv(G(e,[-1]),t,r);if(e.rank===1||typeof r=="number"||Array.isArray(r)&&r.length===1){if(t===1)return ke(sr(e),r);if(t===1/0)return Ar(sr(e),r);if(t===-1/0)return js(sr(e),r);if(t==="euclidean"||t===2)return $r(ke(Hs(sr(e),Ie(2,"int32")),r));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(r)&&r.length===2){if(t===1)return Ar(ke(sr(e),r[0]),r[1]-1);if(t===1/0)return Ar(ke(sr(e),r[1]),r[0]);if(t===-1/0)return js(ke(sr(e),r[1]),r[0]);if(t==="fro"||t==="euclidean")return $r(ke(vt(e),r));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${r}`)}var Bh=W({norm_:MP});function FP(e,t=null,r=!1){return Bh(e,"euclidean",t,r)}var Uv=W({euclideanNorm_:FP});function _P(e){let t={x:M(e,"x","exp")};return B.runKernel(mi,t)}var On=W({exp_:_P});function PP(e,t=0){let r=M(e,"x","expandDims","string_or_numeric");P(t<=r.rank,()=>"Axis must be <= rank of the tensor");let n={input:r},a={dim:t};return B.runKernel(al,n,a)}var Zt=W({expandDims_:PP});function zP(e){let t={x:M(e,"x","expm1")};return B.runKernel(sl,t)}var jv=W({expm1_:zP});function OP(e,t){let r=M(e,"x","tile","string_or_numeric");P(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of reps ${t}.`);let n={x:r},a={reps:t};return B.runKernel(ss,n,a)}var qn=W({tile_:OP});function DP(e,t,r,n="float32"){t==null&&(t=e);let a=Oe([e,t],n),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=G(a.toTensor(),[e,t]);if(r==null)return i;if(r.length===1)return qn(Zt(i,0),[r[0],1,1]);if(r.length===2)return qn(Zt(Zt(i,0),0),[r[0],r[1],1,1]);if(r.length===3)return qn(Zt(Zt(Zt(i,0),0),0),[r[0],r[1],r[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${r.length}D.`)}var Zf=W({eye_:DP});function Sd(e,t,r){let n={shape:e,value:t,dtype:r};return B.runKernel(ld,{},n)}function LP(e){let t={x:M(e,"x","floor","float32")};return B.runKernel(gi,t)}var Wh=W({floor_:LP});function BP(e,t,r=0,n=0){let a=M(e,"x","gather"),s=M(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:r,batchDims:n};return B.runKernel(ol,i,o)}var Vh=W({gather_:BP});function WP(e,t){let r=M(e,"a","greater","string_or_numeric"),n=M(t,"b","greater","string_or_numeric");[r,n]=Bt(r,n),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(ul,a)}var wn=W({greater_:WP});function VP(e,t){let r=M(e,"a","greaterEqual","string_or_numeric"),n=M(t,"b","greaterEqual","string_or_numeric");[r,n]=Bt(r,n),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(xi,a)}var Bl=W({greaterEqual_:VP});function GP(e){let t={x:M(e,"x","isFinite")};return B.runKernel(ud,t)}var Hv=W({isFinite_:GP});function UP(e){let t={x:M(e,"x","isInf")};return B.runKernel(dd,t)}var qv=W({isInf_:UP});function jP(e){let t={x:M(e,"x","isNaN")};return B.runKernel(pd,t)}var Kv=W({isNaN_:jP});function HP(e,t=.2){let r={x:M(e,"x","leakyRelu")},n={alpha:t};return B.runKernel(vi,r,n)}var Yf=W({leakyRelu_:HP});function qP(e,t){let r=M(e,"a","less","string_or_numeric"),n=M(t,"b","less","string_or_numeric");[r,n]=Bt(r,n),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(dl,a)}var _3=W({less_:qP});function KP(e,t){let r=M(e,"a","lessEqual","string_or_numeric"),n=M(t,"b","lessEqual","string_or_numeric");[r,n]=Bt(r,n),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(pl,a)}var Wl=W({lessEqual_:KP});function Xv(e,t,r){if(r<=0)throw new Error("The number of values should be positive.");let n={start:e,stop:t,num:r};return B.runKernel(Pf,{},n)}function XP(e,t=5,r=1,n=1,a=.5){let s=M(e,"x","localResponseNormalization");P(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),P(_u(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=G(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:r,alpha:n,beta:a},p=B.runKernel(xh,l,u);return o?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Zv=W({localResponseNormalization_:XP});function ZP(e){let t={x:M(e,"x","log","float32")};return B.runKernel(wi,t)}var Dn=W({log_:ZP});function YP(e){let t={x:M(e,"x","log1p")};return B.runKernel(hd,t)}var Jf=W({log1p_:YP});function JP(e){return P(Ls(e),()=>"The f passed in grad(f) must be a function"),(t,r)=>{let n=M(t,"x","tf.grad","string_or_numeric"),a=r!=null?M(r,"dy","tf.grad"):null;return B.tidy(()=>{let{value:s,grads:i}=B.gradients(()=>e(n),[n],a);return a!=null&&Hr(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Qf(i),i[0]})}}function QP(e){return P(Ls(e),()=>"The f passed in grads(f) must be a function"),(t,r)=>{P(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=nh(t,"args","tf.grads","string_or_numeric"),a=r!=null?M(r,"dy","tf.grads"):null;return B.tidy(()=>{let{value:s,grads:i}=B.gradients(()=>e(...n),n,a);return a!=null&&Hr(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qf(i),i})}}function ez(e){return P(Ls(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,r)=>{P(t instanceof Qe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(r==null||r instanceof Qe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:a}=B.gradients(()=>e(t),[t],r);return Qf(n),{grad:n[0],value:a}}}function tz(e){return P(Ls(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,r)=>{P(Array.isArray(t)&&t.every(a=>a instanceof Qe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(r==null||r instanceof Qe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=B.gradients(()=>e(...t),t,r);return r!=null&&Hr(n.value.shape,r.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qf(n.grads),n}}function Yv(e,t){P(Ls(e),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(u=>u instanceof rh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let r=t!=null;if(!r){t=[];for(let u in B.registeredVariables)t.push(B.registeredVariables[u])}let n=r?t.filter(u=>!u.trainable):null,a=t.length;t=t.filter(u=>u.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=B.gradients(e,t,null,s);P(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,p)=>{o[p]!=null&&(l[u.name]=o[p])}),n!=null&&n.forEach(u=>l[u.name]=null),{value:i,grads:l}}function La(e){return B.customGrad(e)}function Qf(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function rz(e){let t={x:M(e,"x","softplus")};return B.runKernel(bd,t)}var Cd=W({softplus_:rz});function nz(e){let t=M(e,"x","logSigmoid");return La(r=>({value:Ft(Cd(Ft(r))),gradFunc:n=>L(n,Er(Ft(r)))}))(t)}var Jv=W({logSigmoid_:nz});function az(e,t){let r=M(e,"a","sub"),n=M(t,"b","sub");[r,n]=Bt(r,n);let a={a:r,b:n};return B.runKernel(Hi,a)}var ce=W({sub_:az});function sz(e,t=-1){let r=M(e,"logits","logSoftmax");if(t===-1&&(t=r.rank-1),t!==r.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and axis was ${t}`);return La((n,a)=>{let s=Ar(n,t,!0),i=ce(n,s),o=ce(me(i,"float32"),Dn(ke(On(i),t,!0)));return a([o]),{value:o,gradFunc:(l,u)=>{let[p]=u,h=!0,d=On(p);return ce(l,L(ke(l,t,h),d))}}})(r)}var P3=W({logSoftmax_:sz});function iz(e,t=null,r=!1){let n=M(e,"x","logSumExp"),a=Yn(t,n.shape),s=Ar(n,a,!0),i=ce(n,s),o=On(i),l=ke(o,a),u=Dn(l),p=le(G(s,u.shape),u);if(r){let h=Vo(p.shape,a);return G(p,h)}return p}var z3=W({logSumExp_:iz});function oz(e,t){let r=M(e,"a","logicalAnd","bool"),n=M(t,"b","logicalAnd","bool");xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(hl,a)}var ba=W({logicalAnd_:oz});function lz(e){let t={x:M(e,"x","logicalNot","bool")};return B.runKernel(cl,t)}var em=W({logicalNot_:lz});function uz(e,t){let r=M(e,"a","logicalOr","bool"),n=M(t,"b","logicalOr","bool");xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(cd,a)}var O3=W({logicalOr_:uz});function dz(e,t){let r=M(e,"a","logicalXor","bool"),n=M(t,"b","logicalXor","bool");return xt(r.shape,n.shape),ba(O3(e,t),em(ba(e,t)))}var Qv=W({logicalXor_:dz}),p0=2147483648;function pz(e,t,r="left"){let n=M(e,"sortedSequence","searchSorted"),a=M(t,"values","searchSorted"),s=n.shape[n.shape.length-1],i=a.shape[a.shape.length-1],o=G(n,[-1,s]),l=G(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(St(l.shape)>=p0)throw new Error(`values tensor size must less than ${p0}`);if(o.shape[1]>=p0)throw new Error(`trailing dim_size must less than ${p0} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},p={side:r};return B.runKernel(Gf,u,p)}var tm=W({searchSorted_:pz});function ew(e,t){return tm(e,t,"left")}function hz(e,t,r,n,a){let s=M(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=G(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),P(Wa(r,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`),Kr("maxPool",n,a);let u={x:o},p={filterSize:t,strides:r,pad:n,dimRoundingMode:a},h=B.runKernel(Si,u,p);return l?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var rm=W({maxPool_:hz});function cz(e,t=[1,1,1],r,n,a,s="NDHWC"){let i=M(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),P(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Kr("maxPool3d",n,a);let u={x:o},p={filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:s},h=B.runKernel(bh,u,p);return l?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var D3=W({maxPool3d_:cz});function fz(e,t,r,n,a=!1){let s={x:M(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:r,pad:n,includeBatchInIndex:a},o=B.runKernel(Lf,s,i);return{result:o[0],indexes:o[1]}}var tw=W({maxPoolWithArgmax_:fz});function mz(e,t){let r=M(e,"a","maximum"),n=M(t,"b","maximum");[r,n]=Bt(r,n),r.dtype==="bool"&&(r=me(r,"int32"),n=me(n,"int32")),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(Ii,a)}var is=W({maximum_:mz});function gz(e,t=null,r=!1){let n={x:M(e,"x","mean")},a={axis:t,keepDims:r};return B.runKernel(Ci,n,a)}var Gt=W({mean_:gz});function Ot(e,t="float32"){if(t==="complex64"){let n=Ot(e,"float32"),a=Ot(e,"float32");return ts(n,a)}let r=bf(St(e),t);return B.makeTensor(r,e,t)}function An(e,t="float32"){if(t==="complex64"){let n=An(e,"float32"),a=Ot(e,"float32");return ts(n,a)}let r=Gy(St(e),t);return B.makeTensor(r,e,t)}function rw(e,t,{indexing:r="xy"}={}){if(r!=="xy"&&r!=="ij")throw new TypeError(`${r} is not a valid third argument to meshgrid`);if(e===void 0)return[];let n=M(e,"x","meshgrid",e instanceof Qe?e.dtype:"float32");if(t===void 0)return[n];let a=M(t,"y","meshgrid",t instanceof Qe?t.dtype:"float32"),s=St(n.shape),i=St(a.shape);return r==="xy"?(n=G(n,[1,-1]),a=G(a,[-1,1]),[Ye(An([i,1],n.dtype),n),Ye(a,An([1,s],a.dtype))]):(n=G(n,[-1,1]),a=G(a,[1,-1]),[Ye(n,An([1,i],n.dtype)),Ye(An([s,1],a.dtype),a)])}function yz(e,t){let r=M(e,"a","minimum"),n=M(t,"b","minimum");[r,n]=Bt(r,n),r.dtype==="bool"&&(r=me(r,"int32"),n=me(n,"int32")),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(Ni,a)}var Gh=W({minimum_:yz});function Az(e,t,r){P(r==="reflect"||r==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${r}.`);let n=M(e,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let a=r==="reflect"?1:0;for(let o=0;o<n.rank;o++)P(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[o][0]>=0&&t[o][0]<=n.shape[o]-a&&t[o][1]>=0&&t[o][1]<=n.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${n.shape[o]-a} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:r},i={x:n};return B.runKernel(Ei,i,s)}var nw=W({mirrorPad_:Az});function xz(e,t){let r=M(e,"a","mod"),n=M(t,"b","mod");[r,n]=Bt(r,n);let a={a:r,b:n};return B.runKernel(fd,a)}var Td=W({mod_:xz});function bz(e,t=null,r=!1){e=M(e,"x","moments");let n=Yn(t,e.shape),a=Gt(e,n,r),s=a.shape;r||(s=Vo(a.shape,n));let i=vt(ce(me(e,"float32"),G(a,s))),o=Gt(i,n,r);return{mean:a,variance:o}}var Uh=W({moments_:bz});function vz(e,t,r,n){let a=M(t,"data","multiRNNCell"),s=nh(r,"c","multiRNNCell"),i=nh(n,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let d=e[h](o,s[h],i[h]);l.push(d[0]),l.push(d[1]),o=d[1]}let u=[],p=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),p.push(l[h+1]);return[u,p]}var aw=W({multiRNNCell_:vz});function wz(e,t,r,n=!1){let a=M(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);r=r||Math.random();let o={logits:i===1?G(a,[1,-1]):a},l={numSamples:t,seed:r,normalized:n},u=B.runKernel(Bf,o,l);return i===1?G(u,[u.size]):u}var sw=W({multinomial_:wz});function kz(e,t){let r=M(e,"a","notEqual","string_or_numeric"),n=M(t,"b","notEqual","string_or_numeric");[r,n]=Bt(r,n),xt(r.shape,n.shape);let a={a:r,b:n};return B.runKernel(ml,a)}var Du=W({notEqual_:kz});function Iz(e){let t={x:M(e,"x","onesLike")};return B.runKernel(Al,t)}var Ln=W({onesLike_:Iz});function Sz(e,t){let r=M(e,"v1","outerProduct"),n=M(t,"v2","outerProduct");P(r.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${r.rank} and ${n.rank}.`);let a=G(r,[-1,1]),s=G(n,[1,-1]);return Ye(a,s)}var iw=W({outerProduct_:Sz});function Cz(e,t,r=0){let n=M(e,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:r},s={x:n};return B.runKernel($i,s,a)}var Qn=W({pad_:Cz});function Tz(e,t,r=0){return P(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Qn(e,[t],r)}var ow=W({pad1d_:Tz});function Nz(e,t,r=0){return P(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qn(e,t,r)}var lw=W({pad2d_:Nz});function Ez(e,t,r=0){return P(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qn(e,t,r)}var uw=W({pad3d_:Ez});function Rz(e,t,r=0){return P(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qn(e,t,r)}var dw=W({pad4d_:Rz});function $z(e,t,r){let n=M(e,"x","spaceToBatchND");P(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),P(r.length===t.length,()=>`paddings.shape[0] ${r.length} must be equal to [blockShape] ${t.length}`),P(n.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+r[l-1][0]+r[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${r.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:n},s={blockShape:t,paddings:r};return B.runKernel(Nl,a,s)}var nm=W({spaceToBatchND_:$z});function Mz(e,t,r,n,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),n===0&&(n="valid");let o=M(e,"x","maxPool"),l=o,u=!1;o.rank===3&&(u=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(Wa(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let p=Sv(l.shape,t,s,a,n),h=[p.dilationHeight,p.dilationWidth],d;n==="same"?d=_z([p.filterHeight,p.filterWidth],h):d=[[0,0],[0,0]];let c=h[0]===1&&h[1]===1,[f,m]=Fz([p.inHeight,p.inWidth],h,d),g=c?n:"valid",y=c?l:nm(l,h,f),A=(r==="avg"?()=>qf(y,t,s,g,i):()=>rm(y,t,s,g,i))(),x=c?A:Kf(A,h,m);return u?G(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function Fz(e,t,r){let n=r.map(p=>p[0]),a=r.map(p=>p[1]),s=e.concat(n,a),i=t.map((p,h)=>(p-s[h]%p)%p),o=a.map((p,h)=>p+i[h]),l=t.map((p,h)=>[n[h],o[h]]),u=t.map((p,h)=>[0,i[h]]);return[l,u]}function _z(e,t){let r=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),n=r.map(s=>Math.floor(s/2)),a=r.map((s,i)=>s-n[i]);return r.map((s,i)=>[n[i],a[i]])}var pw=W({pool_:Mz});function Pz(e,t){let r=M(e,"x","prelu"),n=M(t,"alpha","prelu"),a={x:r,alpha:n};return B.runKernel(Fi,a)}var am=W({prelu_:Pz});function zz(e,t=null,r=!1){let n=M(e,"x","prod");n.dtype==="bool"&&(n=me(n,"int32"));let a={x:n},s={axis:t,keepDims:r};return B.runKernel(_i,a,s)}var hw=W({prod_:zz});function Oz(e,t,r){let n=St(e),a=null;if(r==null||r==="float32")a=new Float32Array(n);else if(r==="int32")a=new Int32Array(n);else if(r==="bool")a=new Uint8Array(n);else throw new Error(`Unknown data type ${r}`);for(let s=0;s<n;s++)a[s]=t();return B.makeTensor(a,e,r)}var cw=W({rand_:Oz}),L3=Xo(yf()),B3=class{constructor(e,t,r,n,a){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=L3.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let e,t,r=!1;for(;!r;){let n,a,s;do n=2*this.random()-1,a=2*this.random()-1,s=n*n+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*n*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Dz=class{constructor(e,t,r,n){this.alpha=e,this.beta=1/t,this.dtype=r;let a=n||Math.random();this.randu=L3.alea(a.toString()),this.randn=new B3(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,n,a,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,e=n*n,t=1-.331*e*e,r=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<r)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Lz=class{constructor(e=0,t=1,r,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=L3.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function Bz(e,t,r=1,n="float32",a){if(r==null&&(r=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Dz(t,r,n,a),i=Oe(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var fw=W({randomGamma_:Bz});function Wz(e,t=0,r=1,n,a){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new B3(t,r,n,!1,a),i=Oe(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var sm=W({randomNormal_:Wz});function Vz(e,t,r){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return sm(e,0,1,t,r)}var mw=W({randomStandardNormal_:Vz});function Gz(e,t=0,r=1,n="float32",a){let s=Oe(e,n),i=new Lz(t,r,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var Nd=W({randomUniform_:Gz});function Lu(e,t,r=1,n="float32"){if(r===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:r,dtype:n};return B.runKernel(gd,{},a)}function Uz(e){let t={x:M(e,"x","reciprocal")};return B.runKernel(yd,t)}var gw=W({reciprocal_:Uz});function jz(e){let t={x:M(e,"x","relu")};return B.runKernel(Pi,t)}var Va=W({relu_:jz});function Hz(e){let t={x:M(e,"x","relu6")};return B.runKernel(Di,t)}var W3=W({relu6_:Hz});function qz(e,t){let r={x:M(e,"x","reverse")},n={dims:t};return B.runKernel(wl,r,n)}var Zn=W({reverse_:qz});function Kz(e){let t=M(e,"x","reverse");return P(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Zn(t,0)}var yw=W({reverse1d_:Kz});function Xz(e,t){let r=M(e,"x","reverse");return P(r.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${r.rank}.`),Zn(r,t)}var Aw=W({reverse2d_:Xz});function Zz(e,t){let r=M(e,"x","reverse");return P(r.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${r.rank}.`),Zn(r,t)}var xw=W({reverse3d_:Zz});function Yz(e,t){let r=M(e,"x","reverse");return P(r.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${r.rank}.`),Zn(r,t)}var bw=W({reverse4d_:Yz});function Jz(e){let t={x:M(e,"x","round")};return B.runKernel(kl,t)}var V3=W({round_:Jz});function Qz(e){let t={x:M(e,"x","rsqrt","float32")};return B.runKernel(Li,t)}var G3=W({rsqrt_:Qz});function eO(e){let t={x:M(e,"x","selu")};return B.runKernel(Ad,t)}var U3=W({selu_:eO});function tO(e,t,r,n,a,s=[1,1],i="NHWC"){let o=M(e,"x","separableConv2d"),l=M(t,"depthwiseFilter","separableConv2d"),u=M(r,"pointwiseFilter","separableConv2d"),p=o,h=!1;if(o.rank===3&&(h=!0,p=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),P(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],c=l.shape[3];P(u.shape[2]===d*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`);let f=Dh(p,l,n,a,i,s),m=Us(f,u,1,"valid",i);return h?G(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var j3=W({separableConv2d_:tO});async function rO(e,t){let r=M(e,"x","setdiff1d"),n=M(t,"y","setdiff1d");P(r.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${r.dtype}) and y (${n.dtype}).`),P(r.rank===1,()=>`x should be 1D tensor, but got x (${r.shape}).`),P(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let a=await r.data(),s=await n.data(),i=new Set(s),o=0;for(let p=0;p<a.length;p++)i.has(a[p])||o++;let l=new or([o],r.dtype),u=new or([o],"int32");for(let p=0,h=0;p<a.length;p++)i.has(a[p])||(l.values[h]=a[p],u.values[h]=p,h++);return[l.toTensor(),u.toTensor()]}var vw=rO;function nO(e){let t={x:M(e,"x","sign")};return B.runKernel(xd,t)}var ww=W({sign_:nO});function aO(e){let t={x:M(e,"x","sin","float32")};return B.runKernel(Bi,t)}var H3=W({sin_:aO});function sO(e){let t={x:M(e,"x","sinh")};return B.runKernel(Tl,t)}var q3=W({sinh_:sO});function iO(e,t,r){let n=M(e,"x","slice1d");return P(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),_e(n,[t],[r])}var jh=W({slice1d_:iO});function oO(e,t,r){let n=M(e,"x","slice2d");return P(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),_e(n,t,r)}var im=W({slice2d_:oO});function lO(e,t,r){let n=M(e,"x","slice3d");return P(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),_e(n,t,r)}var Yi=W({slice3d_:lO});function uO(e,t,r){let n=M(e,"x","slice4d");return P(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),_e(n,t,r)}var qs=W({slice4d_:uO});function dO(e,t=-1){let r=M(e,"logits","softmax","float32");if(t===-1&&(t=r.rank-1),t!==r.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and dim was ${t}`);let n={logits:r},a={dim:t};return B.runKernel(Ui,n,a)}var Ed=W({softmax_:dO});function pO(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(Ff,t)}var om=W({fft_:pO});function hO(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(_f,t)}var sh=W({ifft_:hO});function cO(e){let t=e.shape[e.shape.length-1],r=e.size/t,n;if(t<=2){let a=G(e,[r,t]);n=sh(a)}else{let a=[r,2*(t-1)],s=G(zu(e),[r,t]),i=G(_h(e),[r,t]),o=Zn(_e(s,[0,1],[r,t-2]),1),l=L(Zn(_e(i,[0,1],[r,t-2]),1),Ie(-1)),u=Ct([s,o],1),p=Ct([i,l],1),h=G(ts(u,p),[a[0],a[1]]);n=sh(h)}if(n=zu(n),e.rank===3&&e.shape[0]!==0){let a=n,s=e.shape[0];n=G(n,[s,n.shape[0]/s,n.shape[1]]),a.dispose()}return n}var K3=W({irfft_:cO});function fO(e,t,r=0){let n={x:M(e,"x","split")},a={numOrSizeSplits:t,axis:r};return B.runKernel(El,n,a)}var Jt=W({split_:fO});function mO(e,t){P(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let r=e.shape[e.shape.length-1],n=e.size/r,a;if(t!=null&&t<r){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,a=_e(e,f,m),r=t}else if(t!=null&&t>r){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-r,a=Ct([e,Ot(f)],e.shape.length-1),r=t}else a=e;let s=at(a),i=G(ts(a,s),[n,r]),o=om(i),l=Math.floor(r/2)+1,u=zu(o),p=_h(o),h=Jt(u,[l,r-l],u.shape.length-1),d=Jt(p,[l,r-l],p.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=l,G(ts(h[0],d[0]),c)}var lm=W({rfft_:mO});function gO(e,t){let r=M(e,"a","squaredDifference"),n=M(t,"b","squaredDifference");[r,n]=Bt(r,n),xt(r.shape,n.shape);let a={a:r,b:n},s={};return B.runKernel(ji,a,s)}var X3=W({squaredDifference_:gO});function yO(e,t){let r=M(e,"x","squeeze","string_or_numeric");return G(r,p6(r.shape,t).newShape)}var nt=W({squeeze_:yO});function AO(e,t=0){let r=nh(e,"tensors","stack","string_or_numeric");P(r.length>=1,()=>"Pass at least one tensor to tf.stack"),r.length>0&&P(t<=r[0].rank,()=>"Axis must be <= rank of the tensor");let n=r,a={axis:t};return B.runKernel(bl,n,a)}var dr=W({stack_:AO});function xO(e,t=0){let r={x:M(e,"x","step")},n={alpha:t};return B.runKernel(Ki,r,n)}var Rd=W({step_:xO});function bO(e,t,r,n,a=0,s=0,i=0,o=0,l=0){let u={x:M(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:r,strides:n,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return B.runKernel(Rl,u,p)}var kw=W({stridedSlice_:bO});function vO(e){let t={x:M(e,"x","tan","float32")};return B.runKernel($l,t)}var Iw=W({tan_:vO});function $t(e,t){Zo(e);let r=Da(e,t);if(r.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Xi(e,null,r,t)}function Kn(e,t,r){if(Zo(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Da(e,r);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Xi(e,t,n,r)}function Sw(e,t,r){if(Zo(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Da(e,r);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Xi(e,t,n,r)}function Cw(e,t,r){if(Zo(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Da(e,r);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Xi(e,t,n,r)}function Tw(e,t,r){if(Zo(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Da(e,r);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,Xi(e,t,n,r)}function wO(e,t=1,r=!0){let n=M(e,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:n},i={k:t,sorted:r},[o,l]=B.runKernel(Ml,s,i);return{values:o,indices:l}}var Nw=W({topk_:wO});function kO(e,t=0,r=1,n,a){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new B3(t,r,n,!0,a),i=Oe(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var um=W({truncatedNormal_:kO});function IO(e,t=0){let r=M(e,"x","unique","string_or_numeric");P(r.rank>0,()=>"The input tensor must be at least 1D");let n={x:r},a={axis:t},[s,i]=B.runKernel(Uf,n,a);return{values:s,indices:i}}var Ew=W({unique_:IO});function SO(e,t,r){let n=M(e,"x","unsortedSegmentSum"),a=M(t,"segmentIds","unsortedSegmentSum","int32");P(_u(r),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:a},i={numSegments:r};return B.runKernel(Nh,s,i)}var Z3=W({unsortedSegmentSum_:SO});function CO(e,t=0){let r=M(e,"x","unstack","string_or_numeric");P(t>=-r.shape.length&&t<r.shape.length,()=>`Axis = ${t} is not in [-${r.shape.length}, ${r.shape.length})`);let n={value:r},a={axis:t};return B.runKernel(_l,n,a)}var ln=W({unstack_:CO});function Rw(e,t){return tm(e,t,"right")}function Y3(e,t=!0,r,n){return B.makeVariable(e,t,r,n)}function $w(e,t){let r=[];for(let s=0;s<t.length;s++)t[s]&&r.push(s);let n=Oe(e,"int32"),a=Oe([r.length,e.length],"int32");for(let s=0;s<r.length;s++){let i=n.indexToLoc(r[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}async function TO(e){let t=M(e,"condition","whereAsync","bool"),r=await t.data(),n=$w(t.shape,r);return e!==t&&t.dispose(),n}var J3=TO;async function NO(e,t,r){let n=M(e,"tensor","boolMask"),a=M(t,"mask","boolMask","bool"),s=r==null?0:r,i=a.rank,o=n.shape;P(i>0,()=>"mask cannot be scalar"),Hr(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),p=G(n,u),h=G(a,[-1]),d=await J3(h),c=nt(d,[1]),f=Vh(p,c,s);return e!==n&&n.dispose(),t!==a&&a.dispose(),c.dispose(),p.dispose(),h.dispose(),d.dispose(),f}var Mw=NO;function EO(e,t,r,n,a=!0){let s=M(e,"v","movingAverage"),i=M(t,"x","movingAverage"),o=M(r,"decay","movingAverage");_6(s,i),P(ei(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=Ie(1),u=ce(l,o),p=L(ce(i,s),u);if(a){P(n!=null,()=>"When using zeroDebias: true, step is required.");let h=M(n,"step","movingAverage");p=pe(p,ce(l,Hs(o,h)))}return le(s,p)}var Fw=W({movingAverage_:EO});function RO(e,t,r){let n=M(e,"indices","scatterND","int32"),a=M(t,"updates","scatterND");p3(a,n,r);let s={indices:n,updates:a},i={shape:r};return B.runKernel(Il,s,i)}var _w=W({scatterND_:RO});function $O(e,t,r,n){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(r.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${r.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function MO(e,t,r,n=0){let a=M(e,"sparseIndices","sparseToDense","int32"),s=M(t,"sparseValues","sparseToDense","string_or_numeric"),i=M(n,"defaultValue","sparseToDense",s.dtype);$O(a,s,r,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:r};return B.runKernel(Sh,o,l)}var Pw=W({sparseToDense_:MO});function FO(e,t){let r=M(t,"indices","gatherND","int32"),n={params:M(e,"x","gatherND","string_or_numeric"),indices:r};return B.runKernel(ll,n)}var zw=W({gatherND_:FO});function _O(e,t){if(t==null)return e.shape.slice();if(ei(e.shape,t))return t;if(e.shape.length===t.length){let r=[];for(let n=0;n<e.shape.length;n++)t[n]==null&&e.shape[n]!=null?r.push(e.shape[n]):r.push(t[n]);return r}return t}function PO(e,t,r,n){let a=M(e,"x","dropout");if(P(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Qe?a.clone():a;let s=_O(a,r),i=1-t,o=pe(Wh(le(Nd(s,0,1,"float32",n),i)),i);return L(a,o)}var Q3=W({dropout_:PO});function e5(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function dm(e,t,r){let n=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+n-1);a[s]=t-r*Math.cos(i)}return $t(a,"float32")}async function zO(e,t,r=1){let n=M(e,"predictions","inTopK"),a=M(t,"targets","inTopK");P(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),P(n.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${a.rank}`),Hr(n.shape.slice(0,n.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];P(r>0&&r<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${r}`);let i=await n.data(),o=await a.data(),[l,u]=[i.length/s,s],p=h6("bool",l);for(let h=0;h<l;h++){let d=h*u,c=i.subarray(d,d+u),f=[];for(let m=0;m<c.length;m++)f.push({value:c[m],index:m});f.sort((m,g)=>g.value-m.value),p[h]=0;for(let m=0;m<r;m++)if(f[m].index===o[h]){p[h]=1;break}}return e!==n&&n.dispose(),t!==a&&a.dispose(),ut(p,a.shape,"bool")}var Ow=zO,Bu={};Be(Bu,{conv2d:()=>LO,depthwiseConv2d:()=>GO,matMul:()=>jO});function OO(e,t,r,n,a,s="NHWC",i){let o=e;e.rank===3&&(o=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),P(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),P(r.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${r}.`);let u=s==="NHWC"?o.shape[3]:o.shape[1],p=s==="NHWC"?l.shape[3]:l.shape[1];P(u===r[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${r[2]}.`),P(p===r[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${r[3]}).`),Kr("conv2dDerFilter",a,i);let h={x:o,dy:l},d={strides:n,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:r};return B.runKernel(Sf,h,d)}var t5=W({conv2DBackpropFilter_:OO});function pm(e,t,r){if(r==null||r==="linear")return e;if(r==="relu")return L(e,Rd(t));throw new Error(`Cannot compute gradient for fused activation ${r}.`)}function hm(e,t){let r=t,n=Qt(e.shape,t.shape);return n.length>0&&(r=ke(r,n)),G(r,e.shape)}function cm(e,t,r,n){if(t==="linear")return e;if(t==="relu")return Va(e);if(t==="elu")return Lh(e);if(t==="relu6")return W3(e);if(t==="prelu")return am(e,r);if(t==="leakyrelu")return Yf(e,n);if(t==="sigmoid")return Er(e);throw new Error(`Unknown fused activation ${t}.`)}var fm=(e,t)=>!(e>0)||t==="linear";function DO({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(l=l||"linear",fm(B.state.gradientDepth,l)===!1){P(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let I=Us(e,t,r,n,a,s,i);return o!=null&&(I=le(I,o)),cm(I,l,u,p)}let h=M(e,"x","conv2d","float32"),d=M(t,"filter","conv2d","float32"),c=h,f=!1;h.rank===3&&(f=!0,c=G(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),P(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Kr("fused conv2d",n,i);let m=a==="NHWC"?c.shape[3]:c.shape[1];P(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),P(Wa(r,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`);let g=zh(c.shape,d.shape,r,s,n,i),y;o!=null&&(y=M(o,"bias","fused conv2d"),[y]=Bt(y,h),a==="NHWC"?xt(g.outShape,y.shape):(P(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),P(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let A;if(u!=null){let I=u.shape;if(P(I.length<=1||I.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${I.length}.`),I.length===1)P(I[0]===1||I[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the number of output channels (${g.outChannels}).`);else if(I.length===3)try{xt(I,g.outShape)}catch(C){let E=`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}A=M(u,"prelu weights","fused conv2d")}let x=(I,C)=>{P(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,R,F,$]=C,S=pm(I,F,l);P(Gs(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let O=C3(R.shape,S,E,r,n),z=t5(R,S,E.shape,r,n),j=[O,z];if($!=null){let K=hm($,S);j.push(K)}return j},b={x:c,filter:d,bias:y,preluActivationWeights:A},w={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return o==null?La((I,C,E)=>{let R=B.runKernel(Ws,b,w);return E([C,I,R]),f&&(R=G(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(c,d):La((I,C,E,R)=>{let F=B.runKernel(Ws,b,w);return R([C,I,F,E]),f&&(F=G(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(c,d,y)}var LO=W({fusedConv2d_:DO});function BO(e,t,r,n,a,s=[1,1],i){let o=e;e.rank===3&&(o=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},p={strides:n,pad:a,dimRoundingMode:i,dilations:s,filterShape:r};return B.runKernel(Ef,u,p)}var Dw=W({depthwiseConv2dNativeBackpropFilter_:BO});function WO(e,t,r,n,a,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:r},p={strides:n,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=B.runKernel(Rf,u,p);return l?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Lw=W({depthwiseConv2dNativeBackpropInput_:WO});function VO({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(fm(B.state.gradientDepth,l)===!1){let w=Dh(e,t,r,n,a,s,i);return o!=null&&(w=le(w,o)),cm(w,l,u,p)}let h=M(e,"x","depthwiseConv2d","float32"),d=M(t,"filter","depthwiseConv2d","float32"),c=h,f=!1;h.rank===3&&(f=!0,c=G(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),P(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),P(c.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),s==null&&(s=[1,1]),P(Wa(r,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),Kr("fused depthwiseConv2d",n,i);let m=zh(c.shape,d.shape,r,s,n,i,!0),g;o!=null&&(g=M(o,"bias","fused conv2d"),[g]=Bt(g,h),xt(m.outShape,g.shape));let y;u!=null&&(y=M(u,"prelu weights","fused depthwiseConv2d"));let A=(w,I)=>{P(Gs(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[C,E,R,F]=I,$=pm(w,R,l),S=Lw(E.shape,$,C,r,n,s,i),O=Dw(E,$,C.shape,r,n,s,i);if(F!=null){let z=hm(g,$);return[S,O,z]}return[S,O]},x={x:c,filter:d,bias:g,preluActivationWeights:y},b={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return o==null?La((w,I,C)=>{let E=B.runKernel(Vs,x,b);return C([I,w,E]),f&&(E=G(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:A}})(c,d):La((w,I,C,E)=>{let R=B.runKernel(Vs,x,b);return E([I,w,R,C]),f&&(R=G(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:A}})(c,d,g)}var GO=W({fusedDepthwiseConv2d_:VO});function UO({a:e,b:t,transposeA:r=!1,transposeB:n=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(fm(B.state.gradientDepth,s)===!1){let F=Ye(e,t,r,n);return a!=null&&(F=le(F,a)),cm(F,s,i,o)}let l=M(e,"a","fused matMul"),u=M(t,"b","fused matMul");[l,u]=Bt(l,u);let p=r?l.shape[l.rank-2]:l.shape[l.rank-1],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],c=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=St(f),y=St(m);P(p===h,()=>`Error in fused matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${r} and transposeB=${n} must match.`);let A=xt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),x=r?G(l,[g,p,d]):G(l,[g,d,p]),b=n?G(u,[y,c,h]):G(u,[y,h,c]),w;a!=null&&(w=M(a,"bias","fused matMul"),[w]=Bt(w,l),xt(A,w.shape));let I;i!=null&&(I=M(i,"prelu weights","fused matMul"));let C=(F,$)=>{let[S,O,z,j]=$,K=pm(G(F,z.shape),z,s),D,Z;if(!r&&!n?(D=Ye(K,O,!1,!0),Z=Ye(S,K,!0,!1)):!r&&n?(D=Ye(K,O,!1,!1),Z=Ye(K,S,!0,!1)):r&&!n?(D=Ye(O,K,!1,!0),Z=Ye(S,K,!1,!1)):(D=Ye(O,K,!0,!0),Z=Ye(K,S,!0,!0)),a!=null){let V=hm(j,K);return[D,Z,V]}else return[D,Z]},E={a:x,b,bias:w,preluActivationWeights:I},R={transposeA:r,transposeB:n,activation:s,leakyreluAlpha:o};return a==null?La((F,$,S)=>{let O=B.runKernel(Bs,E,R);return S([F,$,O]),{value:G(O,A),gradFunc:C}})(x,b):La((F,$,S,O)=>{let z=B.runKernel(Bs,E,R);return O([F,$,z,S]),{value:G(z,A),gradFunc:C}})(x,b,w)}var jO=W({fusedMatMul_:UO});function HO(e){return dm(e,.54,.46)}var qO=W({hammingWindow_:HO});function KO(e){return dm(e,.5,.5)}var Bw=W({hannWindow_:KO});function XO(e,t,r,n=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(_e(e,s,t)),s+=r;if(n)for(;s<e.size;){let o=s+t-e.size,l=Ct([_e(e,s,t-o),Sd([o],a)]);i.push(l),s+=r}return i.length===0?Kn([],[0,t]):G(Ct(i),[i.length,t])}var Ww=W({frame_:XO});function ZO(e,t,r,n,a=Bw){n==null&&(n=e5(t));let s=Ww(e,t,r),i=L(s,a(t));return lm(i,n)}var YO=W({stft_:ZO});function JO(e,t,r,n,a="bilinear",s=0){let i=M(e,"image","cropAndResize"),o=M(t,"boxes","cropAndResize","float32"),l=M(r,"boxInd","cropAndResize","int32"),u=o.shape[0];P(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),P(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),P(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),P(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),P(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),P(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let p={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:n};return B.runKernel(tl,p,h)}var QO=W({cropAndResize_:JO});function eD(e){let t=M(e,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let r={image:t};return B.runKernel(il,r,{})}var tD=W({flipLeftRight_:eD});function rD(e){let t=M(e,"image","grayscaleToRGB"),r=t.rank-1,n=t.shape[r];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let a=new Array(t.rank);return a.fill(1,0,r),a[r]=3,qn(t,a)}var nD=W({grayscaleToRGB_:rD});function aD(e,t,r=0,n=.5){let a=M(e,"image","rotateWithOffset","float32");P(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:r,center:n};return B.runKernel(zl,s,i)}var sD=W({rotateWithOffset_:aD});function $d(e,t,r,n,a,s){n==null&&(n=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return r=Math.min(r,i),P(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),P(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),P(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),P(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:r,iouThreshold:n,scoreThreshold:a,softNmsSigma:s}}function iD(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let s=M(e,"boxes","nonMaxSuppression","float32"),i=M(t,"scores","nonMaxSuppression","float32"),o=$d(s,i,r,n,a);r=o.maxOutputSize,n=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:r,iouThreshold:n,scoreThreshold:a};return B.runKernel(gl,{boxes:s,scores:i},l)}var oD=W({nonMaxSuppression_:iD});function lD(e,t,r){let n=uD(e,t,r),a=n<0?-(n+1):n;e.splice(a,0,t)}function uD(e,t,r){return pD(e,t,r||dD)}function dD(e,t){return e>t?1:e<t?-1:0}function pD(e,t,r){let n=0,a=e.length,s=0,i=!1;for(;n<a;){s=n+(a-n>>>1);let o=r(t,e[s]);o>0?n=s+1:(a=s,i=!o)}return i?n:-n-1}function Vw(e,t,r,n,a){return r5(e,t,r,n,a,0)}function Gw(e,t,r,n,a,s){return r5(e,t,r,n,a,0,!1,s,!0)}function Uw(e,t,r,n,a,s){return r5(e,t,r,n,a,s,!0)}function r5(e,t,r,n,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(F4);let p=s>0?-.5/s:0,h=[],d=[];for(;h.length<r&&u.length>0;){let g=u.pop(),{score:y,boxIndex:A,suppressBeginIndex:x}=g;if(y<a)break;let b=!1;for(let w=h.length-1;w>=x;--w){let I=hD(e,A,h[w]);if(I>=n){b=!0;break}if(g.score=g.score*cD(n,p,I),g.score<=a)break}g.suppressBeginIndex=h.length,b||(g.score===y?(h.push(A),d.push(g.score)):g.score>a&&lD(u,g,F4))}let c=h.length,f=r-c;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function hD(e,t,r){let n=e.subarray(t*4,t*4+4),a=e.subarray(r*4,r*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),o=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-u)*(d-p);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,p),y=Math.min(o,h),A=Math.min(l,d),x=Math.max(y-m,0)*Math.max(A-g,0);return x/(c+f-x)}function cD(e,t,r){let n=Math.exp(t*r*r);return r<=e?n:0}function F4(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function fD(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let s=M(e,"boxes","nonMaxSuppressionAsync"),i=M(t,"scores","nonMaxSuppressionAsync"),o=$d(s,i,r,n,a);r=o.maxOutputSize,n=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],p=l[1],{selectedIndices:h}=Vw(u,p,r,n,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),$t(h,"int32")}var mD=fD;function gD(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=M(e,"boxes","nonMaxSuppression"),o=M(t,"scores","nonMaxSuppression"),l=$d(i,o,r,n,a,s);r=l.maxOutputSize,n=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},p={maxOutputSize:r,iouThreshold:n,scoreThreshold:a,softNmsSigma:s},h=B.runKernel(yl,u,p);return{selectedIndices:h[0],selectedScores:h[1]}}var yD=W({nonMaxSuppressionWithScore_:gD});async function AD(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=M(e,"boxes","nonMaxSuppressionAsync"),o=M(t,"scores","nonMaxSuppressionAsync"),l=$d(i,o,r,n,a,s);r=l.maxOutputSize,n=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),p=u[0],h=u[1],{selectedIndices:d,selectedScores:c}=Uw(p,h,r,n,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:$t(d,"int32"),selectedScores:$t(c)}}var xD=AD;function bD(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=M(e,"boxes","nonMaxSuppression"),o=M(t,"scores","nonMaxSuppression"),l=$d(i,o,r,n,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:p,scoreThreshold:h,padToMaxOutputSize:s},f=B.runKernel(md,d,c);return{selectedIndices:f[0],validOutputs:f[1]}}var vD=W({nonMaxSuppressionPadded_:bD});async function wD(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=M(e,"boxes","nonMaxSuppressionAsync"),o=M(t,"scores","nonMaxSuppressionAsync"),l=$d(i,o,r,n,a,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Gw(d,c,u,p,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:$t(f,"int32"),validOutputs:Ie(m,"int32")}}var kD=wD;function ID(e,t,r=!1,n=!1){let a=M(e,"images","resizeBilinear");P(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(n===!1||r===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:r,halfPixelCenters:n,size:t},u=B.runKernel(Oi,o,l);return i?G(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var SD=W({resizeBilinear_:ID});function CD(e,t,r=!1,n=!1){let a=M(e,"images","resizeNearestNeighbor");P(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(n===!1||r===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:r,halfPixelCenters:n,size:t},u=B.runKernel(zi,o,l);return i?G(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var TD=W({resizeNearestNeighbor_:CD});function ND(e,t="binary",r=!1,n=.5){let a=M(e,"image","threshold"),s=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1],u=L($t([n]),255),p,h,d,c;if(P(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),P(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),P(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[p,h,d]=Jt(a,[1,1,1],-1);let m=L(p,s),g=L(h,i),y=L(d,o);c=le(le(m,g),y)}else c=e;if(t==="otsu"){let m=v3(me(V3(c),"int32"),ut([]),256);u=ED(m,l)}let f=r?Wl(c,u):wn(c,u);return me(L(f,255),"int32")}function ED(e,t){let r=$t([-1]),n=$t([0]),a=$t([0]),s,i,o,l,u,p;for(let h=0;h<e.size-1;h++){s=_e(e,0,h+1),i=_e(e,h+1),u=pe(ke(s),t),p=pe(ke(i),t);let d=ke(L(s,Lu(0,s.size)));o=pe(d,ke(s));let c=Sd(i.shape,s.size),f=le(Lu(0,i.size),c),m=L(i,f);l=pe(ke(m),ke(i));let g=ce(o,l),y=ce(o,l),A=L(u,p);a=L(L(A,g),y);let x=wn(a,n);n=Ur(x,a,n),r=Ur(x,$t([h]),r)}return r}var RD=W({threshold_:ND});function $D(e,t,r="nearest",n="constant",a=0,s){let i=M(e,"image","transform","float32"),o=M(t,"transforms","transform","float32");P(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),P(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:r,fillMode:n,fillValue:a,outputShape:s};return B.runKernel(Fl,l,u)}var MD=W({transform_:$D});function FD(e,t,r){P(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(r%1===0,()=>`bandPart(): numUpper must be an integer, got ${r}.`);let n=M(e,"a","bandPart");P(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let a=n.shape,[s,i]=n.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(r<=i))throw new Error(`bandPart(): numUpper (${r}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),r<0&&(r=i);let o=G(Lu(0,s,1,"int32"),[-1,1]),l=Lu(0,i,1,"int32"),u=ce(o,l),p=ba(Wl(u,Ie(+t,"int32")),Bl(u,Ie(-r,"int32"))),h=Ot([s,i],n.dtype);return G(dr(ln(G(n,[-1,s,i])).map(d=>Ur(p,d,h))),a)}var _D=W({bandPart_:FD});function PD(e){let t;if(Array.isArray(e)){t=!1,P(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)P(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=Jt(e,e.shape[0],0).map(a=>nt(a,[0]));P(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let r=[],n=e;for(let a=0;a<e.length;++a)r.push(B.tidy(()=>{let s=n[a];if(a>0)for(let i=0;i<a;++i){let o=L(ke(L(r[i],s)),r[i]);s=ce(s,o)}return pe(s,Bh(s,"euclidean"))}));return t?dr(r,0):r}var zD=W({gramSchmidt_:PD});function OD(e,t=!1){if(P(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return _4(e,t);{let r=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),n=ln(G(e,[r,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];n.forEach(l=>{let[u,p]=_4(l,t);a.push(u),s.push(p)});let i=G(dr(a,0),e.shape),o=G(dr(s,0),e.shape);return[i,o]}}function _4(e,t=!1){return B.tidy(()=>{P(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let r=e.shape[0],n=e.shape[1],a=Zf(r),s=Nr(e),i=Kn([[1]],[1,1]),o=Nr(i),l=r>=n?n:r;for(let u=0;u<l;++u){let p=s,h=o,d=a;[o,s,a]=B.tidy(()=>{let c=_e(s,[u,u],[r-u,1]),f=Bh(c),m=_e(s,[u,u],[1,1]),g=Ur(wn(m,0),Kn([[-1]]),Kn([[1]])),y=ce(m,L(g,f)),A=pe(c,y);A.shape[0]===1?o=Nr(i):o=Ct([i,_e(A,[1,0],[A.shape[0]-1,A.shape[1]])],0);let x=Ft(pe(Ye(g,y),f)),b=_e(s,[u,0],[r-u,n]),w=L(x,o),I=et(o);if(u===0)s=ce(b,Ye(w,Ye(I,b)));else{let R=ce(b,Ye(w,Ye(I,b)));s=Ct([_e(s,[0,0],[u,n]),R],0)}let C=et(w),E=_e(a,[0,u],[r,a.shape[1]-u]);if(u===0)a=ce(E,Ye(Ye(E,o),C));else{let R=ce(E,Ye(Ye(E,o),C));a=Ct([_e(a,[0,0],[r,u]),R],1)}return[o,s,a]}),ee([p,h,d])}return!t&&r>n&&(a=_e(a,[0,0],[r,n]),s=_e(s,[0,0],[n,n])),[a,s]})}var DD=W({qr_:OD}),jw=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(jw||{});function LD(e,t,r=3){let n=M(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=M(t,"weights","computeWeightedLoss"));let s=a==null?n:L(n,a);if(r===0)return s;if(r===2)return ke(s);if(r===1){if(a==null)return Gt(s);{let i=n.size/a.size,o=pe(ke(s),ke(a));return i>1?pe(o,Ie(i)):o}}if(r===3){if(a==null)return pe(ke(s),Ie(n.size));{let i=L(a,An(n.shape)),o=me(ke(Du(i,Ie(0))),"float32");return pe(ke(s),o)}}throw Error(`Unknown reduction: ${r}`)}var os=W({computeWeightedLoss_:LD});function BD(e,t,r,n=3){let a=M(e,"labels","absoluteDifference"),s=M(t,"predictions","absoluteDifference"),i=null;r!=null&&(i=M(r,"weights","absoluteDifference")),Hr(a.shape,s.shape,"Error in absoluteDifference: ");let o=sr(ce(a,s));return os(o,i,n)}var WD=W({absoluteDifference_:BD});function VD(e,t,r,n,a=3){let s=M(e,"labels","cosineDistance"),i=M(t,"predictions","cosineDistance"),o=null;n!=null&&(o=M(n,"weights","cosineDistance")),Hr(s.shape,i.shape,"Error in cosineDistance: ");let l=Ie(1),u=ce(l,ke(L(s,i),r,!0));return os(u,o,a)}var GD=W({cosineDistance_:VD});function UD(e,t,r,n=3){let a=M(e,"labels","hingeLoss"),s=M(t,"predictions","hingeLoss"),i=null;r!=null&&(i=M(r,"weights","hingeLoss")),Hr(a.shape,s.shape,"Error in hingeLoss: ");let o=Ie(1);a=ce(L(Ie(2),a),o);let l=Va(ce(o,L(a,s)));return os(l,i,n)}var jD=W({hingeLoss_:UD});function HD(e,t,r,n=1,a=3){let s=M(e,"labels","huberLoss"),i=M(t,"predictions","huberLoss"),o=null;r!=null&&(o=M(r,"weights","huberLoss")),Hr(s.shape,i.shape,"Error in huberLoss: ");let l=Ie(n),u=sr(ce(i,s)),p=Gh(u,l),h=ce(u,p),d=le(L(Ie(.5),vt(p)),L(l,h));return os(d,o,a)}var qD=W({huberLoss_:HD});function KD(e,t,r,n=1e-7,a=3){let s=M(e,"labels","logLoss"),i=M(t,"predictions","logLoss"),o=null;r!=null&&(o=M(r,"weights","logLoss")),Hr(s.shape,i.shape,"Error in logLoss: ");let l=Ie(1),u=Ie(n),p=Ft(L(s,Dn(le(i,u)))),h=L(ce(l,s),Dn(le(ce(l,i),u))),d=ce(p,h);return os(d,o,a)}var XD=W({logLoss_:KD});function ZD(e,t,r,n=3){let a=M(e,"labels","meanSquaredError"),s=M(t,"predictions","meanSquaredError"),i=null;r!=null&&(i=M(r,"weights","meanSquaredError")),Hr(a.shape,s.shape,"Error in meanSquaredError: ");let o=X3(a,s);return os(o,i,n)}var YD=W({meanSquaredError_:ZD});function JD(e,t){let r=M(e,"labels","sigmoidCrossEntropyWithLogits"),n=M(t,"logits","sigmoidCrossEntropyWithLogits");Hr(r.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=Va(n),s=L(n,r),i=Jf(On(Ft(sr(n))));return le(ce(a,s),i)}function QD(e,t,r,n=0,a=3){let s=M(e,"multiClassLabels","sigmoidCrossEntropy"),i=M(t,"logits","sigmoidCrossEntropy"),o=null;if(r!=null&&(o=M(r,"weights","sigmoidCrossEntropy")),Hr(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=Ie(n),p=Ie(1),h=Ie(.5);s=le(L(s,ce(p,u)),L(h,u))}let l=JD(s,i);return os(l,o,a)}var eL=W({sigmoidCrossEntropy_:QD});function tL(e,t,r=-1){if(r===-1&&(r=t.rank-1),r!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${r}`);return La((n,a,s)=>{let i=z3(a,[r],!0),o=ce(me(a,"float32"),i);s([n,o]);let l=Ft(L(o,n));return{value:ke(l,[r]),gradFunc:(u,p)=>{let[h,d]=p,c=Vo(u.shape,[r]);return[L(G(u,c),ce(me(h,"float32"),On(d))),L(G(u,c),ce(On(d),me(h,"float32")))]}}})(e,t)}function rL(e,t,r,n=0,a=3){let s=M(e,"onehotLabels","softmaxCrossEntropy"),i=M(t,"logits","softmaxCrossEntropy"),o=null;if(r!=null&&(o=M(r,"weights","softmaxCrossEntropy")),Hr(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let u=Ie(n),p=Ie(1),h=Ie(s.shape[1]);s=le(L(s,ce(p,u)),pe(u,h))}let l=tL(s,i);return os(l,o,a)}var nL=W({softmaxCrossEntropy_:rL});function aL(e,t,r,n){let a=M(e,"indices","sparseFillEmptyRows","int32"),s=M(t,"values","sparseFillEmptyRows"),i=M(r,"denseShape","sparseFillEmptyRows","int32"),o=M(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=B.runKernel(wh,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var sL=W({sparseFillEmptyRows_:aL});function iL(e,t,r){let n=M(e,"inputIndices","sparseReshape","int32"),a=M(t,"inputShape","sparseReshape","int32"),s=M(r,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:a,newShape:s},o=B.runKernel(vd,i);return{outputIndices:o[0],outputShape:o[1]}}var oL=W({sparseReshape_:iL});function lL(e,t,r){let n=M(e,"data","sparseSegmentMean"),a=M(t,"indices","sparseSegmentMean","int32"),s=M(r,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:a,segmentIds:s};return B.runKernel(kh,i)}var uL=W({sparseSegmentMean_:lL});function dL(e,t,r){let n=M(e,"data","sparseSegmentSum"),a=M(t,"indices","sparseSegmentSum","int32"),s=M(r,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:a,segmentIds:s};return B.runKernel(Ih,i)}var pL=W({sparseSegmentSum_:dL});function hL(e,t,r,n,a,s,i,o){let l=M(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=M(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let p={separator:r,nGramWidths:n,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=B.runKernel(kd,h,p);return{nGrams:d[0],nGramsSplits:d[1]}}var cL=W({stringNGrams_:hL});function fL(e,t,r=!0){let n=M(e,"input","stringSplit","string"),a=M(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:r},i={input:n,delimiter:a},o=B.runKernel(Ch,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var mL=W({stringSplit_:fL});function gL(e,t){let r=M(e,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:r};return B.runKernel(Th,a,n)}var yL=W({stringToHashBucketFast_:gL}),Hw={fft:om,ifft:sh,rfft:lm,irfft:K3},qw={hammingWindow:qO,hannWindow:Bw,frame:Ww,stft:YO},Te={flipLeftRight:tD,grayscaleToRGB:nD,resizeNearestNeighbor:TD,resizeBilinear:SD,rotateWithOffset:sD,cropAndResize:QO,nonMaxSuppression:oD,nonMaxSuppressionAsync:mD,nonMaxSuppressionWithScore:yD,nonMaxSuppressionWithScoreAsync:xD,nonMaxSuppressionPadded:vD,nonMaxSuppressionPaddedAsync:kD,threshold:RD,transform:MD},n5={bandPart:_D,gramSchmidt:zD,qr:DD},Kw={absoluteDifference:WD,computeWeightedLoss:os,cosineDistance:GD,hingeLoss:jD,huberLoss:qD,logLoss:XD,meanSquaredError:YD,sigmoidCrossEntropy:eL,softmaxCrossEntropy:nL},Xw={sparseFillEmptyRows:sL,sparseReshape:oL,sparseSegmentMean:uL,sparseSegmentSum:pL},Zw={stringNGrams:cL,stringSplit:mL,stringToHashBucketFast:yL},ls=class extends cv{minimize(e,t=!1,r){let{value:n,grads:a}=this.computeGradients(e,r);if(r!=null){let s=r.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return ee(a),t?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Yv(e,t)}dispose(){this.iterations_!=null&&ee(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ie(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ls,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var mm=class extends ls{constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=B.registeredVariables[t],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accum_grad`,variable:J(()=>at(n).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${t}/accum_var`,variable:J(()=>at(n).variable(a))});let s=Array.isArray(e)?e[r].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[r].variable,o=this.accumulatedUpdates[r].variable;J(()=>{let l=le(L(i,this.rho),L(vt(s),1-this.rho)),u=L(pe($r(le(o,this.epsilon)),$r(le(i,this.epsilon))),s),p=le(L(o,this.rho),L(vt(u),1-this.rho));i.assign(l),o.assign(p);let h=le(L(u,-this.learningRate),n);n.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ee(this.accumulatedGrads.map(e=>e.variable)),ee(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};mm.className="Adadelta";Zi(mm);var gm=class extends ls{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=B.registeredVariables[t];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accumulator`,variable:J(()=>Sd(n.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[r].variable;J(()=>{let i=le(s,vt(a));s.assign(i);let o=le(L(pe(a,$r(le(i,B.backend.epsilon()))),-this.learningRate),n);n.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ee(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};gm.className="Adagrad";Zi(gm);var ym=class extends ls{constructor(e,t,r,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],J(()=>{this.accBeta1=Ie(t).variable(),this.accBeta2=Ie(r).variable()}),n==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);J(()=>{let r=ce(1,this.accBeta1),n=ce(1,this.accBeta2);t.forEach((a,s)=>{let i=B.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:J(()=>at(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:J(()=>at(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,h=le(L(u,this.beta1),L(l,1-this.beta1)),d=le(L(p,this.beta2),L(vt(l),1-this.beta2)),c=pe(h,r),f=pe(d,n);u.assign(h),p.assign(d);let m=le(L(pe(c,le($r(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ee(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),J(()=>{this.accBeta1.assign(Hs(this.beta1,this.iterations_+1)),this.accBeta2.assign(Hs(this.beta2,this.iterations_+1))});let t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};ym.className="Adam";Zi(ym);var Am=class extends ls{constructor(e,t,r,n=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],J(()=>{this.iteration=Ie(0).variable(),this.accBeta1=Ie(t).variable()}),n==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);J(()=>{let r=ce(1,this.accBeta1),n=pe(-this.learningRate,le(L(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=B.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:at(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:at(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[a];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,h=le(L(u,this.beta1),L(l,1-this.beta1)),d=L(p,this.beta2),c=sr(l),f=is(d,c);u.assign(h),p.assign(f);let m=le(L(pe(n,r),pe(h,le(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(le(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ee(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ee(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Am.className="Adamax";Zi(Am);var Hh=class extends ls{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=Array.isArray(e)?e[r].tensor:e[t];if(n==null)return;let a=B.registeredVariables[t];J(()=>{let s=le(L(this.c,n),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=gr(Ie(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Hh.className="SGD";Zi(Hh);var xm=class extends Hh{constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=Ie(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=B.registeredVariables[t];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${t}/momentum`,variable:J(()=>at(n).variable(!1))});let a=this.accumulations[r].variable,s=Array.isArray(e)?e[r].tensor:e[t];s!=null&&J(()=>{let i,o=le(L(this.m,a),s);this.useNesterov?i=le(L(this.c,le(s,L(o,this.m))),n):i=le(L(this.c,o),n),a.assign(o),n.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ee(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};xm.className="Momentum";Zi(xm);var bm=class extends ls{constructor(e,t=.9,r=0,n=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,n==null&&(this.epsilon=B.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=B.registeredVariables[t],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${t}/rms`,variable:J(()=>at(n).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${t}/momentum`,variable:J(()=>at(n).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${t}/mg`,variable:J(()=>at(n).variable(a))});let s=Array.isArray(e)?e[r].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[r].variable,o=this.accumulatedMoments[r].variable;J(()=>{let l=le(L(i,this.decay),L(vt(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[r].variable,p=le(L(u,this.decay),L(s,1-this.decay)),h=pe(L(s,this.learningRate),$r(ce(l,le(vt(p),this.epsilon)))),d=le(L(o,this.momentum),h);i.assign(l),u.assign(p),o.assign(d);let c=ce(n,d);n.assign(c)}else{let u=le(L(i,this.decay),L(vt(s),1-this.decay)),p=le(L(o,this.momentum),pe(L(s,this.learningRate),$r(le(u,this.epsilon))));i.assign(u),o.assign(p);let h=ce(n,p);n.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ee(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ee(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ee(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};bm.className="RMSProp";Zi(bm);var Rs=class{static sgd(e){return new Hh(e)}static momentum(e,t,r=!1){return new xm(e,t,r)}static rmsprop(e,t=.9,r=0,n=null,a=!1){return new bm(e,t,r,n,a)}static adam(e=.001,t=.9,r=.999,n=null){return new ym(e,t,r,n)}static adadelta(e=.001,t=.95,r=null){return new mm(e,t,r)}static adamax(e=.002,t=.9,r=.999,n=null,a=0){return new Am(e,t,r,n,a)}static adagrad(e,t=.1){return new gm(e,t)}},Co={sgd:Rs.sgd,momentum:Rs.momentum,adadelta:Rs.adadelta,adagrad:Rs.adagrad,rmsprop:Rs.rmsprop,adamax:Rs.adamax,adam:Rs.adam},AL=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function a5(){return new Promise(e=>AL(()=>e()))}var T={};Be(T,{ERF_A1:()=>EL,ERF_A2:()=>RL,ERF_A3:()=>$L,ERF_A4:()=>ML,ERF_A5:()=>FL,ERF_P:()=>NL,PARALLELIZE_THRESHOLD:()=>s5,SELU_SCALE:()=>Jw,SELU_SCALEALPHA:()=>Yw,applyActivation:()=>cm,assertAndGetBroadcastShape:()=>xt,assertAxesAreInnerMostDims:()=>IP,assertParamsConsistent:()=>xL,assignToTypedArray:()=>LL,axesAreInnerMostDims:()=>M3,calculateShapes:()=>nv,checkEinsumDimSizes:()=>jL,checkPadOnDimRoundingMode:()=>Kr,combineLocations:()=>Bv,complexWithEvenIndex:()=>zL,complexWithOddIndex:()=>OL,computeConv2DInfo:()=>zh,computeConv3DInfo:()=>Cv,computeDefaultPad:()=>g3,computeDilation2DInfo:()=>S_,computeOptimalWindowSize:()=>vL,computeOutAndReduceShapes:()=>Wv,computeOutShape:()=>bL,computePool2DInfo:()=>Sv,computePool3DInfo:()=>C_,convertConv2DDataFormat:()=>Tv,decodeEinsumEquation:()=>GL,eitherStridesOrDilationsAreOne:()=>Wa,expandShapeToKeepDim:()=>Vo,exponent:()=>WL,exponents:()=>BL,fromStringArrayToUint8:()=>hB,fromUint8ToStringArray:()=>pB,getAxesPermutation:()=>Vv,getBroadcastDims:()=>ev,getComplexWithIndex:()=>DL,getEinsumComputePath:()=>HL,getEinsumPermutation:()=>UL,getFusedBiasGradient:()=>hm,getFusedDyActivation:()=>pm,getImageCenter:()=>wL,getInnerMostAxes:()=>SP,getPermuted:()=>IL,getReductionAxes:()=>Qt,getReshaped:()=>kL,getReshapedPermuted:()=>SL,getSliceBeginCoords:()=>CL,getSliceSize:()=>TL,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>ZL,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>YL,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>JL,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>tB,getSparseReshapeInputOutputMismatchErrorMessage:()=>nB,getSparseReshapeInputOutputMultipleErrorMessage:()=>rB,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>QL,getSparseReshapeNegativeOutputDimErrorMessage:()=>eB,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>oB,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>aB,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>sB,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>iB,getUndoAxesPermutation:()=>F3,isIdentityPermutation:()=>qL,log:()=>X$,mergeRealAndImagArrays:()=>_L,prepareAndValidate:()=>rv,prepareSplitSize:()=>XL,segment_util:()=>Qw,shouldFuse:()=>fm,slice_util:()=>Lt,splitRealAndImagArrays:()=>PL,tupleValuesAreOne:()=>Gs,upcastType:()=>Rr,validateInput:()=>p3,validateUpdateShape:()=>d3,warn:()=>Ms});function xL(e,t){let r=e[0].length;e.forEach((a,s)=>{P(a.length===r,()=>`Error in concat${r}D: rank of tensors[${s}] must be the same as the rank of the rest (${r})`)}),P(t>=0&&t<r,()=>`Error in concat${r}D: axis must be between 0 and ${r-1}.`);let n=e[0];e.forEach((a,s)=>{for(let i=0;i<r;i++)P(i===t||a[i]===n[i],()=>`Error in concat${r}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function bL(e,t){let r=e[0].slice();for(let n=1;n<e.length;n++)r[t]+=e[n][t];return r}var s5=30;function vL(e){return e<=s5?e:z0(e,Math.floor(Math.sqrt(e)))}function wL(e,t,r){let n=r*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[n,a]}function kL(e,t,r,n=!0){let a=[];if(n)a=a.concat(t.slice(0)),a.push(e[0]/r),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function IL(e,t,r=!0){let n=[];if(r){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);n.push(...a),n.push(0),n.push(...s)}return n}function SL(e,t,r,n=!0){let a=[];n?a.push(e[0]/r):a.push(e[0]*r);for(let s=1;s<e.length;++s)s<=t.length?n?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function CL(e,t){let r=[0];for(let n=0;n<t;++n)r.push(e[n][0]);return r}function TL(e,t,r){let n=e.slice(0,1);for(let a=0;a<r;++a)n.push(e[a+1]-t[a][0]-t[a][1]);return n}var Yw=1.7580993408473768,Jw=1.0507009873554805,NL=.3275911,EL=.254829592,RL=-.284496736,$L=1.421413741,ML=-1.453152027,FL=1.061405429;function _L(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let r=new Float32Array(e.length*2);for(let n=0;n<r.length;n+=2)r[n]=e[n/2],r[n+1]=t[n/2];return r}function PL(e){let t=new Float32Array(e.length/2),r=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],r[n/2]=e[n+1];return{real:t,imag:r}}function zL(e){let t=Math.ceil(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let a=0;a<e.length;a+=4)r[Math.floor(a/4)]=e[a],n[Math.floor(a/4)]=e[a+1];return{real:r,imag:n}}function OL(e){let t=Math.floor(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let a=2;a<e.length;a+=4)r[Math.floor(a/4)]=e[a],n[Math.floor(a/4)]=e[a+1];return{real:r,imag:n}}function DL(e,t){let r=e[t*2],n=e[t*2+1];return{real:r,imag:n}}function LL(e,t,r,n){e[n*2]=t,e[n*2+1]=r}function BL(e,t){let r=new Float32Array(e/2),n=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);r[a]=Math.cos(s),n[a]=Math.sin(s)}return{real:r,imag:n}}function WL(e,t,r){let n=(r?2:-2)*Math.PI*(e/t),a=Math.cos(n),s=Math.sin(n);return{real:a,imag:s}}var Mg="->",VL=/->/g,P4=",",z4="...";function GL(e,t){e=e.replace(/\s/g,"");let r=(e.length-e.replace(VL,"").length)/Mg.length;if(r<1)throw new Error("Equations without an arrow are not supported.");if(r>1)throw new Error(`Equation must contain exactly one arrow ("${Mg}").`);let[n,a]=e.split(Mg);P(n.indexOf(z4)===-1,()=>`The ellipsis notation ("${z4}") is not supported yet.`);let s=n.split(P4),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<a.length;++d){let c=a[d];if(!s.some(f=>f.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let d=0;d<n.length;++d){let c=n[d];o.indexOf(c)===-1&&c!==P4&&o.push(c)}let l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let c=0;c<s[d].length;++c)l[d].push(o.indexOf(s[d][c]))}let u=o.length,p=a.length,h=[];for(let d=p;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function UL(e,t){let r=new Array(e);r.fill(-1);for(let a=0;a<t.length;++a)r[t[a]]=a;let n=[];for(let a=0;a<e;++a)r[a]===-1&&n.push(a);return r=r.filter(a=>a!==-1),{permutationIndices:r,expandDims:n}}function jL(e,t,r){let n=new Array(e);for(let a=0;a<r.length;++a){let s=r[a].shape;for(let i=0;i<t[a].length;++i)n[t[a][i]]===void 0?n[t[a][i]]=s[i]:P(n[t[a][i]]===s[i],()=>`Expected dimension ${n[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function HL(e,t){let r=e,n=[],a=0;e.length===0&&r.push(-1),a=e.length+1;for(let i=0;i<a;++i)n.push([]);let s=[];for(let i=0;i<r.length;++i){let o=r[i],l=KL(t,o);for(let u of l)s.indexOf(u)===-1&&(n[i].push(u),s.push(u))}return{path:r,steps:n}}function qL(e){return e.every((t,r)=>t===r)}function KL(e,t){let r=[];for(let n=0;n<e.length;++n)(e[n].length===0||e[n].indexOf(t)!==-1||t===-1)&&r.push(n);return r}function XL(e,t,r=0){let n=[];if(typeof t=="number")P(e.shape[r]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(e.shape[r]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);P(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[r]-i}P(e.shape[r]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function ZL(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function YL(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function JL(e,t,r){return`indices(${e}, 0) is invalid: ${t} >= ${r}`}function QL(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function eB(e,t){return`size ${e} must be non-negative, not ${t}`}function tB(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function rB(e,t){let r=St(e),n=St(t);return`Input to reshape is a SparseTensor with ${r}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function nB(e,t){let r=St(e),n=St(t);return`Input to reshape is a tensor with ${r} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}function aB(){return"segment ids must be >= 0"}function sB(){return"segment ids are not increasing"}function iB(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function oB(e,t,r){return`Bad: indices[${e}] == ${t} out of range [0, ${r})`}var Qw={};Be(Qw,{collectGatherOpShapeInfo:()=>dB,computeOutShape:()=>uB,segOpComputeOptimalWindowSize:()=>lB});function lB(e,t){let r=!1,n;for(e<=s5?(n=e,r=!0):n=z0(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=z0(e,n+1);return n}function uB(e,t,r){let n=[],a=e.length;for(let s=0;s<a;s++)s!==t?n.push(e[s]):n.push(r);return n}function dB(e,t,r,n){let a=t.shape.length,s=e.shape.length;if(n!==0&&(n<-a||n>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${n}`);if(n<0&&(n+=a),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(r<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${r}).`);for(let h=0;h<n;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[r],o=[],l=1,u=1,p=1;for(let h=0;h<n;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=n;h<r;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=n;h<a;h++)o.push(t.shape[h]);for(let h=r+1;h<s;h++)o.push(e.shape[h]),p*=e.shape[h];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function pB(e){try{return e.map(t=>B0(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function hB(e){return e.map(t=>Rh(t))}var ea={};Be(ea,{nonMaxSuppressionV3Impl:()=>Vw,nonMaxSuppressionV4Impl:()=>Gw,nonMaxSuppressionV5Impl:()=>Uw,whereImpl:()=>$w});var Xa=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xa.prototype)}},ma=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ma.prototype)}},q=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,q.prototype)}},Ge=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ge.prototype)}},e8=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,e8.prototype)}},t8=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=e}};function Go(e,t){if(Array.isArray(e)){let r=[];for(let n=0;n<t;n++)r=r.concat(e);return r}else{let r=new Array(t);return r.fill(e),r}}function Ma(e,t){if(!e)throw new e8(t)}function O4(e,t){let r=0;for(let n of e)n===t&&r++;return r}function sn(e){return e.length===1?e[0]:e}function Nt(e){return Array.isArray(e)?e:[e]}function Za(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ro(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,r)=>r.toUpperCase())}var jn={};function i5(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ny(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>ny(t));else{let t=Object.keys(e);for(let r of t){let n=e[r];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?e[r]=n.value:ny(n))}}}function qh(e,t={},r={},n="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in r)i=r[s];else if(s in jn)i=jn[s];else if(i=t[s],i==null)throw new q(`Unknown ${n}: ${e}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new q(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in r?[o,l]=r[i]:i in jn?[o,l]=jn.className:i in t&&([o,l]=t[i]),o==null)throw new q(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let c of Object.keys(jn))u[c]=jn[c];for(let c of Object.keys(r))u[c]=r[c];let p=s.config;p.customObjects=u;let h={...jn};for(let c of Object.keys(r))jn[c]=r[c];ny(s.config);let d=l(o,s.config,r,a);return jn={...h},d}else{let u={...jn};for(let h of Object.keys(r))jn[h]=r[h];let p=new o(s.config);return jn={...u},p}}}function cB(e,t){return e<t?-1:e>t?1:0}function h0(e,t){return-1*cB(e,t)}function zs(e){if(e==null)return e;let t=[];for(let r of e)t.indexOf(r)===-1&&t.push(r);return t}function fB(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Vl(e,t,r){if(r!=null&&e.indexOf(r)<0)throw new q(`${r} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function o5(e,t,r=0,n=1/0){return Ma(r>=0),Ma(n>=r),Array.isArray(e)&&e.length>=r&&e.length<=n&&e.every(a=>typeof a===t)}function yr(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((r,n)=>yr(r,`element ${n+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${r8(e)}.`)}function r8(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>r8(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function mB(e,t,r){let n=r!=null?r():v.now(),a;return(...s)=>{let i=r!=null?r():v.now();return i-n<t||(n=i,a=e(...s)),a}}function n8(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var gB=0;function a8(){return gB++}var c0={};function vm(e=""){return e in c0||(c0[e]=0),c0[e]+=1,e+c0[e].toString()}var yB=["channelsFirst","channelsLast"],AB=["nearest","bilinear"],xB=["valid","same","causal"],bB=["max","avg"],vB=["sum","mul","concat","ave"],vu=new Map;function Ht(e){Vl(yB,"DataFormat",e)}function wB(e){Vl(AB,"InterpolationFormat",e)}function Vn(e){Vl(xB,"PaddingMode",e)}function s8(e){Vl(bB,"PoolMode",e)}var Kp=[],D4="/";function zo(e,t){Kp.push(e);try{let r=t();return Kp.pop(),r}catch(r){throw Kp.pop(),r}}function kB(){return Kp.length===0?"":Kp.join(D4)+D4}function i8(e){if(!l8(e))throw new Error("Not a valid tensor name: '"+e+"'");return kB()+e}function o8(e){if(!l8(e))throw new Error("Not a valid tensor name: '"+e+"'");vu.has(e)||vu.set(e,0);let t=vu.get(e);if(vu.set(e,vu.get(e)+1),t>0){let r=`${e}_${t}`;return vu.set(r,1),r}else return e}var IB=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function l8(e){return!!e.match(IB)}function SB(e){return e===parseInt(e.toString(),10)}function Os(e,t,r){t==null&&(t=0),r==null&&(r=e.length);let n=1;for(let a=t;a<r;++a)n*=e[a];return n}function Wu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n<t&&(t=n)}return t}function Ks(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n>t&&(t=n)}return t}function va(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let r=[];for(let n=e;n<t;++n)r.push(n);return r}var Fg;function ir(){return Fg==null&&(Fg=Bn().epsilon()),Fg}function wa(){return"channelsLast"}function wm(e,t){return me(e,t)}function Kh(e,t=-1){let r=e.shape.slice();return t<0&&(t=r.length+t+1),r.splice(t,0,1),G(e,r)}function CB(e,t){return J(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let r=Kh(e,1);return ay(r,[1,t,1])})}function TB(e){let t=[Os(e.shape)];return G(e,t)}function NB(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Os(e.shape,1)];return G(e,t)}function Oo(e,t,r){return J(()=>{switch(e.rank){case 1:return jh(e,t,r);case 2:return im(e,[t,0],[r,e.shape[1]]);case 3:return Yi(e,[t,0,0],[r,e.shape[1],e.shape[2]]);case 4:return qs(e,[t,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3]]);case 5:return _e(e,[t,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return _e(e,[t,0,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function _g(e,t,r){return J(()=>{switch(e.rank){case 1:return jh(e,t,r);case 2:return im(e,[0,t],[e.shape[0],r]);case 3:return Yi(e,[0,0,t],[e.shape[0],e.shape[1],r]);case 4:return qs(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],r]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function f0(e,t,r,n){return J(()=>{switch(e.rank){case 1:return jh(e,t,r);case 2:switch(n){case 1:return Oo(e,t,r);case 2:return _g(e,t,r);default:throw new q(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Oo(e,t,r);case 2:return Yi(e,[0,t,0],[e.shape[0],r,e.shape[2]]);case 3:return _g(e,t,r);default:throw new q(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Oo(e,t,r);case 2:return qs(e,[0,t,0,0],[e.shape[0],r,e.shape[2],e.shape[3]]);case 3:return qs(e,[0,0,t,0],[e.shape[0],e.shape[1],r,e.shape[3]]);case 4:return _g(e,t,r);default:throw new q(`The axis is not within the rank of the tensor ${n}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function l5(e,t=-1){let r;return t<0&&(r=e[0].rank,r!==0?t=r:t=0),t===e[0].rank&&(t=-1),Ct(e,t)}function L4(e,t){switch(e.rank){case 1:return w3([e,t]);case 2:return Ll([e,t],0);case 3:return k3([e,t],0);case 4:return I3([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ay(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return qn(e,t)}function km(e,t=0,r=1,n,a){return sm(e,t,r,n,a)}function za(e,t,r,n){if(e.rank<2||t.rank<2)throw new Ge(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new Ge(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Bu.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:n?sy(e.rank,n,wa()):null,activation:r});{let a=e.shape.slice(),s=a.pop();e=G(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],p=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=G(et(t,p),[l,-1]);let h=[...a,...u],d=!1,c=!1;return G(Bu.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:n?sy(e.rank,n,wa()):null,activation:r}),h)}}function u8(e,t,r){return J(()=>(Array.isArray(t)?t=$t(t,"int32"):t=me(t,"int32"),Vh(e,t,r)))}function Xh(e){return L(e,e)}function sy(e,t,r){let n=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(r==="channelsFirst")return n.length===1?G(t,[1,n[0],1,1,1]):G(t,[1,n[3],n[0],n[1],n[2]]);if(r==="channelsLast")return n.length===1?G(t,[1,1,1,1,n[0]]):G(t,[1].concat(n))}else if(e===4){if(r==="channelsFirst")return n.length===1?G(t,[1,n[0],1,1]):G(t,[1,n[2],n[0],n[1]]);if(r==="channelsLast")return n.length===1?G(t,[1,1,1,n[0]]):G(t,[1].concat(n))}else if(e===3){if(r==="channelsFirst")return n.length===1?G(t,[1,n[0],1]):G(t,[1,n[1],n[0]]);if(r==="channelsLast")return n.length===1?G(t,[1,1,n[0]]):G(t,[1].concat(n))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function Sa(e,t,r){return J(()=>(r==null&&(r=wa()),Ht(r),le(e,sy(e.rank,t,r))))}function EB(e,t=1){if(t!==1)throw new Ge(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Lh(e)}function RB(e){return J(()=>pe(e,le(sr(e),1)))}function d8(e,t,r,n){return J(()=>Q3(e,t,r,n))}function $B(e){return J(()=>{let t=le(.5,L(.2,e));return xn(t,0,1)})}function Zh(e,t,r=!1){return r?e():t()}var MB=["fanIn","fanOut","fanAvg"],FB=["normal","uniform","truncatedNormal"];function _B(e){Vl(MB,"FanMode",e)}function PB(e){Vl(FB,"Distribution",e)}var ta=class extends ue.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},u5=class extends ta{apply(e,t){return Ot(e,t)}};u5.className="Zeros";ue.registerClass(u5);var Im=class extends ta{apply(e,t){return An(e,t)}};Im.className="Ones";ue.registerClass(Im);var d5=class extends ta{constructor(e){if(super(),typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return J(()=>L(Ie(this.value),An(e,t)))}getConfig(){return{value:this.value}}};d5.className="Constant";ue.registerClass(d5);var p5=class extends ta{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Nd(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};p5.className="RandomUniform";ue.registerClass(p5);var h5=class extends ta{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`randomNormal does not support dType ${t}.`);return km(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};h5.className="RandomNormal";ue.registerClass(h5);var c5=class extends ta{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`truncatedNormal does not support dType ${t}.`);return um(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};c5.className="TruncatedNormal";ue.registerClass(c5);var f5=class extends ta{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return J(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,Zf(e[0]))})}getConfig(){return{gain:this.gain}}};f5.className="Identity";ue.registerClass(f5);function zB(e,t="channelsLast"){let r,n;if(Ht(t),e.length===2)r=e[0],n=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=Os(e,2);r=e[1]*a,n=e[0]*a}else if(t==="channelsLast"){let a=Os(e,0,e.length-2);r=e[e.length-2]*a,n=e[e.length-1]*a}}else{let a=Os(e);r=Math.sqrt(a),n=Math.sqrt(a)}return[r,n]}var un=class extends ta{constructor(e){if(super(),e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,_B(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,PB(this.distribution),this.seed=e.seed}apply(e,t){let r=zB(e),n=r[0],a=r[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,n):this.mode==="fanOut"?s/=Math.max(1,a):s/=Math.max(1,(n+a)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`${this.getClassName()} does not support dType ${t}.`);return um(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return Nd(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};un.className="VarianceScaling";ue.registerClass(un);var Sm=class extends un{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return un.className}};Sm.className="GlorotUniform";ue.registerClass(Sm);var Cm=class extends un{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return un.className}};Cm.className="GlorotNormal";ue.registerClass(Cm);var Tm=class extends un{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return un.className}};Tm.className="HeNormal";ue.registerClass(Tm);var Nm=class extends un{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return un.className}};Nm.className="HeUniform";ue.registerClass(Nm);var Em=class extends un{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return un.className}};Em.className="LeCunNormal";ue.registerClass(Em);var Rm=class extends un{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return un.className}};Rm.className="LeCunNormal";ue.registerClass(Rm);var m5=class extends ta{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ge("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return J(()=>{if(e.length<2)throw new Ge("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let r=e[0]>e[1]?[e[1],e[0]]:e,n=km(r,0,1,"float32"),a=n5.gramSchmidt(n);return e[0]>e[1]&&(a=et(a)),L(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}};m5.className="Orthogonal";ue.registerClass(m5);var B4={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function W4(e,t={}){return qh(e,ue.SerializationMap.getMap().classNameMap,t,"initializer")}function Dt(e){return i5(e)}function Mt(e){if(typeof e=="string"){let t=e in B4?B4[e]:e;if(t==="GlorotNormal")return new Cm;if(t==="GlorotUniform")return new Sm;if(t==="HeNormal")return new Tm;if(t==="HeUniform")return new Nm;if(t==="LeCunNormal")return new Em;if(t==="LeCunUniform")return new Rm;{let r={};return r.className=t,r.config={},W4(r)}}else return e instanceof ta?e:W4(e)}function iy(e){return Array.isArray(e)&&Array.isArray(e[0])}function q0(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function He(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function gt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function K0(e){let t=0;for(let r of e)r.shape.length===0?t+=1:t+=r.shape.reduce((n,a)=>n*a);return t}var V4="Variable",p8=class{constructor(e,t="float32",r=V4,n=!0,a=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=a8(),r=r==null?V4:r,this.originalName=i8(r),this.name=o8(this.originalName),this.trainable_=n,this.constraint=a,this.val=Y3(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),OB(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function OB(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function oy(e){return e.map(t=>t.read())}function g5(e){e.forEach(t=>{t[0].write(t[1])})}var Yt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},ga=class{constructor(e,t,r,n,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=n,this.callArgs=a,this.outputTensorIndex=i,this.id=a8(),s!=null&&(this.originalName=i8(s),this.name=o8(this.originalName)),this.rank=t.length}},DB=0,$m=class{constructor(e,t){this.callArgs=t,this.id=DB++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let r of e.inboundLayers)r!=null&&r.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},LB=0,st=class extends ue.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=LB++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let r=this.getClassName();t=Za(r)+"_"+vm(r)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let r;if(e.batchInputShape!=null)r=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),r=[a].concat(e.inputShape)}this.batchInputShape=r;let n=e.dtype;n==null&&(n=e.inputDType),n==null&&(n="float32"),this.dtype=n}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new ma(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return sn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return sn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Xa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Xa(`Layer ${this.name} is not connected, no input to return.`);return sn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Xa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Xa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return sn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Nt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=Nt(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let r=0;r<e.length;r++){let n=e[r],a=t[r];if(a==null)continue;let s=n.rank;if(a.ndim!=null&&s!==a.ndim)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(a.maxNDim!=null&&s>a.maxNDim)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(a.minNDim!=null&&s<a.minNDim)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(a.dtype!=null&&n.dtype!==a.dtype)throw new q(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${n.dtype}.`);if(a.axes){let i=n.shape;for(let o in a.axes){let l=Number(o),u=a.axes[o],p=l>=0?i[l]:i[i.length+l];if(u!=null&&[u,null].indexOf(p)===-1)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${i}.`)}}if(a.shape!=null)for(let i=0;i<a.shape.length;++i){let o=a.shape[i],l=n.shape[i];if(o!=null&&l!=null&&o!==l)throw new q(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${n.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let r=Nt(e),n=!0;for(let s of r)if(!(s instanceof ga)){n=!1;break}let a=!0;for(let s of r)if(s instanceof ga){a=!1;break}if(n===a)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return zo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of Nt(e))s.push(i.shape);this.build(sn(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t),i=Nt(s),o=[];for(let l of i)r.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=sn(o),this.activityRegularizer!=null)throw new Ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=BB(e),i=this.computeOutputShape(s),o,l=WB(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((u,p)=>new ga(l,u,this,Nt(e),t,this.name,p)):o=new ga(l,i,this,Nt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new Ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,n)=>{r!=null&&e[n]!=null&&e[n]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Xa(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let r=JSON.stringify(t.outputShapes);e.indexOf(r)===-1&&e.push(r)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Xa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ma(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return K0(this.weights)}build(e){this.built=!0}getWeights(e=!1){return oy(e?this.trainableWeights:this.weights)}setWeights(e){J(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let r=[],n=oy(t);for(let a=0;a<n.length;++a){let s=n[a],i=t[a],o=e[a];if(!v.arraysEqual(s.shape,o.shape))throw new q(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);r.push([i,o])}g5(r)})}addWeight(e,t,r,n,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(n=o!=null?o():Mt("zeros"));let l=n.apply(t,r),u=new p8(l,r,e,s,i);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(u.read())),s==null&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Nt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,r,n,a,s,i=null){let o=Nt(e);t=Nt(t),r=Nt(r),n=Nt(n),a=q0(a),s=q0(s);let l=[],u=[],p=[];for(let h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),p.push(h.tensorIndex);new $m({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:r,outputMasks:n,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function BB(e){e=Nt(e);let t=[];for(let r of e)t.push(r.shape);return sn(t)}function WB(e){return"float32"}function h8(e,t,r){if((t==null||r!=null&&r>0)&&(t=e.sourceLayer,r=e.nodeIndex),t.inboundNodes.length===0)return[e];{let n=t.inboundNodes[r];if(n.inboundLayers.length===0)return n.inputTensors;{let a=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],o=n.inboundLayers[s],l=n.nodeIndices[s],u=h8(i,o,l);for(let p of u)a.indexOf(p)===-1&&a.push(p)}return a}}}var Md=class extends st{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:vm("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,this.inputSpec=[{shape:t}];let n=new ga(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new $m({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Md.className="InputLayer";ue.registerClass(Md);function c8(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let r=e.dtype;return r==null&&(r="float32"),new Md({batchInputShape:t,name:e.name,dtype:r,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function VB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return me(t,e.dtype)}catch(r){throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Fo=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Fo)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,r){if(this.id2Value[e.id]==null)this.id2Value[e.id]=VB(e,t),this.name2Id[e.name]=e.id,r!=null&&(this.id2Mask[e.id]=r);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ga){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ga){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ee(this.id2Mask)}},X0=new t8,Z0=new t8;function GB(e){X0!=null&&X0.setMaxEntries(e),Z0!=null&&Z0.setMaxEntries(e)}function Op(e,t,r,n){let a=r==null?!1:r.training,s=Array.isArray(e),i=s?e:[e],o=i.map(f=>f.name),l=[],u=t.names();for(let f of o)u.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let p=o.join(",")+"|"+t.names().sort().join(","),h=X0.get(p),d;if(h==null){let f=UB(i,t);h=f.sorted,d=f.recipientCounts,X0.put(p,h),Z0.put(p,d)}d={},a||Object.assign(d,Z0.get(p));let c=new Fo(t);for(let f=0;f<h.length;++f){if(n!=null){let R=G0().numTensors;R>n.maxNumTensors&&(n.maxNumTensors=R),R<n.minNumTensors&&(n.minNumTensors=R)}let m=h[f],g=m.sourceLayer;if(g instanceof Md)continue;let y=[],A=[],x=[],b=!1;for(let R of m.inputs){let F=c.getValue(R),$=c.getMask(R);y.push(F),A.push($),$!=null&&(b=!0),a||(d[R.name]--,d[R.name]===0&&!t.hasKey(R)&&o.indexOf(R.name)===-1&&!F.isDisposed&&R.sourceLayer.stateful!==!0&&x.push(F))}b&&(r=r||{},r.mask=A[0]);let w=Nt(g.apply(y,r)),I=null;g.supportsMasking&&(I=g.computeMask(y,A));let C=HB(m),E=Array.isArray(C)?C:[C];for(let R=0;R<E.length;++R){c.hasKey(E[R])||c.add(E[R],w[R],Array.isArray(I)?I[0]:I);let F=o.indexOf(E[R].name);F!==-1&&(l[F]=w[R])}a||ee(x)}return c.disposeMasks(),s?l:l[0]}function UB(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let r=[],n={};if(e.length===1){let a=G4(e[0],t);r=a.sorted,n=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=G4(s,t);for(let l of i)a.has(l.name)||(r.push(l),a.add(l.name));for(let l in o)n[l]==null&&(n[l]=new Set),o[l].forEach(u=>n[l].add(u))}}return{sorted:r,recipientCounts:jB(n)}}function jB(e){let t={};for(let r in e)t[r]=e[r].size;return t}function G4(e,t){let r=new Set,n=[],a={};for(let o of t.names())r.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(r.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),n.push(o),r.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let u of o.inputs)a[u.name]==null&&(a[u.name]=new Set),a[u.name].add(o.name),!r.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:a}}function HB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let r=null;for(let n=0;n<e.sourceLayer.inboundNodes.length;++n)for(let a of e.sourceLayer.inboundNodes[n].outputTensors)if(a.id===e.id){r=n;break}t=e.sourceLayer.getOutputAt(r)}return t}var qB=Y();qB.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,GB);var f8={kernelName:Yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,Rd(me(r,"float32"),-1))}}},KB={kernelName:Yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=vt(me(r,"float32")),a=$r(ce(Ie(1),n));return Ft(pe(e,a))}}}},XB={kernelName:Ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=$r(ce(vt(me(r,"float32")),1));return pe(e,n)}}}},ZB={kernelName:ns,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=xt(r.shape,n.shape);return{a:()=>{let s=e,i=Qt(r.shape,a);return i.length>0&&(s=ke(s,i)),G(s,r.shape)},b:()=>{let s=e,i=Qt(n.shape,a);return i.length>0&&(s=ke(s,i)),G(s,n.shape)}}}},YB={kernelName:ti,saveAllInputs:!0,gradFunc:(e,t)=>{let r={};return t.forEach((n,a)=>{r[a]=()=>e.clone()}),r}},JB={kernelName:ri,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>at(r)}}},QB={kernelName:td,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>at(r)}}},eW={kernelName:rd,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,$r(ce(Ie(1),vt(me(r,"float32")))))}}},tW={kernelName:nd,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=$r(le(Ie(1),vt(me(r,"float32"))));return pe(e,n)}}}},rW={kernelName:id,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=xt(r.shape,n.shape);return{a:()=>{let s=le(vt(r),vt(n)),i=L(e,pe(n,s)),o=Qt(r.shape,a);return o.length>0&&(i=ke(i,o)),G(i,r.shape)},b:()=>{let s=le(vt(r),vt(n)),i=Ft(L(e,pe(r,s))),o=Qt(n.shape,a);return o.length>0&&(i=ke(i,o)),G(i,n.shape)}}}},nW={kernelName:ad,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,le(vt(me(r,"float32")),1))}}},aW={kernelName:sd,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,ce(Ie(1),vt(me(r,"float32"))))}}};function sW(e,t,r,n,a,s){let i=M(e,"dy","avgPool3dGrad"),o=M(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;o.rank===4&&(p=!0,l=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Kr("avgPool3dGrad",a,s);let h={dy:l,input:u},d={filterSize:r,strides:n,pad:a,dimRoundingMode:s},c=B.runKernel(wf,h,d);return p?G(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var iW=W({avgPool3dGrad_:sW}),oW={kernelName:hh,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=r;return{x:()=>iW(e,n,a,s,i,o)}}};function lW(e,t,r,n,a){let s=M(e,"dy","avgPoolGrad"),i=M(t,"input","avgPoolGrad");P(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;i.rank===3&&(u=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=G(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),P(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let p={dy:l,input:o},h={filterSize:r,strides:n,pad:a},d=B.runKernel(vf,p,h);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var uW=W({avgPoolGrad_:lW}),dW={kernelName:ni,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i}=r;return{x:()=>uW(e,n,a,s,i)}}},pW={kernelName:ai,inputsToSave:["a","b"],gradFunc:(e,t,r)=>{let[n,a]=t,{transposeA:s,transposeB:i}=r;return!s&&!i?{a:()=>Ye(e,a,!1,!0),b:()=>Ye(n,e,!0,!1)}:!s&&i?{a:()=>Ye(e,a,!1,!1),b:()=>Ye(e,n,!0,!1)}:s&&!i?{a:()=>Ye(a,e,!1,!0),b:()=>Ye(n,e,!1,!1)}:{a:()=>Ye(a,e,!0,!0),b:()=>Ye(e,n,!0,!0)}}},hW={kernelName:Jo,gradFunc:(e,t,r)=>{let{blockShape:n,crops:a}=r;return{x:()=>nm(e,n,a)}}},cW={kernelName:w6,gradFunc:(e,t,r)=>{let n=r,a=n.inputShape,s=n.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>ke(e,o,!0)}}},fW={kernelName:si,gradFunc:e=>({x:()=>e.clone()})},mW={kernelName:ii,gradFunc:e=>({x:()=>at(e)})},gW={kernelName:as,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{clipValueMin:a,clipValueMax:s}=r;return{x:()=>Ur(ba(Bl(n,a),Wl(n,s)),e,at(e))}}},yW={kernelName:fh,inputsToSave:["x"],gradFunc:f8.gradFunc},AW={kernelName:Qo,saveAllInputs:!0,gradFunc:(e,t,r)=>{let n=t.map(o=>o.shape),{axis:a}=r,s=Yn(a,t[0].shape)[0],i=n.map(o=>o[s]);return Jt(e,i,s).map(o=>()=>o)}},xW={kernelName:oi,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=r;return P(Gs(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>C3(n.shape,e,a,i,o,l),filter:()=>t5(n,e,a.shape,i,o,l)}}},bW={kernelName:li,inputsToSave:["dy","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=r;return{dy:()=>Us(e,a,s,i,o,1,l),filter:()=>t5(e,n,a.shape,s,i,o,l)}}};function vW(e,t,r,n,a){let s=e;e.rank===4&&(s=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P(r.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${r}.`),P(s.shape[4]===r[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${r[3]}.`),P(i.shape[4]===r[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${r[4]}).`);let o={x:s,dy:i},l={strides:n,pad:a,filterShape:r};return B.runKernel(Cf,o,l)}var wW=W({conv3DBackpropFilter_:vW}),kW={kernelName:mh,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s}=r;P(Gs(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,o]=t;return{x:()=>$v(i.shape,e,o,a,s),filter:()=>wW(i,e,o.shape,a,s)}}},IW={kernelName:ui,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(Ft(H3(me(r,"float32"))),e)}}},SW={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(q3(me(r,"float32")),e)}}},CW={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a,exclusive:s,reverse:i}=r;return{x:()=>{let o=Vv([a],n.rank),l=$3(e,a,s,!i);return o!=null&&(l=et(l,o)),l}}}},TW={kernelName:hi,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s,dimRoundingMode:i}=r,o=n==null?[1,1]:n;P(Gs(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),P(Wa(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),Kr("depthwiseConv2d",s,i),{x:()=>Lw(l.shape,e,u,a,s,o,i),filter:()=>Dw(l,e,u.shape,a,s,o,i)}}},NW={kernelName:gh,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,s={x:n,filter:a,dy:e},i={x:n,filter:a,dy:e};return{x:()=>B.runKernel(O0,s,r),filter:()=>B.runKernel(D0,i,r)}}},EW={kernelName:fi,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t,n={dy:e,y:r};return{x:()=>B.runKernel(Mf,n)}}},RW={kernelName:od,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=L(On(Ft(vt(r))),2/Math.sqrt(Math.PI));return{x:()=>L(e,n)}}},$W={kernelName:mi,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,r)}}},MW={kernelName:al,inputsToSave:["input"],gradFunc:(e,t)=>{let[r]=t;return{input:()=>G(e,r.shape)}}},FW={kernelName:sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,On(r))}}},_W={kernelName:gi,gradFunc:e=>({x:()=>at(e)})},PW={kernelName:yi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=xt(r.shape,n.shape);return{a:()=>{let s=pe(e,me(n,"float32")),i=Qt(r.shape,a);return i.length>0?G(ke(s,i),r.shape):s},b:()=>{let s=L(e,me(r,"float32")),i=Qt(n.shape,a);i.length>0&&(s=G(ke(s,i),n.shape));let o=vt(n);return Ft(pe(s,me(o,"float32")))}}}},zW={kernelName:Ai,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,r)=>{let{varianceEpsilon:n}=r,[a,s,i,o]=t,l=o==null?Ie(1):o,u=Qt(s.shape,a.shape),p=[];if(s.rank===1){for(let m=0;m<a.shape.length-1;++m)p.push(a.shape[m]);p.push(1)}let h=ce(a,s),d=L(e,l),c=G3(le(i,Ie(n))),f=L(L(L(c,c),c),Ie(-.5));return{x:()=>s.rank===1?G(L(L(e,qn(G(c,[1,1,1,s.shape[0]]),p)),l),a.shape):G(L(L(e,c),l),a.shape),mean:()=>{let m=L(L(c,Ie(-1)),d);return s.rank===1&&(m=ke(m,u)),G(m,s.shape)},variance:()=>{let m=L(L(f,h),d);return s.rank===1&&(m=ke(m,u)),G(m,s.shape)},scale:()=>{let m=L(h,c),g=L(e,m);return s.rank===1&&(g=ke(g,u)),G(g,s.shape)},offset:()=>{let m=e;return s.rank===1&&(m=ke(m,u)),G(m,s.shape)}}}},OW={kernelName:ol,inputsToSave:["x","indices"],gradFunc:(e,t,r)=>{let[n,a]=t,{axis:s}=r,i=Yn(s,n.shape)[0];return{x:()=>{let o=n.shape,l=a.size,u=o.slice(0,i),p=u.length,h=o.slice(s,o.length).slice(1),d=h.length,c=U4(0,p),f=U4(p+1,p+1+d),m=j4([u,[l],h]),g=G(e,m),y=G(a,[l]),A=j4([[p],c,f]),x=et(g,A),b=Z3(x,y,n.shape[i]),w=F3(A);return b=et(b,w),b},indices:()=>a}}};function U4(e,t){let r=[];for(let n=e;n<t;++n)r.push(n);return r}function j4(e){let t=[];for(let r=0;r<e.length;++r)for(let n=0;n<e[r].length;++n)t.push(e[r][n]);return t}var DW={kernelName:xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>at(r),b:()=>at(n)}}},LW={kernelName:bi,gradFunc:e=>({x:()=>me(e,"float32")})},BW={kernelName:ud,gradFunc:e=>({x:()=>at(e)})},WW={kernelName:dd,gradFunc:e=>({x:()=>at(e)})},VW={kernelName:pd,gradFunc:e=>({x:()=>at(e)})},GW={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{alpha:a}=r,s=wn(n,0);return{x:()=>Ur(s,e,L(e,a))}}},UW={kernelName:hd,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,le(r,1))}}},jW={kernelName:wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,me(r,"float32"))}}},HW={kernelName:I6,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r;return{logits:()=>{let s=On(n);return ce(e,L(ke(e,a,!0),s))}}}};function qW(e,t,r,n=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:r},l={depthRadius:n,bias:a,alpha:s,beta:i};return B.runKernel(zf,o,l)}var KW=W({localResponseNormalizationBackprop_:qW}),XW={kernelName:xh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;return{x:()=>KW(n,a,e,s,i,o,l)}}};function m8(e,t,r,n){return t.rank<r.rank&&(t=G(t,Vo(t.shape,n))),e.rank<r.rank&&(e=G(e,Vo(e.shape,n))),{x:()=>L(e,me(zn(r,t),e.dtype))}}var H4={kernelName:ki,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let n=r,{reductionIndices:a}=n,s=t[0],i=t[1],o=Yn(a,s.shape),l=m8(e,i,s,o);return{x:()=>l.x()}}},ZW={kernelName:Ii,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>L(e,me(Bl(r,n),"float32")),b:()=>L(e,me(_3(r,n),"float32"))}}};function YW(e,t,r,n,a,s,i){let o=M(e,"dy","maxPool3dGrad"),l=M(t,"input","maxPool3dGrad"),u=M(r,"output","maxPool3dGrad"),p=o,h=l,d=u,c=!1;l.rank===4&&(c=!0,p=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=G(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=G(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),P(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),P(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Kr("maxPool3dGrad",s,i);let f={dy:p,input:h,output:d},m={filterSize:n,strides:a,pad:s,dimRoundingMode:i},g=B.runKernel(Df,f,m);return c?G(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var JW=W({maxPool3dGrad_:YW}),QW={kernelName:bh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;return{x:()=>JW(e,n,a,s,i,o,l)}}};function eV(e,t,r,n,a,s,i){let o=M(e,"dy","maxPoolGrad"),l=M(t,"input","maxPoolGrad"),u=M(r,"output","maxPoolGrad");P(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),P(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),P(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Kr("maxPoolGrad",s,i);let p={dy:o,input:l,output:u},h={filterSize:n,strides:a,pad:s,dimRoundingMode:i};return B.runKernel(Of,p,h)}var tV=W({maxPoolGrad_:eV}),rV={kernelName:Si,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o}=r;return{x:()=>tV(e,n,a,s,i,o)}}},nV={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=Yn(a,n.shape),i=Wv(n.shape,s)[1],o=St(i);return{x:()=>{let l=n.shape.slice();s.forEach(p=>{l[p]=1});let u=G(e,l);return pe(L(u,An(n.shape,"float32")),o)}}}},aV={kernelName:Ti,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let n=r,{axis:a}=n,[s,i]=t,o=Yn(a,s.shape),l=m8(e,i,s,o);return{x:()=>l.x()}}},sV={kernelName:Ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>L(e,me(Wl(r,n),"float32")),b:()=>L(e,me(wn(r,n),"float32"))}}},iV={kernelName:Ei,inputsToSave:["x"],gradFunc:(e,t,r)=>{let n=t[0],{paddings:a}=r,s=a.map(i=>i[0]);return{x:()=>_e(e,s,n.shape)}}},oV={kernelName:fd,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=xt(r.shape,n.shape);return{a:()=>{let s=Qt(r.shape,a);return s.length>0?G(ke(e,s),r.shape):e},b:()=>{let s=L(e,Ft(Wh(pe(r,n)))),i=Qt(n.shape,a);return i.length>0?G(ke(s,i),n.shape):s}}}},lV={kernelName:Ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=xt(r.shape,n.shape);return{a:()=>{let s=L(e,me(n,"float32")),i=Qt(r.shape,a);return i.length>0?G(ke(s,i),r.shape):s},b:()=>{let s=L(e,me(r,"float32")),i=Qt(n.shape,a);return i.length>0?G(ke(s,i),n.shape):s}}}},uV={kernelName:fl,gradFunc:e=>({x:()=>Ft(e)})},dV={kernelName:xl,inputsToSave:["indices"],gradFunc:(e,t)=>{let r=t[0];return{indices:()=>Ot(r.shape,"float32")}}},pV={kernelName:Al,gradFunc:e=>({x:()=>at(e)})},hV={kernelName:bl,saveAllInputs:!0,gradFunc:(e,t,r)=>{let{axis:n}=r;return ln(e,n).map(a=>()=>a)}},q4={kernelName:$i,inputsToSave:["x"],gradFunc:(e,t,r)=>{let n=t[0],{paddings:a}=r,s=a.map(i=>i[0]);return{x:()=>_e(e,s,n.shape)}}},cV={kernelName:Mi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[r,n,a]=t,s=r,i=n,o=xt(s.shape,i.shape);return{a:()=>{let l=me(i,"float32"),u=L(e,L(l,Hs(s,ce(l,Ie(1))))),p=Qt(s.shape,o);return p.length>0&&(u=ke(u,p)),G(u,s.shape)},b:()=>{let l=wn(s,0),u=Ur(l,Dn(s),at(s)),p=L(e,L(a,u)),h=Qt(i.shape,o);return h.length>0&&(p=ke(p,h)),G(p,i.shape)}}}},fV={kernelName:Fi,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[r,n]=t,a=wn(r,0);return{x:()=>Ur(a,e,L(e,n)),alpha:()=>{let s=Ur(a,at(e),L(e,r)),i=Qt(n.shape,e.shape);return i.length>0&&(s=ke(s,i)),G(s,n.shape)}}}};function mV(e,t,r){let n=e.shape.slice();n[r]=1;let a=G(t,n),s=H0(e,r,!0,!1),i=H0(e,r,!0,!0),o=L(s,i);return L(a,o)}function gV(e,t,r){let n=e.shape.length,a=n-r.length,s=T.getAxesPermutation(r,n),i=e;s!=null&&(i=et(e,s));let o=i.shape.slice(),l=o.splice(n-r.length,r.length).reduce((h,d)=>h*d,1);o.push(l);let u=i.reshape(o),p=mV(u,t,a);if(p=p.reshape(i.shape),s!=null){let h=T.getUndoAxesPermutation(s);p=et(p,h)}return p}var yV={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=[];return a==null?s=n.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>gV(n,e,s)}}},AV={kernelName:ci,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=xt(r.shape,n.shape);return{a:()=>{let s=pe(e,me(n,"float32")),i=Qt(r.shape,a);return i.length>0?G(ke(s,i),r.shape):s},b:()=>{let s=L(e,me(r,"float32")),i=Qt(n.shape,a);i.length>0&&(s=G(ke(s,i),n.shape));let o=vt(n);return Ft(pe(s,me(o,"float32")))}}}},xV={kernelName:yd,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,Ft(vt(r)))}}},bV={kernelName:Di,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=L(Wl(r,6),Rd(r));return{x:()=>L(e,me(n,"float32"))}}},vV={kernelName:Pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,me(Rd(r),"float32"))}}},wV={kernelName:vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>G(e,r.shape)}}},kV={kernelName:Oi,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>B.runKernel(Vf,a,r)}}},IV={kernelName:zi,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>B.runKernel(Wf,a,r)}}},SV={kernelName:wl,gradFunc:(e,t,r)=>{let{dims:n}=r,a=Yn(n,e.shape);return{x:()=>Zn(e,a)}}},CV={kernelName:kl,gradFunc:e=>({x:()=>at(e)})},TV={kernelName:Li,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>Ft(pe(e,L(Hs(r,1.5),2)))}}},NV={kernelName:Sl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[r]=t;return{condition:()=>me(at(r),"float32"),t:()=>L(e,me(r,e.dtype)),e:()=>L(e,me(em(r),e.dtype))}}},EV={kernelName:Ad,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=wn(r,Ie(0)),a=Ie(Yw),s=Ie(Jw),i=L(e,s),o=L(L(e,a),On(me(r,"float32")));return Ur(n,i,o)}}}},RV={kernelName:Wi,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,L(r,ce(Ie(1),r)))}}},$V={kernelName:xd,gradFunc:e=>({x:()=>at(e)})},MV={kernelName:Bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(Xf(me(r,"float32")),e)}}},FV={kernelName:Tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(R3(me(r,"float32")),e)}}},_V={kernelName:Cl,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{begin:a,size:s}=r,i=n.shape,[o,l]=hv(n,a,s),u=[];for(let p=0;p<e.rank;p++)u.push([o[p],i[p]-o[p]-l[p]]);return{x:()=>Qn(e,u)}}},PV={kernelName:Ui,outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{dim:a}=r,s=!0,i=L(e,n);return{logits:()=>ce(i,L(ke(i,[a],s),n))}}},zV={kernelName:bd,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,Er(r))}}},K4={kernelName:Nl,gradFunc:(e,t,r)=>{let{blockShape:n,paddings:a}=r;return{x:()=>Kf(e,n,a)}}},X4={kernelName:El,gradFunc:(e,t,r)=>{let{axis:n}=r;return{x:()=>Ct(e,n)}}},OV={kernelName:Vi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,L($r(me(r,"float32")),2))}}},DV={kernelName:wd,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,L(me(r,"float32"),2))}}},LV={kernelName:ji,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=Ie(2);return{a:()=>L(e,L(a,ce(r,n))),b:()=>L(e,L(a,ce(n,r)))}}},BV={kernelName:Ki,gradFunc:e=>({x:()=>at(e)})},WV={kernelName:Hi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=xt(r.shape,n.shape);return{a:()=>{let s=e,i=Qt(r.shape,a);return i.length>0&&(s=ke(s,i)),G(s,r.shape)},b:()=>{let s=e,i=Qt(n.shape,a);return i.length>0&&(s=ke(s,i)),G(Ft(s),n.shape)}}}},VV={kernelName:Gi,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,a=n.shape.slice(),{axis:s}=r;Yn(s,n.shape).forEach(l=>{a[l]=1});let i=G(e,a),o=L(i,An(n.shape,"float32"));return{x:()=>o}}},GV={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>pe(e,vt(Xf(r)))}}},UV={kernelName:qi,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(ce(Ie(1),vt(r)),e)}}},jV={kernelName:ss,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{reps:a}=r;return{x:()=>{let s=at(n);if(n.rank===1)for(let i=0;i<a[0];++i)s=le(s,_e(e,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=le(s,_e(e,[i*n.shape[0],o*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)s=le(s,_e(e,[i*n.shape[0],o*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let l=0;l<a[2];++l)for(let u=0;u<a[3];++u)s=le(s,_e(e,[i*n.shape[0],o*n.shape[1],l*n.shape[2],u*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return s}}}},HV={kernelName:Pa,gradFunc:(e,t,r)=>{let n=r,{perm:a}=n,s=F3(a);return{x:()=>et(e,s)}}},qV={kernelName:_l,gradFunc:(e,t,r)=>{let n=r,{axis:a}=n;return{value:()=>dr(e,a)}}},KV={kernelName:Nh,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>XV(e,r)}}};function XV(e,t){let r=is(t,at(t)),n=Vh(e,r),a=Bl(t,Ie(0,"int32")),s=n.rank-a.rank;for(let o=0;o<s;++o)a=Zt(a,o+1);a=ba(a,An(n.shape,"bool"));let i=at(n);return Ur(a,n,i)}var ZV={kernelName:Pl,gradFunc:e=>({x:()=>at(e)})},YV=[f8,KB,XB,ZB,YB,JB,QB,eW,tW,rW,nW,aW,oW,dW,pW,hW,cW,fW,mW,gW,yW,AW,bW,xW,kW,IW,SW,CW,TW,NW,AV,EW,RW,$W,MW,FW,PW,_W,zW,OW,DW,LW,BW,WW,VW,GW,UW,jW,HW,XW,H4,H4,ZW,QW,rV,nV,aV,sV,iV,oV,lV,uV,dV,pV,hV,q4,q4,cV,fV,yV,xV,bV,vV,wV,kV,IV,SV,CV,TV,NV,EV,RV,$V,MV,FV,_V,PV,zV,K4,K4,X4,X4,OV,LV,DV,BV,WV,VV,GV,UV,jV,HV,qV,KV,ZV];for(let e of YV)S6(e);var g8={};Be(g8,{maxNorm:()=>JV,minMaxNorm:()=>tG,nonNeg:()=>eG,unitNorm:()=>QV});function y5(e,t){return J(()=>$r(ke(L(e,e),t,!0)))}var Yh=class extends ue.Serializable{getConfig(){return{}}},A5=class extends Yh{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return J(()=>{let t=y5(e,this.axis),r=xn(t,0,this.maxValue);return L(e,pe(r,le(ir(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};A5.className="MaxNorm";ue.registerClass(A5);var x5=class extends Yh{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return J(()=>pe(e,le(ir(),y5(e,this.axis))))}getConfig(){return{axis:this.axis}}};x5.className="UnitNorm";ue.registerClass(x5);var b5=class extends Yh{apply(e){return Va(e)}};b5.className="NonNeg";ue.registerClass(b5);var v5=class extends Yh{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return J(()=>{let t=y5(e,this.axis),r=le(L(this.rate,xn(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,pe(r,le(ir(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};v5.className="MinMaxNorm";ue.registerClass(v5);var Z4={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function lr(e){return i5(e)}function Y4(e,t={}){return qh(e,ue.SerializationMap.getMap().classNameMap,t,"constraint")}function ur(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in Z4?Z4[e]:e,config:{}};return Y4(t)}else return e instanceof Yh?e:Y4(e)}function JV(e){return new A5(e)}function QV(e){return new x5(e)}function eG(){return new b5}function tG(e){return new v5(e)}var y8={};Be(y8,{constant:()=>aG,glorotNormal:()=>pG,glorotUniform:()=>dG,heNormal:()=>hG,heUniform:()=>cG,identity:()=>lG,leCunNormal:()=>fG,leCunUniform:()=>mG,ones:()=>nG,orthogonal:()=>gG,randomNormal:()=>iG,randomUniform:()=>sG,truncatedNormal:()=>oG,varianceScaling:()=>uG,zeros:()=>rG});function rG(){return new u5}function nG(){return new Im}function aG(e){return new d5(e)}function sG(e){return new p5(e)}function iG(e){return new h5(e)}function oG(e){return new c5(e)}function lG(e){return new f5(e)}function uG(e){return new un(e)}function dG(e){return new Sm(e)}function pG(e){return new Cm(e)}function hG(e){return new Tm(e)}function cG(e){return new Nm(e)}function fG(e){return new Em(e)}function mG(e){return new Rm(e)}function gG(e){return new m5(e)}var A8={};Be(A8,{Layer:()=>st,RNN:()=>us,RNNCell:()=>ec,activation:()=>WU,add:()=>ZU,alphaDropout:()=>Fj,average:()=>YU,averagePooling1d:()=>RA,averagePooling2d:()=>$A,averagePooling3d:()=>MA,avgPool1d:()=>ij,avgPool2d:()=>lj,avgPool3d:()=>dj,avgPooling1d:()=>oj,avgPooling2d:()=>uj,avgPooling3d:()=>pj,batchNormalization:()=>nj,bidirectional:()=>Sj,concatenate:()=>JU,conv1d:()=>MU,conv2d:()=>FU,conv2dTranspose:()=>_U,conv3d:()=>PU,conv3dTranspose:()=>zU,convLstm2d:()=>vj,convLstm2dCell:()=>wj,cropping2D:()=>DU,dense:()=>VU,depthwiseConv2d:()=>BU,dot:()=>rj,dropout:()=>GU,elu:()=>CU,embedding:()=>XU,flatten:()=>jU,gaussianDropout:()=>Mj,gaussianNoise:()=>$j,globalAveragePooling1d:()=>hj,globalAveragePooling2d:()=>cj,globalMaxPool1d:()=>Tj,globalMaxPool2d:()=>Nj,globalMaxPooling1d:()=>ck,globalMaxPooling2d:()=>fk,gru:()=>mj,gruCell:()=>gj,input:()=>z8,inputLayer:()=>SU,layerNormalization:()=>aj,leakyReLU:()=>NU,lstm:()=>yj,lstmCell:()=>Aj,masking:()=>_j,maxPool1d:()=>Ej,maxPool2d:()=>Rj,maxPooling1d:()=>mk,maxPooling2d:()=>gk,maxPooling3d:()=>fj,maximum:()=>QU,minimum:()=>ej,multiply:()=>tj,permute:()=>KU,prelu:()=>EU,reLU:()=>TU,repeatVector:()=>HU,reshape:()=>qU,rnn:()=>kj,separableConv2d:()=>OU,simpleRNN:()=>xj,simpleRNNCell:()=>bj,softmax:()=>RU,spatialDropout1d:()=>UU,stackedRNNCells:()=>Ij,thresholdedReLU:()=>$U,timeDistributed:()=>Cj,upSampling2d:()=>LU,zeroPadding2d:()=>sj});async function $s(e){if(e==null)return;let t=[],r=[],n=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),r.push(a),n.push(i)}}if(t.length>0){let a=await Promise.all(t);for(let s=0;s<a.length;++s)e[r[s]]=a[s][0];ee(n)}}function x8(e){if(e!=null)for(let t in e){let r=e[t];typeof r!="number"&&r.dispose()}}var yG=125,Vu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},b8=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},AG=class extends Vu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let r=t.size==null?0:t.size;this.seen+=r;for(let n in t){let a=t[n];if(typeof a=="number")this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+a*r;else{let s;n in this.totals?s=this.totals[n]:this.totals[n]=0;let i=J(()=>le(this.totals[n],L(a,r)));this.totals[n]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?t[r]=this.totals[r]/this.seen:J(()=>{let n=L(pe(1,this.seen),this.totals[r]);t[r]=n,this.totals[r].dispose(),gr(t[r])}))}},v8=class extends Vu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let r in t)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(t[r])}async syncData(){let e=[],t=[],r=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),r.push(i)}}let n=await Promise.all(e);for(let a=0;a<n.length;++a)this.history[t[a]][r[a]].dispose(),this.history[t[a]][r[a]]=n[a][0]}},w8=class extends Vu{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||a5,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=yG),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=mB(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){let n=[];this.yield!=null&&(await $s(r),n.push(this.yield(e,t,r))),n.push(this.nextFrameFunc()),await Promise.all(n)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await $s(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let r=[];this.epochEnd!=null&&(await $s(t),r.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){this.batchBegin!=null&&(await $s(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let r=[];this.batchEnd!=null&&(await $s(t),r.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){this.trainBegin!=null&&(await $s(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await $s(e),await this.trainEnd(e))}};function k8(e,t){return e==null&&(e={}),e instanceof Vu?[e]:Array.isArray(e)&&e[0]instanceof Vu?e:Nt(e).map(r=>new w8(r,t))}var Ra=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ra.checkForDuplicate(t),Ra.constructors[e]==null&&(Ra.constructors[e]=[]),Ra.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Ra.constructors)Ra.constructors[+t].forEach(r=>{if(r===e)throw new q("Duplicate callback constructor.")})}static clear(){Ra.constructors={}}static createCallbacks(e){let t=[];for(let r in Ra.constructors){let n=+r;e>=n&&t.push(...Ra.constructors[n])}return t.map(r=>new r)}},w5=Ra;w5.constructors={};function I8(e,t,r,n,a,s,i,o,l){let u=new v8,p=[new AG,...w5.createCallbacks(t)];e!=null&&p.push(...e),p.push(u);let h=new b8(p);return h.setParams({epochs:r,initialEpoch:n,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Aa(e,t={},r=!1){return qh(e,ue.SerializationMap.getMap().classNameMap,t,"layer",r)}function Y0(e,t){return J(()=>{e.dtype!=="float32"&&(e=me(e,"float32"));let r=ke(Xh(e),t,!0),n=Sd(r.shape,ir()),a=$r(is(r,n));return pe(e,a)})}function Gl(e,t){return J(()=>Gt(Xh(ce(t,e)),-1))}function Mm(e,t){return J(()=>Gt(sr(ce(t,e)),-1))}function Fd(e,t){return J(()=>{let r=ce(e,t),n=xn(sr(e),ir(),Number.MAX_VALUE),a=sr(pe(r,n));return L(100,Gt(a,-1))})}function xG(e,t){return J(()=>{let r=xn(t,ir(),Number.MAX_VALUE),n=Dn(le(1,r)),a=xn(e,ir(),Number.MAX_VALUE),s=Dn(le(1,a));return Gt(Xh(ce(n,s)),-1)})}function bG(e,t){return J(()=>{let r=is(0,ce(1,L(e,t)));return Gt(Xh(r),-1)})}function vG(e,t){return J(()=>{let r=is(0,ce(1,L(e,t)));return Gt(r,-1)})}function wG(e,t){return J(()=>{let r=ke(L(e,t),-1),n=Ar(L(ce(1,e),t),-1);return is(0,le(1,ce(n,r)))})}function kG(e,t){return J(()=>{let r=Math.log(2),n=ce(t,e),a=ce(le(n,Cd(L(-2,n))),r);return Gt(a,-1)})}function ih(e,t,r=!1){return J(()=>{if(r)t=Ed(t);else{let n=ke(t,t.shape.length-1,!0);t=pe(t,n)}return t=xn(t,ir(),1-ir()),Ft(ke(L(me(e,"float32"),Dn(t)),t.shape.length-1))})}function J0(e,t,r=!1){return J(()=>{let n=me(Wh(TB(e)),"int32");t=xn(t,ir(),1-ir());let a=t.shape,s=G(ah(n,a[a.length-1]),a);return ih(s,t,r)})}function IG(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return J(()=>{let r=Va(t),n=Ft(sr(t));return le(ce(r,L(t,e)),Jf(On(n)))})}function Fm(e,t){return J(()=>{let r;return r=xn(t,ir(),1-ir()),r=Dn(pe(r,ce(1,r))),Gt(IG(e,r),-1)})}function SG(e,t){return J(()=>{let r=xn(e,ir(),1),n=xn(t,ir(),1);return ke(L(e,Dn(pe(r,n))),-1)})}function CG(e,t){return J(()=>{let r=Dn(le(ir(),t));return Gt(ce(t,L(e,r)),-1)})}function k5(e,t){return J(()=>{let r=Y0(e,-1),n=Y0(t,-1),a=L(r,n);return Ft(ke(a,-1))})}var Q0={meanSquaredError:Gl,meanAbsoluteError:Mm,meanAbsolutePercentageError:Fd,meanSquaredLogarithmicError:xG,squaredHinge:bG,hinge:vG,categoricalHinge:wG,logcosh:kG,categoricalCrossentropy:ih,sparseCategoricalCrossentropy:J0,binaryCrossentropy:Fm,kullbackLeiblerDivergence:SG,poisson:CG,cosineProximity:k5};function Pg(e){if(typeof e=="string"){if(e in Q0)return Q0[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function I5(e,t){return J(()=>{let r=L(.5,Ln(t)),n=wm(wn(t,r),e.dtype);return Gt(zn(e,n),-1)})}function S5(e,t){return J(()=>wm(zn(Pn(e,-1),Pn(t,-1)),"float32"))}function S8(e,t){return J(()=>me(ke(ba(zn(e,1),zn(t,1))),"float32"))}function TG(e,t){return J(()=>me(ke(ba(zn(e,1),zn(t,0))),"float32"))}function NG(e,t){return J(()=>me(ke(ba(zn(e,0),zn(t,1))),"float32"))}function C8(e,t){return J(()=>{let r=S8(e,t),n=NG(e,t),a=le(r,n);return me(Ur(wn(a,0),pe(r,a),0),"float32")})}function EG(e,t){return J(()=>{let r=S8(e,t),n=TG(e,t),a=le(r,n);return me(Ur(wn(a,0),pe(r,a),0),"float32")})}function T8(e,t){return Fm(e,t)}function N8(e,t){return e.rank===t.rank&&(e=nt(e,[e.rank-1])),t=Pn(t,-1),t.dtype!==e.dtype&&(t=me(t,e.dtype)),me(zn(e,t),"float32")}var RG=Gl,$G=Gl,MG=Mm,FG=Mm,_G=Fd,PG=Fd,C5=ih,zG=k5,E8=J0,ef={binaryAccuracy:I5,categoricalAccuracy:S5,precision:C8,categoricalCrossentropy:C5,sparseCategoricalCrossentropy:E8,mse:RG,MSE:$G,mae:MG,MAE:FG,mape:_G,MAPE:PG,cosine:zG};function OG(e){if(typeof e=="string"&&e in ef)return ef[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function m0(e){if(Ma(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let r of Object.keys(Q0))if(Q0[r]===e){t=r;break}if(t!==void 0)return t;for(let r of Object.keys(ef))if(ef[r]===e){t=r;break}return t!==void 0?t:e.name}}function DG(e){let t={Adagrad:()=>Co.adagrad(.01),Adadelta:()=>Co.adadelta(1,.95,ir()),Adam:()=>Co.adam(.001,.9,.999,ir()),Adamax:()=>Co.adamax(.002,.9,.999,ir(),0),RMSProp:()=>Co.rmsprop(.001,.9,0,ir()),SGD:()=>Co.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var J4=1*1024*1024;function Q4(e,t,r=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!ly(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(r){let n=JSON.stringify(e);n.length>J4&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${J4}.`)}}function ly(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let r of t)if(typeof r!="string"||!ly(e[r]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!ly(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function LG(e,t,r,n=console.log){let a=WG(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,r=r||[.32,.61,.89,1]):(t=t||115,r=r||[.24,.48,.7,.8,1]),r[r.length-1]<=1&&(r=r.map(p=>Math.floor(t*p)));let i;if(!a){s.push("Receives inputs"),i=[];for(let p in e.nodesByDepth)i.push(...e.nodesByDepth[p])}n("_".repeat(t)),tf(s,r,n),n("=".repeat(t));let o=e.layers;for(let p=0;p<o.length;++p)a?VG(o[p],r,n):GG(o[p],r,i,n),n((p===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=BG(e),u=K0(e.nonTrainableWeights);n(`Total params: ${l+u}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${u}`),n("_".repeat(t))}function BG(e){let t;return e.collectedTrainableWeights!=null?t=K0(e.collectedTrainableWeights):t=K0(e.trainableWeights),t}function WG(e){let t=!0,r=[],n=[];for(let a in e.nodesByDepth)r.push(e.nodesByDepth[a]);for(let a of r){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}n.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(n.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function tf(e,t,r=console.log){let n="";for(let a=0;a<e.length;++a)a>0&&(n=n.slice(0,n.length-1)+" "),n+=e[a],n=n.slice(0,t[a]),n+=" ".repeat(t[a]-n.length);r(n)}function VG(e,t,r){let n,a;try{a=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch(l){a="multiple"}try{n=JSON.stringify(e.outputShape)}catch(l){n="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,n,e.countParams().toString()];tf(o,t,r)}function GG(e,t,r,n){let a,s;try{s=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch(h){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(h){a="multiple"}let i=[];for(let h of e.inboundNodes)if(!(r!=null&&r.length>0&&r.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){let c=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${c}[${f}][${m}]`)}let o=e.name,l=e.getClassName(),u=i.length===0?"":i[0],p=[`${o} (${l})`,s,a,e.countParams().toString(),u];tf(p,t,n);for(let h=1;h<i.length;++h)tf(["","","","",i[h]],t,n)}function R8(e,t,r){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof r=="string"}function oh(e,t){if(e===null)return null;if(typeof e=="string")return Ro(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let r=[],n=e.length;for(let a=0;a<n;++a){let s=e[a];R8(t,a,s)?r.push(s):r.push(oh(s,t))}return r}else{let r={};for(let n of Object.keys(e)){let a=e[n];if(n==="name"&&typeof a=="string")r[n]=a;else{let s=Ro(n);r[s]=oh(a,s)}}return r}}function uy(e,t){if(e==null)return null;if(typeof e=="string")return Za(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let r=[],n=e.length;for(let a=0;a<n;++a){let s=e[a];R8(t,a,s)?r.push(s):r.push(uy(s,t))}return r}else{let r={};for(let n of Object.keys(e)){let a=e[n],s=Za(n);(n==="name"||n==="className")&&typeof a=="string"?r[s]=a:r[s]=uy(a,n)}return r}}var T5="0.0.0",$a=class extends st{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=vm(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],zs(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);zs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(A),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;Ma(x===0,"input layer has >1 nodes"),Ma(b===0,"input layer has >1 tensors"),this.inputLayers.push(A),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let A=this.inputLayers[y];if(!(A instanceof Md))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${A.getClassName()}.`);this.inputNames.push(A.name),this.feedInputShapes.push(A.batchInputShape),this.feedInputNames.push(A.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},r={},n={},a={},s={},i=[],o=(y,A,x,b,w,I)=>{(b==null||w==null||I==null)&&(b=y.sourceLayer,w=y.nodeIndex,I=y.tensorIndex);let C=b.inboundNodes[w];if(x.indexOf(C)!==-1)throw new ma(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(A.indexOf(C)!==-1)return;this.containerNodes.add($a.nodeKey(b,w)),b.id in s||(s[b.id]=Object.keys(s).length),x.indexOf(C)===-1&&x.push(C);let E=C.inboundLayers.length;for(let R=0;R<E;R++){let F=C.inputTensors[R],$=C.inboundLayers[R],S=C.nodeIndices[R],O=C.tensorIndices[R];o(F,A,x,$,S,O)}for(A.push(C);x.indexOf(C)>=0;)x.splice(x.indexOf(C),1);i.push(C)},l=[],u=[];for(let y of this.outputs)o(y,l,u);let p=i.slice().reverse();for(let y of p){r[y.id]=y,y.id in t||(t[y.id]=0);let A=t[y.id],x=n[y.outboundLayer.id]==null?0:n[y.outboundLayer.id];A=Math.max(A,x),n[y.outboundLayer.id]=A,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=A;for(let b=0;b<y.inboundLayers.length;b++){let w=y.inboundLayers[b],I=y.nodeIndices[b],C=w.inboundNodes[I],E=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(A+1,E),r[C.id]=C}}let h={};for(let y in t){let A=t[y];A in h||(h[A]=[]),h[A].push(r[y])}let d={};for(let y in n){let A=n[y];A in d||(d[A]=[]),d[A].push(a[y])}let c=Object.keys(d).map(y=>parseInt(y,10)).sort(h0);this.layers=[];for(let y of c){let A=d[y];A.sort((x,b)=>{let w=s[x.id],I=s[b.id];return w<I?-1:w>I?1:0});for(let x of A)x instanceof $a&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=d,c=Object.keys(h).map(y=>parseInt(y,10)).sort(h0);let f=this.inputs.slice(),m=[];for(let y of c)for(let A of h[y]){let x=A.outboundLayer;if(x!=null){for(let b of A.inputTensors)if(f.indexOf(b)===-1)throw new ma(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${x.name}". The following previous layers were accessed without issue: ${m}`);for(let b of A.outputTensors)f.push(b);m.push(x.name)}}this.nodesByDepth=h;let g=this.layers.map(y=>y.name);for(let y of g){let A=g.filter(x=>x===y).length;if(A!==1)throw new ma(`The name "${y}" is used ${A} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new $m({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(r=>r.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let r of this.layers)t.push(...r.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let r={},n=0;for(let s of this.layers)for(let i of s.weights){if(r[i.originalName]!=null)throw new q(`Duplicate weight name: ${i.originalName}`);r[i.originalName]=i,n++}let a=[];for(let s in e){let i=s;if(r[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(r[i]!=null)a.push([r[i],e[s]]);else if(t)throw new q(`Provided weight data has no target variable: ${s}`);delete r[i]}if(t){let s=[];for(let i in r)s.push(i);if(s.length>0)throw new q(`${s.length} of ${n} weights are not set: ${s}`)}g5(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${T5}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let r=uy(this.updatedConfig());return t?JSON.stringify(r):r}call(e,t){return J(()=>{e=Nt(e);let r=new Fo;for(let n=0;n<this.inputs.length;++n)r.add(this.inputs[n],e[n]);return Op(this.outputs,r,t)})}computeMask(e,t){return J(()=>{e=Nt(e);let r;return t==null?r=Go(null,e.length):r=Nt(t),this.runInternalGraph(e,r)[1]})}computeOutputShape(e){let t=q0(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],l=t[i],u=o.name+"_0_0";r[u]=l}let n=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(h0);if(n.length>1)for(let i of n){let o=this.nodesByDepth[i];for(let l of o){let u=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let p=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],A=`${m.name}_${g}_${y}`,x=r[A];p.push(x)}let h=u.computeOutputShape(sn(p)),d=q0(h),c=u.inboundNodes.indexOf(l);for(let f=0;f<d.length;f++){let m=`${u.name}_${c}_${f}`;r[m]=d[f]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=this.outputLayersTensorIndices[i],p=`${o.name}_${l}_${u}`;s.push(p)}for(let i=0;i<s.length;i++){let o=s[i];Ma(o in r),a.push(r[o])}return sn(a)}runInternalGraph(e,t){t==null&&(t=Go(null,e.length));let r={};for(let o=0;o<this.inputs.length;++o){let l=this.inputs[o],u=e[o],p=t[o];r[l.id]=[u,p]}let n=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(h0);for(let o of n){let l=this.nodesByDepth[o];for(let u of l){let p=u.outboundLayer,h=u.inputTensors,d=u.outputTensors,c=new Array;for(let f of h)f.id in r&&c.push(r[f.id]);if(c.length===h.length){let f={},m,g,y,A;if(u.callArgs!=null&&(f=u.callArgs),c.length===1){let[x,b]=c[0];f.mask==null&&(f.mask=b),y=Nt(p.call(x,f)),A=Nt(p.computeMask(x,b)),m=[x],g=[b]}else m=c.map(x=>x[0]),g=c.map(x=>x[1]),f.mask==null&&(f.mask=g),y=Nt(p.call(m,f)),A=Nt(p.computeMask(m,g));if(p.activityRegularizer)throw new Ge("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<d.length;++x){let b=d[x],w=y[x],I=A[x];r[b.id]=[w,I]}}}}let a=[],s=[],i=[];for(let o of this.outputs){Ma(o.id in r,`Could not compute output ${o.name} : ${o.id}`);let[l,u]=r[o.id];i.push(l.shape),a.push(l),s.push(u)}return[a,s,i]}buildNodeConversionMap(e){let t={},r;for(let n of this.layers){r=n instanceof $a?1:0;for(let a=0;a<n.inboundNodes.length;a++){let s=$a.nodeKey(n,a);this.containerNodes.has(s)&&(t[s]=r,r+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let r of this.layers)if(r.name===e)return r;throw new q(`No such layer: ${e}`)}calculateLosses(){return J(()=>{let e=[];for(let t of this.layers)for(let r=0;r<t.inboundNodes.length;++r){let n=$a.nodeKey(t,r);this.containerNodes.has(n)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),r=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let p=0;p<s.inboundNodes.length;p++){let h=s.inboundNodes[p],d=$a.nodeKey(s,p),c={};if(this.containerNodes.has(d)){if(h.callArgs)try{JSON.stringify(h.callArgs),c=h.callArgs}catch(f){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),c={}}if(h.inboundLayers.length>0){let f=[];for(let m=0;m<h.inboundLayers.length;m++){let g=h.inboundLayers[m],y=h.nodeIndices[m],A=h.tensorIndices[m],x=$a.nodeKey(g,y),b=t[x];b==null&&(b=0),f.push([g.name,b,A,c])}l.push(f)}}}let u={};u.name=s.name,u.className=i,u.config=o,u.inboundNodes=l,r.push(u)}e.layers=r;let n=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],l=$a.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let p=this.inputLayersTensorIndices[s];n.push([i.name,u,p])}e.inputLayers=n;let a=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],l=$a.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let p=this.outputLayersTensorIndices[s];a.push([i.name,u,p])}return e.outputLayers=a,e}static fromConfig(e,t,r={},n=!1){let a={},s={};function i(m,g){m.name in s?s[m.name].push(g):s[m.name]=[g]}function o(m,g){let y=[],A;for(let x of g){let b=x[0],w=x[1],I=x[2];if(A=x[3]==null?{}:x[3],!(b in a)){i(m,g);return}let C=a[b];if(C.inboundNodes.length<=w){i(m,g);return}let E=C.inboundNodes[w];y.push(E.outputTensors[I])}y.length>0&&m.apply(sn(y),A)}function l(m){let g=m.name,y=Aa(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(n),a[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${A}`);i(y,A)})}let u=t.name,p=t.layers;for(let m of p)l(m);for(;!fB(s);)for(let m of p){let g=a[m.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let A of y)o(g,A)}}let h=[],d=[],c=t.inputLayers;for(let m of c){let g=m[0],y=m[1],A=m[2];Ma(g in a);let x=a[g].inboundNodes[y].outputTensors;h.push(x[A])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],A=m[2];Ma(g in a);let x=a[g].inboundNodes[y].outputTensors;d.push(x[A])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){J(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function UG(e,t,r){let n=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(n===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==n)throw new Error(`Provided ${r} is an array of ${e.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${n}) outputs, so ${r} must be either an array with ${n} elements or an object with ${t} keys. Provided ${r} not understood: ${JSON.stringify(e)}`)}function $8(e,t){return UG(e,t,"classWeight")}async function M8(e,t,r,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(r!=null){let a=J(()=>{if(e.shape.length===1)return Nr(e);if(e.shape.length===2){if(e.shape[1]>1)return Pn(e,1);if(e.shape[1]===1)return G(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await a.data());ee(a);let i=[];return s.forEach(o=>{if(r[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(r[o])}),$t(i,"float32")}else return null}function jG(e,t){return L(e,t)}var HG=32;function F8(e,t){let r,n,a=t;r=a.xs,n=a.ys,v.assert(r!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=e7("input",e.inputNames,r),i=e7("output",e.outputNames,n),o=s[0].shape[0];v.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)v.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)v.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function e7(e,t,r){if(r instanceof Qe)return[r];if(Array.isArray(r))return v.assert(r.length===t.length,()=>`Received an array of ${r.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),r;{let n=[];for(let a of t){if(r[a]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);n.push(r[a])}return n}}function qG(e){if(e.length===3)throw new Ge("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function KG(e,t,r){let n=r.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(r!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(r.epochs!=null&&r.epochs>0&&Number.isInteger(r.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${r.epochs}`),v.assert(!n||r.batchesPerEpoch>0&&Number.isInteger(r.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${r.batchesPerEpoch}`),v.assert(r.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=r.validationData!=null,s,i;if(a)if(t7(r.validationData))v.assert(r.validationBatches==null||r.validationBatches>0&&Number.isInteger(r.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${r.validationBatches}`);else{let g=qG(r.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;a?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let p=k8(r.callbacks,r.yieldEvery),h=r.verbose==null?1:r.verbose,{callbackList:d,history:c}=I8(p,h,r.epochs,null,null,XG(t,r),null,a,u);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=r.initialEpoch==null?0:r.initialEpoch,m=await t.iterator();for(;f<r.epochs;){let g={};await d.onEpochBegin(f);let y=0,A=0;for(n||(m=await t.iterator());!n||y<r.batchesPerEpoch;){let x=await m.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${r.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${r.batchesPerEpoch*r.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:b,ys:w}=F8(e,x.value),I={};I.batch=A,I.size=b[0].shape[0],await d.onBatchBegin(A,I);let C=[];if(r.classWeight!=null){let F=$8(r.classWeight,e.outputNames);for(let $=0;$<F.length;++$)C.push(await M8(w[$],null,F[$]))}let E=b.concat(w).concat(C),R=o(E);ee(E);for(let F=0;F<l.length;++F){let $=l[F],S=R[F];I[$]=S,gr(S)}await d.onBatchEnd(A,I),x8(I),A++,y++}if(n?y>=r.batchesPerEpoch:x.done){if(a){let b;t7(r.validationData)?b=Nt(await e.evaluateDataset(r.validationData,{batches:r.validationBatches})):b=Nt(e.evaluate(s,i,{batchSize:r.validationBatchSize==null?HG:r.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function XG(e,t){let r=null;return t.batchesPerEpoch!=null?r=t.batchesPerEpoch:Number.isFinite(e.size)&&(r=e.size),r}function t7(e){return typeof e.iterator=="function"}function ZG(e){return typeof e.next=="function"}async function YG(e,t,r){r=r||{};let n=r.batches!=null,a=e.testFunction,s=[];if(r.verbose>0)throw new Ge("Verbose mode is not implemented yet.");v.assert(!n||r.batches>0&&Number.isInteger(r.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(r.batches)}`);let i=ZG(t)?t:await t.iterator(),o=0,l=0;for(;!n||l<r.batches;){let u=await i.next();if(s=J(()=>{if(u.value){let{xs:p,ys:h}=F8(e,u.value),d=p.concat(h),c=J(()=>a(d));if(ee(d),l===0)for(let m=0;m<c.length;++m)s.push(Ie(0));let f=d[0].shape[0];for(let m=0;m<c.length;++m){let g=c[m],y=s[m];s[m]=J(()=>le(s[m],L(f,g))),l>0&&ee(y)}ee(c),o+=f,++l}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${r.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let p=s[u];s[u]=pe(s[u],o),ee(p)}return sn(s)}function dy(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Dp(e,t,r){return e==null?[null]:Array.isArray(e)?e.map(n=>Oo(n,t,r-t)):Oo(e,t,r-t)}function N5(e,t){return J(()=>e==null?null:Array.isArray(e)?e.map(r=>N5(r,t)):u8(e,t.dtype==="int32"?t:me(t,"int32")))}function py(e,t){let r=[],n=0,a=null;for(;n<e;)a=n+t,a>=e&&(a=e),r.push([n,a]),n=a;return r}async function JG(e,t,r,n,a,s,i,o,l,u,p,h,d,c,f){a==null&&(a=32),s==null&&(s=1),p==null&&(p=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,c==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(r,a,c,"steps_per_epoch"),y;g!=null&&(y=va(0,g)),i==null&&(i=1);let{callbackList:A,history:x}=I8(o,i,s,d,g,c,a,m,h);A.setModel(e),e.history=x,await A.onTrainBegin(),e.stopTraining_=!1;for(let b=d;b<s;++b){await A.onEpochBegin(b);let w={};if(c!=null)throw new Ge("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Ge("batch shuffling is not implemneted yet");p&&v.shuffle(y);let I=$t(y),C=py(g,a);for(let E=0;E<C.length;++E){let R={};if(await A.onBatchBegin(E,R),J(()=>{let F=C[E][0],$=C[E][1],S=Oo(I,F,$-F);R.batch=E,R.size=$-F;let O=N5(r,S),z=t(O);for(let j=0;j<n.length;++j){let K=n[j],D=z[j];R[K]=D,gr(D)}if(E===C.length-1&&m){let j=e.testLoop(l,u,a);for(let K=0;K<n.length;++K){let D=n[K],Z=j[K];gr(Z),w["val_"+D]=Z}}}),await A.onBatchEnd(E,R),x8(R),e.stopTraining_)break}I.dispose()}if(await A.onEpochEnd(b,w),e.stopTraining_)break}return await A.onTrainEnd(),await e.history.syncData(),e.history}async function QG(e,t,r,n={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let a,s,i,o,l,u,p,h,d;try{let c=n.batchSize==null?32:n.batchSize;dy(c);let f=!1,m=await e.standardizeUserData(t,r,n.sampleWeight,n.classWeight,f,c);a=m[0],s=m[1],d=m[2];let g=!1,y;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)l=n.validationData[0],u=n.validationData[1];else throw n.validationData.length===3?new Ge("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let E=!0,R=await e.standardizeUserData(l,u,null,null,E,c);p=R[0],h=R[1],y=p.concat(h)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let E=Math.floor(a[0].shape[0]*(1-n.validationSplit)),R=a[0].shape[0];p=Dp(a,E,R),i=a,a=Dp(a,0,E),h=Dp(s,E,R),o=s,s=Dp(s,0,E),y=p.concat(h)}else n.validationSteps!=null&&(g=!0);let A=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();let x=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),w,I;g?(e.makeTestFunction(),w=e.testFunction,I=b.slice().concat(b.map(E=>"val_"+E))):(w=null,y=[],I=b.slice());let C=k8(n.callbacks,n.yieldEvery);return await JG(e,x,A,b,c,n.epochs,n.verbose,C,w,y,n.shuffle,I,n.initialEpoch,null,null)}finally{e.isTraining=!1,fa(a,t),fa(s,r),fa(i,t),fa(o,r),fa(p,l),fa(h,u),d!=null&&ee(d)}}function _8(e){let t=[];e instanceof Qe&&(e=[e]);for(let r=0;r<e.length;++r){let n=e[r];if(n.rank===1)t.push(Kh(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function fa(e,t){if(e==null)return;let r=[];if(t instanceof Qe)r.push(t.id);else if(Array.isArray(t))t.forEach(a=>r.push(a.id));else if(t!=null)for(let a in t){let s=t[a];r.push(s.id)}let n=[];if(e instanceof Qe)r.indexOf(e.id)===-1&&n.push(e);else if(Array.isArray(e))e.forEach(a=>{r.indexOf(a.id)===-1&&n.push(a)});else if(e!=null)for(let a in e){let s=e[a];r.indexOf(s.id)===-1&&n.push(s)}n.forEach(a=>{a.isDisposed||a.dispose()})}function eU(e){return e instanceof Qe}function hy(e){return Array.isArray(e)}function r7(e){return!eU(e)&&!hy(e)}function n7(e,t,r,n=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(hy(e)&&e.length>0)i=!0;else if(r7(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new q(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(r7(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new q(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(hy(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new q(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=_8(s),r!=null)for(let i=0;i<t.length;++i){if(r[i]==null)continue;let o=s[i];if(o.shape.length!==r[i].length)throw new q(`Error when checking ${a}: expected ${t[i]} to have ${r[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<r[i].length;++l){if(l===0&&!n)continue;let u=o.shape[l],p=r[i][l];if(p!=null&&p>=0&&u!==p)throw new q(`${a} expected a batch of elements where each example has shape [${r[i].slice(1,r[i].length)}] (i.e.,tensor shape [*,${r[i].slice(1,r[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function tU(e,t,r){let n=zs(e.map(s=>s.shape[0]));n.sort();let a=zs(t.map(s=>s.shape[0]));if(a.sort(),n.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&a.length>0&&!v.arraysEqual(n,a))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${a[0]} target sample(s).`)}function rU(e,t,r){let n=[Gl,Fm,ih];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=r[a];if(i!=null){if(i===ih&&s.shape[s.shape.length-1]===1)throw new q(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let l=s.shape.slice(1),u=o.slice(1);for(let p=0;p<l.length;++p){let h=l[p],d=u[p];if(d!=null&&h!==d)throw new q(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function a7(e,t,r,n=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(r!=null)for(let i=0;i<t.length;++i){if(r[i]==null)continue;let o=s[i];if(o.shape.length!==r[i].length)throw new q(`Error when checking ${a}: expected ${t[i]} to have ${r[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<r[i].length;++l){if(l===0&&!n)continue;let u=o.shape[l],p=r[i][l];if(p!=null&&p!==u)throw new q(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(r[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function nU(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(n=>[]);let r;if(typeof e=="string"||typeof e=="function")r=[e];else if(Array.isArray(e)||typeof e=="object")r=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(r))return t.map(n=>r);{let n=[];for(let a of t){let s=r.hasOwnProperty(a)?r[a]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var aU="layers-model",es=class extends $a{constructor(e){super(e),this.isTraining=!1}summary(e,t,r=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");LG(this,e,t,r)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=DG(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ls))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new q(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Pg(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Pg(s))}else{let s=Pg(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],zo("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(r.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let n=nU(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};zo("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(r.indexOf(s)!==-1)continue;let i=n[s];(o=>{let l="",u,p,h;for(let d of o){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let f=this.internalOutputShapes[s];f[f.length-1]===1||this.lossFunctions[s]===Fm?["accuracy","acc"].indexOf(d)!==-1?p=I5:["crossentropy","ce"].indexOf(d)!==-1&&(p=T8):this.lossFunctions[s]===J0?["accuracy","acc"].indexOf(d)!==-1?p=N8:["crossentropy","ce"].indexOf(d)!==-1&&(p=E8):["accuracy","acc"].indexOf(d)!==-1?p=S5:["crossentropy","ce"].indexOf(d)!==-1&&(p=C5);let m;["accuracy","acc"].indexOf(d)!==-1?m="acc":["crossentropy","ce"].indexOf(d)!==-1&&(m="ce"),h=p,u=l+m}else h=OG(d),u=l+m0(d);let c;zo(u,()=>{c=h}),a(s,u,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,r={}){let n=r.batchSize==null?32:r.batchSize;dy(n);let a=!0,s=this.standardizeUserDataXY(e,t,a,n);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,l=this.testLoop(o,i,n,r.verbose,r.steps);return sn(l)}finally{fa(s[0],e),fa(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),YG(this,e,t)}checkNumSamples(e,t,r,n="steps"){let a;if(r!=null){if(a=null,t!=null)throw new q(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let r=Array.isArray(t),n=r?t:[t],a=this.retrieveSymbolicTensors(n),s=new Fo;if(e instanceof Qe&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new q(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=Op(a,s);return r?i:i[0]}retrieveSymbolicTensors(e){let t=Go(null,e.length),r=e.length;for(let n of this.layers){let a=Array.isArray(n.output)?n.output:[n.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],r--),r===0)break}if(r===0)break}if(r>0){let n=[];throw t.forEach((a,s)=>{a==null&&n.push(e[s])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,r=!1){return J(()=>{let n=this.checkNumSamples(e);if(r)throw new Ge("Verbose predictLoop() is not implemented yet.");let a=py(n,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)J(()=>{let o=a[i][0],l=a[i][1],u=Dp(e,o,l),p=[];if(Array.isArray(u))for(let d=0;d<u.length;++d)p.push({key:this.inputs[d],value:u[d]});else p.push({key:this.inputs[0],value:u});let h=new Fo(p);return Op(this.outputs,h)}).forEach((o,l)=>s[l].push(o));return sn(s.map(i=>Ct(i,0)))})}predict(e,t={}){let r=_8(e);a7(r,this.inputNames,this.feedInputShapes,!1);try{let n=t.batchSize==null?32:t.batchSize;return dy(n),this.predictLoop(r,n)}finally{fa(r,e)}}predictOnBatch(e){a7(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,r=!0,n){if(this.optimizer_==null)throw new ma("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===J0?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=n7(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=n7(t,this.feedOutputNames,a,!1,"target"),tU(e,t,null),rU(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&n!=null&&n>0&&e[0].shape[0]%n!==0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,r,n,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(r!=null)throw new Error("sample weight is not supported yet.");let l=null;if(n!=null){let u=$8(n,this.outputNames);l=[];for(let p=0;p<u.length;++p)l.push(await M8(o[p],null,u[p]))}return[i,o,l]}testLoop(e,t,r,n=0,a){return J(()=>{let s=this.checkNumSamples(t,r,a,"steps"),i=[];if(n>0)throw new Ge("Verbose mode is not implemented yet.");if(a!=null)throw new Ge("steps mode in testLoop() is not implemented yet");{let o=py(s,r),l=$t(va(0,s));for(let u=0;u<o.length;++u){let p=o[u][0],h=o[u][1],d=Oo(l,p,h-p),c=N5(t,d),f=e(c);if(u===0)for(let m=0;m<f.length;++m)i.push(Ie(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=le(i[m],L(h-p,g))}}for(let u=0;u<i.length;++u)i[u]=pe(i[u],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let r=0;r<e.length;++r){let n=e[r],a=n;O4(e,n)>1&&(a+=`_${O4(e.slice(0,r),n)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],r=e.slice(0,this.inputs.length),n=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let u=[];for(let c=0;c<this.inputs.length;++c)u.push({key:this.inputs[c],value:r[c]});let p=new Fo(u),h=Op(this.outputs,p,{training:!0}),d;for(let c=0;c<this.lossFunctions.length;++c){let f=this.lossFunctions[c],m=f(n[c],h[c]);a[c]!=null&&(m=jG(m,a[c]));let g=Gt(m);t.push(g),c===0?d=m:d=le(d,m)}for(let c=0;c<this.metricsTensors.length;++c){let f;if(this.outputs.length>1&&c<this.outputs.length)f=t[c];else{let m=this.metricsTensors[c][0],g=this.metricsTensors[c][1];f=Gt(m(n[g],h[g]))}gr(f),s.push(f)}return d=Gt(d),this.calculateLosses().forEach(c=>{d=le(d,c)}),d},o=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>J(()=>{let t=[],r,n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:n[l]});let i=new Fo(s),o=Op(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],p=Gt(u(a[l],o[l]));l===0?r=p:r=le(r,p),t.push(r)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],p=this.metricsTensors[l][1],h=Gt(u(a[p],o[p]));t.push(h)}return t})}async fit(e,t,r={}){return QG(this,e,t,r)}async fitDataset(e,t){return KG(this,e,t)}async trainOnBatch(e,t){let r=await this.standardizeUserData(e,t),n=r[0],a=r[1],s=this.makeTrainFunction()(n.concat(a)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return ee(s),fa(r[0],e),fa(r[1],t),sn(i)}getNamedWeights(e){let t=[],r=e!=null&&e.trainableOnly,n=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let s=0;s<n.length;++s)r&&!n[s].trainable||t.push({name:n[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=G0().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-G0().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Za(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Za(t))}else{let t=Object.keys(this.loss);e={};let r=this.loss;for(let n of t)if(typeof r[n]=="string")e[n]=Za(r[n]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Za(m0(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Za(m0(e)));{let e={};for(let t in this.metrics)e[t]=Za(m0(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=oh(e.optimizer_config),r=Aa(t),n;if(typeof e.loss=="string")n=Ro(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(s=>Ro(s));else if(e.loss!=null){n={};for(let s in e.loss)n[s]=Ro(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>Ro(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=Ro(e.metrics[s])}this.compile({loss:n,metrics:a,optimizer:r})}async save(e,t){if(typeof e=="string"){let i=yn.getSaveHandlers(e);if(i.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new q(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let r=await yn.encodeWeights(this.getNamedWeights(t)),n=!1,a=null,s={modelTopology:this.toJSON(a,n),format:aU,generatedBy:`TensorFlow.js tfjs-layers v${T5}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:l}=await yn.encodeWeights(await this.optimizer.getWeights(),i);r.specs.push(...l),r.data=yn.concatenateArrayBuffers([r.data,o])}return this.userDefinedMetadata!=null&&(Q4(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){Q4(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};es.className="Model";ue.registerClass(es);var P8=class extends es{};P8.className="Functional";ue.registerClass(P8);async function sU(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let r=e.modelTopology;r.model_config!=null&&(r=r.model_config);let n=oh(r),a=Aa(n,t);if(e.weightsManifest!=null){let s=await yn.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),ee(s)}return a}async function iU(e,t){if(t==null&&(t={}),typeof e=="string"){let r=yn.getLoadHandlers(e,t);if(r.length===0)r.push(yn.browserHTTPRequest(e,t));else if(r.length>1)throw new q(`Found more than one (${r.length}) load handlers for URL '${e}'`);e=r[0]}return oU(e,void 0,t)}async function oU(e,t,r){if(r==null&&(r={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await e.load(),a=n.modelTopology;a.model_config!=null&&(a=a.model_config);let s=r.strict==null?!0:r.strict,i=n.weightData!=null&&n.weightSpecs!=null&&s,o=Aa(oh(a),t,i),l=n.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),n.userDefinedMetadata!=null&&o.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:p}=lU(n.weightData,n.weightSpecs);o.loadWeights(u,s),o.optimizer!=null&&p.length>0&&await o.optimizer.setWeights(p),ee(u),ee(p.map(h=>h.tensor))}return o}function lU(e,t){let r=yn.decodeWeights(e,t),n={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:r[s.name]}):n[s.name]=r[s.name]}),{modelWeights:n,optimizerWeights:a}}var cy=class extends es{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:vm("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof cy||e instanceof es,r;if(t){if(r=e,r.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let n=c8({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(n)}if(t)this.outputs=r.outputs,this.inputs=r.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=h8(this.outputs[0])}this.inboundNodes=[],new $m({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Go(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(n=>n.shape),outputShapes:this.outputs[0].shape})}else{let n=e.apply(this.outputs[0]);if(Array.isArray(n))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[n],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(gt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new es({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,r={}){if(!this.built)throw new ma("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}async evaluateDataset(e,t){if(!this.built)throw new ma("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,r={}){if(!this.built)throw new ma("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}async fitDataset(e,t){if(!this.built)throw new ma("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,r={},n=!1){let a,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");a=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof cy))throw new Ge(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of a){let l=Aa(o,void 0,n);n&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}},_m=cy;_m.className="Sequential";ue.registerClass(_m);function uU(e){return new es(e)}function dU(e){return new _m(e)}function pU(e,t){return t==null&&(t={}),iU(e,t)}function z8(e){return c8(e)}function hU(e,t){w5.registerCallbackConstructor(e,t)}var pn=class extends ue.Serializable{getConfig(){return{}}},O8=class extends pn{apply(e,t=1){return EB(e,t)}};O8.className="elu";ue.registerClass(O8);var D8=class extends pn{apply(e){return U3(e)}};D8.className="selu";ue.registerClass(D8);var L8=class extends pn{apply(e){return Va(e)}};L8.className="relu";ue.registerClass(L8);var B8=class extends pn{apply(e){return J(()=>Gh(6,Va(e)))}};B8.className="relu6";ue.registerClass(B8);var W8=class extends pn{apply(e){return e}};W8.className="linear";ue.registerClass(W8);var V8=class extends pn{apply(e){return Er(e)}};V8.className="sigmoid";ue.registerClass(V8);var G8=class extends pn{apply(e){return $B(e)}};G8.className="hardSigmoid";ue.registerClass(G8);var U8=class extends pn{apply(e){return Cd(e)}};U8.className="softplus";ue.registerClass(U8);var j8=class extends pn{apply(e){return RB(e)}};j8.className="softsign";ue.registerClass(j8);var H8=class extends pn{apply(e){return Ou(e)}};H8.className="tanh";ue.registerClass(H8);var E5=class extends pn{apply(e,t=-1){return Ed(e,t)}};E5.className="softmax";ue.registerClass(E5);var q8=class extends pn{apply(e,t=-1){return P3(e,t)}};q8.className="logSoftmax";ue.registerClass(q8);var K8=class extends pn{apply(e,t=1){return J(()=>L(Er(L(e,t)),e))}};K8.className="swish";ue.registerClass(K8);var X8=class extends pn{apply(e){return J(()=>L(e,Ou(Cd(e))))}};X8.className="mish";ue.registerClass(X8);function Xs(e){return e.getClassName()}function zg(e,t={}){return qh(e,ue.SerializationMap.getMap().classNameMap,t,"activation")}function Zs(e){if(e==null){let t={};return t.className="linear",t.config={},zg(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},zg(t)}else return e instanceof pn?e:zg(e)}function R5(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var Z8=class extends ue.Serializable{},Jh=class extends Z8{constructor(e){super(),R5(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return J(()=>{let t=Ot([1]);return this.hasL1&&(t=le(t,ke(L(this.l1,sr(e))))),this.hasL2&&(t=le(t,ke(L(this.l2,Xh(e))))),G(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Jh.className="L1L2";ue.registerClass(Jh);function cU(e){return R5(e),new Jh({l1:e!=null?e.l1:null,l2:0})}function fU(e){return R5(e),new Jh({l2:e!=null?e.l2:null,l1:0})}var s7={l1l2:"L1L2"};function wt(e){return i5(e)}function i7(e,t={}){return qh(e,ue.SerializationMap.getMap().classNameMap,t,"regularizer")}function _t(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in s7?s7[e]:e,config:{}};return i7(t)}else return e instanceof Z8?e:i7(e)}var $5=class extends st{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=He(e);let r=Va(e);return this.maxValue!=null&&(r=xn(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};$5.className="ReLU";ue.registerClass($5);var M5=class extends st{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=He(e);return Yf(r,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};M5.className="LeakyReLU";ue.registerClass(M5);var F5=class extends st{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Mt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_t(e.alphaRegularizer),this.alphaConstraint=ur(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=gt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let n of this.sharedAxes)t[n-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(this.sharedAxes!=null)for(let n=1;n<e.length;++n)r[n]=e[n];this.inputSpec=[new Yt({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=He(e),am(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Dt(this.alphaInitializer),alphaRegularizer:wt(this.alphaRegularizer),alphaConstraint:lr(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};F5.className="PReLU";ue.registerClass(F5);var _5=class extends st{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ge(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=He(e);return Lh(r)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};_5.className="ELU";ue.registerClass(_5);var P5=class extends st{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let r=He(e);return L(r,me(wn(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};P5.className="ThresholdedReLU";ue.registerClass(P5);var z5=class extends st{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new E5().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let r=He(e);return this.softmax(r,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};z5.className="Softmax";ue.registerClass(z5);function Mu(e,t,r){if(typeof e=="number")return Go(e,t);if(e.length!==t)throw new q(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let n=0;n<t;++n){let a=e[n];if(!SB(a))throw new q(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function xa(e,t,r,n,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return r==="same"?i=e:i=e-s+1,Math.floor((i+n-1)/n)}function Fa(e,t,r,n){if(e==null)return null;if(n==="valid")e=e*t+Ks([r-t,0]);else if(n==="same")e=e*t;else throw new q(`Unsupport padding mode: ${n}.`);return e}function O5(e,t){return J(()=>(Ht(t),t==="channelsFirst"?et(e,[0,2,3,1]):e))}function Y8(e,t){return J(()=>(Ht(t),t==="channelsFirst"?et(e,[0,2,3,4,1]):e))}function mU(e,t,r,n=1,a="valid",s,i=1){return J(()=>{if(s==null&&(s=wa()),Ht(s),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(r!=null&&r.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=et(e,[0,2,1])),a==="causal")throw new Ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=S3(e,t,n,a==="same"?"same":"valid","NWC",i);return r!=null&&(o=Sa(o,r)),o})}function o7(e,t,r,n=[1,1],a="valid",s,i,o=null){return J(()=>{if(s==null&&(s=wa()),Ht(s),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=O5(e,s);if(a==="causal")throw new Ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Bu.conv2d({x:l,filter:t,strides:n,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:r,activation:o}),s==="channelsFirst"&&(l=et(l,[0,3,1,2])),l})}function gU(e,t,r,n=[1,1,1],a="valid",s,i){return J(()=>{if(s==null&&(s=wa()),Ht(s),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Y8(e,s);if(a==="causal")throw new Ge("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=N3(o,t,n,a==="same"?"same":"valid","NDHWC",i),r!=null&&(o=Sa(o,r)),s==="channelsFirst"&&(o=et(o,[0,4,1,2,3])),o})}var D5=class extends st{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",D5.verifyArgs(t),this.rank=e,yr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ge(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Mu(t.kernelSize,e,"kernelSize"),this.strides=Mu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Vn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ht(this.dataFormat),this.activation=Zs(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Mt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ur(t.biasConstraint),this.biasRegularizer=_t(t.biasRegularizer),this.activityRegularizer=_t(t.activityRegularizer),this.dilationRate=Mu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ma("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!o5(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Xs(this.activation),useBias:this.useBias,biasInitializer:Dt(this.biasInitializer),biasRegularizer:wt(this.biasRegularizer),activityRegularizer:wt(this.activityRegularizer),biasConstraint:lr(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Qh=class extends D5{constructor(e,t){super(e,t),this.kernel=null,Qh.verifyArgs(t),this.filters=t.filters,yr(this.filters,"filters"),this.kernelInitializer=Mt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ur(t.kernelConstraint),this.kernelRegularizer=_t(t.kernelRegularizer)}build(e){e=gt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let r=e[t],n=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:r}}],this.built=!0}call(e,t){return J(()=>{e=He(e);let r,n=this.bias==null?null:this.bias.read(),a=n8(this.activation.getClassName());if(a!=null&&this.rank===2)r=o7(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)r=mU(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=o7(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=gU(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ge("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(e){e=gt(e);let t=[],r=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<r.length;++a){let s=xa(r[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);t.push(s)}let n=[e[0]];return this.dataFormat==="channelsLast"?(n=n.concat(t),n.push(this.filters)):(n.push(this.filters),n=n.concat(t)),n}getConfig(){let e={filters:this.filters,kernelInitializer:Dt(this.kernelInitializer),kernelRegularizer:wt(this.kernelRegularizer),kernelConstraint:lr(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},J8=class extends Qh{constructor(e){super(2,e),J8.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!o5(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},Pm=J8;Pm.className="Conv2D";ue.registerClass(Pm);var Q8=class extends Qh{constructor(e){super(3,e),Q8.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},zm=Q8;zm.className="Conv3D";ue.registerClass(zm);var L5=class extends Pm{constructor(e){if(super(e),this.inputSpec=[new Yt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=gt(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let r=e[t],n=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:4,axes:{[t]:r}})],this.built=!0}call(e,t){return J(()=>{let r=He(e);if(r.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let n=r.shape,a=n[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=n[s],l=n[i],u=this.kernelSize[0],p=this.kernelSize[1],h=this.strides[0],d=this.strides[1],c=Fa(o,h,u,this.padding),f=Fa(l,d,p,this.padding),m=[a,c,f,this.filters];this.dataFormat!=="channelsLast"&&(r=et(r,[0,2,3,1]));let g=T3(r,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=et(g,[0,3,1,2])),this.bias!=null&&(g=Sa(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=gt(e);let t=e.slice(),r,n,a;this.dataFormat==="channelsFirst"?(r=1,n=2,a=3):(r=3,n=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[r]=this.filters,t[n]=Fa(t[n],o,s,this.padding),t[a]=Fa(t[a],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};L5.className="Conv2DTranspose";ue.registerClass(L5);var B5=class extends zm{constructor(e){if(super(e),this.inputSpec=[new Yt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=gt(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let r=e[t],n=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:5,axes:{[t]:r}})],this.built=!0}call(e,t){return J(()=>{let r=He(e);if(r.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let n=r.shape,a=n[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let l=n[o],u=n[s],p=n[i],h=this.kernelSize[0],d=this.kernelSize[1],c=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Fa(l,f,h,this.padding),A=Fa(u,m,d,this.padding),x=Fa(p,g,c,this.padding),b=[a,y,A,x,this.filters];this.dataFormat!=="channelsLast"&&(r=et(r,[0,2,3,4,1]));let w=E3(r,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=et(w,[0,4,1,2,3])),this.bias!==null&&(w=Sa(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=gt(e);let t=e.slice(),r,n,a,s;this.dataFormat==="channelsFirst"?(r=1,n=2,a=3,s=4):(r=4,n=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],h=this.strides[2];return t[r]=this.filters,t[n]=Fa(t[n],u,i,this.padding),t[a]=Fa(t[a],p,o,this.padding),t[s]=Fa(t[s],h,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};B5.className="Conv3DTranspose";ue.registerClass(B5);var ek=class extends Qh{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Mt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_t(t.depthwiseRegularizer),this.depthwiseConstraint=ur(t.depthwiseConstraint),this.pointwiseInitializer=Mt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_t(t.pointwiseRegularizer),this.pointwiseConstraint=ur(t.pointwiseConstraint)}build(e){if(e=gt(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let r=e[t],n=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(r*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Yt({ndim:this.rank+2,axes:{[t]:r}})],this.built=!0}call(e,t){return J(()=>{e=He(e);let r;if(this.rank===1)throw new Ge("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=et(e,[0,2,3,1])),r=j3(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Sa(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=et(r,[0,3,1,2])),r})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.pointwiseInitializer=Dt(this.pointwiseInitializer),e.depthwiseRegularizer=wt(this.depthwiseRegularizer),e.pointwiseRegularizer=wt(this.pointwiseRegularizer),e.depthwiseConstraint=lr(this.depthwiseConstraint),e.pointwiseConstraint=lr(this.pointwiseConstraint),e}};ek.className="SeparableConv";var W5=class extends ek{constructor(e){super(2,e)}};W5.className="SeparableConv2D";ue.registerClass(W5);var tk=class extends Qh{constructor(e){super(1,e),tk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!o5(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},V5=tk;V5.className="Conv1D";ue.registerClass(V5);var G5=class extends st{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return J(()=>{if(e=He(e),this.dataFormat==="channelsLast"){let r=f0(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return f0(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let r=f0(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return f0(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};G5.className="Cropping2D";ue.registerClass(G5);var U5=class extends st{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,wB(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],r=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,r]}else{let t=e[1]==null?null:this.size[0]*e[1],r=e[2]==null?null:this.size[1]*e[2];return[e[0],t,r,e[3]]}}call(e,t){return J(()=>{let r=He(e),n=r.shape;if(this.dataFormat==="channelsFirst"){r=et(r,[0,2,3,1]);let a=this.size[0]*n[2],s=this.size[1]*n[3],i=this.interpolation==="nearest"?Te.resizeNearestNeighbor(r,[a,s]):Te.resizeBilinear(r,[a,s]);return et(i,[0,3,1,2])}else{let a=this.size[0]*n[1],s=this.size[1]*n[2];return this.interpolation==="nearest"?Te.resizeNearestNeighbor(r,[a,s]):Te.resizeBilinear(r,[a,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};U5.className="UpSampling2D";ue.registerClass(U5);function yU(e,t,r=[1,1],n="valid",a,s){return J(()=>{a==null&&(a=wa()),Ht(a);let i=O5(e,a);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Dh(i,t,r,n==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=et(i,[0,3,1,2])),i})}var j5=class extends D5{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Mt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ur(e.depthwiseConstraint),this.depthwiseRegularizer=_t(e.depthwiseRegularizer)}build(e){if(e=gt(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let r=e[t],n=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return J(()=>{e=He(e);let r=yU(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Sa(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=gt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],n=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=xa(t,this.kernelSize[0],this.padding,this.strides[0]),s=xa(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],n,a,s]:[e[0],a,s,n]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.depthwiseRegularizer=wt(this.depthwiseRegularizer),e.depthwiseConstraint=lr(this.depthwiseRegularizer),e}};j5.className="DepthwiseConv2D";ue.registerClass(j5);function rk(e,t,r,n){if(Array.isArray(e)){if(t!=null||r!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");n!=null&&(r=e.slice(e.length-n,e.length),e=e.slice(0,e.length-n)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),r=a(r),{inputs:e,initialState:t,constants:r}}function nk(e,t,r,n=!1,a,s,i=!1,o=!1){return J(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(va(2,l));if(t=et(t,u),s!=null)throw new Ge("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=me(me(a,"bool"),"float32"),a.rank===l-1&&(a=Zt(a,-1)),a=et(a,u)),n&&(t=Zn(t,0),a!=null&&(a=Zn(a,0)));let p=[],h,d=r,c=t.shape[0],f=ln(t),m;a!=null&&(m=ln(a));for(let y=0;y<c;++y){let A=f[y],x=J(()=>e(A,d));if(a==null)h=x[0],d=x[1];else{let b=J(()=>{let w=m[y],I=ce(Ln(w),w),C=le(L(x[0],w),L(d[0],I)),E=d.map((R,F)=>le(L(x[1][F],w),L(R,I)));return{output:C,newStates:E}});h=b.output,d=b.newStates}o&&p.push(h)}let g;return o&&(g=dr(p,1)),[h,g,d]})}var ak=class extends st{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Lm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Yt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return va(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){iy(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let r=t[0],n;if(this.returnSequences?n=[e[0],e[1],r]:n=[e[0],r],this.returnState){let a=[];for(let s of t)a.push([e[0],s]);return[n].concat(a)}else return n}computeMask(e,t){return J(()=>{Array.isArray(t)&&(t=t[0]);let r=this.returnSequences?t:null;if(this.returnState){let n=this.states.map(a=>null);return[r].concat(n)}else return r})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let r=0;r<e;++r)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ge("Constants support is not implemented in RNN yet.");iy(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Yt({shape:[t,null,...r]});let n=[e[0]].concat(e.slice(2));this.cell.build(n);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(s=>s.shape[s.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(s=>new Yt({shape:[null,s]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){J(()=>{if(!this.stateful)throw new Xa("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape[0];if(r==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>Ot([r,n])):this.states_=[Ot([r,this.cell.stateSize])];else if(e==null)ee(this.states_),this.keptStates!=null&&(ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>Ot([r,n])):this.states_[0]=Ot([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ee(this.states_);for(let n=0;n<this.states_.length;++n){let a=e[n],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[n]:this.cell.stateSize,i=[r,s];if(!v.arraysEqual(a.shape,i))throw new q(`State ${n} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[n]=a}}this.states_=this.states_.map(n=>gr(n.clone()))})}apply(e,t){let r=t==null?null:t.initialState,n=t==null?null:t.constants;t==null&&(t={});let a=rk(e,r,n,this.numConstants);e=a.inputs,r=a.initialState,n=a.constants;let s=[],i=[];if(r!=null){t.initialState=r,s=s.concat(r),this.stateSpec=[];for(let o of r)this.stateSpec.push(new Yt({shape:o.shape}));i=i.concat(this.stateSpec)}if(n!=null&&(t.constants=n,s=s.concat(n),this.numConstants=n.length),s[0]instanceof ga){let o=[e].concat(s),l=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=l;let p=super.apply(o,t);return this.inputSpec=u,p}else return super.apply(e,t)}call(e,t){return J(()=>{let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;e=He(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new q(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:n},o=nk((d,c)=>{let f=this.cell.call([d].concat(c),i);return[f[0],f.slice(1)]},e,a,this.goBackwards,r,null,this.unroll,this.returnSequences),l=o[0],u=o[1],p=o[2];this.stateful&&this.resetStates(p,n);let h=this.returnSequences?u:l;return this.returnState?[h].concat(p):h})}getInitialState(e){return J(()=>{let t=Ot(e.shape);return t=ke(t,[1,2]),t=Kh(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?ay(t,[1,r]):t):this.cell.stateSize>1?[ay(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===ak.className&&(t.cell={className:this.cell.getClassName(),config:r}),{...r,...e,...t}}static fromConfig(e,t,r={}){let n=t.cell,a=Aa(n,r);return new e(Object.assign(t,{cell:a}))}},us=ak;us.className="RNN";ue.registerClass(us);var ec=class extends st{},Om=class extends ec{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,yr(this.units,"units"),this.activation=Zs(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=ur(e.kernelConstraint),this.recurrentConstraint=ur(e.recurrentConstraint),this.biasConstraint=ur(e.biasConstraint),this.dropout=Wu([1,Ks([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Wu([1,Ks([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=gt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return J(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];let n=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ys({ones:()=>Ln(e),rate:this.dropout,training:n,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ys({ones:()=>Ln(r),rate:this.recurrentDropout,training:n,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=za(L(e,s),this.kernel.read()):a=za(e,this.kernel.read()),this.bias!=null&&(a=Sa(a,this.bias.read())),i!=null&&(r=L(r,i));let o=le(a,za(r,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Xs(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:wt(this.kernelRegularizer),recurrentRegularizer:wt(this.recurrentRegularizer),biasRegularizer:wt(this.biasRegularizer),activityRegularizer:wt(this.activityRegularizer),kernelConstraint:lr(this.kernelConstraint),recurrentConstraint:lr(this.recurrentConstraint),biasConstraint:lr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Om.className="SimpleRNNCell";ue.registerClass(Om);var H5=class extends us{constructor(e){e.cell=new Om(e),super(e)}call(e,t){return J(()=>{this.cell.dropoutMask!=null&&(ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}static fromConfig(e,t){return new e(t)}};H5.className="SimpleRNN";ue.registerClass(H5);var Dm=class extends ec{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,yr(this.units,"units"),this.activation=Zs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Zs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=ur(e.kernelConstraint),this.recurrentConstraint=ur(e.recurrentConstraint),this.biasConstraint=ur(e.biasConstraint),this.dropout=Wu([1,Ks([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Wu([1,Ks([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=gt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return J(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let r=t.training==null?!1:t.training,n=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ys({ones:()=>Ln(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ys({ones:()=>Ln(n),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let u=za(e,this.kernel.read());this.useBias&&(u=Sa(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(n=L(n,s[0]));let p=this.recurrentKernel.read(),[h,d]=Jt(p,[2*this.units,this.units],p.rank-1),c=za(n,h),[f,m,g]=Jt(u,3,u.rank-1),[y,A]=Jt(c,2,c.rank-1);i=this.recurrentActivation.apply(le(f,y)),o=this.recurrentActivation.apply(le(m,A));let x=za(L(o,n),d);l=this.activation.apply(le(g,x));let b=le(L(i,n),L(le(1,Ft(i)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Xs(this.activation),recurrentActivation:Xs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:wt(this.kernelRegularizer),recurrentRegularizer:wt(this.recurrentRegularizer),biasRegularizer:wt(this.biasRegularizer),activityRegularizer:wt(this.activityRegularizer),kernelConstraint:lr(this.kernelConstraint),recurrentConstraint:lr(this.recurrentConstraint),biasConstraint:lr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Dm.className="GRUCell";ue.registerClass(Dm);var q5=class extends us{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Dm(e),super(e)}call(e,t){return J(()=>{this.cell.dropoutMask!=null&&(ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};q5.className="GRU";ue.registerClass(q5);var tc=class extends ec{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,yr(this.units,"units"),this.activation=Zs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Zs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=ur(e.kernelConstraint),this.recurrentConstraint=ur(e.recurrentConstraint),this.biasConstraint=ur(e.biasConstraint),this.dropout=Wu([1,Ks([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Wu([1,Ks([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=gt(e);let r=e[e.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,s=this.units;n=new(t=class extends ta{apply(i,o){let l=a.apply([s]),u=new Im().apply([s]),p=a.apply([s*2]);return L4(L4(l,u),p)}},t.className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return J(()=>{let r=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ys({ones:()=>Ln(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ys({ones:()=>Ln(n),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,u,p;0<this.dropout&&this.dropout<1&&(e=L(e,s[0]));let h=za(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(n=L(n,i[0])),h=le(h,za(n,this.recurrentKernel.read())),this.useBias&&(h=Sa(h,this.bias.read()));let[d,c,f,m]=Jt(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(c),u=le(L(l,a),L(o,this.activation.apply(f))),p=this.recurrentActivation.apply(m);let g=L(p,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Xs(this.activation),recurrentActivation:Xs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:wt(this.kernelRegularizer),recurrentRegularizer:wt(this.recurrentRegularizer),biasRegularizer:wt(this.biasRegularizer),activityRegularizer:wt(this.activityRegularizer),kernelConstraint:lr(this.kernelConstraint),recurrentConstraint:lr(this.recurrentConstraint),biasConstraint:lr(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};tc.className="LSTMCell";ue.registerClass(tc);var K5=class extends us{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new tc(e),super(e)}call(e,t){return J(()=>{this.cell.dropoutMask!=null&&(ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};K5.className="LSTM";ue.registerClass(K5);var Lm=class extends ec{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return J(()=>{e=e;let r=e.slice(1),n=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?n.push(r.splice(0,i.stateSize.length)):n.push(r.splice(0,1));n.reverse();let a=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];r=n[i],i===0?s=[e[0]].concat(r):s=[s[0]].concat(r),s=o.call(s,t),a.push(s.slice(1))}r=[];for(let i of a.slice().reverse())r.push(...i);return[s[0]].concat(r)})}build(e){iy(e)&&(e=e[0]),e=e;let t;this.cells.forEach((r,n)=>{zo(`RNNCell_${n}`,()=>{r.build(e),Array.isArray(r.stateSize)?t=r.stateSize[0]:t=r.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=n=>({className:n.getClassName(),config:n.getConfig()}),r={cells:this.cells.map(t)};return{...e,...r}}static fromConfig(e,t,r={}){let n=[];for(let a of t.cells)n.push(Aa(a,r));return new e({cells:n})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let r of this.cells)t.push(...r.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return oy(e)}setWeights(e){let t=[];for(let r of this.cells){let n=r.weights.length,a=e.splice(n);for(let s=0;s<r.weights.length;++s)t.push([r.weights[s],a[s]])}g5(t)}};Lm.className="StackedRNNCells";ue.registerClass(Lm);function Ys(e){let{ones:t,rate:r,training:n=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),r):d8(t(),r),o=()=>Zh(i,t,n);return!a||a<=1?gr(o().clone()):Array(a).fill(void 0).map(o).map(l=>gr(l.clone()))}var sk=class extends us{constructor(e){if(e.unroll)throw new Ge("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ge("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Yt({ndim:5})]}call(e,t){return J(()=>{if(this.cell.dropoutMask!=null&&(ee(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ee(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return J(()=>{let{stateSize:t}=this.cell,r=e.shape,n=this.computeSingleOutputShape(r),a=[n[0],...n.slice(2)],s=Ot(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){J(()=>{if(!this.stateful)throw new Xa("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape,n=this.computeSingleOutputShape(r),a=[n[0],...n.slice(2)];if(r[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ot(a)):this.states_=[Ot(a)];else if(e==null)ee(this.states_),this.keptStates!=null&&(ee(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ot(a)):this.states_[0]=Ot(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ee(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!v.arraysEqual(i.shape,o))throw new q(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>gr(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:r,kernelSize:n,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],u=e[o?4:3],p=xa(l,n[0],a,s[0],i[0]),h=xa(u,n[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[r,p,h]:[p,h,r]]}};sk.className="ConvRNN2D";var Bm=class extends tc{constructor(e){let{filters:t,kernelSize:r,strides:n,padding:a,dataFormat:s,dilationRate:i}=e;super({...e,units:t}),this.filters=t,yr(this.filters,"filters"),this.kernelSize=Mu(r,2,"kernelSize"),this.kernelSize.forEach(o=>yr(o,"kernelSize")),this.strides=Mu(n||1,2,"strides"),this.strides.forEach(o=>yr(o,"strides")),this.padding=a||"valid",Vn(this.padding),this.dataFormat=s||"channelsLast",Ht(this.dataFormat),this.dilationRate=Mu(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>yr(o,"dilationRate"))}build(e){var t;e=gt(e);let r=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[r]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[r]}`);let n=e[r],a=4,s=this.kernelSize.concat([n,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;o=new(t=class extends ta{apply(p,h){let d=l.apply([u]),c=An([u]),f=l.apply([u*2]);return l5([d,c,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return J(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=t.training||!1,n=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ys({ones:()=>Ln(n),rate:this.dropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(V,re,Q)=>!re||!re[Q]?V:L(re[Q],V),u=l(n,o,0),p=l(n,o,1),h=l(n,o,2),d=l(n,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ys({ones:()=>Ln(a),rate:this.recurrentDropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(a,c,0),m=l(a,c,1),g=l(a,c,2),y=l(a,c,3),A=3,[x,b,w,I]=Jt(this.kernel.read(),i,A),[C,E,R,F]=this.useBias?Jt(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,C,this.padding),p=this.inputConv(p,b,E,this.padding),h=this.inputConv(h,w,R,this.padding),d=this.inputConv(d,I,F,this.padding);let[$,S,O,z]=Jt(this.recurrentKernel.read(),i,A);f=this.recurrentConv(f,$),m=this.recurrentConv(m,S),g=this.recurrentConv(g,O),y=this.recurrentConv(y,z);let j=this.recurrentActivation.apply(le(u,f)),K=this.recurrentActivation.apply(le(p,m)),D=le(L(K,s),L(j,this.activation.apply(le(h,g)))),Z=L(this.recurrentActivation.apply(le(d,y)),this.activation.apply(D));return[Z,Z,D]})}getConfig(){let{units:e,...t}=super.getConfig(),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...r}}inputConv(e,t,r,n){let a=Us(e,t,this.strides,n||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?Sa(a,r,this.dataFormat):a}recurrentConv(e,t){return Us(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Bm.className="ConvLSTM2DCell";ue.registerClass(Bm);var X5=class extends sk{constructor(e){let t=new Bm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};X5.className="ConvLSTM2D";ue.registerClass(X5);var Wm=class extends st{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,r=[];for(let n=0;n<this.noiseShape.length;++n)r.push(this.noiseShape[n]==null?t[n]:this.noiseShape[n]);return r}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e);if(0<this.rate&&this.rate<1){let n=t.training==null?!1:t.training,a=this.getNoiseShape(r);return Zh(()=>d8(r,this.rate,a,this.seed),()=>r,n)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Wm.className="Dropout";ue.registerClass(Wm);var Z5=class extends Wm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Z5.className="SpatialDropout1D";ue.registerClass(Z5);var Y5=class extends st{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,yr(this.units,"units"),this.activation=Zs(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ur(e.kernelConstraint),this.biasConstraint=ur(e.biasConstraint),this.kernelRegularizer=_t(e.kernelRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=gt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=gt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e),n=n8(this.activation.getClassName()),a;return n!=null?a=za(r,this.kernel.read(),n,this.bias?this.bias.read():null):(a=za(r,this.kernel.read()),this.bias!=null&&(a=Sa(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Xs(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:wt(this.kernelRegularizer),biasRegularizer:wt(this.biasRegularizer),activityRegularizer:wt(this.activityRegularizer),kernelConstraint:lr(this.kernelConstraint),biasConstraint:lr(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Y5.className="Dense";ue.registerClass(Y5);var J5=class extends st{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=gt(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Os(e,1)]}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e);if(this.dataFormat==="channelsFirst"&&r.rank>1){let n=[0];for(let a=2;a<r.rank;++a)n.push(a);n.push(1),r=et(r,n)}return NB(r)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};J5.className="Flatten";ue.registerClass(J5);var Q5=class extends st{constructor(e){super(e),this.supportsMasking=!0,this.activation=Zs(e.activation)}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e);return this.activation.apply(r)})}getConfig(){let e={activation:Xs(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Q5.className="Activation";ue.registerClass(Q5);var eA=class extends st{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return J(()=>(e=He(e),CB(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};eA.className="RepeatVector";ue.registerClass(eA);var tA=class extends st{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let r="Total size of new array must be unchanged.",n=t.slice(),a=1,s=null;for(let o=0;o<n.length;++o){let l=n[o];if(this.isUnknown(l))if(s===null)s=o;else throw new q("Can only specifiy one unknown dimension.");else a*=l}let i=Os(e);if(s!==null){if(a===0||i%a!==0)throw new q(r);n[s]=i/a}else if(i!==a)throw new q(r);return n}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e),n=r.shape,a=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return G(r,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};tA.className="Reshape";ue.registerClass(tA);var rA=class extends st{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=va(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Yt({ndim:this.dims.length+1})]}computeOutputShape(e){e=gt(e);let t=e.slice();return this.dims.forEach((r,n)=>{t[n+1]=e[r]}),t}call(e,t){return et(He(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};rA.className="Permute";ue.registerClass(rA);var nA=class extends st{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let r=He(e),n=-1;return U0(Du(r,this.maskValue),n)}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e),n=-1,a=!0,s=U0(Du(r,this.maskValue),n,a);return L(r,me(s,r.dtype))})}};nA.className="Masking";ue.registerClass(nA);var aA=class extends st{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Nt(e.inputLength))}this.inputDim=e.inputDim,yr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,yr(this.outputDim,"outputDim"),this.embeddingsInitializer=Mt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_t(e.embeddingsRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.embeddingsConstraint=ur(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return J(()=>this.maskZero?(e=He(e),Du(e,at(e))):null)}computeOutputShape(e){if(e=gt(e),this.inputLength==null)return[...e,this.outputDim];let t=Nt(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let n=0;n<t.length;++n){let a=t[n],s=e[n+1];if(a!=null&&s!=null&&a!==s)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(t[r]=s),r++}}return[e[0],...t,this.outputDim]}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e);r.dtype!=="int32"&&(r=wm(r,"int32"));let n=u8(this.embeddings.read(),G(r,[r.size]));return G(n,gt(this.computeOutputShape(r.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Dt(this.embeddingsInitializer),embeddingsRegularizer:wt(this.embeddingsRegularizer),activityRegularizer:wt(this.activityRegularizer),embeddingsConstraint:lr(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};aA.className="Embedding";ue.registerClass(aA);var Ul=class extends st{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ge}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let r=e.slice(0,e.length-t.length);for(let n=0;n<t.length;++n){let a=e[e.length-t.length+n],s=t[n];if(a==null||s==null||a<0||s<0)r.push(null);else if(a===1)r.push(s);else if(s===1)r.push(a);else{if(a!==s)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(a)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[gt(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=zs(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);r=this.computeElementwiseOpOutputShape(r,s)}let n=e.map(a=>a.length);e.indexOf(null)===-1&&zs(n).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return J(()=>{if(e=e,this.reshapeRequired){let r=[],n=e.map(a=>a.rank);if(n.indexOf(null)===-1){let a=Ks(n);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=Kh(s,1);r.push(s)}return this.mergeFunction(r)}else{let a=!1;for(let o of e){let l=o.rank;if(l==null){let u=o.shape,p=u[0],h=u.slice(1).concat([p]),d=G(o,[p].concat(Os(u.slice(1))));d=et(d,[1,0]),d=G(d,h),r.push(d),a=!0}else if(l>1){let u=va(1,l).concat([0]);r.push(et(o,u)),a=!0}else r.push(o)}let s=this.mergeFunction(r),i=s.rank;if(a){if(i==null){let o=s.shape,l=o.length,u=o[l-1],p=[u].concat(o.slice(0,o.length-1));s=G(et(G(s,[-1,u]),[1,0]),p)}else if(i>1){let o=[i-1].concat(va(0,i-1));s=et(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let n=1;n<e.length;++n){let a=e[n]==null?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let r=[];for(let n of e)n!=null&&n[0]!==null&&r.push(n[0]);return r=zs(r),r.length===1?t=r.concat(t):t=[null].concat(t),t}computeMask(e,t){return J(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(n=>n==null))return null;t=t.map(n=>n==null?n:Zt(n,0));let r=t[0];for(let n=1;n<t.length-1;++n)r=ba(r,t[n]);return r})}},sA=class extends Ul{constructor(e){super(e)}mergeFunction(e){return J(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=le(t,e[r]);return t})}};sA.className="Add";ue.registerClass(sA);var iA=class extends Ul{constructor(e){super(e)}mergeFunction(e){return J(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=L(t,e[r]);return t})}};iA.className="Multiply";ue.registerClass(iA);var oA=class extends Ul{constructor(e){super(e)}mergeFunction(e){return J(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=le(t,e[r]);return L(1/e.length,t)})}};oA.className="Average";ue.registerClass(oA);var lA=class extends Ul{constructor(e){super(e)}mergeFunction(e){return J(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=is(t,e[r]);return t})}};lA.className="Maximum";ue.registerClass(lA);var uA=class extends Ul{constructor(e){super(e)}mergeFunction(e){return J(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=Gh(t,e[r]);return t})}};uA.className="Minimum";ue.registerClass(uA);var dA=class extends Ul{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let n of e)if(n!=null){t=!1;break}if(t)return;let r=[];for(let n=0;n<e.length;++n){let a=e[n].slice();a.splice(this.axis,1);let s=!1;for(let i of r)if(v.arraysEqual(i,a)){s=!0;break}s||r.push(a)}if(r.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return J(()=>l5(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,r=t[0].slice(),n=this.axis<0?r.length+this.axis:this.axis;for(let a of t.slice(1)){if(r[n]==null||a[n]==null){r[n]=null;break}r[n]+=a[n]}return r}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return J(()=>{let r=!0;if(t.forEach(s=>{if(s!=null){r=!1;return}}),r)return null;let n=[];for(let s=0;s<e.length;++s)t[s]==null?n.push(me(Ln(e[s]),"bool")):t[s].rank<e[s].rank?n.push(Zt(t[s],-1)):n.push(t[s]);let a=Ct(n,this.axis);return m3(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};dA.className="Concatenate";ue.registerClass(dA);function Mp(e,t){for(;e<0;)e+=t;return e}function AU(e,t,r){if(e.shape.length>3||t.shape.length>3)throw new Ge("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof r=="number"&&(r=[r,r]),e.dtype==="complex64"||t.dtype==="complex64")throw new Ge("batchDot is not implemented for complex64-type Tensors yet.");let n=e.shape.length,a=t.shape.length;r==null&&(r=[n-1,a-2]);let s=r;return J(()=>{let i;if(n>a){i=n-a;let l=[];for(let u=0;u<i;++u)l.push(1);t=G(t,t.shape.concat(l))}else if(a>n){i=a-n;let l=[];for(let u=0;u<i;++u)l.push(1);e=G(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=ke(L(e,t),s[0]):o=ke(L(et(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,u=s[1]===t.shape.length-1;o=Ye(e,t,l,u)}if(i>0){let l;n>a?l=n+a-3:l=n-1;let u=[];for(let p=l;p<l+i;++p)u.push(p);o=nt(o,u)}return o.shape.length===1&&(o=Zt(o,1)),o})}var pA=class extends Ul{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],r=e[1];if(t.length>3||r.length>3)throw new Ge("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,r);if(t[n[0]]!==r[n[1]])throw new q(`Dimension incompatibility: ${t[n[0]]} !== ${r[n[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],r=e[1],n;return Array.isArray(this.axes)?n=this.axes.map((a,s)=>Mp(a,e[s].shape.length)):n=[Mp(this.axes,t.shape.length),Mp(this.axes,r.shape.length)],this.normalize&&(t=Y0(t,n[0]),r=Y0(r,n[1])),AU(t,r,n)}interpretAxes(e,t){let r;return Array.isArray(this.axes)?r=this.axes:r=[Mp(this.axes,e.length),Mp(this.axes,t.length)],r}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new Ge("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,r);t.splice(n[0],1),r.splice(n[1],1),r.splice(0,1);let a=t.concat(r);return a.length===1&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};pA.className="Dot";ue.registerClass(pA);var hA=class extends st{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e);return Zh(()=>le(km(r.shape,0,this.stddev),r),()=>r,t.training||!1)})}};hA.className="GaussianNoise";ue.registerClass(hA);var cA=class extends st{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return J(()=>{this.invokeCallHook(e,t);let r=He(e);return this.rate>0&&this.rate<1?Zh(()=>{let n=Math.sqrt(this.rate/(1-this.rate));return L(r,km(r.shape,1,n))},()=>r,t.training||!1):r})}};cA.className="GaussianDropout";ue.registerClass(cA);var fA=class extends st{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||He(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return J(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(e);return Zh(()=>{let n=He(e),a=1.6732632423543772,s=1.0507009873554805,i=-a*s,o=Bl(Nd(r),this.rate);o=wm(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-l*i*this.rate,p=le(L(n,o),L(le(o,-1),i));return le(L(p,l),u)},()=>He(e),t.training||!1)}return e})}};fA.className="AlphaDropout";ue.registerClass(fA);function lh(e,t,r,n,a,s=.001){let i;if(e.rank===2)i=A3(e,t,r,n,a,s);else if(e.rank===3)i=x3(e,t,r,n,a,s);else if(e.rank===4)i=b3(e,t,r,n,a,s);else throw new Ge(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function xU(e,t,r,n,a=.001){return J(()=>{let s=Uh(e,n),i=s.mean,o=s.variance;return[lh(e,i,o,r,t,a),i,o]})}function bU(e,t,r,n,a=.001){return J(()=>{let s=Uh(e,n),i=s.mean,o=s.variance,l=[];for(let c of va(0,e.rank))n.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let u=G(i,l),p=G(o,l),h=t==null?null:G(t,l),d=r==null?null:G(r,l);return[lh(e,u,p,d,h,a),i,o]})}function vU(e,t,r,n,a=.001){return v.arraysEqual(n.slice().sort(),va(0,e.rank-1))?xU(e,t,r,n,a):bU(e,t,r,n,a)}var mA=class extends st{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Mt(e.betaInitializer||"zeros"),this.gammaInitializer=Mt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Mt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Mt(e.movingVarianceInitializer||"ones"),this.betaConstraint=ur(e.betaConstraint),this.gammaConstraint=ur(e.gammaConstraint),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer)}build(e){e=gt(e);let t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(r==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Yt({ndim:e.length,axes:{[t]:r}})];let n=[r];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return J(()=>{let r=t.training==null?!1:t.training,n=He(e),a=n.shape,s=a.length,i=va(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=Go(1,s);l[o]=a[o];let u=i.slice();u.sort();let p=!v.arraysEqual(u,va(0,s).slice(0,s-1)),h=()=>{if(p){let g=G(this.movingMean.read(),l),y=G(this.movingVariance.read(),l),A=this.center?G(this.beta.read(),l):null,x=this.scale?G(this.gamma.read(),l):null;return lh(n,g,y,A,x,this.epsilon)}else return lh(n,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return h();let[d,c,f]=vU(n,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(g,y,A)=>{J(()=>{let x=1-A,b=g.read(),w=L(ce(b,y),x);g.write(ce(b,w))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),movingMeanInitializer:Dt(this.movingMeanInitializer),movingVarianceInitializer:Dt(this.movingVarianceInitializer),betaRegularizer:wt(this.betaRegularizer),gammaRegularizer:wt(this.gammaRegularizer),betaConstraint:lr(this.betaConstraint),gammaConstraint:lr(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};mA.className="BatchNormalization";ue.registerClass(mA);var gA=class extends st{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Mt(e.betaInitializer||"zeros"),this.gammaInitializer=Mt(e.gammaInitializer||"ones"),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=gt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==zs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(a=>e[a]),n=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,n):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,n):this.beta=null,this.built=!0}call(e,t){let r=He(e),n=r.shape,a=n.length;return J(()=>{let{mean:s,variance:i}=Uh(r,this.axis,!0),o=Go(1,a);for(let c of this.axis)o[c]=n[c];let l=c=>c!=null&&c.shape.length!==a?G(c,o):c,u=this.scale?l(this.gamma.read()):null,p=this.center?l(this.beta.read()):null,h=[],d=[];for(let c=0;c<a;++c)this.axis.indexOf(c)!==-1?(h.push(n[c]),d.push(1)):(h.push(1),d.push(n[c]));return s=qn(s,h),i=qn(i,h),u!=null&&(u=qn(u,d)),p!=null&&(p=qn(p,d)),lh(r,s,i,p,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),betaRegularizer:wt(this.betaRegularizer),gammaRegularizer:wt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};gA.className="LayerNormalization";ue.registerClass(gA);function wU(e,t,r){return J(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(r==null&&(r=wa()),r!=="channelsLast"&&r!=="channelsFirst")throw new q(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return r==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],Qn(e,n)})}var yA=class extends st{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?wa():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,r;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=gt(e);let t,r;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?r=e[3]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],e[1],t,r]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?r=e[2]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],t,r,e[3]])}call(e,t){return J(()=>wU(He(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};yA.className="ZeroPadding2D";ue.registerClass(yA);function Vm(e,t,r,n,a,s){return J(()=>{Ht(a),s8(s),Vn(n),r==null&&(r=[1,1]),n==null&&(n="valid"),a==null&&(a=wa()),s==null&&(s="max"),e=O5(e,a);let i,o=n==="same"?"same":"valid";return s==="max"?i=rm(e,t,r,o):i=qf(e,t,r,o),a==="channelsFirst"&&(i=et(i,[0,3,1,2])),i})}function ik(e,t,r,n,a,s){return J(()=>{Ht(a),s8(s),Vn(n),r==null&&(r=[1,1,1]),n==null&&(n="valid"),a==null&&(a=wa()),s==null&&(s="max"),e=Y8(e,a);let i,o=n==="same"?"same":"valid";return s==="max"?i=D3(e,t,r,o):i=y3(e,t,r,o),a==="channelsFirst"&&(i=et(i,[0,4,1,2,3])),i})}var ok=class extends st{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(yr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);yr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Vn(this.padding),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){e=gt(e);let t=xa(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return J(()=>{this.invokeCallHook(e,t),e=Kh(He(e),2);let r=this.poolingFunction(He(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nt(r,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},AA=class extends ok{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Ht(a),Vn(n),Vm(e,t,r,n,a,"max")}};AA.className="MaxPooling1D";ue.registerClass(AA);var xA=class extends ok{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Ht(a),Vn(n),Vm(e,t,r,n,a,"avg")}};xA.className="AveragePooling1D";ue.registerClass(xA);var lk=class extends st{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];yr(this.poolSize,"poolSize"),yr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),Vn(this.padding),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){e=gt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=xa(t,this.poolSize[0],this.padding,this.strides[0]),r=xa(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return J(()=>(this.invokeCallHook(e,t),this.poolingFunction(He(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},bA=class extends lk{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Ht(a),Vn(n),Vm(e,t,r,n,a,"max")}};bA.className="MaxPooling2D";ue.registerClass(bA);var vA=class extends lk{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Ht(a),Vn(n),Vm(e,t,r,n,a,"avg")}};vA.className="AveragePooling2D";ue.registerClass(vA);var uk=class extends st{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];yr(this.poolSize,"poolSize"),yr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),Vn(this.padding),this.inputSpec=[new Yt({ndim:5})]}computeOutputShape(e){e=gt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],n=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=xa(t,this.poolSize[0],this.padding,this.strides[0]),r=xa(r,this.poolSize[1],this.padding,this.strides[1]),n=xa(n,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r,n]:[e[0],t,r,n,e[4]]}call(e,t){return J(()=>(this.invokeCallHook(e,t),this.poolingFunction(He(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},wA=class extends uk{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Ht(a),Vn(n),ik(e,t,r,n,a,"max")}};wA.className="MaxPooling3D";ue.registerClass(wA);var kA=class extends uk{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Ht(a),Vn(n),ik(e,t,r,n,a,"avg")}};kA.className="AveragePooling3D";ue.registerClass(kA);var dk=class extends st{constructor(e){super(e),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ge}},IA=class extends dk{constructor(e){super(e||{})}call(e,t){return J(()=>{let r=He(e);return Gt(r,1)})}};IA.className="GlobalAveragePooling1D";ue.registerClass(IA);var SA=class extends dk{constructor(e){super(e||{})}call(e,t){return J(()=>{let r=He(e);return Ar(r,1)})}};SA.className="GlobalMaxPooling1D";ue.registerClass(SA);var pk=class extends st{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ge}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},CA=class extends pk{call(e,t){return J(()=>{let r=He(e);return this.dataFormat==="channelsLast"?Gt(r,[1,2]):Gt(r,[2,3])})}};CA.className="GlobalAveragePooling2D";ue.registerClass(CA);var TA=class extends pk{call(e,t){return J(()=>{let r=He(e);return this.dataFormat==="channelsLast"?Ar(r,[1,2]):Ar(r,[2,3])})}};TA.className="GlobalMaxPooling2D";ue.registerClass(TA);var hk=class extends st{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,r={}){let n=t.layer,a=Aa(n,r);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},NA=class extends hk{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=gt(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=gt(e);let t=[e[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),n=e[1];return[r[0],n].concat(r.slice(1))}call(e,t){return J(()=>(e=He(e),nk((r,n)=>[He(this.layer.call(r,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};NA.className="TimeDistributed";ue.registerClass(NA);function kU(e){Vl(vB,"BidirectionalMergeMode",e)}var IU="concat",EA=class extends hk{constructor(e){super(e);let t=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=t,this.forwardLayer=Aa(r),t.goBackwards=t.goBackwards!==!0;let n={};if(n.className=e.layer.getClassName(),n.config=t,this.backwardLayer=Aa(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?IU:e.mergeMode,kU(this.mergeMode),e.weights)throw new Ge("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,r=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let r,n,a;return this.returnState&&(a=t.slice(1)),r=t[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,n=[r]):this.mergeMode==null?n=[r,r.slice()]:n=[r],this.returnState?this.mergeMode==null?n.concat(a).concat(a.slice()):[r].concat(a).concat(a.slice()):sn(n)}apply(e,t){let r=t==null?null:t.initialState,n=t==null?null:t.constants;t==null&&(t={});let a=rk(e,r,n,this.numConstants);if(e=a.inputs,r=a.initialState,n=a.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(r==null||r.length===0)&&n==null)return super.apply(e,t);let s=[],i=[];if(r!=null){let l=r.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,s.push(...r);let u=r.map(p=>new Yt({shape:p.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(n!=null)throw new Ge("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof ga;for(let l of s)if(l instanceof ga!==o)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),u=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=u;let h=super.apply(l,t);return this.inputSpec=p,h}else return super.apply(e,t)}call(e,t){return J(()=>{let r=t.initialState,n,a;if(r==null)n=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=r.slice(0,r.length/2),l=r.slice(r.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(n)&&(s=n.slice(1).concat(a.slice(1))),n=n[0],a=a[0]),this.returnSequences&&(a=Zn(a,1));let i;return this.mergeMode==="concat"?i=l5([n,a]):this.mergeMode==="sum"?i=le(n,a):this.mergeMode==="ave"?i=L(.5,le(n,a)):this.mergeMode==="mul"?i=L(n,a):this.mergeMode==null&&(i=[n,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){zo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),zo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[t,t]:r=t:this.mergeMode==null?r=[null,null]:r=null,this.returnState){let n=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(n).concat(n):[r].concat(n).concat(n)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let r=Aa(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ge("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let n=t;return n.layer=r,new e(n)}};EA.className="Bidirectional";ue.registerClass(EA);function SU(e){return new Md(e)}function CU(e){return new _5(e)}function TU(e){return new $5(e)}function NU(e){return new M5(e)}function EU(e){return new F5(e)}function RU(e){return new z5(e)}function $U(e){return new P5(e)}function MU(e){return new V5(e)}function FU(e){return new Pm(e)}function _U(e){return new L5(e)}function PU(e){return new zm(e)}function zU(e){return new B5(e)}function OU(e){return new W5(e)}function DU(e){return new G5(e)}function LU(e){return new U5(e)}function BU(e){return new j5(e)}function WU(e){return new Q5(e)}function VU(e){return new Y5(e)}function GU(e){return new Wm(e)}function UU(e){return new Z5(e)}function jU(e){return new J5(e)}function HU(e){return new eA(e)}function qU(e){return new tA(e)}function KU(e){return new rA(e)}function XU(e){return new aA(e)}function ZU(e){return new sA(e)}function YU(e){return new oA(e)}function JU(e){return new dA(e)}function QU(e){return new lA(e)}function ej(e){return new uA(e)}function tj(e){return new iA(e)}function rj(e){return new pA(e)}function nj(e){return new mA(e)}function aj(e){return new gA(e)}function sj(e){return new yA(e)}function RA(e){return new xA(e)}function ij(e){return RA(e)}function oj(e){return RA(e)}function $A(e){return new vA(e)}function lj(e){return $A(e)}function uj(e){return $A(e)}function MA(e){return new kA(e)}function dj(e){return MA(e)}function pj(e){return MA(e)}function hj(e){return new IA(e)}function cj(e){return new CA(e)}function ck(e){return new SA(e)}function fk(e){return new TA(e)}function mk(e){return new AA(e)}function gk(e){return new bA(e)}function fj(e){return new wA(e)}function mj(e){return new q5(e)}function gj(e){return new Dm(e)}function yj(e){return new K5(e)}function Aj(e){return new tc(e)}function xj(e){return new H5(e)}function bj(e){return new Om(e)}function vj(e){return new X5(e)}function wj(e){return new Bm(e)}function kj(e){return new us(e)}function Ij(e){return new Lm(e)}function Sj(e){return new EA(e)}function Cj(e){return new NA(e)}var Tj=ck,Nj=fk,Ej=mk,Rj=gk;function $j(e){return new hA(e)}function Mj(e){return new cA(e)}function Fj(e){return new fA(e)}function _j(e){return new nA(e)}var yk={};Be(yk,{MAPE:()=>jj,MSE:()=>Kj,binaryAccuracy:()=>Pj,binaryCrossentropy:()=>zj,categoricalAccuracy:()=>Dj,categoricalCrossentropy:()=>Lj,cosineProximity:()=>Vj,mape:()=>Hj,meanAbsoluteError:()=>Gj,meanAbsolutePercentageError:()=>Uj,meanSquaredError:()=>qj,mse:()=>Xj,precision:()=>Bj,recall:()=>Wj,sparseCategoricalAccuracy:()=>Oj});function Pj(e,t){return I5(e,t)}function zj(e,t){return T8(e,t)}function Oj(e,t){return N8(e,t)}function Dj(e,t){return S5(e,t)}function Lj(e,t){return C5(e,t)}function Bj(e,t){return C8(e,t)}function Wj(e,t){return EG(e,t)}function Vj(e,t){return k5(e,t)}function Gj(e,t){return Mm(e,t)}function Uj(e,t){return Fd(e,t)}function jj(e,t){return Fd(e,t)}function Hj(e,t){return Fd(e,t)}function qj(e,t){return Gl(e,t)}function Kj(e,t){return Gl(e,t)}function Xj(e,t){return Gl(e,t)}var Ak={};Be(Ak,{modelFromJSON:()=>sU});var xk={};Be(xk,{l1:()=>Yj,l1l2:()=>Zj,l2:()=>Jj});function Zj(e){return new Jh(e)}function Yj(e){return cU(e)}function Jj(e){return fU(e)}var bk=class extends Vu{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof es))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function g0(e,t){return e<t}function l7(e,t){return e>t}var vk=class extends bk{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Ge("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=g0:this.mode==="max"?this.monitorFunc=l7:this.monitor.indexOf("acc")!==-1?this.monitorFunc=l7:this.monitorFunc=g0,this.monitorFunc===g0&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===g0?1/0:-1/0}async onEpochEnd(e,t){await $s(t);let r=this.getMonitorValue(t);r!=null&&(this.monitorFunc(r-this.minDelta,this.best)?(this.best=r,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Qj(e){return new vk(e)}var eH={earlyStopping:Qj},tH=Y();tH.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var wk=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(wk||{}),u7;(e=>{let t;(r=>{r[r.LEGACY=0]="LEGACY",r[r.V1=1]="V1",r[r.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(u7||(u7={}));var FA={};function rH(e,t){let r={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};FA[e]=r}function kk(e){return FA[e]}function nH(e){delete FA[e]}function k(e,t,r,n,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return Vr(t.inputNames[s.inputIndexStart],r,n,a);if(s.type==="tensors")return t.inputNames.slice(o,l).map(h=>Vr(h,r,n,a));let u=Vr(t.inputNames.slice(o)[0],r,n,a),p=u.dataSync();return s.type==="number"?p[0]:v.toNestedArray(u.shape,p)}let i=t.attrParams[e];return i&&i.value}function Vr(e,t,r,n){let[a,s]=fn(e);if(n!=null){let o=n.getHashTableHandleByName(a);if(o!=null)return o}let i=r.currentContextIds.find(o=>!!t[rf(a,o)]);return i!==void 0?t[rf(a,i)][s]:void 0}function aH(e,t,r){return t[rf(e,r.currentContextId)]}function _a(e,t){let[r,n,a]=fn(e);return[rf(r,t&&t.currentContextId),n,a]}function rf(e,t){return t?`${e}-${t}`:e}function fn(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let r=t[0],n=t.length===3?t[1]:void 0,a=Number(t[t.length-1]);return[r,a,n]}function C0(e,t,r){let n=k("pad",e,t,r);if(n==="explicit"){n=k("explicitPaddings",e,t,r);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=n[s*2],a[s][1]=n[s*2+1];return a}return n}function Ya(e){return e.kept?e:Nr(e)}var Ik={};Be(Ik,{json:()=>sH});var sH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Sk={};Be(Sk,{json:()=>iH});var iH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ck={};Be(Ck,{json:()=>oH});var oH=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Tk={};Be(Tk,{json:()=>lH});var lH=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Nk={};Be(Nk,{json:()=>uH});var uH=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Ek={};Be(Ek,{json:()=>dH});var dH=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Rk={};Be(Rk,{json:()=>pH});var pH=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],$k={};Be($k,{json:()=>hH});var hH=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Mk={};Be(Mk,{json:()=>cH});var cH=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Fk={};Be(Fk,{json:()=>fH});var fH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],_k={};Be(_k,{json:()=>mH});var mH=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Pk={};Be(Pk,{json:()=>gH});var gH=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],zk={};Be(zk,{json:()=>yH});var yH=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Ok={};Be(Ok,{json:()=>AH});var AH=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Dk={};Be(Dk,{json:()=>xH});var xH=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Lk={};Be(Lk,{json:()=>bH});var bH=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Bk={};Be(Bk,{json:()=>vH});var vH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Wk={};Be(Wk,{json:()=>wH});var wH=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Vk={};Be(Vk,{json:()=>kH});var kH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],d7=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Ik,Sk,Ck,Tk,Nk,Ek,Rk,$k,Mk,Fk,_k,Pk,zk,Ok,Dk,Lk,Bk,Wk,Vk],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,n)=>(r[n.tfOpName]=n,r),{})}transformGraph(e,t={}){let r=e.node,n=[],a=[],s=[],i=r.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?n.push(f[m.name]):m.op==="Const"?a.push(f[m.name]):(m.input==null||m.input.length===0)&&s.push(f[m.name]),f),{}),o=[],l=[],u={},p={};t!=null&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(f=>{let m=i[f];m.inputNames.forEach((g,y)=>{let[A,,x]=_a(g),b=i[A];if(b.outputs!=null){let w=b.outputs.indexOf(x);if(w!==-1){let I=`${A}:${w}`;m.inputNames[y]=I}}m.inputs.push(b),b.children.push(m)})}),Object.keys(p).length===0?h.forEach(f=>{let m=i[f];m.children.length===0&&l.push(m)}):Object.keys(p).forEach(f=>{let[m]=_a(f),g=i[m];g!=null&&(g.signatureKey=p[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=_a(f),g=i[m];g&&(g.signatureKey=u[f],o.push(g))}):o=n;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:n,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){let t=kk(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((n,a)=>(n[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},n),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((n,a)=>{let s=a.type,i;switch(a.type){case"string":i=fy(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=fy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=vy(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=vy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=gy(e.attr,a.tfName,a.defaultValue||0),i===void 0&&!!a.tfDeprecatedName&&(i=gy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=by(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=by(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=my(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=my(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=ky(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=ky(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=xy(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=xy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=wy(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=wy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=yy(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=yy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Ay(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=Ay(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=p7(e.attr,a.tfName,a.defaultValue),i===void 0&&!!a.tfDeprecatedName&&(i=p7(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return n[a.name]={value:i,type:s},n},{})),r}mapFunction(e){let t=e.nodeDef,r=[],n=[],a={};t!=null&&(a=t.reduce((u,p)=>(u[p.name]=this.mapNode(p),p.op==="Const"&&n.push(u[p.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[p]=_a(u.name),h={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:_A(u.type),type:"dtype"}},children:[]};h.signatureKey=u.name,s.push(h),a[p]=h}),Object.keys(a).forEach(u=>{let p=a[u];p.inputNames.forEach((h,d)=>{let[c,,f]=_a(h),m=a[c];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let y=`${c}:${g}`;p.inputNames[d]=y}}p.inputs.push(m),m.children.push(p)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[p,h]=_a(o[u.name]),d=a[p];d!=null&&(d.defaultOutput=h,i.push(d))});let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:n,placeholders:r,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}};function IH(e){let t=Y().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Gk(e,t){let r=Array.isArray(e)?String.fromCharCode.apply(null,e):IH(e);return t?r:r.toLowerCase()}function fy(e,t,r,n=!1){let a=e[t];return a!=null?Gk(a.s,n):r}function my(e,t,r){let n=e[t];return n?n.b:r}function gy(e,t,r){let n=e[t]||{},a=n.i!=null?n.i:n.f!=null?n.f:r;return typeof a=="number"?a:parseInt(a,10)}function _A(e){switch(typeof e=="string"&&(e=wk[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function p7(e,t,r){let n=e[t];return n&&n.func?n.func.name:r}function yy(e,t,r){let n=e[t];return n&&n.type?_A(n.type):r}function Ay(e,t,r){let n=e[t];return n&&n.list&&n.list.type?n.list.type.map(a=>_A(a)):r}function Uk(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function xy(e,t,r){let n=e[t];return n&&n.shape?Uk(n.shape):r}function by(e,t,r){let n=e[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):r}function vy(e,t,r,n=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>Gk(s,n)):r}function wy(e,t,r){let n=e[t];return n&&n.list&&n.list.shape?n.list.shape.map(a=>Uk(a)):r}function ky(e,t,r){let n=e[t];return n&&n.list&&n.list.b?n.list.b:r}var SH=class{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(n=>this.getInput(n)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((n,a)=>(n[a]=this.getAttr(a),n),{}))}getInput(e){return Vr(e,this.tensorMap,this.context)}getAttr(e,t){let r=this.node.rawAttrs[e];if(r.tensor!=null)return Vr(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return gy(this.node.rawAttrs,e,t);if(r.s!=null)return fy(this.node.rawAttrs,e,t);if(r.b!=null)return my(this.node.rawAttrs,e,t);if(r.shape!=null)return xy(this.node.rawAttrs,e,t);if(r.type!=null)return yy(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return by(this.node.rawAttrs,e,t);if(r.list.s!=null)return vy(this.node.rawAttrs,e,t);if(r.list.shape!=null)return wy(this.node.rawAttrs,e,t);if(r.list.b!=null)return ky(this.node.rawAttrs,e,t);if(r.list.type!=null)return Ay(this.node.rawAttrs,e,t)}return t}},kr={};Be(kr,{OP_SCOPE_SUFFIX:()=>Zy,abs:()=>sr,acos:()=>yv,acosh:()=>Av,add:()=>le,addN:()=>Hf,all:()=>m3,any:()=>U0,argMax:()=>Pn,argMin:()=>xv,asin:()=>bv,asinh:()=>vv,atan:()=>wv,atan2:()=>kv,atanh:()=>Iv,avgPool:()=>qf,avgPool3d:()=>y3,basicLSTMCell:()=>Nv,batchNorm:()=>Oh,batchNorm2d:()=>A3,batchNorm3d:()=>x3,batchNorm4d:()=>b3,batchToSpaceND:()=>Kf,bincount:()=>v3,booleanMaskAsync:()=>Mw,broadcastArgs:()=>Ev,broadcastTo:()=>qp,buffer:()=>Oe,cast:()=>me,ceil:()=>Rv,clipByValue:()=>xn,clone:()=>Nr,complex:()=>ts,concat:()=>Ct,concat1d:()=>w3,concat2d:()=>Ll,concat3d:()=>k3,concat4d:()=>I3,conv1d:()=>S3,conv2d:()=>Us,conv2dTranspose:()=>T3,conv3d:()=>N3,conv3dTranspose:()=>E3,cos:()=>Xf,cosh:()=>R3,cosineWindow:()=>dm,cumprod:()=>H0,cumsum:()=>$3,denseBincount:()=>Mv,depthToSpace:()=>Fv,depthwiseConv2d:()=>Dh,diag:()=>_v,dilation2d:()=>Pv,div:()=>pe,divNoNan:()=>zv,dot:()=>Ov,dropout:()=>Q3,einsum:()=>Dv,elu:()=>Lh,enclosingPowerOfTwo:()=>e5,equal:()=>zn,erf:()=>Lv,euclideanNorm:()=>Uv,exp:()=>On,expandDims:()=>Zt,expm1:()=>jv,eye:()=>Zf,fft:()=>om,fill:()=>Sd,floor:()=>Wh,floorDiv:()=>Ph,fused:()=>Bu,gather:()=>Vh,gatherND:()=>zw,greater:()=>wn,greaterEqual:()=>Bl,ifft:()=>sh,imag:()=>_h,image:()=>Te,inTopKAsync:()=>Ow,irfft:()=>K3,isFinite:()=>Hv,isInf:()=>qv,isNaN:()=>Kv,leakyRelu:()=>Yf,less:()=>_3,lessEqual:()=>Wl,linalg:()=>n5,linspace:()=>Xv,localResponseNormalization:()=>Zv,log:()=>Dn,log1p:()=>Jf,logSigmoid:()=>Jv,logSoftmax:()=>P3,logSumExp:()=>z3,logicalAnd:()=>ba,logicalNot:()=>em,logicalOr:()=>O3,logicalXor:()=>Qv,losses:()=>Kw,lowerBound:()=>ew,matMul:()=>Ye,max:()=>Ar,maxPool:()=>rm,maxPool3d:()=>D3,maxPoolWithArgmax:()=>tw,maximum:()=>is,mean:()=>Gt,meshgrid:()=>rw,min:()=>js,minimum:()=>Gh,mirrorPad:()=>nw,mod:()=>Td,moments:()=>Uh,movingAverage:()=>Fw,mul:()=>L,multiRNNCell:()=>aw,multinomial:()=>sw,neg:()=>Ft,norm:()=>Bh,notEqual:()=>Du,oneHot:()=>ah,ones:()=>An,onesLike:()=>Ln,op:()=>W,outerProduct:()=>iw,pad:()=>Qn,pad1d:()=>ow,pad2d:()=>lw,pad3d:()=>uw,pad4d:()=>dw,pool:()=>pw,pow:()=>Hs,prelu:()=>am,print:()=>e3,prod:()=>hw,rand:()=>cw,randomGamma:()=>fw,randomNormal:()=>sm,randomStandardNormal:()=>mw,randomUniform:()=>Nd,range:()=>Lu,real:()=>zu,reciprocal:()=>gw,relu:()=>Va,relu6:()=>W3,reshape:()=>G,reverse:()=>Zn,reverse1d:()=>yw,reverse2d:()=>Aw,reverse3d:()=>xw,reverse4d:()=>bw,rfft:()=>lm,round:()=>V3,rsqrt:()=>G3,scalar:()=>Ie,scatterND:()=>_w,searchSorted:()=>tm,selu:()=>U3,separableConv2d:()=>j3,setdiff1dAsync:()=>vw,sigmoid:()=>Er,sign:()=>ww,signal:()=>qw,sin:()=>H3,sinh:()=>q3,slice:()=>_e,slice1d:()=>jh,slice2d:()=>im,slice3d:()=>Yi,slice4d:()=>qs,softmax:()=>Ed,softplus:()=>Cd,spaceToBatchND:()=>nm,sparse:()=>Xw,sparseToDense:()=>Pw,spectral:()=>Hw,split:()=>Jt,sqrt:()=>$r,square:()=>vt,squaredDifference:()=>X3,squeeze:()=>nt,stack:()=>dr,step:()=>Rd,stridedSlice:()=>kw,string:()=>Zw,sub:()=>ce,sum:()=>ke,tan:()=>Iw,tanh:()=>Ou,tensor:()=>ut,tensor1d:()=>$t,tensor2d:()=>Kn,tensor3d:()=>o3,tensor4d:()=>Sw,tensor5d:()=>Cw,tensor6d:()=>Tw,tile:()=>qn,topk:()=>Nw,transpose:()=>et,truncatedNormal:()=>um,unique:()=>Ew,unsortedSegmentSum:()=>Z3,unstack:()=>ln,upperBound:()=>Rw,variable:()=>Y3,where:()=>Ur,whereAsync:()=>J3,zeros:()=>Ot,zerosLike:()=>at});var CH=(e,t,r,n=kr)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(k("a",e,t,r),k("b",e,t,r))];case"AddN":return[n.addN(k("tensors",e,t,r))];case"FloorMod":case"Mod":return[n.mod(k("a",e,t,r),k("b",e,t,r))];case"Mul":return[n.mul(k("a",e,t,r),k("b",e,t,r))];case"RealDiv":case"Div":return[n.div(k("a",e,t,r),k("b",e,t,r))];case"DivNoNan":return[n.divNoNan(k("a",e,t,r),k("b",e,t,r))];case"FloorDiv":return[n.floorDiv(k("a",e,t,r),k("b",e,t,r))];case"Sub":return[n.sub(k("a",e,t,r),k("b",e,t,r))];case"Minimum":return[n.minimum(k("a",e,t,r),k("b",e,t,r))];case"Maximum":return[n.maximum(k("a",e,t,r),k("b",e,t,r))];case"Pow":return[n.pow(k("a",e,t,r),k("b",e,t,r))];case"SquaredDifference":return[n.squaredDifference(k("a",e,t,r),k("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},TH=(e,t,r,n=kr)=>{switch(e.op){case"Abs":case"ComplexAbs":return[n.abs(k("x",e,t,r))];case"Acos":return[n.acos(k("x",e,t,r))];case"Acosh":return[n.acosh(k("x",e,t,r))];case"Asin":return[n.asin(k("x",e,t,r))];case"Asinh":return[n.asinh(k("x",e,t,r))];case"Atan":return[n.atan(k("x",e,t,r))];case"Atan2":return[n.atan2(k("x",e,t,r),k("y",e,t,r))];case"Atanh":return[n.atanh(k("x",e,t,r))];case"Ceil":return[n.ceil(k("x",e,t,r))];case"Complex":return[n.complex(k("real",e,t,r),k("imag",e,t,r))];case"Cos":return[n.cos(k("x",e,t,r))];case"Cosh":return[n.cosh(k("x",e,t,r))];case"Elu":return[n.elu(k("x",e,t,r))];case"Erf":return[n.erf(k("x",e,t,r))];case"Exp":return[n.exp(k("x",e,t,r))];case"Expm1":return[n.expm1(k("x",e,t,r))];case"Floor":return[n.floor(k("x",e,t,r))];case"Log":return[n.log(k("x",e,t,r))];case"Log1p":return[n.log1p(k("x",e,t,r))];case"Imag":return[n.imag(k("x",e,t,r))];case"Neg":return[n.neg(k("x",e,t,r))];case"Reciprocal":return[n.reciprocal(k("x",e,t,r))];case"Real":return[n.real(k("x",e,t,r))];case"Relu":return[n.relu(k("x",e,t,r))];case"Round":return[n.round(k("x",e,t,r))];case"Selu":return[n.selu(k("x",e,t,r))];case"Sigmoid":return[n.sigmoid(k("x",e,t,r))];case"Sin":return[n.sin(k("x",e,t,r))];case"Sign":return[n.sign(k("x",e,t,r))];case"Sinh":return[n.sinh(k("x",e,t,r))];case"Softplus":return[n.softplus(k("x",e,t,r))];case"Sqrt":return[n.sqrt(k("x",e,t,r))];case"Square":return[n.square(k("x",e,t,r))];case"Tanh":return[n.tanh(k("x",e,t,r))];case"Tan":return[n.tan(k("x",e,t,r))];case"ClipByValue":return[n.clipByValue(k("x",e,t,r),k("clipValueMin",e,t,r),k("clipValueMax",e,t,r))];case"Relu6":return[n.relu6(k("x",e,t,r))];case"Rsqrt":return[n.rsqrt(Vr(e.inputNames[0],t,r))];case"Prod":return[n.prod(k("x",e,t,r),k("axes",e,t,r))];case"LeakyRelu":return[n.leakyRelu(k("x",e,t,r),k("alpha",e,t,r))];case"Prelu":return[n.prelu(k("x",e,t,r),k("alpha",e,t,r))];case"IsNan":return[n.isNaN(Vr(e.inputNames[0],t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Hn(e,t,r=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>r+` Shapes ${e} and ${t} must match`);for(let n=0;n<e.length;n++){let a=e[n],s=t[n];v.assert(a<0||s<0||a===s,()=>r+` Shapes ${e} and ${t} must match`)}}}function h7(e){return!(typeof e=="number"||e.some(t=>t<0))}function Fp(e,t,r){let n=Iy(e,r),a=!h7(n);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(a&&t.forEach(s=>{n=Iy(s.shape,n)}),!h7(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Iy(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let r=[];for(let n=0;n<e.length;++n){let a=e[n],s=t[n];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);r[n]=a>=0?a:s}return r}var NH=class{constructor(e,t,r,n,a,s,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=n,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ie(0),gr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Hn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,gr(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,n)=>this.write(r,t[n]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let n=0;n<this.size();n++)e.push(n)}if(e.length===0)return ut([],[0].concat(this.elementShape));let r=this.readMany(e);return Hn(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),dr(r,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ut([],[0].concat(this.elementShape));let t=[];for(let n=0;n<this.size();n++)t.push(n);let r=this.readMany(t);return Hn(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Ct(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,ln(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0,n=e.map(o=>(r+=o,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=r===0?0:t.size/r,s=[];J(()=>{t=G(t,[1,r,a]);for(let o=0;o<e.length;++o){let l=o===0?0:n[o-1],u=[0,l,0],p=[1,e[o],a];s[o]=G(_e(t,u,p),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},Gu=class{constructor(e,t,r,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(a=>{if(r!==a.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${a.dtype}`);Hn(t,a.shape,"TensorList shape mismatch: "),gr(a)}),this.idTensor=Ie(0),this.maxNumElements=n,gr(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Gu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Hn(e,this.elementShape,"TensorList shape mismatch: ");let n=Fp(this.elementShape,this.tensors,e);return J(()=>{let a=this.tensors.map(s=>G(s,n));return dr(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=Fp(this.elementShape,this.tensors,e),n=this.tensors.pop();return Hn(n.shape,e,"TensorList shape mismatch: "),G(n,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Hn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");gr(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new Gu([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Hn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=Fp(this.elementShape,this.tensors,t);return G(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Hn(this.elementShape,t.shape,"TensorList shape mismatch: "),gr(t),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Hn(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=Fp(this.elementShape,this.tensors,r);return e.length===0?ut([],[0].concat(n)):J(()=>{let a=e.map(s=>G(this.tensors[s],n));return dr(a,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Hn(this.elementShape,t,"TensorList shape mismatch: ");let r=Fp(this.elementShape,this.tensors,t);return this.size()===0?ut([],[0].concat(r)):J(()=>{let n=this.tensors.map(a=>G(a,r));return Ct(n,0)})}};function EH(e,t,r){let n=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==r)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${r}`);let a=e.shape.slice(1);Hn(a,t,"TensorList shape mismatch: ");let s=ln(e);return new Gu(s,t,n)}function RH(e,t,r,n){return new Gu([],e,t,n)}function $H(e,t,r,n){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(n!=null&&n!==-1&&a>=n)throw new Error(`Max index must be < array size (${a}  vs. ${n})`);let s=new Gu([],r,e.dtype,n),i=ln(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function MH(e,t,r){let n=0,a=t.map(p=>(n+=p,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Iy(s,r),o=n===0?0:e.size/n,l=J(()=>{let p=[];e=G(e,[1,n,o]);for(let h=0;h<t.length;++h){let d=h===0?0:a[h-1],c=[0,d,0],f=[1,t[h],o];p[h]=G(_e(e,c,f),i)}return e.dispose(),p}),u=new Gu([],r,e.dtype,t.length);for(let p=0;p<l.length;p++)u.setItem(p,l[p]);return u}var FH=async(e,t,r)=>{switch(e.op){case"If":case"StatelessIf":{let n=k("thenBranch",e,t,r),a=k("elseBranch",e,t,r),s=k("cond",e,t,r),i=k("args",e,t,r);return(await s.data())[0]?r.functionMap[n].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap):r.functionMap[a].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{let n=k("body",e,t,r),a=k("cond",e,t,r),s=k("args",e,t,r),i=await r.functionMap[a].executeFunctionAsync(s,r.tensorArrayMap,r.tensorListMap),o=s.map(p=>p.id),l=await i[0].data();i.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&p.dispose()});let u=s;for(;l[0];){let p=u;u=await r.functionMap[n].executeFunctionAsync(u,r.tensorArrayMap,r.tensorListMap);let h=u.map(c=>c.id);p.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()});let d=await r.functionMap[a].executeFunctionAsync(u,r.tensorArrayMap,r.tensorListMap);l=await d[0].data(),d.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()})}return u}case"LoopCond":{let n=k("pred",e,t,r);return[Ya(n)]}case"Switch":{let n=k("pred",e,t,r),a=k("data",e,t,r);return a.kept||(a=Ya(a)),(await n.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let n=e.inputNames.find(a=>Vr(a,t,r)!==void 0);if(n){let a=Vr(n,t,r);return[Ya(a)]}return}case"Enter":{let n=k("frameName",e,t,r),a=k("tensor",e,t,r);return r.enterFrame(n),[Ya(a)]}case"Exit":{let n=k("tensor",e,t,r);return r.exitFrame(),[Ya(n)]}case"NextIteration":{let n=k("tensor",e,t,r);return r.nextIteration(),[Ya(n)]}case"TensorArrayV3":{let n=k("size",e,t,r),a=k("dtype",e,t,r),s=k("elementShape",e,t,r),i=k("dynamicSize",e,t,r),o=k("clearAfterRead",e,t,r),l=k("identicalElementShapes",e,t,r),u=k("name",e,t,r),p=new NH(u,a,n,s,l,i,o);return r.addTensorArray(p),[p.idTensor,Ie(1)]}case"TensorArrayWriteV3":{let n=k("tensorArrayId",e,t,r),a=k("index",e,t,r),s=k("tensor",e,t,r),i=r.getTensorArray(n.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let n=k("tensorArrayId",e,t,r),a=k("index",e,t,r);return[r.getTensorArray(n.id).read(a)]}case"TensorArrayGatherV3":{let n=k("tensorArrayId",e,t,r),a=k("indices",e,t,r),s=k("dtype",e,t,r);return[r.getTensorArray(n.id).gather(a,s)]}case"TensorArrayScatterV3":{let n=k("tensorArrayId",e,t,r),a=k("indices",e,t,r),s=k("tensor",e,t,r),i=r.getTensorArray(n.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=k("tensorArrayId",e,t,r),a=r.getTensorArray(n.id),s=k("dtype",e,t,r);return[a.concat(s)]}case"TensorArraySplitV3":{let n=k("tensorArrayId",e,t,r),a=k("tensor",e,t,r),s=k("lengths",e,t,r),i=r.getTensorArray(n.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let n=k("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return[Ie(a.size(),"int32")]}case"TensorArrayCloseV3":{let n=k("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let n=k("tensorListId",e,t,r),a=k("index",e,t,r),s=k("tensor",e,t,r),i=r.getTensorList(n.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let n=k("tensorListId",e,t,r),a=k("index",e,t,r),s=k("elementShape",e,t,r),i=k("elementDType",e,t,r);return[r.getTensorList(n.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=k("indices",e,t,r),a=k("tensor",e,t,r),s=k("elementShape",e,t,r),i=k("numElements",e,t,r),o=$H(a,n,s,i);return r.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=k("elementShape",e,t,r),a=k("elementDType",e,t,r),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,r),o=e.op==="TensorListReserve"?-1:i,l=RH(n,a,i,o);return r.addTensorList(l),[l.idTensor]}case"TensorListGather":{let n=k("tensorListId",e,t,r),a=k("indices",e,t,r),s=k("elementShape",e,t,r),i=k("elementDType",e,t,r);return[r.getTensorList(n.id).gather(a,i,s)]}case"TensorListStack":{let n=k("tensorListId",e,t,r),a=k("elementShape",e,t,r),s=k("elementDType",e,t,r),i=k("numElements",e,t,r);return[r.getTensorList(n.id).stack(a,s,i)]}case"TensorListFromTensor":{let n=k("tensor",e,t,r),a=k("elementShape",e,t,r),s=k("elementDType",e,t,r),i=EH(n,a,s);return r.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=k("tensorListId",e,t,r),a=r.getTensorList(n.id),s=k("dtype",e,t,r),i=k("elementShape",e,t,r);return[a.concat(s,i)]}case"TensorListPushBack":{let n=k("tensorListId",e,t,r),a=k("tensor",e,t,r),s=r.getTensorList(n.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let n=k("tensorListId",e,t,r),a=k("elementShape",e,t,r),s=k("elementDType",e,t,r);return[r.getTensorList(n.id).popBack(a,s)]}case"TensorListSplit":{let n=k("tensor",e,t,r),a=k("elementShape",e,t,r),s=k("lengths",e,t,r),i=MH(n,s,a);return r.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=k("tensorListId",e,t,r),a=r.getTensorList(n.id);return[Ie(a.size(),"int32")]}case"TensorListResize":{let n=k("tensorListId",e,t,r),a=k("size",e,t,r),s=r.getTensorList(n.id).resize(a);return r.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function c7(e,t,r){let[n,a]=k("fusedOps",e,t,r),s=n==="biasadd",i=!s,o=a==="prelu",l=n==="fusedbatchnorm",u=k("numArgs",e,t,r);if(s){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=k("strides",e,t,r),h=C0(e,t,r),d=k("dataFormat",e,t,r).toUpperCase(),c=k("dilations",e,t,r),[f,m]=k("args",e,t,r);i&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,r);return{stride:p,pad:h,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:g}}var _H=(e,t,r,n=kr)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,r),s=k("pad",e,t,r),i=k("dataFormat",e,t,r).toUpperCase(),o=k("dilation",e,t,r);return[n.conv1d(k("x",e,t,r),k("filter",e,t,r),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,r),s=C0(e,t,r),i=k("dataFormat",e,t,r).toUpperCase(),o=k("dilations",e,t,r);return[n.conv2d(k("x",e,t,r),k("filter",e,t,r),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=c7(e,t,r);return[n.fused.conv2d({x:k("x",e,t,r),filter:k("filter",e,t,r),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=c7(e,t,r);return[n.fused.depthwiseConv2d({x:k("x",e,t,r),filter:k("filter",e,t,r),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,r),s=k("strides",e,t,r),i=C0(e,t,r);return[n.conv2dTranspose(k("x",e,t,r),k("filter",e,t,r),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,r),s=C0(e,t,r),i=k("dilations",e,t,r),o=k("dataFormat",e,t,r).toUpperCase();return[n.depthwiseConv2d(k("input",e,t,r),k("filter",e,t,r),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("dataFormat",e,t,r).toUpperCase(),o=k("dilations",e,t,r);return[n.conv3d(k("x",e,t,r),k("filter",e,t,r),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.avgPool(k("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.maxPool(k("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r),o=k("includeBatchInIndex",e,t,r),{result:l,indexes:u}=n.maxPoolWithArgmax(k("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.avgPool3d(k("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.maxPool3d(k("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("dilations",e,t,r),o=a[1],l=a[2],u=i[1],p=i[2];return[n.dilation2d(k("x",e,t,r),k("filter",e,t,r),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},PH=(e,t,r,n=kr)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,r),s=k("dtype",e,t,r),i=k("value",e,t,r);return[n.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,r),s=k("stop",e,t,r),i=k("num",e,t,r);return[n.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,r),s=k("numSamples",e,t,r),i=k("seed",e,t,r);return[n.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,r),s=k("depth",e,t,r),i=k("onValue",e,t,r),o=k("offValue",e,t,r);return[n.oneHot(a,s,i,o)]}case"Ones":return[n.ones(k("shape",e,t,r),k("dtype",e,t,r))];case"OnesLike":return[n.onesLike(k("x",e,t,r))];case"RandomStandardNormal":return[n.randomStandardNormal(k("shape",e,t,r),k("dtype",e,t,r),k("seed",e,t,r))];case"RandomUniform":return[n.randomUniform(k("shape",e,t,r),k("minval",e,t,r),k("maxval",e,t,r),k("dtype",e,t,r))];case"Range":{let a=k("start",e,t,r),s=k("stop",e,t,r),i=k("step",e,t,r);return[n.range(a,s,i,k("dtype",e,t,r))]}case"TruncatedNormal":{let a=k("shape",e,t,r),s=k("mean",e,t,r),i=k("stdDev",e,t,r),o=k("seed",e,t,r);return[n.truncatedNormal(a,s,i,k("dtype",e,t,r),o)]}case"Zeros":return[n.zeros(k("shape",e,t,r),k("dtype",e,t,r))];case"ZerosLike":return[n.zerosLike(k("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Og(e,t,r){let n=k("boxes",e,t,r),a=k("scores",e,t,r),s=k("maxOutputSize",e,t,r),i=k("iouThreshold",e,t,r),o=k("scoreThreshold",e,t,r),l=k("softNmsSigma",e,t,r);return{boxes:n,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var zH=async(e,t,r,n,a=kr)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:p}=Og(e,t,r),h=await a.image.nonMaxSuppressionWithScoreAsync(s,i,o,l,u,p);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Og(e,t,r),p=k("padToMaxOutputSize",e,t,r),h=await a.image.nonMaxSuppressionPaddedAsync(s,i,o,l,u,p);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Og(e,t,r);return[await a.image.nonMaxSuppressionAsync(s,i,o,l,u)]}case"Where":{let s=a.cast(k("condition",e,t,r),"bool"),i=[await a.whereAsync(s)];return s.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,r),k("y",e,t,r));default:throw TypeError(`Node type ${e.op} is not implemented`)}},OH=(e,t,r,n=kr)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,r),s=k("values",e,t,r);return[n.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,r),s=k("k",e,t,r),i=k("sorted",e,t,r),o=n.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,r),s=k("values",e,t,r);return[n.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,r),s=n.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,r),s=k("axis",e,t,r),i=n.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},DH=(e,t,r,n=kr)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,r);return[Vr(e.name,t,r)||a];case"Placeholder":return[Vr(e.name,t,r)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let p=k("x",e,t,r);return[Ya(p)]}case"IdentityN":return k("x",e,t,r).map(p=>Ya(p));case"Snapshot":let s=k("x",e,t,r);return[Ya(s)];case"Shape":return[n.tensor1d(k("x",e,t,r).shape,"int32")];case"ShapeN":return k("x",e,t,r).map(p=>n.tensor1d(p.shape));case"Size":return[n.scalar(k("x",e,t,r).size,"int32")];case"Rank":return[n.scalar(k("x",e,t,r).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=k("x",e,t,r),o=k("data",e,t,r),l=k("message",e,t,r),u=k("summarize",e,t,r);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let p=0;p<o.length;p++)console.log(Array.prototype.slice.call(o[p].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},LH=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ie(0),this.tensorMap=new Map,gr(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ie(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),J(()=>{let n=ln(t),a=r.length,s=n.length;v.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=r[i],l=n[i];gr(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return J(()=>{let n=[];for(let a=0;a<r.length;a++){let s=r[a],i=this.findWithDefault(s,t);n.push(i)}return dr(n)})}findWithDefault(e,t){let r=this.tensorMap.get(e);return r!=null?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},BH=async(e,t,r,n)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=k("keyDType",e,t,r),s=k("valueDType",e,t,r),i=new LH(a,s);return n.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,r,n),s=k("keys",e,t,r),i=k("values",e,t,r);return[await n.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,r,n),s=k("keys",e,t,r),i=k("defaultValue",e,t,r);return[await n.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,r,n);return[n.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},WH=(e,t,r,n=kr)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,r),s=k("size",e,t,r),i=k("alignCorners",e,t,r),o=k("halfPixelCenters",e,t,r);return[n.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,r),s=k("size",e,t,r),i=k("alignCorners",e,t,r),o=k("halfPixelCenters",e,t,r);return[n.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,r),s=k("boxes",e,t,r),i=k("boxInd",e,t,r),o=k("cropSize",e,t,r),l=k("method",e,t,r),u=k("extrapolationValue",e,t,r);return[n.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,r),s=k("transforms",e,t,r),i=k("outputShape",e,t,r),o=k("fillValue",e,t,r),l=k("interpolation",e,t,r),u=k("fillMode",e,t,r);return[n.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},VH=(e,t,r,n=kr)=>{switch(e.op){case"Equal":return[n.equal(k("a",e,t,r),k("b",e,t,r))];case"NotEqual":return[n.notEqual(k("a",e,t,r),k("b",e,t,r))];case"Greater":return[n.greater(k("a",e,t,r),k("b",e,t,r))];case"GreaterEqual":return[n.greaterEqual(k("a",e,t,r),k("b",e,t,r))];case"Less":return[n.less(k("a",e,t,r),k("b",e,t,r))];case"LessEqual":return[n.lessEqual(k("a",e,t,r),k("b",e,t,r))];case"LogicalAnd":return[n.logicalAnd(k("a",e,t,r),k("b",e,t,r))];case"LogicalNot":return[n.logicalNot(k("a",e,t,r))];case"LogicalOr":return[n.logicalOr(k("a",e,t,r),k("b",e,t,r))];case"Select":case"SelectV2":return[n.where(k("condition",e,t,r),k("a",e,t,r),k("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},GH=(e,t,r,n=kr)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(k("a",e,t,r),k("b",e,t,r),k("transposeA",e,t,r),k("transposeB",e,t,r))];case"Einsum":return[n.einsum(k("equation",e,t,r),...k("tensors",e,t,r))];case"Transpose":return[n.transpose(k("x",e,t,r),k("perm",e,t,r))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,r),i=a==="biasadd",o=s==="prelu",l=k("numArgs",e,t,r),u=k("leakyreluAlpha",e,t,r);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,h]=k("args",e,t,r);return[n.fused.matMul({a:k("a",e,t,r),b:k("b",e,t,r),transposeA:k("transposeA",e,t,r),transposeB:k("transposeB",e,t,r),bias:p,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},UH=(e,t,r,n=kr)=>{switch(e.op){case"EuclideanNorm":return[n.euclideanNorm(k("x",e,t,r),k("axis",e,t,r),k("keepDims",e,t,r))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(k("x",e,t,r),k("mean",e,t,r),k("variance",e,t,r),k("offset",e,t,r),k("scale",e,t,r),k("epsilon",e,t,r))];case"FusedBatchNormV3":return[n.batchNorm(k("x",e,t,r),k("mean",e,t,r),k("variance",e,t,r),k("offset",e,t,r),k("scale",e,t,r),k("epsilon",e,t,r))];case"LRN":return[n.localResponseNormalization(k("x",e,t,r),k("radius",e,t,r),k("bias",e,t,r),k("alpha",e,t,r),k("beta",e,t,r))];case"Softmax":return[n.softmax(k("x",e,t,r))];case"LogSoftmax":return[n.logSoftmax(k("x",e,t,r))];case"SparseToDense":return[n.sparseToDense(k("sparseIndices",e,t,r),k("outputShape",e,t,r),k("sparseValues",e,t,r),k("defaultValue",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},jH=(e,t,r,n=kr)=>{switch(e.op){case"Max":{let o=k("axis",e,t,r),l=k("keepDims",e,t,r);return[n.max(k("x",e,t,r),o,l)]}case"Mean":{let o=k("axis",e,t,r),l=k("keepDims",e,t,r);return[n.mean(k("x",e,t,r),o,l)]}case"Min":{let o=k("axis",e,t,r),l=k("keepDims",e,t,r);return[n.min(k("x",e,t,r),o,l)]}case"Sum":{let o=k("axis",e,t,r),l=k("keepDims",e,t,r);return[n.sum(k("x",e,t,r),o,l)]}case"All":{let o=k("axis",e,t,r),l=k("keepDims",e,t,r);return[n.all(k("x",e,t,r),o,l)]}case"Any":{let o=k("axis",e,t,r),l=k("keepDims",e,t,r);return[n.any(k("x",e,t,r),o,l)]}case"ArgMax":{let o=k("axis",e,t,r);return[n.argMax(k("x",e,t,r),o)]}case"ArgMin":{let o=k("axis",e,t,r);return[n.argMin(k("x",e,t,r),o)]}case"Prod":{let o=k("axis",e,t,r),l=k("keepDims",e,t,r);return[n.prod(k("x",e,t,r),o,l)]}case"Cumprod":{let o=k("axis",e,t,r),l=k("exclusive",e,t,r),u=k("reverse",e,t,r);return[n.cumprod(k("x",e,t,r),o,l,u)]}case"Cumsum":{let o=k("axis",e,t,r),l=k("exclusive",e,t,r),u=k("reverse",e,t,r);return[n.cumsum(k("x",e,t,r),o,l,u)]}case"Bincount":let a=k("x",e,t,r),s=k("weights",e,t,r),i=k("size",e,t,r);return[n.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,r),l=k("weights",e,t,r),u=k("size",e,t,r),p=k("binaryOutput",e,t,r);return[n.denseBincount(o,l,u,p)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},HH=(e,t,r,n=kr)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,r),s=k("axis",e,t,r),i=k("tensors",e,t,r);return i=i.slice(0,a),[n.concat(i,s)]}case"Gather":{let a=k("x",e,t,r),s=k("indices",e,t,r);return[n.gather(a,n.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,r),s=k("batchDims",e,t,r),i=k("x",e,t,r),o=k("indices",e,t,r);return[n.gather(i,n.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,r),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,r);return[n.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,r),s=k("x",e,t,r);return[n.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,r),s=k("size",e,t,r);return[n.slice(k("x",e,t,r),a,s)]}case"StridedSlice":{let a=k("begin",e,t,r),s=k("end",e,t,r),i=k("strides",e,t,r),o=k("beginMask",e,t,r),l=k("endMask",e,t,r),u=k("ellipsisMask",e,t,r),p=k("newAxisMask",e,t,r),h=k("shrinkAxisMask",e,t,r),d=k("x",e,t,r);return[n.stridedSlice(d,a,s,i,o,l,u,p,h)]}case"Pack":return J(()=>{let a=k("axis",e,t,r),s=k("tensors",e,t,r),i=s[0].shape,o=n.squeeze(s[0]).shape,l=s.map(u=>{let p=v.arraysEqual(u.shape,i);if(!p&&!v.arraysEqual(n.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return p?u:n.reshape(u,i)});return[n.stack(l,a)]});case"Unpack":{let a=k("axis",e,t,r),s=k("tensor",e,t,r);return n.unstack(s,a)}case"Tile":{let a=k("reps",e,t,r);return[n.tile(k("x",e,t,r),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,r),s=k("numOrSizeSplits",e,t,r),i=k("x",e,t,r);return n.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,r),s=k("values",e,t,r),i=k("shape",e,t,r);return[n.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,r),s=k("indices",e,t,r);return[n.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,r),s=k("outputShape",e,t,r),i=k("sparseValues",e,t,r),o=k("defaultValue",e,t,r);return[n.sparseToDense(a,i,s,i.dtype===o.dtype?o:n.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},qH=(e,t,r,n=kr)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=n.sparse.sparseFillEmptyRows(k("indices",e,t,r),k("values",e,t,r),k("denseShape",e,t,r),k("defaultValue",e,t,r));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=n.sparse.sparseReshape(k("inputIndices",e,t,r),k("inputShape",e,t,r),k("newShape",e,t,r));return[a,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(k("data",e,t,r),k("indices",e,t,r),k("segmentIds",e,t,r))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(k("data",e,t,r),k("indices",e,t,r),k("segmentIds",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},KH=(e,t,r,n=kr)=>{switch(e.op){case"FFT":return[n.fft(k("x",e,t,r))];case"IFFT":return[n.ifft(k("x",e,t,r))];case"RFFT":return[n.rfft(k("x",e,t,r))];case"IRFFT":return[n.irfft(k("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},XH=(e,t,r,n=kr)=>{switch(e.op){case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=n.string.stringNGrams(k("data",e,t,r),k("dataSplits",e,t,r),k("separator",e,t,r),k("nGramWidths",e,t,r),k("leftPad",e,t,r),k("rightPad",e,t,r),k("padWidth",e,t,r),k("preserveShortSequences",e,t,r));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=n.string.stringSplit(k("input",e,t,r),k("delimiter",e,t,r),k("skipEmpty",e,t,r));return[a,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(k("input",e,t,r),k("numBuckets",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZH=(e,t,r,n=kr)=>{switch(e.op){case"Cast":return[n.cast(k("x",e,t,r),k("dtype",e,t,r))];case"ExpandDims":{let a=k("axis",e,t,r);return[n.expandDims(k("x",e,t,r),a)]}case"Squeeze":{let a=k("axis",e,t,r);return[n.squeeze(k("x",e,t,r),a)]}case"Reshape":return[n.reshape(k("x",e,t,r),k("shape",e,t,r))];case"MirrorPad":return[n.mirrorPad(k("x",e,t,r),k("padding",e,t,r),k("mode",e,t,r))];case"PadV2":case"Pad":return[n.pad(k("x",e,t,r),k("padding",e,t,r),k("constantValue",e,t,r))];case"SpaceToBatchND":{let a=k("blockShape",e,t,r),s=k("paddings",e,t,r);return[n.spaceToBatchND(k("x",e,t,r),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,r),s=k("crops",e,t,r);return[n.batchToSpaceND(k("x",e,t,r),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,r),s=k("dataFormat",e,t,r).toUpperCase();return[n.depthToSpace(k("x",e,t,r),a,s)]}case"BroadcastTo":return[n.broadcastTo(k("x",e,t,r),k("shape",e,t,r))];case"BroadcastArgs":return[n.broadcastArgs(k("s0",e,t,r),k("s1",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function f7(e,t,r,n,a=J){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>CH(i,o,l));case"basic_math":return a(()=>TH(i,o,l));case"control":return FH(i,o,l);case"convolution":return a(()=>_H(i,o,l));case"creation":return a(()=>PH(i,o,l));case"dynamic":return zH(i,o,l);case"evaluation":return a(()=>OH(i,o,l));case"image":return a(()=>WH(i,o,l));case"graph":return a(()=>DH(i,o,l));case"logical":return a(()=>VH(i,o,l));case"matrices":return a(()=>GH(i,o,l));case"normalization":return a(()=>UH(i,o,l));case"reduction":return a(()=>jH(i,o,l));case"slice_join":return a(()=>HH(i,o,l));case"sparse":return a(()=>qH(i,o,l));case"spectral":return a(()=>KH(i,o,l));case"string":return a(()=>XH(i,o,l));case"transformation":return a(()=>ZH(i,o,l));case"hash_table":return BH(i,o,l,n);case"custom":let u=kk(i.op);if(u&&u.customExecutor)return u.customExecutor(new SH(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,r);return v.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var m7=class{constructor(e={},t={},r={},n={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function g7(e,t,r,n){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map(d=>fn(d)[0]),p=[];n!=null&&(p=n.map(d=>fn(d.name)[0]));let h=[...t];for(;h.length>0;){let d=h.pop();if((jk(d)||tq(d)||rq(d))&&i==null&&(i=d,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(d.name),r[d.name]==null&&u.indexOf(d.name)===-1&&p.indexOf(d.name)===-1){if(d.inputs.length===0){s.push(d.name);continue}d.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),h.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function YH(e,t,r){let{usedNodes:n,inputs:a}=r,s=[],i=Object.keys(a).map(p=>fn(p)[0]).map(p=>e.nodes[p]),o=e.initNodes;i.forEach(p=>{n.has(p.name)&&s.push(p)}),e.weights.forEach(p=>{n.has(p.name)&&s.push(p)}),o!=null&&o.forEach(p=>{n.has(p.name)&&s.push(p)});let l=new Set,u=[];for(;s.length>0;){let p=s.pop();l.add(p.name),t[p.name]||u.push(p),p.children.forEach(h=>{!l.has(h.name)&&n.has(h.name)&&h.inputs.every(d=>l.has(d.name))&&s.push(h)})}return u}var JH=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],QH=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],eq=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function jk(e){return JH.indexOf(e.op)>=0}function tq(e){return QH.indexOf(e.op)>=0}function rq(e){return eq.indexOf(e.op)>=0}var Sy=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new Sy(e.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(r=>e[r].map(n=>n.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let r=e.map(a=>a.name).sort(),n=t.map(a=>a.name).sort();return r.join(this.SEPERATOR)+"--"+n.join(this.SEPERATOR)}compile(e,t){let r=g7(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:a,syncInputs:s}=r;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${n}]`)}return YH(this.graph,this.weightMap,r)}execute(e,t){e=this.mapInputs(e);let r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let n=r.map(p=>this.graph.nodes[fn(p)[0]]),a=t.map(p=>fn(p)[0]),s=a.map(p=>this.graph.nodes[p]);this.resetIntermediateTensors(),s.length===0&&(s=this._outputs);let i=this.getCompilationKey(n,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return J(()=>{let p=new m7(this.weightMap,l,u,this.functionExecutorMap),h={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=fn(f),y=[];y[g]=e[f],h[m]=y});let d=this.getFrozenTensorIds(h),c={};for(let f=0;f<o.length;f++){let m=o[f];if(!h[m.name]){let g=f7(m,h,p,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);h[m.name]=g,this.checkTensorForDisposal(m.name,m,h,p,d,a,c)}}return this.parent==null&&p.dispose(d),t.map(f=>Vr(f,h,p))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(n=>n.id)));return new Set(t)}checkTensorForDisposal(e,t,r,n,a,s,i){t.category==="control"||s.indexOf(e)!==-1||(r[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=aH(o.name,r,n);l!=null&&l.forEach(u=>{if(u&&!u.kept&&!a.has(u.id)){let p=i[u.id];if(p===1){if(!this.keepTensorForDebug)u.dispose();else{let[h,d]=_a(t.name,n);this.intermediateTensors[h]?this.intermediateTensors[h][d]=u:(this.intermediateTensors[h]=[],this.intermediateTensors[h][d]=u)}delete i[u.id]}else p!=null&&i[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(t=>{t&&!t.kept&&!t.isDisposed&&!this.keepIds.has(t.id)&&t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,r=!1,n={},a={}){r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let s=new m7(this.weightMap,n,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,r);let i=t.map(u=>Vr(u,this.tensorsMap,s)),o=i.map(u=>u.id),l=Object.keys(e).map(u=>e[u].id);return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,r){let n=e.reduce((a,s,i)=>(a[this.inputs[i].name]=s,a),{});return this._executeAsync(n,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,n){let a=Object.keys(e),s=a.map(A=>this.graph.nodes[fn(A)[0]]),i=r.map(A=>fn(A)[0]),o=i.map(A=>this.graph.nodes[A]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:p,syncInputs:h}=g7(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(A=>({node:A,contexts:t.currentContext})),c={...this.weightMap};Object.keys(e).forEach(A=>{let[x,b]=fn(A),w=[];w[b]=e[A],c[x]=w});let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let A=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(A)}p==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(A=>!jk(A)&&!Vr(A.name,c,t)).map(A=>A.name);if(y.length>0){let A="";throw p!=null&&(A=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${A}`)}return c}processStack(e,t,r,n,a,s,i,o,l){let u=[];for(;t.length>0;){let p=t.pop();r.currentContext=p.contexts;let h="";if(p.node.op==="Enter"&&k("isConstant",p.node,n,r)&&([h]=_a(p.node.name,r)),n[p.node.name]==null){let d=f7(p.node,n,r,this._resourceManager);h||([h]=_a(p.node.name,r));let c=r.currentContext;v.isPromise(d)?u.push(d.then(f=>(n[h]=f,r.currentContext=c,this.checkTensorForDisposal(h,p.node,n,r,s,i,o),this.processChildNodes(p.node,t,r,n,a,l),f))):(n[h]=d,this.checkTensorForDisposal(h,p.node,n,r,s,i,o),this.processChildNodes(p.node,t,r,n,a,l))}else this.processChildNodes(p.node,t,r,n,a,l)}return u}processChildNodes(e,t,r,n,a,s){e.children.forEach(i=>{let[o]=_a(i.name,r);a[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Vr(l,n,r))&&(a[o]=!0,t.push({contexts:r.currentContext,node:i})):i.inputNames.every(l=>!!Vr(l,n,r))&&(a[o]=!0,t.push({contexts:r.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let r=e[t],[n]=fn(t),a=this.graph.nodes[n];if(a.attrParams.shape&&a.attrParams.shape.value){let s=a.attrParams.shape.value,i=s.length===r.shape.length&&r.shape.every((o,l)=>s[l]===-1||s[l]===o);v.assert(i,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${s}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&v.assert(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){let t={};for(let r in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null){let n=this._signature.inputs[r];t[n.name]=e[r]}else t[r]=e[r];return t}checkInputs(e){let t=Object.keys(e).filter(r=>{let[n]=fn(r);return this.graph.nodes[n]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[r]=fn(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}},nq=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},aq="?tfjs-format=file",sq="model.json",rc=class{constructor(e,t={},r=yn){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new nq}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=r,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let n=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Sy(d7.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=d7.Instance.transformGraph(e.modelInitializer);this.initializer=new Sy(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let r=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let n=r instanceof Qe?[r]:r,a={};return n.forEach((s,i)=>a[this.structuredOutputKeys[i]]=s),a}return r}normalizeInputs(e){if(!(e instanceof Qe)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,r,n)=>(t[r]=e[n],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function iq(e,t={},r=yn){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=lq(e));let n=new rc(e,t,r);return await n.load(),n}function oq(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);let t=new rc(e);return t.load(),t}function lq(e){return e.endsWith("/")||(e=e+"/"),`${e}${sq}${aq}`}var uq="0.0.0",Hk={};Be(Hk,{CSVDataset:()=>a9,Dataset:()=>_d,FileDataSource:()=>p9,TextLineDataset:()=>n9,URLDataSource:()=>h9,array:()=>Mq,csv:()=>Gq,func:()=>Uq,generator:()=>jq,microphone:()=>qq,version_data:()=>Kq,webcam:()=>Hq,zip:()=>Fq});var dq=Xo(yf()),pq=Xo(yf());function hq(e,t){return nf(e,t)}function nf(e,t,r=new Map,n=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(n.has(e))throw new Error("Circular references are not supported.");if(r.has(e))return r.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(Uu(e)){let s=Array.isArray(e)?[]:{};n.add(e);for(let i in e){let o=e[i],l=nf(o,t,r,n);s[i]=l}return n.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return r.set(e,a.value),a.value}function cq(e,t=Kk){return qk(e,t)}function qk(e,t,r=new Set){let n=e[0];if(r.has(n))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(Uu(n)){let s=Array.isArray(n)?[]:{};r.add(n);for(let i in n){let o=e.map(u=>u[i]),l=qk(o,t,r);s[i]=l}return r.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return a.value}function Kk(e){return e===null?null:Uu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Xk(e,t){let r=new Map;nf(e,t,r);for(let n of Array.from(r.keys())){let a=r.get(n);if(v.isPromise(a)){let s=await a;r.set(n,s)}}return nf(e,t,r)}function Uu(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:r}=l6();t=e instanceof r}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Qe)&&!(e instanceof Promise)&&!t)}function fq(e){return e==null||mq(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Qe||v.isTypedArray(e)}function mq(e){return e===null||typeof e!="object"&&typeof e!="function"}function gq(e){return hq(e,yq)}function yq(e){return e instanceof Qe?{value:e.clone(),recurse:!1}:Uu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var Zk=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),r=this.get(t);return this.set(t,this.pop()),r}},Yk=class extends Zk{constructor(){super(Yk.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),r=this.length();for(let n=0;n<r;n++)t[n]=this.get(this.wrap(this.begin+n));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}},Jk=Yk;Jk.INITIAL_CAPACITY=32;function Qk(e){return new bq(e)}function PA(e){return new vq(e)}function Aq(e,t){return new e9(e,t)}function xq(e,t=t9.FAIL){return new Rq(e,t)}var xr=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],r=await e.next();for(;!r.done;)t.push(r.value),r=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),r=e(t.value);for(;!t.done&&r;)t=await this.next(),r=e(t.value)}handleErrors(e){return new Nq(this,e)}filter(e){return new Cq(this,e)}map(e){return new Tq(this,e)}mapAsync(e){return new y7(this,e)}serialMapAsync(e){return new y7(this,e).serial()}flatmap(e){return new Eq(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new Sq(this,e,t)}columnMajorBatch(e,t=!0,r=Kk){return this.rowMajorBatch(e,t).map(n=>cq(n,r))}concatenate(e,t){return new e9(Qk([this,e]),t)}take(e){return e<0||e==null?this:new Iq(this,e)}skip(e){return e<0||e==null?this:new kq(this,e)}prefetch(e){return new r9(this,e)}shuffle(e,t){return new $q(this,e,t)}serial(){return new wq(this)}},bq=class extends xr{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:gq(e),done:!1}}},vq=class extends xr{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},wq=class extends xr{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},kq=class extends xr{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ee(e.value)}return this.upstream.next()}},Iq=class extends xr{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},Sq=class extends xr{constructor(e,t,r=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},Cq=class extends xr{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ee(e.value)}}},Tq=class extends xr{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ya.getTensorsInContainer(e.value),r=this.transform(e.value),n=ya.getTensorsInContainer(r);for(let a of t)ya.isTensorInList(a,n)||a.dispose();return{value:r,done:!1}}},Nq=class extends xr{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},y7=class extends xr{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ya.getTensorsInContainer(e.value),r=await this.transform(e.value),n=ya.getTensorsInContainer(r);for(let a of t)ya.isTensorInList(a,n)||a.dispose();return{value:r,done:!1}}},zA=class extends xr{constructor(){super(),this.outputQueue=new Jk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},Eq=class extends zA{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=ya.getTensorsInContainer(e.value),r=this.transform(e.value),n=ya.getTensorsInContainer(r);this.outputQueue.pushAll(r);for(let a of t)ya.isTensorInList(a,n)||a.dispose();return!0}},e9=class extends xr{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},t9=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(t9||{}),Rq=class extends xr{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,r=0;function n(s){return s instanceof xr?{value:s.next().then(i=>(t++,i.done&&r++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=await Xk(this.iterators,n);if(t===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},r9=class extends xr{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Zk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},$q=class extends r9{constructor(e,t,r){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=pq.alea(r||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},_d=class{constructor(){this.size=null}batch(e,t=!0){let r=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let n;return this.size===1/0||this.size==null?n=this.size:t?n=Math.ceil(this.size/e):n=Math.floor(this.size/e),cn(async()=>(await r.iterator()).columnMajorBatch(e,t,_q),n)}concatenate(e){let t=this,r;return this.size===1/0||e.size===1/0?r=1/0:this.size!=null&&e.size!=null?r=this.size+e.size:r=null,cn(async()=>(await t.iterator()).concatenate(await e.iterator()),r)}filter(e){let t=this,r;return this.size===1/0?r=1/0:r=null,cn(async()=>(await t.iterator()).filter(n=>J(()=>e(n))),r)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return cn(async()=>(await t.iterator()).map(r=>J(()=>e(r))),this.size)}mapAsync(e){let t=this;return cn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return cn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,r;return this.size!=null&&e>0?r=this.size*e:e===0?r=0:this.size!=null&&(e===void 0||e<0)?r=1/0:r=null,cn(async()=>{let n=PA(async()=>({value:await t.iterator(),done:!1}));return Aq(n.take(e))},r)}skip(e){let t=this,r;return this.size!=null&&e>=0&&this.size>=e?r=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?r=0:r=null,cn(async()=>(await t.iterator()).skip(e),r)}shuffle(e,t,r=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let n=this,a=dq.alea(t||v.now().toString());return cn(async()=>{let s=a.int32();return r&&(s+=a.int32()),(await n.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,r;return this.size!=null&&this.size>e?r=e:this.size!=null&&this.size<=e?r=this.size:r=null,cn(async()=>(await t.iterator()).take(e),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};_d.MAX_BUFFER_SIZE=1e4;function cn(e,t=null){return new class extends _d{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Mq(e){return cn(async()=>Qk(e),e.length)}function Fq(e){if(!Uu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let r=0;r<e.length;r++)t=t==null?e[r].size:Math.min(t,e[r].size);else if(e instanceof Object)for(let r in e)t=t==null?e[r].size:Math.min(t,e[r].size);return cn(async()=>{let r=await Xk(e,n=>{if(n instanceof _d)return{value:n.iterator(),recurse:!1};if(Uu(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return xq(r,1)},t)}function _q(e){if(e===null)return null;let t=e[0];return fq(t)?{value:Pq(e),recurse:!1}:{value:null,recurse:!0}}function Pq(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Qe?dr(e):ut(e)}var n9=class extends _d{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},y0='"',_p=Symbol("out"),A7=Symbol("field"),A0=Symbol("quote"),Dg=Symbol("quoteafterquote"),x7=Symbol("quoteinquote"),a9=class extends _d{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new n9(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((n,a)=>(n[a]=n[a]+1||1,n),{}),r=Object.keys(t).filter(n=>t[n]>1);if(v.assert(r.length===0,()=>"Duplicate column names found: "+r.toString()),this.columnConfigs){for(let n of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(n)===-1)throw new Error('The key "'+n+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),r={},n={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let u=Number(o);if(isNaN(u))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=u;else switch(i.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(o);break;default:l=u}}i&&i.isLabel?n[s]=l:r[s]=l}}return Object.keys(n).length===0?r:{xs:r,ys:n}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let r=[],n=0,a=e.length,s=_p;for(let i=0;i<a;i++)switch(s){case _p:switch(e.charAt(i)){case y0:n=i+1,s=A0;break;case this.delimiter:if(n=i+1,this.delimiter===" "&&this.delimWhitespace)break;r.push(""),s=_p;break;default:s=A7,n=i;break}break;case A7:switch(e.charAt(i)){case this.delimiter:r.push(e.substring(n,i)),s=_p,n=i+1;break;default:}break;case A0:switch(e.charAt(i)){case y0:s=Dg;break;default:}break;case Dg:switch(e.charAt(i)){case this.delimiter:r.push(e.substring(n,i-1)),s=_p,n=i+1;break;case y0:s=A0;break;default:s=x7;break}break;case x7:switch(e.charAt(i)){case y0:s=A0;break;default:}break;default:}if(s===Dg?r.push(e.substring(n,a-1)):r.push(e.substring(n)),t&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}},s9=class extends xr{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Y().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new s9(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,r=await this.getAudioData();if(this.includeSpectrogram){let n=this.flattenQueue(r.freqDataQueue);e=this.getTensorFromAudioDataArray(n,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let n=this.flattenQueue(r.timeDataQueue);t=this.getTensorFromAudioDataArray(n,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],r=0;return new Promise(n=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&n({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(a),n({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,r=new Float32Array(e.length*t);return e.forEach((n,a)=>r.set(n,a*t)),r}getTensorFromAudioDataArray(e,t){let r=new Float32Array(v.sizeFromShape(t));return r.set(e,r.length-e.length),ut(r,t)}},i9=class extends xr{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=$t([0],"int32"),this.webcamConfig.centerCrop){let r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,n=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-r)/2,s=(1-n)/2,i=a+r,o=n+s;this.cropBox=Kn([s,a,o,i],[1,4])}else this.cropBox=Kn([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Y().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let r=new i9(e,t);return await r.start(),r}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Wn.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return J(()=>{let t=Zt(me(e,"float32"),0),r;r=Te.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let n=r.shape;return G(r,n.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},o9=class{},l9=class extends xr{split(e){return new zq(this,e)}},zq=class extends l9{constructor(e,t){super(),this.upstream=e,this.impl=new Oq(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Oq=class extends zA{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let r of t.slice(0,-1))this.outputQueue.push(r);return this.carryover=t[t.length-1],!0}},Dq=class extends xr{decodeUTF8(){return new Lq(this)}},Lq=class extends l9{constructor(e){super(),this.upstream=e,this.impl=new Bq(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Bq=class extends zA{constructor(e){if(super(),this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=l6();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let r;return Y().get("IS_BROWSER")?r=this.decoder.decode(t,{stream:!0}):r=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(r),!0}},u9=class extends Dq{constructor(e,t={}){super(),this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,r)));else{let n=new FileReader;n.onload=s=>{let i=n.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},n.onabort=s=>t(new Error("Aborted")),n.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,r);n.readAsArrayBuffer(a)}this.offset=r}),done:!1}}};async function Wq(e,t={},r){let n,a;typeof e=="string"?n=e:(n=e.url,a=Vq(e));let s=await(r||v.fetch)(n,a);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new u9(i,t)}else throw new Error(s.statusText)}var Vq=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function d9(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var p9=class extends o9{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(d9(this.input)&&Y().get("IS_NODE")){let e=Af();this.input=e.readFileSync(this.input.slice(7))}return new u9(this.input,this.options)}},h9=class extends o9{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return d9(this.url)?new p9(this.url,this.fileOptions).iterator():Wq(this.url,this.fileOptions)}};function Gq(e,t={}){return new a9(new h9(e),t)}function Uq(e){let t=PA(e);return cn(async()=>t)}function jq(e){return cn(async()=>{let t=await e();return PA(()=>t.next())})}async function Hq(e,t){return i9.create(e,t)}async function qq(e){return s9.create(e)}var Kq="0.0.0";function Se(e,t){Array.isArray(e)||(e=[e]),e.forEach(r=>{r!=null&&v.assert(r.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Xq=ea.whereImpl,c9=class extends Xu{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new ph(this,Xt())}nextDataId(){return c9.nextDataId++}write(e,t,r){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:r,refCount:1}),n}makeTensorInfo(e,t,r){let n;if(t==="string"&&r!=null&&r.length>0&&v.isString(r[0])){let a=r.map(s=>v.encodeString(s));n=this.write(a,e,t)}else n=this.write(r,e,t);return{dataId:n,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,r,n,a){this.data.set(e,{values:t,dtype:n,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:r}=this.data.get(e);if(t==="complex64"){let n=this.readSync(r.real.dataId),a=this.readSync(r.imag.dataId);return T.mergeRealAndImagArrays(n,a)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let r=t.map(n=>v.decodeString(n));return Oe(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,t)}makeOutput(e,t,r){return Xt().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Se([e],"where");let t=this.readSync(e.dataId);return Xq(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},OA=c9;OA.nextDataId=0;var Gm={};Be(Gm,{addImpl:()=>m9,bincountImpl:()=>LA,bincountReduceImpl:()=>g9,ceilImpl:()=>y9,concatImpl:()=>BA,equalImpl:()=>A9,expImpl:()=>b9,expm1Impl:()=>w9,floorImpl:()=>k9,gatherNdImpl:()=>I9,gatherV2Impl:()=>S9,greaterEqualImpl:()=>T9,greaterImpl:()=>C9,lessEqualImpl:()=>E9,lessImpl:()=>N9,linSpaceImpl:()=>R9,logImpl:()=>$9,maxImpl:()=>M9,maximumImpl:()=>F9,minimumImpl:()=>_9,multiplyImpl:()=>WA,negImpl:()=>P9,notEqualImpl:()=>z9,prodImpl:()=>O9,rangeImpl:()=>GA,rsqrtImpl:()=>D9,scatterImpl:()=>Nu,sigmoidImpl:()=>OK,simpleAbsImpl:()=>f9,sliceImpl:()=>sf,sparseFillEmptyRowsImpl:()=>B9,sparseReshapeImpl:()=>W9,sparseSegmentReductionImpl:()=>UA,sqrtImpl:()=>BK,squaredDifferenceImpl:()=>V9,stridedSliceImpl:()=>G9,stringNGramsImpl:()=>jA,stringSplitImpl:()=>HA,stringToHashBucketFastImpl:()=>qA,subImpl:()=>U9,tileImpl:()=>j9,topKImpl:()=>q9,transposeImpl:()=>VA,uniqueImpl:()=>K9});function f9(e){let t=new Float32Array(e.length);for(let r=0;r<e.length;++r)t[r]=Math.abs(e[r]);return t}var Zq=e=>{let{x:t}=e.inputs,r=e.backend;Se(t,"abs");let n=new Float32Array(v.sizeFromShape(t.shape)),a=r.data.get(t.dataId).values;return n=f9(a),r.makeOutput(n,t.shape,t.dtype)},Yq={kernelName:Yo,backendName:"cpu",kernelFunc:Zq};function er(e){return(t,r,n,a,s)=>{let i=T.assertAndGetBroadcastShape(t,r),o=i.length,l=v.computeStrides(i),u=v.sizeFromShape(i),p=v.getTypedArrayFromDType(s,u),h=t.length,d=r.length,c=v.computeStrides(t),f=v.computeStrides(r),m=T.getBroadcastDims(t,i),g=T.getBroadcastDims(r,i);if(m.length+g.length===0)for(let y=0;y<p.length;++y)p[y]=e(n[y%n.length],a[y%a.length]);else for(let y=0;y<p.length;++y){let A=v.indexToLoc(y,o,l),x=A.slice(-h);m.forEach(C=>x[C]=0);let b=v.locToIndex(x,h,c),w=A.slice(-d);g.forEach(C=>w[C]=0);let I=v.locToIndex(w,d,f);p[y]=e(n[b],a[I])}return[p,i]}}function gn(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=r.makeTensorInfo(n.shape,"complex64"),l=r.data.get(o.dataId);return l.complexTensorInfos={real:r.makeTensorInfo(n.shape,"float32",s),imag:r.makeTensorInfo(a.shape,"float32",i)},o}var Jq={kernelName:ch,backendName:"cpu",kernelFunc:gn};function af(e,t,r="float32"){if(r==="complex64"){let a=af(e,t,"float32"),s=af(e,t,"float32");return gn({inputs:{real:a,imag:s},backend:e})}let n=v.makeZerosTypedArray(v.sizeFromShape(t),r);return e.makeTensorInfo(t,r,n)}function Ba(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Qq={kernelName:bi,backendName:"cpu",kernelFunc:Ba};function Uo(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.real,s=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,s)}var eK={kernelName:vh,backendName:"cpu",kernelFunc:Uo};function Js(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dtype:s}=n;if(s==="complex64"){if(a.dtype==="complex64")return Ba({inputs:{x:a},backend:r});let i=af(r,a.shape,a.dtype),o=Js({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),l=gn({inputs:{real:o,imag:i},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){let i=Uo({inputs:{input:a},backend:r}),o=Js({inputs:{x:i},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(i),o}if(!v.hasEncodingLoss(a.dtype,s)){let i=Ba({inputs:{x:a},backend:r});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=r.data.get(a.dataId).values,o=Int32Array.from(i);return r.makeTensorInfo(a.shape,"int32",o)}if(s==="bool"){let i=r.data.get(a.dataId).values,o=v.toTypedArray([0],a.dtype),[l,u]=er((p,h)=>p!==h?1:0)(a.shape,[],i,o,"bool");return r.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var tK={kernelName:si,backendName:"cpu",kernelFunc:Js};function br(e,t,r,n){return r==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;Se([i,o],e);let u=l.data.get(i.dataId).values,p=l.data.get(o.dataId).values,h=i.dtype==="string"?T.fromUint8ToStringArray(u):u,d=i.dtype==="string"?T.fromUint8ToStringArray(p):p,c=n||i.dtype,[f,m]=t(i.shape,o.shape,h,d,c);return l.makeTensorInfo(m,c,f)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=Js({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(u.dataId),h=p.complexTensorInfos.real,d=p.complexTensorInfos.imag,c=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Js({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,A=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,b=l.data.get(A.dataId).values,[w,I,C]=r(i.shape,o.shape,c,f,x,b),E=l.makeTensorInfo(C,"float32",w),R=l.makeTensorInfo(C,"float32",I),F=gn({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),F}else{let u=l.data.get(i.dataId).values,p=l.data.get(o.dataId).values,h=n||i.dtype,[d,c]=t(i.shape,o.shape,u,p,h);return l.makeTensorInfo(c,h,d)}}}function DA(e){return(t,r,n,a,s,i)=>{let o=T.assertAndGetBroadcastShape(t,r),l=v.sizeFromShape(o),u=o.length,p=v.computeStrides(o),h=v.getTypedArrayFromDType("float32",l),d=v.getTypedArrayFromDType("float32",l),c=T.getBroadcastDims(t,o),f=T.getBroadcastDims(r,o),m=T.mergeRealAndImagArrays(n,a),g=T.mergeRealAndImagArrays(s,i),y=t.length,A=v.computeStrides(t),x=r.length,b=v.computeStrides(r);if(c.length+f.length===0)for(let w=0;w<h.length;w++){let I=w%m.length,C=w%g.length,E=e(m[I*2],m[I*2+1],g[C*2],g[C*2+1]);h[w]=E.real,d[w]=E.imag}else for(let w=0;w<h.length;w++){let I=v.indexToLoc(w,u,p),C=I.slice(-y);c.forEach(S=>C[S]=0);let E=v.locToIndex(C,y,A),R=I.slice(-x);f.forEach(S=>R[S]=0);let F=v.locToIndex(R,x,b),$=e(m[E*2],m[E*2+1],g[F*2],g[F*2+1]);h[w]=$.real,d[w]=$.imag}return[h,d,o]}}var m9=er((e,t)=>e+t),rK=DA((e,t,r,n)=>({real:e+r,imag:t+n})),ju=br(ns,m9,rK),nK={kernelName:ns,backendName:"cpu",kernelFunc:ju};function LA(e,t,r,n,a){let s=v.sizeFromShape(n),i=v.makeZerosTypedArray(a,r);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function g9(e,t,r,n=!1){let a=e.shape[0],s=e.shape[1],i=Oe([a,r],t.dtype);for(let o=0;o<a;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=r||(n?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}function Ji(e){return(t,r,n)=>{let a=v.getTypedArrayFromDType(r,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],n);return a}}function yt(e,t,r){return({inputs:n,attrs:a,backend:s})=>{let{x:i}=n;if(Se(i,e),i.dtype==="string"||r==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=v.sizeFromShape(i.shape),p=r||i.dtype,h=v.getArrayFromDType(p,u);for(let d=0;d<u;++d)h[d]=t(l[d],a);return o.makeTensorInfo(i.shape,p,h)}}function Pd(e,t,r){return({inputs:n,attrs:a,backend:s})=>{let{x:i}=n;if(Se(i,e),i.dtype==="string"||r==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=r||i.dtype,p=t(l,u,a);return o.makeTensorInfo(i.shape,u,p)}}var y9=Ji(e=>Math.ceil(e)),aK=Pd(ii,y9),sK={kernelName:ii,backendName:"cpu",kernelFunc:aK};function BA(e,t,r,n){let a=v.getArrayFromDType(r,v.sizeFromShape(t));if(n&&r!=="string"){let s=0;e.forEach(i=>{let o=v.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=r==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let p=u*t[1]+s;for(let h=0;h<i.shape[1];++h)a[p+h]=o[l++]}s+=i.shape[1]})}return a}var A9=er((e,t)=>e===t?1:0),x9=br(nl,A9,null,"bool"),iK={kernelName:nl,backendName:"cpu",kernelFunc:x9},b9=Ji(e=>Math.exp(e)),v9=Pd(mi,b9,"float32"),oK={kernelName:mi,backendName:"cpu",kernelFunc:v9},w9=Ji(e=>Math.expm1(e)),lK=Pd(sl,w9),uK={kernelName:sl,backendName:"cpu",kernelFunc:lK},k9=Ji(e=>Math.floor(e)),dK=Pd(gi,k9),pK={kernelName:gi,backendName:"cpu",kernelFunc:dK};function I9(e,t,r,n,a,s,i,o,l){let u=Oe([n,s],r);for(let p=0;p<n;p++){let h=[],d=0;for(let c=0;c<a;c++){let f=e[p*a+c];d+=f*i[c],h.push(f)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let c=0;c<s;c++)u.values[p*s+c]=t.get(...t.indexToLoc(d*s+c))}return u}function S9(e,t,r){let n=Oe(r,e.dtype);for(let a=0;a<n.size;++a){let s=n.indexToLoc(a).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(n.values[a]=e.values[u])}return n}var C9=er((e,t)=>e>t?1:0),hK=br(ul,C9,null,"bool"),cK={kernelName:ul,backendName:"cpu",kernelFunc:hK},T9=er((e,t)=>e>=t?1:0),fK=br(xi,T9,null,"bool"),mK={kernelName:xi,backendName:"cpu",kernelFunc:fK},N9=er((e,t)=>e<t?1:0),gK=br(dl,N9,null,"bool"),yK={kernelName:dl,backendName:"cpu",kernelFunc:gK},E9=er((e,t)=>e<=t?1:0),AK=br(pl,E9,null,"bool"),xK={kernelName:pl,backendName:"cpu",kernelFunc:AK};function R9(e,t,r){let n=(t-e)/(r-1),a=v.makeZerosTypedArray(r,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+n;return a}var $9=Ji(e=>Math.log(e)),bK=Pd(wi,$9),vK={kernelName:wi,backendName:"cpu",kernelFunc:bK};function M9(e,t,r,n){let a=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[s]=o}return a}var F9=er((e,t)=>Math.max(e,t)),wK=br(Ii,F9),kK={kernelName:Ii,backendName:"cpu",kernelFunc:wK},_9=er((e,t)=>Math.min(e,t)),IK=br(Ni,_9),SK={kernelName:Ni,backendName:"cpu",kernelFunc:IK},WA=er((e,t)=>e*t),CK=DA((e,t,r,n)=>({real:e*r-t*n,imag:e*n+t*r})),Um=br(Ri,WA,CK),TK={kernelName:Ri,backendName:"cpu",kernelFunc:Um};function P9(e,t,r){let n=v.createScalarValue(-1,r);return WA([],t,n,e,r)}function NK(e){let{inputs:t,backend:r}=e,{x:n}=t;Se(n,"neg");let a=r.data.get(n.dataId).values,[s,i]=P9(a,n.shape,n.dtype);return r.makeTensorInfo(i,n.dtype,s)}var EK={kernelName:fl,backendName:"cpu",kernelFunc:NK},z9=er((e,t)=>e!==t?1:0),RK=br(ml,z9,null,"bool"),$K={kernelName:ml,backendName:"cpu",kernelFunc:RK};function VA(e,t,r,n,a){let s=t.length,i=v.sizeFromShape(t),o=v.computeStrides(t),l=v.computeStrides(a),u=v.getTypedArrayFromDType(r,v.sizeFromShape(a));for(let p=0;p<i;++p){let h=v.indexToLoc(p,s,o),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[n[f]];let c=v.locToIndex(d,s,l);u[c]=e[p]}return u}function dn(e){let{inputs:t,attrs:r,backend:n}=e,{x:a}=t,{perm:s}=r;Se(a,"transpose");let i=a.shape.length,o=new Array(i);for(let p=0;p<o.length;p++)o[p]=a.shape[s[p]];let l=n.data.get(a.dataId).values,u=VA(l,a.shape,a.dtype,s,o);return{dataId:n.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var MK={kernelName:Pa,backendName:"cpu",kernelFunc:dn};function O9(e,t,r,n){let[a,s]=T.computeOutAndReduceShapes(e,n),i=Rr(t,"int32"),o=v.makeZerosTypedArray(v.sizeFromShape(a),i),l=v.sizeFromShape(s);for(let u=0;u<o.length;++u){let p=u*l,h=1;for(let d=0;d<l;++d)h*=r[p+d];o[u]=h}return{outVals:o,outShape:a,outDtype:i}}function FK(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;Se(a,"prod");let o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=T.getAxesPermutation(l,o),p=l,h=a,d=[];u!=null&&(h=dn({inputs:{x:a},backend:r,attrs:{perm:u}}),d.push(h),p=T.getInnerMostAxes(p.length,o));let c=r.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=O9(h.shape,h.dtype,c,p),y=m;return i&&(y=T.expandShapeToKeepDim(m,l)),d.forEach(A=>r.disposeIntermediateTensorInfo(A)),r.makeTensorInfo(y,g,f)}var _K={kernelName:_i,backendName:"cpu",kernelFunc:FK};function GA(e,t,r,n){let a=e===t,s=e<t&&r<0,i=t<e&&r>1;if(a||s||i)return v.makeZerosTypedArray(0,n);let o=Math.abs(Math.ceil((t-e)/r)),l=v.makeZerosTypedArray(o,n);t<e&&r===1&&(r=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+r;return l}var D9=Ji(e=>1/Math.sqrt(e)),PK=Pd(Li,D9),zK={kernelName:Li,backendName:"cpu",kernelFunc:PK};function Nu(e,t,r,n,a,s,i,o,l,u){let p=[n/a,a],h=e.values,d=t.values;if(n===0)return Oe(r,t.dtype);let c=Oe(p,t.dtype);typeof l=="string"||typeof l=="number"?c.values.fill(l):typeof l=="boolean"&&c.values.fill(+l);for(let f=0;f<s;f++){let m=[],g=0;for(let y=0;y<i;y++){let A=h[f*i+y];m.push(A),g+=A*o[y]}if(g<0||g>=n/a)throw new Error(`Invalid indices: ${m} does not index into ${r}`);for(let y=0;y<a;y++)u?c.values[g*a+y]+=d[f*a+y]:c.values[g*a+y]=t.rank===0?d[0]:d[f*a+y]}return c}var OK=Ji(e=>1/(1+Math.exp(-e))),L9=yt(Wi,e=>1/(1+Math.exp(-e))),DK={kernelName:Wi,backendName:"cpu",kernelFunc:L9};function sf(e,t,r,n,a){let s=Lt.isSliceContinous(n,t,r),i=v.sizeFromShape(r),o=v.computeStrides(n);if(s){let h=Lt.computeFlatOffset(t,o);return a==="string"?e.slice(h,h+i):e.subarray(h,h+i)}let l=a==="string"?T.fromUint8ToStringArray(e):e,u=Oe(n,a,l),p=Oe(r,a);for(let h=0;h<p.size;++h){let d=p.indexToLoc(h),c=d.map((f,m)=>f+t[m]);p.set(u.get(...c),...d)}return a==="string"?T.fromStringArrayToUint8(p.values):p.values}function jo(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n;Se(a,"slice");let[o,l]=Lt.parseSliceParams(a,s,i);Lt.assertParamsValid(a,o,l);let u=r.data.get(a.dataId).values,p=sf(u,o,l,a.shape,a.dtype);return r.makeTensorInfo(l,a.dtype,p)}var LK={kernelName:Cl,backendName:"cpu",kernelFunc:jo};function B9(e,t,r,n,a,s,i){let o=t[0],l=s[0],u=new Array(l),p=new Array(o),h=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=v.getArrayFromDType(r,0),y=v.getArrayFromDType(a,0);return[g,[0,h],y,u,p]}let d=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*h];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],d=d&&y>=c,c=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,y=n;for(let A=0;A<o;++A)p[A]=A;return[g,[o,h],y,u,p]}else{let g=f[l-1],y=v.getArrayFromDType(r,g*h),A=v.getArrayFromDType(a,g),x=new Array(l).fill(0);for(let b=0;b<o;++b){let w=e[b*h],I=x[w],C=(w===0?0:f[w-1])+I;x[w]++;for(let E=0;E<h;++E)y[C*h+E]=e[b*h+E];A[C]=n[b],p[b]=C}for(let b=0;b<l;++b)if(x[b]===0){let w=b===0?0:f[b-1];y[w*h+0]=b;for(let I=1;I<h;++I)y[w*h+I]=0;A[w]=i}return[y,[g,h],A,u,p]}}function W9(e,t,r,n,a){let s=v.sizeFromShape(n),i=t[0],o=a.length,l=[],u=1,p=-1;for(let m=0;m<o;++m){let g=a[m];if(g===-1){if(p!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,m));p=m,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(m,g));u*=g,l.push(g)}}if(p!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/u);if(u*m!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(n,l));l[p]=m}if(v.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(n,l));let h=n.length,d=[];if(h>0){d[h-1]=1;for(let m=h-2;m>=0;--m)d[m]=d[m+1]*n[m+1]}let c=[];if(o>0){c[o-1]=1;for(let m=o-2;m>=0;--m)c[m]=c[m+1]*l[m+1]}let f=v.getArrayFromDType(r,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<h;++y)g+=e[m*h+y]*d[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[f,[i,o],l]}function UA(e,t,r,n,a,s=!1,i=0){let o=n.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?a[o-1]+1:0;if(p<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=p;let d=h.reduce((A,x)=>A*x,1),c=v.getArrayFromDType(r,d);if(o===0)return p>0&&c.fill(i),[c,h];if(p<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let A=0;if(m<o){if(A=a[m],y===A){++m;continue}if(y>=A)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>g&&c.fill(i,g*u,y*u);for(let x=f;x<m;++x){let b=n[x];if(b<0||b>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,n[x],l[0]));for(let w=0;w<u;w++)c[y*u+w]+=e[b*u+w]}if(s)for(let x=0;x<u;x++)c[y*u+x]/=m-f;if(f=m,++m,g=y+1,y=A,m>o)break}return g<p&&c.fill(i,g*u,p*u),[c,h]}var BK=Ji(e=>Math.sqrt(e)),WK=yt(Vi,e=>Math.sqrt(e)),VK={kernelName:Vi,backendName:"cpu",kernelFunc:WK},V9=er((e,t)=>{let r=e-t;return r*r}),GK=br(ji,V9),UK={kernelName:ji,backendName:"cpu",kernelFunc:GK};function G9(e,t,r,n){let a=Oe(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*r[l]+n[l];a.set(t.get(...o),...i)}return a}var jK=class{constructor(e,t,r,n,a,s){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(r),this.rightPad=v.encodeString(n),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,n,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),p=s-(l+u),h=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let g=0;g<p;++g)d+=e[h+g].length;d+=u*this.rightPad.length,d+=(l+u+p-1)*this.separator.length,r[n+i]=new Uint8Array(d);let c=r[n+i],f=0,m=g=>g.forEach(y=>c[f++]=y);for(let g=0;g<l;++g)m(this.leftPad),m(this.separator);for(let g=0;g<p-1;++g)m(e[h+g]),m(this.separator);if(p>0){m(e[h+p-1]);for(let g=0;g<u;++g)m(this.separator),m(this.rightPad)}else{for(let g=0;g<u-1;++g)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let r=e.length,n=t.length;if(n>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<n;++l){let u=t[l]>=o;if(u=u&&t[l]<=r,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${r}]`);o=t[l]}if(o!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${o}`)}let a=n-1,s=v.getArrayFromDType("int32",n);if(r===0||n===0){let o=new Array(r);for(let l=0;l<=a;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(p=>{u+=this.getNumNGrams(l,p)}),this.preserveShort&&l>0&&u===0&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[a]);for(let o=0;o<a;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(p=>{let h=t[o+1]-t[o],d=this.getNumNGrams(h,p);this.createNGrams(e,l,i,u,d,p),u+=d}),this.preserveShort&&u===s[o]){let p=t[o+1]-t[o];if(p===0)continue;let h=p+2*this.padWidth,d=1;this.createNGrams(e,l,i,u,d,h)}}return[i,s]}};function jA(e,t,r,n,a,s,i,o){return new jK(r,n,a,s,i,o).compute(e,t)}function HK(e,t,r,n){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)n.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!r||o.length!==0)&&n.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!r||e.length!==0)&&n.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!r||i.length!==0)&&n.push(i),a=s+1}}function HA(e,t,r){let n=e.length,a=[],s=0,i=0,o=new Array(n);for(let d=0;d<n;++d){let c=a.length;HK(e[d],t,r,a);let f=a.length-c;o[d]=f,s+=f,i=Math.max(i,f)}let l=v.getArrayFromDType("int32",s*2),u=new Array(s),p=[n,i],h=0;for(let d=0;d<n;++d)for(let c=0;c<o[d];++c)l[h*2]=d,l[h*2+1]=c,u[h]=a[h],++h;return[l,u,p]}function qA(e,t){let r=v.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)r[n]=v.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return r}var U9=er((e,t)=>e-t),qK=DA((e,t,r,n)=>({real:e-r,imag:t-n})),KA=br(Hi,U9,qK),KK={kernelName:Hi,backendName:"cpu",kernelFunc:KA};function j9(e,t){let r=new Array(e.rank);for(let a=0;a<r.length;a++)r[a]=e.shape[a]*t[a];let n=Oe(r,e.dtype);for(let a=0;a<n.values.length;++a){let s=n.indexToLoc(a),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);n.values[a]=e.values[o]}return n}var Lp=(e,t)=>{let r=t.value-e.value;return r===0?e.index-t.index:r};function H9(e,t,r=0,n=e.length-1){for(;n>r;){if(n-r>600){let o=n-r+1,l=t-r+1,u=Math.log(o),p=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*p*(o-p)/o)*Math.sign(l-o/2),d=Math.max(r,Math.floor(t-l*p/o+h)),c=Math.min(n,Math.floor(t+(o-l)*p/o+h));H9(e,t,d,c)}let a=e[t],s=r,i=n;for(v.swap(e,r,t),Lp(e[n],a)>0&&v.swap(e,r,n);s<i;){for(v.swap(e,s,i),s++,i--;Lp(e[s],a)<0;)s=s+1;for(;Lp(e[i],a)>0;)i=i-1}Lp(e[r],a)===0?v.swap(e,r,i):(i=i+1,v.swap(e,i,n)),i<=t&&(r=i+1),t<=i&&(n=i-1)}}function q9(e,t,r,n,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=v.getTypedArrayFromDType(r,i*n),u=v.getTypedArrayFromDType("int32",i*n);for(let h=0;h<i;h++){let d=h*o,c=e.subarray(d,d+o),f=new Array(c.length);c.forEach((A,x)=>f[x]={value:A,index:x}),n<f.length&&(H9(f,n),f=f.slice(0,n)),a&&f.sort(Lp);let m=h*n,g=l.subarray(m,m+n),y=u.subarray(m,m+n);for(let A=0;A<n;A++)g[A]=f[A].value,y[A]=f[A].index}let p=t.slice();return p[p.length-1]=n,[Oe(p,r,l),Oe(p,"int32",u)]}function K9(e,t,r,n){let a=v.parseAxisParam(t,r)[0],s=[1,r[0],1];for(let f=0;f<a;f++)s[0]*=r[f];s[1]=r[a];for(let f=a+1;f<r.length;f++)s[2]*=r[f];let i={},o=new Int32Array(r[a]),l=new or(s,n,e),u=[],p=s[0]===1&&s[2]===1;for(let f=0;f<r[a];f++){let m;if(p)m=e[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let A=0;A<s[2];A++)g.push(l.get(y,f,A));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,u.push(f)}}let h=s.slice();h[1]=Object.keys(i).length;let d=new or(h,n);u.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)d.set(l.get(g,f,y),g,m,y)});let c=r.slice();return c[a]=h[1],{outputValues:d.values,outputShape:c,indices:o}}var XK="0.0.0";Ol("cpu",()=>new OA,1);var X9=yt(fi,e=>e>=0?e:Math.exp(e)-1),ZK={kernelName:fi,backendName:"cpu",kernelFunc:X9};function Z9(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n;Se([a],"leakyRelu");let i=v.sizeFromShape(a.shape),o=r.data.get(a.dataId).values,l=v.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return r.makeTensorInfo(a.shape,"float32",l)}var YK={kernelName:vi,backendName:"cpu",kernelFunc:Z9},JK=er((e,t)=>e<0?t*e:e);function Y9(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t;Se([n,a],"prelu");let s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,[o,l]=JK(n.shape,a.shape,s,i,"float32");return r.makeTensorInfo(l,"float32",o)}var QK={kernelName:Fi,backendName:"cpu",kernelFunc:Y9},J9=yt(Pi,e=>Math.max(0,e)),eX={kernelName:Pi,backendName:"cpu",kernelFunc:J9},Q9=yt(Di,e=>Math.min(Math.max(0,e),6)),tX={kernelName:Di,backendName:"cpu",kernelFunc:Q9};function of(e,t,r,n,a){if(r==="linear")return Ba({inputs:{x:t},backend:e});if(r==="relu")return J9({inputs:{x:t},backend:e});if(r==="elu")return X9({inputs:{x:t},backend:e});if(r==="relu6")return Q9({inputs:{x:t},backend:e});if(r==="prelu")return Y9({inputs:{x:t,alpha:n},backend:e});if(r==="leakyrelu")return Z9({inputs:{x:t},backend:e,attrs:{alpha:a}});if(r==="sigmoid")return L9({inputs:{x:t},backend:e});throw new Error(`Activation ${r} has not been implemented for the CPU backend.`)}function Tt(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=v.sizeFromShape(a.shape),o=v.inferFromImplicitShape(s,i),l=v.sizeFromShape(o);v.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.incRef(a.dataId);let u=r.data.get(a.dataId);if(u.complexTensorInfos!=null){let p=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;p.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var rX={kernelName:vl,backendName:"cpu",kernelFunc:Tt};function eI(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;Se([a,s],"matMul");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=Dl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);v.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,p,d]:[g,d,p],b=o?[y,c,h]:[y,h,c],w=Tt({inputs:{x:a},backend:r,attrs:{shape:x}}),I=Tt({inputs:{x:s},backend:r,attrs:{shape:b}}),C=i?w.shape[1]:w.shape[2],E=i?w.shape[2]:w.shape[1],R=o?I.shape[1]:I.shape[2],F=Math.max(g,y),$=r.data.get(w.dataId).values,S=r.data.get(I.dataId).values,O=v.computeStrides(w.shape),z=v.computeStrides(I.shape),[j,K,D]=i?[O[0],1,O[1]]:[O[0],O[1],1],[Z,V,re]=o?[1,z[1],z[0]]:[z[1],1,z[0]],Q=E*R,ie=Oe([F,E,R],w.dtype),X=ie.values,ae=r.blockSize;for(let de=0;de<F;de++)for(let be=0;be<E;be+=ae)for(let ve=0;ve<R;ve+=ae)for(let Ee=0;Ee<C;Ee+=ae){let $e=Math.min(be+ae,E),De=Math.min(ve+ae,R),Ve=Math.min(Ee+ae,C);for(let Xe=be;Xe<$e;Xe++)for(let ot=ve;ot<De;ot++){let ht=0;for(let ct=Ee;ct<Ve;ct++){let Fe=Math.min(de,g-1)*j,kt=Math.min(de,y-1)*re,bt=$[Fe+Xe*K+ct*D],Or=S[ct*Z+ot*V+kt];ht+=bt*Or}X[de*Q+(Xe*R+ot)]+=ht}}return r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(I),r.makeTensorInfo(A,ie.dtype,ie.values)}var nX={kernelName:ai,backendName:"cpu",kernelFunc:eI};function aX(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=n,d,c,f,m=[];d=eI({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:r}),i&&(c=ju({inputs:{a:d,b:i},backend:r}),m.push(d),d=c),p&&(f=of(r,d,p,o,h),m.push(d),d=f);for(let g of m)r.disposeIntermediateTensorInfo(g);return d}var sX={kernelName:Bs,backendName:"cpu",kernelFunc:aX},iX=yt(Yu,e=>Math.acos(e)),oX={kernelName:Yu,backendName:"cpu",kernelFunc:iX},lX=yt(Ju,e=>Math.acosh(e)),uX={kernelName:Ju,backendName:"cpu",kernelFunc:lX};function dX(e){let{inputs:t,backend:r}=e,n=t;Se(t,"addN");let a=n.map(o=>r.data.get(o.dataId).values),s=Oe(n[0].shape,n[0].dtype),i=s.values;for(let o=0;o<n.length;o++){let l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return r.makeTensorInfo(s.shape,s.dtype,s.values)}var pX={kernelName:ti,backendName:"cpu",kernelFunc:dX};function hX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;Se(a,"all");let o=v.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),p=a;u!=null&&(p=dn({inputs:{x:a},backend:r,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("all",l,p.shape.length);let[h,d]=T.computeOutAndReduceShapes(p.shape,l),c=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),p.dtype),m=r.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let w=m[A+b];x=x&&w}f[y]=x}u!=null&&r.disposeIntermediateTensorInfo(p);let g=r.makeTensorInfo(h,p.dtype,f);if(i){let y=T.expandShapeToKeepDim(h,o),A=Tt({inputs:{x:g},backend:r,attrs:{shape:y}});return r.disposeIntermediateTensorInfo(g),A}return g}var cX={kernelName:Qu,backendName:"cpu",kernelFunc:hX};function fX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;Se(a,"any");let o=v.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),p=a;u!=null&&(p=dn({inputs:{x:a},backend:r,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("any",l,p.shape.length);let[h,d]=T.computeOutAndReduceShapes(p.shape,l),c=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),p.dtype),m=r.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let w=m[A+b];x=x||w}f[y]=x}u!=null&&r.disposeIntermediateTensorInfo(p);let g=r.makeTensorInfo(h,p.dtype,f);if(i){let y=T.expandShapeToKeepDim(h,o),A=Tt({inputs:{x:g},backend:r,attrs:{shape:y}});return r.disposeIntermediateTensorInfo(g),A}return g}var mX={kernelName:ed,backendName:"cpu",kernelFunc:fX};function gX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;Se(a,"argMax");let i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=dn({inputs:{x:a},backend:r,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,h]=T.computeOutAndReduceShapes(l.shape,i),d=v.sizeFromShape(p),c=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(h),m=r.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let w=m[y+b];w>A&&(A=w,x=b)}c[g]=x}return u.forEach(g=>r.disposeIntermediateTensorInfo(g)),r.makeTensorInfo(p,"int32",c)}var yX={kernelName:ri,backendName:"cpu",kernelFunc:gX};function AX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;Se(a,"argMin");let i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=dn({inputs:{x:a},backend:r,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,h]=T.computeOutAndReduceShapes(l.shape,i),d=v.sizeFromShape(p),c=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(h),m=r.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let w=m[y+b];w<A&&(A=w,x=b)}c[g]=x}return u.forEach(g=>r.disposeIntermediateTensorInfo(g)),r.makeTensorInfo(p,"int32",c)}var xX={kernelName:td,backendName:"cpu",kernelFunc:AX},bX=yt(rd,e=>Math.asin(e)),vX={kernelName:rd,backendName:"cpu",kernelFunc:bX},wX=yt(nd,e=>Math.asinh(e)),kX={kernelName:nd,backendName:"cpu",kernelFunc:wX},IX=yt(ad,e=>Math.atan(e)),SX={kernelName:ad,backendName:"cpu",kernelFunc:IX},CX=er((e,t)=>Math.atan2(e,t)),TX=br(id,CX),NX={kernelName:id,backendName:"cpu",kernelFunc:TX},EX=yt(sd,e=>Math.atanh(e)),RX={kernelName:sd,backendName:"cpu",kernelFunc:EX};function XA(e,t,r,n,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Oe(a.outShape,r),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],A=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let b=0;b<a.batchSize;++b){let w=b*y,I=b*n[0];for(let C=0;C<a.inChannels;++C)for(let E=0;E<a.outHeight;++E){let R=E*i-d,F=Math.max(0,R),$=Math.min(a.inHeight,p+R),S=w+E*A;for(let O=0;O<a.outWidth;++O){let z=O*o-c,j=Math.max(0,z),K=Math.min(a.inWidth,h+z),D=f,Z=0,V=0;for(let Q=F;Q<$;Q+=l){let ie=I+Q*n[1];for(let X=j;X<K;X+=u){let ae=ie+X*n[2],de=e[ae+C];s==="max"&&de>D?D=de:s==="avg"&&(Z+=de,V++)}if(isNaN(D))break}let re=S+O*x+C;g[re]=s==="avg"?Z/V:D}}}return m}function tI(e,t,r,n,a=!1,s=!1){let i=Oe(n.outShape,"int32"),o=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,p=n.dilationWidth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,c=n.padInfo.top,f=n.padInfo.left,m=Oe(t,r,e);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let A=0;A<n.outHeight;++A){let x=A*o-c,b=x;for(;b<0;)b+=u;let w=Math.min(n.inHeight,h+x);for(let I=0;I<n.outWidth;++I){let C=I*l-f,E=C;for(;E<0;)E+=p;let R=Math.min(n.inWidth,d+C),F=Number.NEGATIVE_INFINITY,$=-1;for(let S=b;S<w;S+=u){let O=S-x;for(let z=E;z<R;z+=p){let j=z-C,K=m.get(g,S,z,y);K>F&&(F=K,a?$=s?((g*n.inHeight+S)*n.inWidth+z)*n.inChannels+y:(S*n.inWidth+z)*n.inChannels+y:$=O*d+j)}}i.set($,g,A,I,y)}}return i}function rI(e,t,r,n,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,p=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,A=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Oe(a.outShape,r),b=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[2]*a.outShape[3]*a.outShape[4],C=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let R=0;R<a.batchSize;++R){let F=R*w,$=R*n[0];for(let S=0;S<a.inChannels;++S)for(let O=0;O<a.outDepth;++O){let z=O*i-m,j=z;for(;j<0;)j+=u;let K=Math.min(a.inDepth,d+z),D=F+O*I;for(let Z=0;Z<a.outHeight;++Z){let V=Z*o-g,re=V;for(;re<0;)re+=p;let Q=Math.min(a.inHeight,c+V),ie=D+Z*C;for(let X=0;X<a.outWidth;++X){let ae=X*l-y,de=ae;for(;de<0;)de+=h;let be=Math.min(a.inWidth,f+ae),ve=ie+X*E,Ee=A,$e=0,De=0;for(let Xe=j;Xe<K;Xe+=u){let ot=$+Xe*n[1];for(let ht=re;ht<Q;ht+=p){let ct=ot+ht*n[2];for(let Fe=de;Fe<be;Fe+=h){let kt=ct+Fe*n[3],bt=e[kt+S];if(s==="max"&&bt>Ee?Ee=bt:s==="avg"&&($e+=bt,De++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}let Ve=ve+S;b[Ve]=s==="avg"?$e/De:Ee}}}}return x}function $X(e,t){let r=Oe(t.outShape,"int32"),n=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*n-d,x=A;for(;x<0;)x+=i;let b=Math.min(t.inDepth,u+A);for(let w=0;w<t.outHeight;++w){let I=w*a-c,C=I;for(;C<0;)C+=o;let E=Math.min(t.inHeight,p+I);for(let R=0;R<t.outWidth;++R){let F=R*s-f,$=F;for(;$<0;)$+=l;let S=Math.min(t.inWidth,h+F),O=Number.NEGATIVE_INFINITY,z=-1;for(let j=x;j<b;j+=i){let K=j-A;for(let D=C;D<E;D+=o){let Z=D-I;for(let V=$;V<S;V+=l){let re=V-F,Q=e.get(m,j,D,V,g);Q>=O&&(O=Q,z=K*p*h+Z*p+re)}}}r.set(z,m,y,w,R,g)}}}return r}function MX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;Se(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))h=Ba({inputs:{x:a},backend:r});else{let d=r.data.get(a.dataId).values,c=v.computeStrides(a.shape),f=XA(d,a.shape,a.dtype,c,p,"avg");h=r.makeTensorInfo(p.outShape,a.dtype,f.values)}return h}var FX={kernelName:ni,backendName:"cpu",kernelFunc:MX};function _X(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;Se(a,"avgPool3d");let p=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=r.data.get(a.dataId).values,d=rI(h,a.shape,a.dtype,v.computeStrides(a.shape),p,"avg");return r.makeTensorInfo(d.shape,"float32",d.values)}var PX={kernelName:hh,backendName:"cpu",kernelFunc:_X};function zX(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;Se([a,s],"avgPool3DGrad");let p=T.computePool3DInfo(s.shape,i,o,1,l,u),h=p.strideDepth,d=p.strideHeight,c=p.strideWidth,f=p.filterDepth,m=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,A=p.dilationHeight,x=p.dilationWidth,b=p.effectiveFilterDepth,w=p.effectiveFilterHeight,I=p.effectiveFilterWidth,C=b-1-p.padInfo.front,E=I-1-p.padInfo.left,R=w-1-p.padInfo.top,F=Oe(s.shape,"float32"),$=1/(f*m*g),S=r.bufferSync(a);for(let O=0;O<p.batchSize;++O)for(let z=0;z<p.inChannels;++z)for(let j=0;j<p.inDepth;++j)for(let K=0;K<p.inHeight;++K)for(let D=0;D<p.inWidth;++D){let Z=j-C,V=K-R,re=D-E,Q=0;for(let ie=0;ie<b;ie+=y){let X=(Z+ie)/h;if(!(X<0||X>=p.outDepth||Math.floor(X)!==X))for(let ae=0;ae<w;ae+=A){let de=(V+ae)/d;if(!(de<0||de>=p.outHeight||Math.floor(de)!==de))for(let be=0;be<I;be+=x){let ve=(re+be)/c;ve<0||ve>=p.outWidth||Math.floor(ve)!==ve||(Q+=S.get(O,X,de,ve,z))}}}F.set(Q*$,O,j,K,D,z)}return r.makeTensorInfo(F.shape,F.dtype,F.values)}var OX={kernelName:wf,backendName:"cpu",kernelFunc:zX};function DX(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s;Se([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=n,p=T.computePool2DInfo(i.shape,o,l,1,u),h=p.strideHeight,d=p.strideWidth,c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,A=p.effectiveFilterWidth,x=A-1-p.padInfo.left,b=y-1-p.padInfo.top,w=Oe(i.shape,"float32"),I=1/(c*f),C=r.data.get(a.dataId).values,E=Oe(a.shape,"float32",C);for(let R=0;R<p.batchSize;++R)for(let F=0;F<p.inChannels;++F)for(let $=0;$<p.inHeight;++$)for(let S=0;S<p.inWidth;++S){let O=$-b,z=S-x,j=0;for(let K=0;K<y;K+=m){let D=(O+K)/h;if(!(D<0||D>=p.outHeight||Math.floor(D)!==D))for(let Z=0;Z<A;Z+=g){let V=(z+Z)/d;V<0||V>=p.outWidth||Math.floor(V)!==V||(j+=E.get(R,D,V,F))}}w.set(j*I,R,$,S,F)}return r.makeTensorInfo(w.shape,w.dtype,w.values)}var LX={kernelName:vf,backendName:"cpu",kernelFunc:DX};function BX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;v.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Se([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let p=r.data.get(a.dataId).values,h=r.data.get(o.dataId).values,d=r.data.get(l.dataId).values,c=s?r.data.get(s.dataId).values:new Float32Array([1]),f=i?r.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(p.length),g=f.length,y=c.length,A=d.length,x=h.length,b=0,w=0,I=0,C=0;for(let E=0;E<p.length;++E)m[E]=f[b++]+(p[E]-h[w++])*c[I++]/Math.sqrt(d[C++]+u),b>=g&&(b=0),w>=x&&(w=0),I>=y&&(I=0),C>=A&&(C=0);return r.makeTensorInfo(a.shape,a.dtype,m)}var WX={kernelName:Ai,backendName:"cpu",kernelFunc:BX};function VX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;Se([a],"batchToSpaceND");let o=s.reduce((y,A)=>y*A),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),p=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(p,i,s.length),c=Tt({inputs:{x:a},backend:r,attrs:{shape:l}}),f=dn({inputs:{x:c},backend:r,attrs:{perm:u}}),m=Tt({inputs:{x:f},backend:r,attrs:{shape:p}}),g=jo({inputs:{x:m},backend:r,attrs:{begin:h,size:d}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}var GX={kernelName:Jo,backendName:"cpu",kernelFunc:VX};function UX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=LA(o,l,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,u)}var jX={kernelName:kf,backendName:"cpu",kernelFunc:UX};function HX(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var qX={kernelName:If,backendName:"cpu",kernelFunc:HX},KX=yt(as,(e,t)=>{let r=t;return e>r.clipValueMax?r.clipValueMax:e<r.clipValueMin?r.clipValueMin:e}),XX={kernelName:as,backendName:"cpu",kernelFunc:KX},ZX=e=>{let{x:t}=e.inputs,r=e.backend,n=new Float32Array(v.sizeFromShape(t.shape)),a=r.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=r.data.get(s.dataId).values,l=r.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let p=o[u],h=l[u];n[u]=Math.hypot(p,h)}return r.makeOutput(n,t.shape,"float32")},YX={kernelName:fh,backendName:"cpu",kernelFunc:ZX};function Hu(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.imag,s=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,s)}var JX={kernelName:Ah,backendName:"cpu",kernelFunc:Hu};function qu(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=v.parseAxisParam(a,t[0].shape)[0],i=T.computeOutShape(t.map(m=>m.shape),s);if(v.sizeFromShape(i)===0)return r.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(m=>v.sizeFromShape(m.shape)>0);if(o.length===1)return Ba({inputs:{x:o[0]},backend:r});let l=o.map(m=>m.shape);if(T.assertParamsConsistent(l,s),o[0].dtype==="complex64"){let m=o.map(b=>Uo({inputs:{input:b},backend:r})),g=o.map(b=>Hu({inputs:{input:b},backend:r})),y=qu({inputs:m,backend:r,attrs:{axis:s}}),A=qu({inputs:g,backend:r,attrs:{axis:s}}),x=gn({inputs:{real:y,imag:A},backend:r});return m.forEach(b=>r.disposeIntermediateTensorInfo(b)),g.forEach(b=>r.disposeIntermediateTensorInfo(b)),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(A),x}let u=o.map(m=>{let g=v.sizeFromShape(m.shape.slice(s));return Tt({inputs:{x:m},backend:r,attrs:{shape:[-1,g]}})}),p=u.map(m=>({vals:r.data.get(m.dataId).values,shape:m.shape}));i=T.computeOutShape(u.map(m=>m.shape),1);let h=u[0].shape[0]===1,d=BA(p,i,t[0].dtype,h),c=T.computeOutShape(o.map(m=>m.shape),s),f=r.makeTensorInfo(c,t[0].dtype,d);return u.forEach(m=>r.disposeIntermediateTensorInfo(m)),f}var QX={kernelName:Qo,backendName:"cpu",kernelFunc:qu};function nI(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=n;Se([a,s],"conv2d");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,A=d.padInfo.top,x=d.dataFormat==="channelsLast",b=new or(d.outShape,a.dtype),w=v.computeStrides(a.shape),I=v.computeStrides(s.shape),C=w[0],E=x?w[1]:w[2],R=x?w[2]:1,F=x?1:w[1],$=b.strides[0],S=x?b.strides[1]:b.strides[2],O=x?b.strides[2]:1,z=x?1:b.strides[1],j=r.data.get(a.dataId).values,K=r.data.get(s.dataId).values,D=b.values;for(let Z=0;Z<d.batchSize;++Z){let V=Z*C,re=Z*$;for(let Q=0;Q<d.outHeight;++Q){let ie=re+Q*S,X=Q*d.strideHeight-A;for(let ae=0;ae<c;++ae){let de=X+ae*m;if(de<0||de>=d.inHeight)continue;let be=ae*I[0],ve=V+de*E;for(let Ee=0;Ee<d.outWidth;++Ee){let $e=ie+Ee*O,De=Ee*d.strideWidth-y;for(let Ve=0;Ve<f;++Ve){let Xe=De+Ve*g;if(Xe<0||Xe>=d.inWidth)continue;let ot=be+Ve*I[1],ht=ve+Xe*R,ct=ot;for(let Fe=0;Fe<d.inChannels;++Fe){let kt=j[ht+Fe*F];for(let bt=0;bt<d.outChannels;++bt)D[$e+bt*z]+=kt*K[ct+bt];ct+=d.outChannels}}}}}}return r.makeTensorInfo(b.shape,b.dtype,D)}var eZ={kernelName:oi,backendName:"cpu",kernelFunc:nI};function tZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=n;Se([a,s],"conv2dBackpropFilter");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",A=new or(d.filterShape,"float32"),x=d.padInfo.left,b=d.padInfo.top,w=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values,C=new or(a.shape,a.dtype,w),E=new or(s.shape,s.dtype,I);for(let R=0;R<m;++R){let F=Math.max(0,Math.ceil((b-R)/c)),$=Math.min(d.outHeight,(d.inHeight+b-R)/c);for(let S=0;S<g;++S){let O=Math.max(0,Math.ceil((x-S)/f)),z=Math.min(d.outWidth,(d.inWidth+x-S)/f);for(let j=0;j<d.inChannels;++j)for(let K=0;K<d.outChannels;++K){let D=0;for(let Z=0;Z<d.batchSize;++Z)for(let V=F;V<$;++V){let re=R+V*c-b;for(let Q=O;Q<z;++Q){let ie=S+Q*f-x;y?D+=C.get(Z,re,ie,j)*E.get(Z,V,Q,K):D+=C.get(Z,j,re,ie)*E.get(Z,K,V,Q)}}A.set(D,R,S,j,K)}}}return r.makeTensorInfo(A.shape,A.dtype,A.values)}var rZ={kernelName:Sf,backendName:"cpu",kernelFunc:tZ};function nZ(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=n;Se([a,s],"conv2dBackpropInput");let h=v.computeStrides(s.shape),d=v.computeStrides(a.shape),c=T.convertConv2DDataFormat(u),f=T.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),m=new or(f.inShape,"float32"),g=m.values,y=r.data.get(a.dataId).values,A=r.data.get(s.dataId).values,[x,b,w]=h,{batchSize:I,filterHeight:C,filterWidth:E,inChannels:R,inHeight:F,inWidth:$,outChannels:S,outHeight:O,outWidth:z,strideHeight:j,strideWidth:K}=f;c=f.dataFormat;let D=C-1-f.padInfo.top,Z=E-1-f.padInfo.left,V=c==="channelsLast",re=m.strides[0],Q=V?m.strides[1]:m.strides[2],ie=V?m.strides[2]:1,X=V?1:m.strides[1],ae=d[0],de=V?d[1]:d[2],be=V?d[2]:1,ve=V?1:d[1];for(let Ee=0;Ee<I;++Ee)for(let $e=0;$e<R;++$e)for(let De=0;De<F;++De){let Ve=De-D,Xe=Math.max(0,Math.ceil(Ve/j)),ot=Math.min(O,(C+Ve)/j);for(let ht=0;ht<$;++ht){let ct=ht-Z,Fe=Math.max(0,Math.ceil(ct/K)),kt=Math.min(z,(E+ct)/K),bt=0;for(let cr=Xe;cr<ot;++cr){let tn=cr*j-Ve;for(let nr=Fe;nr<kt;++nr){let fr=nr*K-ct,ia=ae*Ee+de*cr+be*nr,rn=x*(C-1-tn)+b*(E-1-fr)+w*$e;for(let ar=0;ar<S;++ar){let En=y[ia+ve*ar],Rn=A[rn+ar];bt+=En*Rn}}}let Or=re*Ee+Q*De+ie*ht+X*$e;g[Or]=bt}}return r.makeTensorInfo(m.shape,m.dtype,m.values)}var aZ={kernelName:li,backendName:"cpu",kernelFunc:nZ};function sZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=n;Se([a,s],"conv3d");let u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:h,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,A=g.left,x=g.top,b=new or(u.outShape,a.dtype),w=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values,C=b.values,E=v.computeStrides(a.shape),R=v.computeStrides(s.shape);for(let F=0;F<u.batchSize;++F){let $=F*E[0],S=F*b.strides[0];for(let O=0;O<u.outDepth;++O){let z=S+O*b.strides[1],j=O*u.strideDepth-y;for(let K=0;K<p;++K){let D=j+K*c;if(D<0||D>=u.inDepth)continue;let Z=K*R[0],V=$+D*E[1];for(let re=0;re<u.outHeight;++re){let Q=z+re*b.strides[2],ie=re*u.strideHeight-x;for(let X=0;X<h;++X){let ae=ie+X*f;if(ae<0||ae>=u.inHeight)continue;let de=Z+X*R[1],be=V+ae*E[2];for(let ve=0;ve<u.outWidth;++ve){let Ee=Q+ve*u.outChannels,$e=ve*u.strideWidth-A;for(let De=0;De<d;++De){let Ve=$e+De*m;if(Ve<0||Ve>=u.inWidth)continue;let Xe=de+De*R[2],ot=be+Ve*u.inChannels,ht=Xe;for(let ct=0;ct<u.inChannels;++ct){let Fe=w[ot+ct];for(let kt=0;kt<u.outChannels;++kt)C[Ee+kt]+=Fe*I[ht+kt];ht+=u.outChannels}}}}}}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}var iZ={kernelName:mh,backendName:"cpu",kernelFunc:sZ};function oZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=n;Se([a,s],"conv3dBackpropFilterV2");let u=v.computeStrides(a.shape),p=v.computeStrides(s.shape),h=T.computeConv3DInfo(a.shape,l,i,1,o),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,A=new or(h.filterShape,"float32"),x=A.values,[b,w,I,C]=A.strides,E=r.data.get(s.dataId).values,[R,F,$,S]=p,O=r.data.get(a.dataId).values,[z,j,K,D]=u,Z=h.padInfo.front,V=h.padInfo.left,re=h.padInfo.top;for(let Q=0;Q<m;++Q){let ie=Math.max(0,Math.ceil((Z-Q)/d)),X=Math.min(h.outDepth,(h.inDepth+Z-Q)/d),ae=Q*b;for(let de=0;de<g;++de){let be=Math.max(0,Math.ceil((re-de)/c)),ve=Math.min(h.outHeight,(h.inHeight+re-de)/c),Ee=de*w+ae;for(let $e=0;$e<y;++$e){let De=Math.max(0,Math.ceil((V-$e)/f)),Ve=Math.min(h.outWidth,(h.inWidth+V-$e)/f),Xe=$e*I+Ee;for(let ot=0;ot<h.inChannels;++ot){let ht=ot*C+Xe;for(let ct=0;ct<h.outChannels;++ct){let Fe=0;for(let kt=0;kt<h.batchSize;++kt){let bt=kt*z,Or=kt*R;for(let cr=ie;cr<X;++cr){let tn=(Q+cr*d-Z)*j+bt,nr=cr*F+Or;for(let fr=be;fr<ve;++fr){let ia=(de+fr*c-re)*K+tn,rn=fr*$+nr;for(let ar=De;ar<Ve;++ar){let En=($e+ar*f-V)*D+ia,Rn=ar*S+rn;Fe+=O[En+ot]*E[Rn+ct]}}}}x[ht+ct]=Fe}}}}}return r.makeTensorInfo(A.shape,A.dtype,A.values)}var lZ={kernelName:Cf,backendName:"cpu",kernelFunc:oZ};function uZ(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=n;Se([a],"conv3dBackpropInputV2");let u=v.computeStrides(a.shape),p=v.computeStrides(s.shape),h=T.computeConv3DInfo(l,s.shape,o,1,i),d=new or(h.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,A=r.data.get(a.dataId).values,[x,b,w,I]=u,C=r.data.get(s.dataId).values,[E,R,F,$]=p,{batchSize:S,filterDepth:O,filterHeight:z,filterWidth:j,inChannels:K,inDepth:D,inHeight:Z,inWidth:V,outChannels:re,outDepth:Q,outHeight:ie,outWidth:X,strideDepth:ae,strideHeight:de,strideWidth:be}=h,ve=O-1-h.padInfo.front,Ee=z-1-h.padInfo.top,$e=j-1-h.padInfo.left;for(let De=0;De<S;++De)for(let Ve=0;Ve<K;++Ve)for(let Xe=0;Xe<D;++Xe){let ot=Xe-ve,ht=Math.max(0,Math.ceil(ot/ae)),ct=Math.min(Q,(O+ot)/ae);for(let Fe=0;Fe<Z;++Fe){let kt=Fe-Ee,bt=Math.max(0,Math.ceil(kt/de)),Or=Math.min(ie,(z+kt)/de);for(let cr=0;cr<V;++cr){let tn=cr-$e,nr=Math.max(0,Math.ceil(tn/be)),fr=Math.min(X,(j+tn)/be),ia=0;for(let rn=ht;rn<ct;++rn){let ar=rn*ae-ot;for(let En=bt;En<Or;++En){let Rn=En*de-kt;for(let ws=nr;ws<fr;++ws){let mo=ws*be-tn,Tc=x*De+b*rn+w*En+I*ws,ks=E*(O-1-ar)+R*(z-1-Rn)+F*(j-1-mo)+$*Ve;for(let Ka=0;Ka<re;++Ka){let gp=A[Tc+Ka],ou=C[ks+Ka];ia+=gp*ou}}}}c[f*De+m*Xe+g*Fe+y*cr+Ve]=ia}}}return r.makeTensorInfo(d.shape,d.dtype,d.values)}var dZ={kernelName:Tf,backendName:"cpu",kernelFunc:uZ},pZ=yt(ui,e=>Math.cos(e)),hZ={kernelName:ui,backendName:"cpu",kernelFunc:pZ},cZ=yt(di,e=>Math.cosh(e)),fZ={kernelName:di,backendName:"cpu",kernelFunc:cZ};function mZ(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,[p,h,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Oe([f,m,g,c],"float32"),A=r.data.get(s.dataId).values,x=r.data.get(i.dataId).values,b=r.data.get(a.dataId).values,w=v.computeStrides(a.shape),I=v.computeStrides(y.shape);for(let C=0;C<f;C++){let E=C*4,R=A[E],F=A[E+1],$=A[E+2],S=A[E+3],O=x[C];if(O>=p)continue;let z=m>1?($-R)*(h-1)/(m-1):0,j=g>1?(S-F)*(d-1)/(g-1):0;for(let K=0;K<m;K++){let D=m>1?R*(h-1)+K*z:.5*(R+$)*(h-1);if(D<0||D>h-1){for(let Z=0;Z<g;Z++)for(let V=0;V<c;V++){let re=V+Z*I[2]+K*I[1]+C*I[0];y.values[re]=u}continue}if(l==="bilinear"){let Z=Math.floor(D),V=Math.ceil(D),re=D-Z;for(let Q=0;Q<g;Q++){let ie=g>1?F*(d-1)+Q*j:.5*(F+S)*(d-1);if(ie<0||ie>d-1){for(let be=0;be<c;be++){let ve=be+Q*I[2]+K*I[1]+C*I[0];y.values[ve]=u}continue}let X=Math.floor(ie),ae=Math.ceil(ie),de=ie-X;for(let be=0;be<c;be++){let ve=be+X*w[2]+Z*w[1]+O*w[0],Ee=b[ve];ve=be+ae*w[2]+Z*w[1]+O*w[0];let $e=b[ve];ve=be+X*w[2]+V*w[1]+O*w[0];let De=b[ve];ve=be+ae*w[2]+V*w[1]+O*w[0];let Ve=b[ve],Xe=Ee+($e-Ee)*de,ot=De+(Ve-De)*de;ve=be+Q*I[2]+K*I[1]+C*I[0],y.values[ve]=Xe+(ot-Xe)*re}}}else for(let Z=0;Z<g;++Z){let V=g>1?F*(d-1)+Z*j:.5*(F+S)*(d-1);if(V<0||V>d-1){for(let ie=0;ie<c;ie++){let X=ie+Z*I[2]+K*I[1]+C*I[0];y.values[X]=u}continue}let re=Math.round(V),Q=Math.round(D);for(let ie=0;ie<c;ie++){let X=ie+re*w[2]+Q*w[1]+O*w[0],ae=ie+Z*I[2]+K*I[1]+C*I[0];y.values[ae]=b[X]}}}}return r.makeTensorInfo(y.shape,y.dtype,y.values)}var gZ={kernelName:tl,backendName:"cpu",kernelFunc:mZ};function yZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;Se(a,"cumprod");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=dn({inputs:{x:a},backend:r,attrs:{perm:l}}));let p=T.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=Rr(u.dtype,"int32"),d=v.makeOnesTypedArray(v.sizeFromShape(u.shape),h),c=r.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(y,A)=>y+f-A-1:(y,A)=>y+A;for(let y=0;y<c.length;y+=f)for(let A=0;A<f;A++){let x=m(y,A);if(A===0)d[x]=i?1:c[x];else{let b=m(y,A-1);d[x]=i?c[b]*d[b]:c[x]*d[b]}}let g=r.makeTensorInfo(u.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),A=dn({inputs:{x:g},backend:r,attrs:{perm:y}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(u),A}return g}var AZ={kernelName:el,backendName:"cpu",kernelFunc:yZ};function xZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;Se(a,"cumsum");let l=T.getAxesPermutation([s],a.shape.length),u=a;l!=null&&(u=dn({inputs:{x:a},backend:r,attrs:{perm:l}}));let p=T.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=Rr(u.dtype,"int32"),d=v.makeZerosTypedArray(v.sizeFromShape(u.shape),h),c=r.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(y,A)=>y+f-A-1:(y,A)=>y+A;for(let y=0;y<c.length;y+=f)for(let A=0;A<f;A++){let x=m(y,A);if(A===0)d[x]=i?0:c[x];else{let b=m(y,A-1);d[x]=i?c[b]+d[b]:c[x]+d[b]}}let g=r.makeTensorInfo(u.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),A=dn({inputs:{x:g},backend:r,attrs:{perm:y}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(u),A}return g}var bZ={kernelName:pi,backendName:"cpu",kernelFunc:xZ};function vZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(a.shape.length===1){let l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,p=LA(l,u,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,p)}else if(a.shape.length===2){let l=r.bufferSync(a),u=r.bufferSync(s),p=g9(l,u,i,o);return r.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var wZ={kernelName:Nf,backendName:"cpu",kernelFunc:vZ};function kZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n;v.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],p=a.shape[3],h=l*s,d=u*s,c=p/(s*s),f=r.data.get(a.dataId).values,m=new Float32Array(o*h*d*c),g=0;for(let y=0;y<o;++y)for(let A=0;A<h;++A){let x=Math.floor(A/s),b=A%s;for(let w=0;w<d;++w){let I=Math.floor(w/s),C=w%s,E=(b*s+C)*c;for(let R=0;R<c;++R){let F=R+E+p*(I+u*(x+l*y));m[g++]=f[F]}}}return r.makeTensorInfo([o,h,d,c],a.dtype,m)}var IZ={kernelName:rl,backendName:"cpu",kernelFunc:kZ};function aI(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=n;Se([a,s],"depthwiseConv2DNative");let p=v.computeStrides(a.shape),h=v.computeStrides(s.shape),d=l;d==null&&(d=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=T.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=c,x=A.left,b=A.top,w=c.outChannels/c.inChannels,I=new or(c.outShape,a.dtype),C=r.data.get(a.dataId).values,E=r.data.get(s.dataId).values,R=I.values;for(let F=0;F<c.batchSize;++F){let $=F*p[0],S=F*I.strides[0];for(let O=0;O<c.outHeight;++O){let z=S+O*I.strides[1],j=O*c.strideHeight-b;for(let K=0;K<f;++K){let D=j+K*g;if(D<0||D>=c.inHeight)continue;let Z=K*h[0],V=$+D*p[1];for(let re=0;re<c.outWidth;++re){let Q=z+re*I.strides[2],ie=re*c.strideWidth-x;for(let X=0;X<m;++X){let ae=ie+X*y;if(ae<0||ae>=c.inWidth)continue;let de=Z+X*h[1],be=V+ae*c.inChannels,ve=Q,Ee=de;for(let $e=0;$e<c.inChannels;++$e){let De=C[be+$e];for(let Ve=0;Ve<w;++Ve)R[ve+Ve]+=De*E[Ee+Ve];ve+=w,Ee+=w}}}}}}return r.makeTensorInfo(I.shape,I.dtype,I.values)}var SZ={kernelName:hi,backendName:"cpu",kernelFunc:aI};function CZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=n;Se([a,s],"depthwiseConv2dNativeBackpropFilter");let h=T.computeConv2DInfo(a.shape,p,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new or(h.filterShape,"float32"),y=h.padInfo.left,A=h.padInfo.top,x=h.outChannels/h.inChannels,b=r.data.get(a.dataId).values,w=new or(a.shape,a.dtype,b),I=r.data.get(s.dataId).values,C=new or(s.shape,s.dtype,I);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((A-E)/d)),F=Math.min(h.outHeight,(h.inHeight+A-E)/d);for(let $=0;$<m;++$){let S=Math.max(0,Math.ceil((y-$)/c)),O=Math.min(h.outWidth,(h.inWidth+y-$)/c);for(let z=0;z<h.outChannels;++z){let j=Math.trunc(z/x),K=z%x,D=0;for(let Z=0;Z<h.batchSize;++Z)for(let V=R;V<F;++V){let re=E+V*d-A;for(let Q=S;Q<O;++Q){let ie=$+Q*c-y;D+=w.get(Z,re,ie,j)*C.get(Z,V,Q,z)}}g.set(D,E,$,j,K)}}}return r.makeTensorInfo(g.shape,g.dtype,g.values)}var TZ={kernelName:Ef,backendName:"cpu",kernelFunc:CZ};function NZ(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=n;Se([a,s],"depthwiseConv2DNativeBackpropInput");let h=v.computeStrides(a.shape),d=v.computeStrides(s.shape),c=T.computeConv2DInfo(p,s.shape,i,o,l,u,!0),f=new or(c.inShape,"float32"),m=f.values,[g,y,A]=f.strides,x=r.data.get(a.dataId).values,[b,w,I]=h,C=r.data.get(s.dataId).values,[E,R,F]=d,{batchSize:$,filterHeight:S,filterWidth:O,inChannels:z,inHeight:j,inWidth:K,outChannels:D,outHeight:Z,outWidth:V,strideHeight:re,strideWidth:Q}=c,ie=S-1-c.padInfo.top,X=O-1-c.padInfo.left,ae=D/z;for(let de=0;de<$;++de)for(let be=0;be<z;++be)for(let ve=0;ve<j;++ve){let Ee=ve-ie,$e=Math.max(0,Math.ceil(Ee/re)),De=Math.min(Z,(S+Ee)/re);for(let Ve=0;Ve<K;++Ve){let Xe=Ve-X,ot=Math.max(0,Math.ceil(Xe/Q)),ht=Math.min(V,(O+Xe)/Q),ct=0;for(let Fe=$e;Fe<De;++Fe){let kt=Fe*re-Ee;for(let bt=ot;bt<ht;++bt){let Or=bt*Q-Xe,cr=b*de+w*Fe+I*bt,tn=E*(S-1-kt)+R*(O-1-Or)+F*be;for(let nr=0;nr<ae;++nr){let fr=be*ae+nr,ia=x[cr+fr],rn=C[tn+nr];ct+=ia*rn}}}m[g*de+y*ve+A*Ve+be]=ct}}return r.makeTensorInfo(f.shape,f.dtype,f.values)}var EZ={kernelName:Rf,backendName:"cpu",kernelFunc:NZ};function RZ(e){let{inputs:t,backend:r}=e,{x:n}=t,a=v.sizeFromShape(n.shape),s=r.data.get(n.dataId).values,i=Oe([a,a],n.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...n.shape,...n.shape];return r.makeTensorInfo(l,i.dtype,i.values)}var $Z={kernelName:$f,backendName:"cpu",kernelFunc:RZ},MZ={kernelName:gh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a}=e,{strides:s,pad:i,dilations:o}=r,l=t,u=l.data.get(n.dataId).values,p=n.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:I,filterWidth:C,dilationHeight:E,dilationWidth:R,outShape:F}=T.computeDilation2DInfo(n.shape,a.shape,s,i,"NHWC",o),$=v.sizeFromShape(F),S=F.length,O=v.getArrayFromDType(n.dtype,$);for(let z=0;z<c;++z)for(let j=0;j<y;++j){let K=j*b-x.top;for(let D=0;D<A;++D){let Z=D*w-x.left;for(let V=0;V<g;++V){let re=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<I;++ie){let X=K+ie*E;if(X>=0&&X<f)for(let ae=0;ae<C;++ae){let de=Z+ae*R;if(de>=0&&de<m){let be=v.locToIndex([z,X,de,V],p,v.computeStrides(n.shape)),ve=v.locToIndex([ie,ae,V],d,v.computeStrides(a.shape)),Ee=u[be]+h[ve];Ee>re&&(re=Ee)}}}let Q=v.locToIndex([z,j,D,V],S,v.computeStrides(F));O[Q]=re}}}return{dataId:l.write(v.toTypedArray(O,n.dtype),F,n.dtype),shape:F,dtype:n.dtype}}},FZ={kernelName:D0,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=r,u=t,p=v.toNestedArray(n.shape,u.data.get(n.dataId).values),h=v.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:w,filterWidth:I,dilationHeight:C,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC",l);v.assert(s.rank===R.length,()=>`Error in ${D0}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let F=v.toNestedArray(R,u.data.get(s.dataId).values),$=v.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<d;++S)for(let O=0;O<g;++O){let z=O*x-A.top;for(let j=0;j<y;++j){let K=j*b-A.left;for(let D=0;D<m;++D){let Z=Number.MIN_SAFE_INTEGER,V=0,re=0;for(let Q=0;Q<w;++Q){let ie=z+Q*C;if(ie>=0&&ie<c)for(let X=0;X<I;++X){let ae=K+X*E;if(ae>=0&&ae<f){let de=p[S][ie][ae][D]+h[Q][X][D];de>Z&&(Z=de,V=Q,re=X)}}}$[V][re][D]+=F[S][O][j][D]}}}return{dataId:u.write(v.toTypedArray($,n.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},_Z={kernelName:O0,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=r,u=t,p=v.toNestedArray(n.shape,u.data.get(n.dataId).values),h=v.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:w,filterWidth:I,dilationHeight:C,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC",l);v.assert(s.rank===R.length,()=>`Error in ${O0}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let F=v.toNestedArray(R,u.data.get(s.dataId).values),$=v.makeZerosNestedTypedArray(n.shape,n.dtype);for(let S=0;S<d;++S)for(let O=0;O<g;++O){let z=O*x-A.top;for(let j=0;j<y;++j){let K=j*b-A.left;for(let D=0;D<m;++D){let Z=Number.MIN_SAFE_INTEGER,V=z<0?0:z,re=K<0?0:K;for(let Q=0;Q<w;++Q){let ie=z+Q*C;if(ie>=0&&ie<c)for(let X=0;X<I;++X){let ae=K+X*E;if(ae>=0&&ae<f){let de=p[S][ie][ae][D]+h[Q][X][D];de>Z&&(Z=de,V=ie,re=ae)}}}$[S][V][re][D]+=F[S][O][j][D]}}}return{dataId:u.write(v.toTypedArray($,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function nc(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;Se(a,"sum");let o;a.dtype==="bool"?o=Js({inputs:{x:a},backend:r,attrs:{dtype:"int32"}}):o=Ba({inputs:{x:a},backend:r});let l=o.shape.length,u=v.parseAxisParam(s,o.shape),p=T.getAxesPermutation(u,l),h=u,d=o;p!=null&&(d=dn({inputs:{x:o},backend:r,attrs:{perm:p}}),h=T.getInnerMostAxes(h.length,l)),T.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[c,f]=T.computeOutAndReduceShapes(d.shape,h),m=T.upcastType(d.dtype,"int32"),g=af(r,c,m),y=v.sizeFromShape(f),A=r.data.get(g.dataId).values,x=r.data.get(d.dataId).values;for(let b=0;b<A.length;++b){let w=b*y,I=0;for(let C=0;C<y;++C)I+=x[w+C];A[b]=I}if(i){let b=T.expandShapeToKeepDim(g.shape,u),w=g;g=Tt({inputs:{x:g},backend:r,attrs:{shape:b}}),r.disposeIntermediateTensorInfo(w)}return r.disposeIntermediateTensorInfo(o),p!=null&&r.disposeIntermediateTensorInfo(d),g}var PZ={kernelName:Gi,backendName:"cpu",kernelFunc:nc};function zZ(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=T.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of p[m]){let{permutationIndices:y,expandDims:A}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=dn({inputs:{x:s[g]},backend:r,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let w=0;w<A.length;++w)b.splice(A[w],0,1);v.arraysEqual(x.shape,b)||(x=Tt({inputs:{x},backend:r,attrs:{shape:b}}),f.push(x)),d===null?d=x:(d=Um({inputs:{a:x,b:d},backend:r}),f.push(d))}m<h-1&&(u[m]>=0&&(d=nc({inputs:{x:d},backend:r,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&r.disposeIntermediateTensorInfo(m);return d}var OZ={kernelName:yh,backendName:"cpu",kernelFunc:zZ};function DZ(e){let{inputs:t,backend:r}=e,{dy:n,y:a}=t;Se([n,a],"eluGrad");let s=new Float32Array(v.sizeFromShape(a.shape)),i=r.data.get(a.dataId).values,o=r.data.get(n.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=1?s[l]=o[l]:s[l]=o[l]*(u+1)}return r.makeTensorInfo(a.shape,"float32",s)}var LZ={kernelName:Mf,backendName:"cpu",kernelFunc:DZ},BZ=T.ERF_P,WZ=T.ERF_A1,VZ=T.ERF_A2,GZ=T.ERF_A3,UZ=T.ERF_A4,jZ=T.ERF_A5,HZ=yt(od,e=>{let t=Math.sign(e),r=Math.abs(e),n=1/(1+BZ*r);return t*(1-((((jZ*n+UZ)*n+GZ)*n+VZ)*n+WZ)*n*Math.exp(-r*r))}),qZ={kernelName:od,backendName:"cpu",kernelFunc:HZ};function lf(e){let{inputs:t,backend:r,attrs:n}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Tt({inputs:{x:a},backend:r,attrs:{shape:o}})}var KZ={kernelName:al,backendName:"cpu",kernelFunc:lf},XZ=er((e,t)=>e/t),ZA=br(ci,XZ),Cy={kernelName:ci,backendName:"cpu",kernelFunc:ZA};function sI(e,t,r){let n=e.shape,a=n[0],s=n[1],i=r.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],p=v.sizeFromShape(u),h=v.getTypedArrayFromDType("float32",p),d=v.getTypedArrayFromDType("float32",p);for(let g=0;g<a;g++){let y=jo({inputs:{x:o},backend:r,attrs:{begin:[g,0],size:[1,s]}}),A=jo({inputs:{x:l},backend:r,attrs:{begin:[g,0],size:[1,s]}}),x=gn({inputs:{real:y,imag:A},backend:r}),{real:b,imag:w}=ZZ(x,t,r),I=T.mergeRealAndImagArrays(b,w);for(let C=0;C<s;C++){let E=T.getComplexWithIndex(I,C);h[g*s+C]=E.real,d[g*s+C]=E.imag}r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(x)}let c=r.makeTensorInfo(u,"float32",h),f=r.makeTensorInfo(u,"float32",d),m=gn({inputs:{real:c,imag:f},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),m}function ZZ(e,t,r){let n=v.sizeFromShape(e.shape),a=r.data.get(e.dataId),s=r.data.get(a.complexTensorInfos.real.dataId).values,i=r.data.get(a.complexTensorInfos.imag.dataId).values;if(YZ(n)){let o=Ty(s,i,n,t,r),l=[e.shape[0],e.shape[1]];if(t){let u=r.makeTensorInfo(l,"float32",o.real),p=r.makeTensorInfo(l,"float32",o.imag),h=r.makeTensorInfo([],"float32",v.createScalarValue(n,"float32")),d=Ba({inputs:{x:h},backend:r}),c=Cy.kernelFunc({inputs:{a:u,b:h},backend:r}),f=Cy.kernelFunc({inputs:{a:p,b:d},backend:r}),m=r.data.get(c.dataId).values,g=r.data.get(f.dataId).values;return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=JZ(o,n,t);return T.splitRealAndImagArrays(l)}}function YZ(e){return(e&e-1)===0}function Ty(e,t,r,n,a){if(r===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=r/2,o=T.complexWithEvenIndex(s),l=o.real,u=o.imag,p=[l.length],h=a.makeTensorInfo(p,"float32",l),d=a.makeTensorInfo(p,"float32",u),c=gn({inputs:{real:h,imag:d},backend:a}),f=T.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],A=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),b=gn({inputs:{real:A,imag:x},backend:a}),w=Ty(l,u,i,n,a),I=w.real,C=w.imag,E=[I.length],R=a.makeTensorInfo(E,"float32",I),F=a.makeTensorInfo(E,"float32",C),$=gn({inputs:{real:R,imag:F},backend:a}),S=Ty(m,g,i,n,a),O=S.real,z=S.imag,j=[O.length],K=a.makeTensorInfo(j,"float32",O),D=a.makeTensorInfo(j,"float32",z),Z=gn({inputs:{real:K,imag:D},backend:a}),V=T.exponents(r,n),re=[V.real.length],Q=a.makeTensorInfo(re,"float32",V.real),ie=a.makeTensorInfo(re,"float32",V.imag),X=gn({inputs:{real:Q,imag:ie},backend:a}),ae=Um({inputs:{a:X,b:Z},backend:a}),de=ju({inputs:{a:$,b:ae},backend:a}),be=KA({inputs:{a:$,b:ae},backend:a}),ve=Uo({inputs:{input:de},backend:a}),Ee=Uo({inputs:{input:be},backend:a}),$e=Hu({inputs:{input:de},backend:a}),De=Hu({inputs:{input:be},backend:a}),Ve=qu({inputs:[ve,Ee],backend:a,attrs:{axis:0}}),Xe=qu({inputs:[$e,De],backend:a,attrs:{axis:0}}),ot=a.data.get(Ve.dataId).values,ht=a.data.get(Xe.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(Z),a.disposeIntermediateTensorInfo(Q),a.disposeIntermediateTensorInfo(ie),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(de),a.disposeIntermediateTensorInfo(be),a.disposeIntermediateTensorInfo(ve),a.disposeIntermediateTensorInfo($e),a.disposeIntermediateTensorInfo(Ee),a.disposeIntermediateTensorInfo(De),a.disposeIntermediateTensorInfo(Ve),a.disposeIntermediateTensorInfo(Xe),{real:ot,imag:ht}}function JZ(e,t,r){let n=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(a*o,t,r),u=T.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}r&&(s/=t,i/=t),T.assignToTypedArray(n,s,i,a)}return n}function QZ(e){let{inputs:t,backend:r}=e,{input:n}=t,a=v.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=a/s,o=Tt({inputs:{x:n},backend:r,attrs:{shape:[i,s]}}),l=sI(o,!1,r),u=Tt({inputs:{x:l},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),u}var eY={kernelName:Ff,backendName:"cpu",kernelFunc:QZ};function YA(e){let{backend:t,attrs:r}=e,{shape:n,value:a,dtype:s}=r,i=s||v.inferDtype(a),o=v.getArrayFromDType(i,v.sizeFromShape(n));return rY(o,a,i),t.makeTensorInfo(n,i,o)}var tY={kernelName:ld,backendName:"cpu",kernelFunc:YA};function rY(e,t,r){e.fill(t)}var nY={kernelName:il,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,a=r,s=v.getTypedArrayFromDType(n.dtype,v.sizeFromShape(n.shape)),[i,o,l,u]=n.shape,p=a.data.get(n.dataId).values;for(let h=0;h<i;h++){let d=h*l*o*u;for(let c=0;c<o;c++){let f=c*(l*u);for(let m=0;m<l;m++){let g=m*u;for(let y=0;y<u;y++){let A=Math.round(l-m-1),x=d+f+g+y,b=p[x];if(A>=0&&A<l){let w=A*u,I=d+f+w+y;b=p[I]}s[x]=b}}}}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},aY=er((e,t)=>Math.floor(e/t)),sY=br(yi,aY,null,"int32"),iY={kernelName:yi,backendName:"cpu",kernelFunc:sY};function oY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=nI({inputs:{x:a,filter:s},backend:r,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let g=m;if(p==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=Tt({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}});m=ju({inputs:{a:m,b:y},backend:r}),r.disposeIntermediateTensorInfo(y)}else m=ju({inputs:{a:m,b:i},backend:r});r.disposeIntermediateTensorInfo(g)}if(c){let g=m;if(p==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=Tt({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}});m=of(r,m,c,y,f),r.disposeIntermediateTensorInfo(y)}else m=of(r,m,c,o,f);r.disposeIntermediateTensorInfo(g)}return m}var lY={kernelName:Ws,backendName:"cpu",kernelFunc:oY};function uY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=aI({inputs:{x:a,filter:s},backend:r,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let g=m;m=ju({inputs:{a:m,b:i},backend:r}),r.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=of(r,m,c,o,f),r.disposeIntermediateTensorInfo(g)}return m}var dY={kernelName:Vs,backendName:"cpu",kernelFunc:uY};function pY(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=v.sizeFromShape(n.shape),i=a.shape,o=i[i.length-1],[l,u,p,h]=T.prepareAndValidate(n,a);if(u===0)return r.makeTensorInfo(l,n.dtype,[]);let d=r.data.get(a.dataId).values,c=r.bufferSync(n),f=I9(d,c,n.dtype,u,o,p,h,n.shape,s);return r.makeTensorInfo(l,n.dtype,f.values)}var hY={kernelName:ll,backendName:"cpu",kernelFunc:pY};function cY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n;Se([a,s],"gatherV2");let l=v.parseAxisParam(i,a.shape)[0],u=r.data.get(s.dataId).values,p=a.shape[l];for(let b=0;b<u.length;++b){let w=u[b];v.assert(w<=p-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${p-1}]`)}let h=o;o==null&&(h=0);let d=v.sizeFromShape(s.shape),c=T.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=Tt({inputs:{x:a},backend:r,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Tt({inputs:{x:s},backend:r,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=r.bufferSync(m),A=r.bufferSync(f),x=S9(A,y,g);return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.makeTensorInfo(c.outputShape,x.dtype,x.values)}var fY={kernelName:ol,backendName:"cpu",kernelFunc:cY};function mY(e){let{inputs:t,backend:r}=e,{input:n}=t,a=v.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=a/s,o=Tt({inputs:{x:n},backend:r,attrs:{shape:[i,s]}}),l=sI(o,!0,r),u=Tt({inputs:{x:l},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),u}var gY={kernelName:_f,backendName:"cpu",kernelFunc:mY},yY=yt(ud,e=>Number.isFinite(e)?1:0,"bool"),AY={kernelName:ud,backendName:"cpu",kernelFunc:yY},xY=yt(dd,e=>Math.abs(e)===1/0?1:0,"bool"),bY={kernelName:dd,backendName:"cpu",kernelFunc:xY},vY=yt(pd,e=>Number.isNaN(e)?1:0,"bool"),wY={kernelName:pd,backendName:"cpu",kernelFunc:vY};function kY(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=R9(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}var IY={kernelName:Pf,backendName:"cpu",kernelFunc:kY},SY=yt(hd,e=>Math.log1p(e)),CY={kernelName:hd,backendName:"cpu",kernelFunc:SY},TY=er((e,t)=>e&&t),NY=br(hl,TY,null,"bool"),EY={kernelName:hl,backendName:"cpu",kernelFunc:NY},RY=yt(cl,e=>e?0:1,"bool"),$Y={kernelName:cl,backendName:"cpu",kernelFunc:RY},MY=er((e,t)=>e||t),FY=br(cd,MY,null,"bool"),_Y={kernelName:cd,backendName:"cpu",kernelFunc:FY};function PY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;Se(a,"LRN");let u=a.shape[3],p=u-1,h=r.data.get(a.dataId).values,d=v.sizeFromShape(a.shape),c=new Float32Array(d);function f(m){let g=m%u,y=m-g+Math.max(0,g-s),A=m-g+Math.min(g+s,p),x=0;for(;y<=A;y++){let b=h[y];x+=b*b}return x}for(let m=0;m<d;m++){let g=f(m),y=h[m]*Math.pow(i+o*g,-l);c[m]=y}return r.makeTensorInfo(a.shape,a.dtype,c)}var zY={kernelName:xh,backendName:"cpu",kernelFunc:PY};function OY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=n;Se(i,"LRNGrad");let h=v.sizeFromShape(i.shape),d=i.shape[3],c=r.data.get(i.dataId).values,f=r.data.get(a.dataId).values,m=r.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let A=0;A<y;A++){let x=A%d,b=A-x+Math.max(0,x-o),w=A-x+Math.min(d,x+o+1),I=0;for(let C=b;C<w;C++)I+=Math.pow(f[C],2);I=u*I+l;for(let C=b;C<w;C++){let E=-2*u*p*f[C]*m[A]/I;A===C&&(E+=Math.pow(I,-p)),E*=c[A],g[C]+=E}}return r.makeTensorInfo(i.shape,a.dtype,g)}var DY={kernelName:zf,backendName:"cpu",kernelFunc:OY};function iI(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=n,o=r,l=a.shape,u=l.length,p=v.parseAxisParam(s,l),h=p,d=T.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(d!=null){let b=new Array(u);for(let w=0;w<b.length;w++)b[w]=l[d[w]];c=VA(c,l,a.dtype,d,b),h=T.getInnerMostAxes(h.length,u),l=b}Se(a,"max"),T.assertAxesAreInnerMostDims("max",h,u);let[f,m]=T.computeOutAndReduceShapes(l,h),g=v.sizeFromShape(m),y=M9(c,g,f,a.dtype),A=o.write(y,f,a.dtype),x=f;return i&&(x=T.expandShapeToKeepDim(f,p)),{dataId:A,shape:x,dtype:a.dtype}}var LY={kernelName:ki,backendName:"cpu",kernelFunc:iI};function BY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;Se(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l),h;if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))h=Ba({inputs:{x:a},backend:r});else{let d=r.data.get(a.dataId).values,c=v.computeStrides(a.shape),f=XA(d,a.shape,a.dtype,c,p,"max");h=r.makeTensorInfo(p.outShape,a.dtype,f.values)}return h}var WY={kernelName:Si,backendName:"cpu",kernelFunc:BY};function VY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;Se(a,"maxPool3d");let p=T.computePool3DInfo(a.shape,s,i,1,o,l,u),h=r.data.get(a.dataId).values,d=rI(h,a.shape,a.dtype,v.computeStrides(a.shape),p,"max");return r.makeTensorInfo(d.shape,"float32",d.values)}var GY={kernelName:bh,backendName:"cpu",kernelFunc:VY};function UY(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;Se([a,s],"maxPool3DGrad");let p=T.computePool3DInfo(s.shape,i,o,1,l,u),h=r.bufferSync(s),d=$X(h,p),c=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,A=p.dilationWidth,x=p.effectiveFilterDepth,b=p.effectiveFilterHeight,w=p.effectiveFilterWidth,I=x-1-p.padInfo.front,C=w-1-p.padInfo.left,E=b-1-p.padInfo.top,R=Oe(s.shape,"float32"),F=r.bufferSync(a);for(let $=0;$<p.batchSize;++$)for(let S=0;S<p.inChannels;++S)for(let O=0;O<p.inDepth;++O)for(let z=0;z<p.inHeight;++z)for(let j=0;j<p.inWidth;++j){let K=O-I,D=z-E,Z=j-C,V=0;for(let re=0;re<x;re+=g){let Q=(K+re)/c;if(!(Q<0||Q>=p.outDepth||Math.floor(Q)!==Q))for(let ie=0;ie<b;ie+=y){let X=(D+ie)/f;if(!(X<0||X>=p.outHeight||Math.floor(X)!==X))for(let ae=0;ae<w;ae+=A){let de=(Z+ae)/m;if(de<0||de>=p.outWidth||Math.floor(de)!==de)continue;let be=x*b*w-1-d.get($,Q,X,de,S),ve=re*b*w+ie*w+ae,Ee=be===ve?1:0;Ee!==0&&(V+=F.get($,Q,X,de,S)*Ee)}}}R.set(V,$,O,z,j,S)}return r.makeTensorInfo(R.shape,R.dtype,R.values)}var jY={kernelName:Df,backendName:"cpu",kernelFunc:UY};function HY(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t,o=s;Se([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=n,d=T.computePool2DInfo(o.shape,l,u,1,p,h),c=r.data.get(o.dataId).values,f=Oe(d.outShape,o.dtype,tI(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,A=d.dilationWidth,x=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,I=x-1-d.padInfo.top,C=Oe(o.shape,"float32"),E=r.data.get(a.dataId).values,R=Oe(a.shape,"float32",E);for(let F=0;F<d.batchSize;++F)for(let $=0;$<d.inChannels;++$)for(let S=0;S<d.inHeight;++S)for(let O=0;O<d.inWidth;++O){let z=S-I,j=O-w,K=0;for(let D=0;D<x;D+=y){let Z=(z+D)/m;if(!(Z<0||Z>=d.outHeight||Math.floor(Z)!==Z))for(let V=0;V<b;V+=A){let re=(j+V)/g;if(re<0||re>=d.outWidth||Math.floor(re)!==re)continue;let Q=x*b-1-f.get(F,Z,re,$),ie=D*b+V,X=Q===ie?1:0;X!==0&&(K+=R.get(F,Z,re,$)*X)}}C.set(K,F,S,O,$)}return r.makeTensorInfo(C.shape,C.dtype,C.values)}var qY={kernelName:Of,backendName:"cpu",kernelFunc:HY};function KY(e,t,r,n,a){let s=v.computeStrides(t),i=XA(e,t,r,s,a,"max"),o=tI(e,t,r,a,!0,n);return[i.values,o.values]}var XY={kernelName:Lf,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=r;Se(n,"MaxPoolWithArgmax");let u=l.data.get(n.dataId).values,p=T.computePool2DInfo(n.shape,a,s,[1,1],i),[h,d]=KY(u,n.shape,n.dtype,o,p),c=l.write(h,p.outShape,n.dtype),f=l.write(d,p.outShape,n.dtype);return[{dataId:c,shape:p.outShape,dtype:n.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function ZY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=v.parseAxisParam(s,a.shape),l=T.computeOutAndReduceShapes(a.shape,o)[1],u=v.sizeFromShape(l),p=[],h=r.makeTensorInfo([],"float32",new Float32Array([u]));p.push(h);let d=Js({inputs:{x:a},backend:r,attrs:{dtype:"float32"}});p.push(d);let c=ZA({inputs:{a:d,b:h},backend:r});p.push(c);let f=nc({inputs:{x:c},backend:r,attrs:{axis:s,keepDims:i}});return p.forEach(m=>r.disposeIntermediateTensorInfo(m)),f}var YY={kernelName:Ci,backendName:"cpu",kernelFunc:ZY};function JY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;Se(a,"min");let o=v.parseAxisParam(s,a.shape),l=o,u=T.getAxesPermutation(l,a.shape.length),p=a;u!=null&&(p=dn({inputs:{x:a},backend:r,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",l,p.shape.length);let[h,d]=T.computeOutAndReduceShapes(p.shape,l),c=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),p.dtype),m=r.data.get(p.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let w=m[A+b];(Number.isNaN(w)||w<x)&&(x=w)}f[y]=x}u!=null&&r.disposeIntermediateTensorInfo(p);let g=r.makeTensorInfo(h,p.dtype,f);if(i){let y=T.expandShapeToKeepDim(h,o),A=Tt({inputs:{x:g},backend:r,attrs:{shape:y}});return r.disposeIntermediateTensorInfo(g),A}return g}var QY={kernelName:Ti,backendName:"cpu",kernelFunc:JY};function eJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,mode:i}=n;Se(a,"mirrorPad");let o=s.map((A,x)=>A[0]+a.shape[x]+A[1]),l=s.map(A=>A[0]),u=s.map((A,x)=>A[0]+a.shape[x]),p=i==="reflect"?0:1,h=r.data.get(a.dataId).values,d=a.shape.length,c=v.computeStrides(a.shape),f=v.sizeFromShape(o),m=o.length,g=v.computeStrides(o),y=v.getTypedArrayFromDType(a.dtype,f);for(let A=0;A<f;A++){let x=v.indexToLoc(A,m,g);for(let w=0;w<m;w++)x[w]<l[w]?x[w]=l[w]*2-x[w]-p:x[w]>=u[w]&&(x[w]=(u[w]-1)*2-x[w]+p);x=x.map((w,I)=>w-l[I]);let b=v.locToIndex(x,d,c);y[A]=h[b]}return{dataId:r.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var tJ={kernelName:Ei,backendName:"cpu",kernelFunc:eJ},rJ=er((e,t)=>{let r=e%t;return e<0&&t<0||e>=0&&t>=0?r:(r+t)%t}),nJ=br(fd,rJ),aJ={kernelName:fd,backendName:"cpu",kernelFunc:nJ},sJ=Xo(yf());function oI(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=v.parseAxisParam([o],a.shape),u=iI({inputs:{x:a},backend:r,attrs:{reductionIndices:l,keepDims:!1}}),p=T.expandShapeToKeepDim(u.shape,l),h=Tt({inputs:{x:u},backend:r,attrs:{shape:p}}),d=KA({inputs:{a,b:h},backend:r}),c=v9({inputs:{x:d},backend:r}),f=nc({inputs:{x:c},backend:r,attrs:{axis:l,keepDims:!1}}),m=Tt({inputs:{x:f},backend:r,attrs:{shape:p}}),g=ZA({inputs:{a:c,b:m},backend:r});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}var iJ={kernelName:Ui,backendName:"cpu",kernelFunc:oI};function oJ(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n;Se(a,"multinomial");let l=o?a:oI({inputs:{logits:a},backend:r,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],h=r.data.get(l.dataId).values,d=[u,s],c=v.makeZerosTypedArray(v.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let m=f*p,g=new Float32Array(p-1);g[0]=h[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[m+x];let y=sJ.alea(i.toString()),A=f*s;for(let x=0;x<s;++x){let b=y();c[A+x]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){c[A+x]=w;break}}}return o||r.disposeIntermediateTensorInfo(l),r.makeTensorInfo(d,"int32",c)}var lJ={kernelName:Bf,backendName:"cpu",kernelFunc:oJ},uJ=ea.nonMaxSuppressionV3Impl;function dJ(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n;Se(a,"NonMaxSuppression");let u=r.data.get(a.dataId).values,p=r.data.get(s.dataId).values,{selectedIndices:h}=uJ(u,p,i,o,l);return r.makeTensorInfo([h.length],"int32",new Int32Array(h))}var pJ={kernelName:gl,backendName:"cpu",kernelFunc:dJ},hJ=ea.nonMaxSuppressionV4Impl;function cJ(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n;Se(a,"NonMaxSuppressionPadded");let p=r.data.get(a.dataId).values,h=r.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=hJ(p,h,i,o,l,u);return[r.makeTensorInfo([d.length],"int32",new Int32Array(d)),r.makeTensorInfo([],"int32",new Int32Array([c]))]}var fJ={kernelName:md,backendName:"cpu",kernelFunc:cJ},mJ=ea.nonMaxSuppressionV5Impl;function gJ(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n;Se(a,"NonMaxSuppressionWithScore");let p=r.data.get(a.dataId).values,h=r.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=mJ(p,h,d,c,f,m);return[r.makeTensorInfo([g.length],"int32",new Int32Array(g)),r.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var yJ={kernelName:yl,backendName:"cpu",kernelFunc:gJ};function AJ(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=n;Se(a,"oneHot");let l=v.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let p=r.data.get(a.dataId).values;for(let h=0;h<l;++h)p[h]>=0&&p[h]<s&&(u[h*s+p[h]]=i);return r.makeTensorInfo([...a.shape,s],"int32",u)}var xJ={kernelName:xl,backendName:"cpu",kernelFunc:AJ};function uf(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let a=Uo({inputs:{input:n},backend:r}),s=uf({inputs:{x:a},backend:r}),i=Hu({inputs:{input:n},backend:r}),o=uf({inputs:{x:i},backend:r}),l=gn({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}else return YA({backend:r,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var bJ={kernelName:Pl,backendName:"cpu",kernelFunc:uf};function lI(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let a=Uo({inputs:{input:n},backend:r}),s=lI({inputs:{x:a},backend:r}),i=Hu({inputs:{input:n},backend:r}),o=uf({inputs:{x:i},backend:r}),l=gn({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}else return YA({backend:r,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var vJ={kernelName:Al,backendName:"cpu",kernelFunc:lI};function uI(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(t.length===1)return lf({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{v.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(p=>{let h=lf({inputs:{input:p},backend:r,attrs:{dim:a}});return o.push(h),h}),u=qu({inputs:l,backend:r,attrs:{axis:a}});return o.forEach(p=>r.disposeIntermediateTensorInfo(p)),u}var wJ={kernelName:bl,backendName:"cpu",kernelFunc:uI};function kJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;Se(a,"pad");let o=s.map((y,A)=>y[0]+a.shape[A]+y[1]),l=s.map(y=>y[0]),u=r.data.get(a.dataId).values,p=v.sizeFromShape(a.shape),h=a.shape.length,d=v.computeStrides(a.shape),c=v.sizeFromShape(o),f=o.length,m=v.computeStrides(o),g=v.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<p;y++){let A=v.indexToLoc(y,h,d).map((b,w)=>b+l[w]),x=v.locToIndex(A,f,m);g[x]=u[y]}return{dataId:r.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var dI={kernelName:$i,backendName:"cpu",kernelFunc:kJ},IJ=er((e,t)=>Math.pow(e,t)),SJ=br(Mi,IJ),CJ={kernelName:Mi,backendName:"cpu",kernelFunc:SJ};function TJ(e){let{backend:t,attrs:r}=e,{start:n,stop:a,dtype:s,step:i}=r,o=GA(n,a,i,s);return t.makeTensorInfo([o.length],s,o)}var NJ={kernelName:gd,backendName:"cpu",kernelFunc:TJ},EJ=yt(yd,e=>1/e),RJ={kernelName:yd,backendName:"cpu",kernelFunc:EJ};function $J(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;Se(a,"resizeBilinear");let l=v.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(v.sizeFromShape([h,u,p,f])),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],A=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=0,b=y[0]/A[0],w=y[1]/A[1];for(let I=0;I<h;I++)for(let C=0;C<u;C++){let E;i?E=b*(C+.5)-.5:E=b*C;let R=Math.max(0,Math.floor(E)),F=E-R,$=Math.min(d-1,Math.ceil(E)),S=I*l[0]+R*l[1],O=I*l[0]+$*l[1];for(let z=0;z<p;z++){let j;i?j=w*(z+.5)-.5:j=w*z;let K=Math.max(0,Math.floor(j)),D=j-K,Z=Math.min(c-1,Math.ceil(j)),V=S+K*l[2],re=O+K*l[2],Q=S+Z*l[2],ie=O+Z*l[2];for(let X=0;X<f;X++){let ae=m[V+X],de=m[re+X],be=m[Q+X],ve=m[ie+X],Ee=ae+(be-ae)*D,$e=de+(ve-de)*D,De=Ee+($e-Ee)*F;g[x++]=De}}}return r.makeTensorInfo([h,u,p,f],"float32",g)}var MJ={kernelName:Oi,backendName:"cpu",kernelFunc:$J};function FJ(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;Se([s,a],"resizeBilinearGrad");let o=v.computeStrides(a.shape),[l,u,p,h]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*p*h),m=[i&&d>1?u-1:u,i&&c>1?p-1:p],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],A=m[1]/g[1],x=r.data.get(s.dataId).values,b=0;for(let w=0;w<l;w++){let I=w*o[0];for(let C=0;C<d;C++){let E=C*y,R=Math.floor(E),F=Math.min(Math.ceil(E),u-1),$=I+R*o[1],S=I+F*o[1],O=E-R,z=1-O;for(let j=0;j<c;j++){let K=j*A,D=Math.floor(K),Z=Math.min(Math.ceil(K),p-1),V=K-D,re=1-V,Q=$+D*o[2],ie=$+Z*o[2],X=S+D*o[2],ae=S+Z*o[2],de=z*re,be=z*V,ve=O*re,Ee=O*V;for(let $e=0;$e<h;$e++){let De=x[b++];f[Q+$e]+=De*de,f[ie+$e]+=De*be,f[X+$e]+=De*ve,f[ae+$e]+=De*Ee}}}}return r.makeTensorInfo([l,p,u,h],"float32",f)}var _J={kernelName:Vf,backendName:"cpu",kernelFunc:FJ};function PJ(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;Se(a,"resizeNearestNeighbor");let l=v.computeStrides(a.shape),[u,p]=o,[h,d,c,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(h*u*p*f),y=[s&&u>1?d-1:d,s&&p>1?c-1:c],A=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=y[0]/A[0],b=y[1]/A[1],w=0;for(let I=0;I<h;I++){let C=I*l[0];for(let E=0;E<u;E++){let R=i?x*(E+.5):x*E,F=Math.min(d-1,s?Math.round(R):Math.floor(R));i&&(F=Math.max(0,F));let $=C+F*l[1];for(let S=0;S<p;S++){let O=i?b*(S+.5):b*S,z=Math.min(c-1,s?Math.round(O):Math.floor(O));i&&(z=Math.max(0,z));let j=$+z*l[2];for(let K=0;K<f;K++){let D=m[j+K];g[w++]=D}}}}return r.makeTensorInfo([h,u,p,f],a.dtype,g)}var zJ={kernelName:zi,backendName:"cpu",kernelFunc:PJ};function OJ(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;Se([s,a],"resizeNearestNeighborGrad");let o=v.computeStrides(a.shape),l=v.computeStrides(s.shape),[u,p,h,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*p*h*d),g=r.data.get(s.dataId).values,y=[i&&c>1?p-1:p,i&&f>1?h-1:h],A=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/A[0],b=y[1]/A[1],w=1/x,I=1/b,C=Math.ceil(w)*2+2,E=Math.ceil(I)*2+2;for(let R=0;R<u;R++){let F=R*o[0];for(let $=0;$<p;$++){let S=F+$*o[1],O=Math.floor($*w),z=Math.floor(O-C/2);for(let j=0;j<h;j++){let K=S+j*o[2],D=Math.floor(j*I),Z=Math.floor(D-E/2);for(let V=0;V<d;V++){let re=0;for(let Q=0;Q<C;Q++){let ie=Q+z;if(ie<0||ie>=c)continue;let X=F+ie*l[1],ae=ie*x,de=Math.min(p-1,i?Math.round(ae):Math.floor(ae));if($===de)for(let be=0;be<E;be++){let ve=be+Z;if(ve<0||ve>=f)continue;let Ee=X+ve*l[2],$e=ve*b,De=Math.min(h-1,i?Math.round($e):Math.floor($e));j===De&&(re+=g[Ee+V])}}m[K+V]=re}}}}return r.makeTensorInfo(a.shape,a.dtype,m)}var DJ={kernelName:Wf,backendName:"cpu",kernelFunc:OJ};function LJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n;Se(a,"reverse");let i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return Ba({inputs:{x:a},backend:r});let l=new or(a.shape,a.dtype),u=r.bufferSync(a);for(let p=0;p<l.size;p++){let h=l.indexToLoc(p),d=h.slice();o.forEach(c=>d[c]=a.shape[c]-1-d[c]),l.set(u.get(...d),...h)}return r.makeTensorInfo(l.shape,l.dtype,l.values)}var BJ={kernelName:wl,backendName:"cpu",kernelFunc:LJ},WJ={kernelName:zl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=r,l=v.getTypedArrayFromDType(n.dtype,v.sizeFromShape(n.shape)),[u,p,h,d]=n.shape,[c,f]=T.getImageCenter(i,p,h),m=255,g=Math.sin(a),y=Math.cos(a),A=o.data.get(n.dataId).values;for(let x=0;x<u;x++){let b=x*h*p*d;for(let w=0;w<p;w++){let I=w*(h*d);for(let C=0;C<h;C++){let E=C*d;for(let R=0;R<d;R++){let F=[u,w,C,R],$=F[2],S=F[1],O=($-c)*y-(S-f)*g,z=($-c)*g+(S-f)*y;O=Math.round(O+c),z=Math.round(z+f);let j=s;if(typeof s!="number"&&(R===3?j=m:j=s[R]),O>=0&&O<h&&z>=0&&z<p){let D=z*(h*d),Z=O*d,V=b+D+Z+R;j=A[V]}let K=b+I+E+R;l[K]=j}}}}return{dataId:o.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},VJ=yt(kl,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),GJ={kernelName:kl,backendName:"cpu",kernelFunc:VJ};function UJ(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=T.calculateShapes(s,a,i),d=!0,c=r.bufferSync(a),f=r.bufferSync(s),m=Nu(c,f,i,h,u,l,o,p,0,d);return r.makeTensorInfo(i,m.dtype,m.values)}var jJ={kernelName:Il,backendName:"cpu",kernelFunc:UJ};function HJ(e,t){let r=0,n=e.length,a=0;for(;r<n;)a=Math.floor((r+n)/2),e[a]<t?r=a+1:n=a;return n}function qJ(e,t){let r=0,n=e.length,a=0;for(;r<n;)a=Math.floor((r+n)/2),e[a]<=t?r=a+1:n=a;return n}function KJ(e,t,r,n,a,s){let i=v.getArrayFromDType("int32",r*a);for(let o=0;o<r;++o){let l=e.slice(o*n,(o+1)*n),u=o*a;for(let p=0;p<a;++p)i[u+p]=s==="left"?HJ(l,t[p+u]):qJ(l,t[p+u])}return i}function XJ(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=KJ(o,l,a.shape[0],a.shape[1],s.shape[1],i);return r.makeTensorInfo(s.shape,"int32",u)}var ZJ={kernelName:Gf,backendName:"cpu",kernelFunc:XJ};function YJ(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t;Se([n,a,s],"select");let i=n.shape.length,o=r.data.get(n.dataId).values,l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,p=Rr(a.dtype,s.dtype),h=v.makeZerosTypedArray(v.sizeFromShape(a.shape),p),d=0,c=i===0||i>1||a.shape.length===1?1:v.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<c;m++)o[f]===1?h[d++]=l[f]:h[d++]=u[f];return r.makeTensorInfo(a.shape,p,h)}var JJ={kernelName:Sl,backendName:"cpu",kernelFunc:YJ},QJ=T.SELU_SCALEALPHA,eQ=T.SELU_SCALE,tQ=yt(Ad,e=>e>=0?eQ*e:QJ*(Math.exp(e)-1)),rQ={kernelName:Ad,backendName:"cpu",kernelFunc:tQ},nQ=yt(xd,e=>e<0?-1:e>0?1:0),aQ={kernelName:xd,backendName:"cpu",kernelFunc:nQ},sQ=yt(Bi,e=>Math.sin(e)),iQ={kernelName:Bi,backendName:"cpu",kernelFunc:sQ},oQ=yt(Tl,e=>Math.sinh(e)),lQ={kernelName:Tl,backendName:"cpu",kernelFunc:oQ},uQ=11920928955078125e-23,b7=Math.log(uQ)+2,dQ=yt(bd,e=>{let t=e>-b7,r=e<b7,n=Math.exp(e),a;return r?a=n:t?a=e:a=Math.log(1+n),a}),pQ={kernelName:bd,backendName:"cpu",kernelFunc:dQ};function hQ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;Se([a],"spaceToBatchND");let o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=dI.kernelFunc({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(p.length,s.length,!1),d=T.getReshapedPermuted(u.shape,s,o,!1),c=Tt({inputs:{x:u},backend:r,attrs:{shape:p}}),f=dn({inputs:{x:c},backend:r,attrs:{perm:h}}),m=Tt({inputs:{x:f},backend:r,attrs:{shape:d}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),m}var cQ={kernelName:Nl,backendName:"cpu",kernelFunc:hQ};function fQ(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.data.get(n.dataId).values,l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,p=r.data.get(i.dataId).values[0],[h,d,c,f,m]=B9(o,n.shape,n.dtype,l,a.dtype,u,p);return[r.makeTensorInfo(d,n.dtype,h),r.makeTensorInfo([d[0]],a.dtype,c),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var mQ={kernelName:wh,backendName:"cpu",kernelFunc:fQ};function gQ(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.data.get(a.dataId).values),o=r.data.get(n.dataId).values,l=Array.from(r.data.get(s.dataId).values),[u,p,h]=W9(o,n.shape,n.dtype,i,l);return[r.makeTensorInfo(p,n.dtype,u),r.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var yQ={kernelName:vd,backendName:"cpu",kernelFunc:gQ};function AQ(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,p]=UA(i,n.shape,n.dtype,o,l,!0);return r.makeTensorInfo(p,n.dtype,u)}var xQ={kernelName:kh,backendName:"cpu",kernelFunc:AQ};function bQ(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,p]=UA(i,n.shape,n.dtype,o,l);return r.makeTensorInfo(p,n.dtype,u)}var vQ={kernelName:Ih,backendName:"cpu",kernelFunc:bQ};function wQ(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=T.calculateShapes(s,a,o),c=!1,f=r.bufferSync(a),m;switch(s.dtype){case"bool":{let g=r.bufferSync(s),y=Boolean(r.data.get(i.dataId).values[0]);m=Nu(f,g,o,d,p,u,l,h,y,c);break}case"float32":{let g=r.bufferSync(s),y=r.data.get(i.dataId).values[0];m=Nu(f,g,o,d,p,u,l,h,y,c);break}case"int32":{let g=r.bufferSync(s),y=r.data.get(i.dataId).values[0];m=Nu(f,g,o,d,p,u,l,h,y,c);break}case"string":{let g=r.bufferSync(s),y=v.decodeString(r.data.get(i.dataId).values[0]);m=Nu(f,g,o,d,p,u,l,h,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return r.makeTensorInfo(o,m.dtype,m.values)}var kQ={kernelName:Sh,backendName:"cpu",kernelFunc:wQ};function IQ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(h=>{let d=[...p];d[o]=h;let c=jo({inputs:{x:a},backend:r,attrs:{begin:u,size:d}});return u[o]+=h,c})}var SQ={kernelName:El,backendName:"cpu",kernelFunc:IQ},CQ={kernelName:wd,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:r}=e,n=t;Se(r,"square");let a=n.data.get(r.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:n.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},TQ=yt(Ki,(e,t)=>{let r=t;return isNaN(e)?NaN:e>0?1:r.alpha}),NQ={kernelName:Ki,backendName:"cpu",kernelFunc:TQ};function EQ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=n;Se(a,"stridedSlice");let{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Lt.sliceInfo(a.shape,s,i,o,l,u,p,h,d),w;if(m)w=Tt({inputs:{x:a},backend:r,attrs:{shape:f}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let I=Lt.computeOutShape(A,x,b),C=jo({inputs:{x:a},backend:r,attrs:{begin:A,size:I}});w=Tt({inputs:{x:C},backend:r,attrs:{shape:f}}),r.disposeIntermediateTensorInfo(C)}else{let I=r.bufferSync(a),C=G9(c,I,b,A);w=r.makeTensorInfo(f,C.dtype,C.values)}return w}var RQ={kernelName:Rl,backendName:"cpu",kernelFunc:EQ};function $Q(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:p,dataSplits:h}=t,d=r.data.get(p.dataId).values,c=r.data.get(h.dataId).values,[f,m]=jA(d,c,a,s,i,o,l,u);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(h.shape,"int32",m)]}var MQ={kernelName:kd,backendName:"cpu",kernelFunc:$Q};function FQ(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.data.get(s.dataId).values,l=r.data.get(i.dataId).values[0],[u,p,h]=HA(o,l,a),d=p.length;return[r.makeTensorInfo([d,2],"int32",u),r.makeTensorInfo([d],"string",p),r.makeTensorInfo([2],"int32",new Int32Array(h))]}var _Q={kernelName:Ch,backendName:"cpu",kernelFunc:FQ};function PQ(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=r.data.get(s.dataId).values,o=qA(i,a);return r.makeTensorInfo(s.shape,"int32",o)}var zQ={kernelName:Th,backendName:"cpu",kernelFunc:PQ},OQ=yt($l,e=>Math.tan(e)),DQ={kernelName:$l,backendName:"cpu",kernelFunc:OQ},LQ=yt(qi,e=>Math.tanh(e)),BQ={kernelName:qi,backendName:"cpu",kernelFunc:LQ};function WQ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;Se(a,"tile");let i=j9(r.bufferSync(a),s);return r.makeTensorInfo(i.shape,i.dtype,i.values)}var VQ={kernelName:ss,backendName:"cpu",kernelFunc:WQ};function GQ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n;Se(a,"topk");let o=r.data.get(a.dataId).values,[l,u]=q9(o,a.shape,a.dtype,s,i);return[r.makeTensorInfo(l.shape,l.dtype,l.values),r.makeTensorInfo(u.shape,u.dtype,u.values)]}var UQ={kernelName:Ml,backendName:"cpu",kernelFunc:GQ};function jQ(e){let{inputs:t,attrs:r,backend:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,h,d,c]=a.shape,[f,m]=u!=null?u:[h,d],g=[p,f,m,c],y=v.computeStrides(a.shape),A=y[0],x=y[1],b=y[2],w=v.getTypedArrayFromDType(a.dtype,v.sizeFromShape(g));w.fill(l);let I=n.data.get(a.dataId).values,C=n.data.get(s.dataId).values;for(let E=0;E<p;++E){let R=s.shape[0]===1?C:C.subarray(E*8,E*8+8);for(let F=0;F<f;++F)for(let $=0;$<m;++$)for(let S=0;S<c;++S){let O,z=R[6]*$+R[7]*F+1;if(z===0)continue;let j=(R[0]*$+R[1]*F+R[2])/z,K=(R[3]*$+R[4]*F+R[5])/z,D=v7(j,d,o),Z=v7(K,h,o);switch(i){case"nearest":O=YQ(I,h,d,A,x,b,E,Z,D,S,l);break;case"bilinear":O=JQ(I,h,d,A,x,b,E,Z,D,S,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let V=E*A+F*x+$*b+S;w[V]=O}return n.makeTensorInfo(g,a.dtype,w)}return{dataId:n.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}var HQ={kernelName:Fl,backendName:"cpu",kernelFunc:jQ};function v7(e,t,r){switch(r){case"reflect":return qQ(e,t);case"wrap":return KQ(e,t);case"nearest":return ZQ(e,t);case"constant":default:return XQ(e,t)}}function qQ(e,t){let r=e;if(r<0)if(t<=1)r=0;else{let n=2*t;r<n&&(r=n*Math.trunc(-r/n)+r),r=r<-t?r+n:-r-1}else if(r>t-1)if(t<=1)r=0;else{let n=2*t;r-=n*Math.trunc(r/n),r>=t&&(r=n-r-1)}return v.clamp(0,r,t-1)}function KQ(e,t){let r=e;if(r<0)if(t<=1)r=0;else{let n=t-1;r+=t*(Math.trunc(-r/n)+1)}else if(r>t-1)if(t<=1)r=0;else{let n=t-1;r-=t*Math.trunc(r/n)}return v.clamp(0,r,t-1)}function XQ(e,t){return e}function ZQ(e,t){return v.clamp(0,e,t-1)}function Bp(e,t,r,n,a,s,i,o,l,u,p){let h=i*n+o*a+l*s+u;return 0<=o&&o<t&&0<=l&&l<r?e[h]:p}function YQ(e,t,r,n,a,s,i,o,l,u,p){let h=Math.round(o),d=Math.round(l);return Bp(e,t,r,n,a,s,i,h,d,u,p)}function JQ(e,t,r,n,a,s,i,o,l,u,p){let h=Math.floor(o),d=Math.floor(l),c=h+1,f=d+1,m=(f-l)*Bp(e,t,r,n,a,s,i,h,d,u,p)+(l-d)*Bp(e,t,r,n,a,s,i,h,f,u,p),g=(f-l)*Bp(e,t,r,n,a,s,i,c,d,u,p)+(l-d)*Bp(e,t,r,n,a,s,i,c,f,u,p);return(c-o)*m+(o-h)*g}function QQ(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;Se(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=K9(i,a,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}var eee={kernelName:Uf,backendName:"cpu",kernelFunc:QQ};function tee(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let d=new Array(o);for(let c=0;c<d.length;c++){p[s]=c;let f=jo({inputs:{x:a},backend:r,attrs:{begin:p,size:h}});d[c]=Tt({inputs:{x:f},backend:r,attrs:{shape:l}}),r.disposeIntermediateTensorInfo(f)}return d}var ree={kernelName:_l,backendName:"cpu",kernelFunc:tee};function nee(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n;Se(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],p=[],h=o-l,d=s;for(let f=0;f<h;++f){let m=lf({inputs:{input:d},backend:r,attrs:{dim:f+1}});d=m,p.push(m)}for(let f=0;f<i;++f){let m=v.createScalarValue(f,"int32"),g=r.makeTensorInfo([],"int32",m),y=x9({inputs:{a:g,b:d},backend:r}),A=Js({inputs:{x:y},backend:r,attrs:{dtype:"float32"}}),x=Um({inputs:{a:A,b:a},backend:r}),b=nc({inputs:{x},backend:r,attrs:{axis:0,keepDims:!1}});u.push(b),p.push(g),p.push(y),p.push(A),p.push(x),p.push(b)}let c=uI({inputs:u,backend:r,attrs:{axis:0}});return p.forEach(f=>r.disposeIntermediateTensorInfo(f)),c}var aee={kernelName:Nh,backendName:"cpu",kernelFunc:nee},see=[sX,Yq,oX,uX,nK,pX,cX,mX,yX,xX,vX,kX,SX,NX,RX,FX,PX,OX,LX,nX,WX,GX,jX,qX,tK,sK,XX,Jq,YX,QX,eZ,rZ,aZ,iZ,lZ,dZ,hZ,fZ,gZ,AZ,bZ,wZ,IZ,SZ,TZ,EZ,$Z,MZ,FZ,_Z,OZ,ZK,LZ,iK,qZ,oK,KZ,uK,eY,tY,nY,pK,iY,lY,dY,hY,fY,cK,mK,Qq,gY,JX,AY,bY,wY,YK,yK,xK,IY,vK,CY,EY,$Y,_Y,zY,DY,LY,kK,WY,GY,jY,qY,XY,YY,QY,SK,tJ,aJ,lJ,TK,EK,pJ,fJ,yJ,$K,xJ,vJ,wJ,dI,CJ,QK,_K,NJ,eK,Cy,RJ,eX,tX,rX,MJ,_J,zJ,DJ,BJ,WJ,GJ,zK,jJ,ZJ,JJ,rQ,DK,aQ,iQ,lQ,LK,iJ,pQ,cQ,mQ,yQ,xQ,vQ,kQ,SQ,VK,CQ,UK,NQ,RQ,MQ,_Q,zQ,KK,PZ,DQ,BQ,VQ,UQ,HQ,MK,eee,ree,aee,bJ];for(let e of see)Jn(e);var pI={};Be(pI,{assertNotComplex:()=>Od,bindCanvasToFramebuffer:()=>gee,bindColorTextureToFramebuffer:()=>N0,bindTextureToProgramUniformSampler:()=>CI,bindTextureUnit:()=>kI,bindVertexBufferToProgramAttribute:()=>Ny,callAndCheck:()=>we,canBeRepresented:()=>hI,createFragmentShader:()=>mI,createFramebuffer:()=>wI,createProgram:()=>gI,createStaticIndexBuffer:()=>xI,createStaticVertexBuffer:()=>AI,createTexture:()=>bI,createVertexShader:()=>fI,getBatchDim:()=>Ho,getExtensionOrThrow:()=>Wp,getFramebufferErrorMessage:()=>TI,getMaxTexturesInShader:()=>$I,getNumChannels:()=>fee,getProgramUniformLocation:()=>SI,getProgramUniformLocationOrThrow:()=>II,getRowsCols:()=>qo,getShapeAs3D:()=>E0,getTextureShapeFromLogicalShape:()=>EI,getWebGLDisjointQueryTimerVersion:()=>MI,getWebGLErrorMessage:()=>cI,getWebGLMaxTextureSize:()=>RI,hasExtension:()=>_n,isCapableOfRenderingToFloatTexture:()=>FI,isDownloadFloatTextureEnabled:()=>_I,isReshapeFree:()=>uh,isWebGLFenceEnabled:()=>PI,isWebGLVersionEnabled:()=>Ry,linkProgram:()=>yI,logShaderSourceAndInfoLog:()=>QA,resetMaxTextureSize:()=>yee,resetMaxTexturesInShader:()=>Aee,unbindColorTextureFromFramebuffer:()=>Ey,unbindTextureUnit:()=>mee,validateFramebuffer:()=>Vp,validateProgram:()=>T0,validateTextureSize:()=>vI});var $o={},Lg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function jm(e,t){$o[e]=t}function ka(e,t){if(!(e in $o)||t!=null){let n=oee(e,t);if(n!==null)$o[e]=n;else return console.log("Could not get context for WebGL version",e),null}let r=$o[e];return r==null||r.isContextLost()?(delete $o[e],ka(e)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),$o[e])}function iee(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function oee(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let r=t==null?iee(e):t;return r.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete $o[e]},!1),e===1?r.getContext("webgl",Lg)||r.getContext("experimental-webgl",Lg):r.getContext("webgl2",Lg)}function ac(e,t){return[t,e]}function lee(e,t){return e*t}function x0(e){let t=v.sizeFromShape(e),r=Math.ceil(t/4);return v.sizeToSquarishShape(r)}function zd(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function uee(e,t){let[r,n]=zd(e,t);return r*n*4}function JA(e,t){let r=e,n,a,s,i,o,l,u,p,h,d;return Y().getNumber("WEBGL_VERSION")===2?(n=r.R32F,a=r.R16F,s=r.RGBA16F,i=r.RGBA32F,o=r.RED,u=4,p=1,h=r.HALF_FLOAT,d=r.FLOAT,l=r.RGBA8):(n=e.RGBA,a=e.RGBA,s=e.RGBA,i=r.RGBA,o=e.RGBA,u=4,p=4,h=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:p,textureTypeHalfFloat:h,textureTypeFloat:d}}function we(e,t){let r=t();return Y().getBool("DEBUG")&&dee(e),r}function dee(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+cI(e,t))}var pee=596e-10,hee=65504;function hI(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||pee<Math.abs(e)&&Math.abs(e)<hee)}function cI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Wp(e,t){return ds(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function fI(e,t){let r=ds(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(we(e,()=>e.shaderSource(r,t)),we(e,()=>e.compileShader(r)),e.getShaderParameter(r,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function mI(e,t){let r=ds(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(we(e,()=>e.shaderSource(r,t)),we(e,()=>e.compileShader(r)),Y().get("ENGINE_COMPILE_ONLY"))return r;if(e.getShaderParameter(r,e.COMPILE_STATUS)===!1)throw QA(t,e.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var cee=/ERROR: [0-9]+:([0-9]+):/g;function QA(e,t){let r=cee.exec(t);if(r==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+r[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((h,d)=>v.rightPad((d+1).toString(),s)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,n-1),u=i.slice(n-1,n),p=i.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function gI(e){return ds(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function yI(e,t){if(we(e,()=>e.linkProgram(t)),!Y().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function T0(e,t){if(we(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function AI(e,t){let r=ds(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),we(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function xI(e,t){let r=ds(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)),we(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function fee(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function bI(e){return ds(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function vI(e,t){let r=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>r||t>r){let n=`[${e}x${t}]`,a=`[${r}x${r}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+a+".")}}function wI(e){return ds(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Ny(e,t,r,n,a,s,i){let o=e.getAttribLocation(t,r);return o===-1?!1:(we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),we(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),we(e,()=>e.enableVertexAttribArray(o)),!0)}function kI(e,t,r){NI(e,r),we(e,()=>e.activeTexture(e.TEXTURE0+r)),we(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function mee(e,t){NI(e,t),we(e,()=>e.activeTexture(e.TEXTURE0+t)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function II(e,t,r){return ds(e,()=>e.getUniformLocation(t,r),'uniform "'+r+'" not present in program.')}function SI(e,t,r){return e.getUniformLocation(t,r)}function CI(e,t,r,n){we(e,()=>kI(e,t,n)),we(e,()=>e.uniform1i(r,n))}function gee(e){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),we(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function N0(e,t,r){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,r)),we(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Ey(e,t){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),we(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Vp(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+TI(e,t))}function TI(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ds(e,t,r){let n=we(e,()=>t());if(n==null)throw new Error(r);return n}function NI(e,t){let r=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>r){let a=`[gl.TEXTURE0, gl.TEXTURE${r}]`;throw new Error(`textureUnit must be in ${a}.`)}}function Ho(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function qo(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function E0(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Ho(e),...qo(e)]),t}function EI(e,t=!1){let r=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(r=r*2,e=e.map((a,s)=>s>=e.length-2?v.nearestLargerEven(e[s]):e[s]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let n=v.sizeFromShape(e);if(e.length<=1&&n<=r)return[1,n];if(e.length===2&&e[0]<=r&&e[1]<=r)return e;if(e.length===3&&e[0]*e[1]<=r&&e[2]<=r)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=r&&e[1]*e[2]<=r)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=r&&e[3]<=r)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=r&&e[1]*e[2]*e[3]<=r)return[e[0],e[1]*e[2]*e[3]];if(t){let a=Ho(e),s=2,i=2;return e.length&&([s,i]=qo(e)),n=a*(s/2)*(i/2),v.sizeToSquarishShape(n).map(o=>o*2)}return v.sizeToSquarishShape(n)}function b0(e){return e%2===0}function uh(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let r=e.slice(-1)[0],n=t.slice(-1)[0];if(r===n||b0(r)&&b0(n)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&b0(e[0])&&b0(t[0])}var R0,$0;function RI(e){if(R0==null){let t=ka(e);R0=t.getParameter(t.MAX_TEXTURE_SIZE)}return R0}function yee(){R0=null}function Aee(){$0=null}function $I(e){if($0==null){let t=ka(e);$0=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$0)}function MI(e){if(e===0)return 0;let t,r=ka(e);return _n(r,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:_n(r,"EXT_disjoint_timer_query")?t=1:t=0,t}function _n(e,t){return e.getExtension(t)!=null}function Ry(e){try{if(ka(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function FI(e){if(e===0)return!1;let t=ka(e);if(e===1){if(!_n(t,"OES_texture_float"))return!1}else if(!_n(t,"EXT_color_buffer_float"))return!1;return $y(t)}function _I(e){if(e===0)return!1;let t=ka(e);if(e===1){if(!_n(t,"OES_texture_float")||!_n(t,"WEBGL_color_buffer_float"))return!1}else{if(_n(t,"EXT_color_buffer_float"))return $y(t);let r="EXT_color_buffer_half_float";if(_n(t,r)){let n=t.getExtension(r);return xee(t,n)}return!1}return $y(t)}function $y(e){let t=JA(e),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let n=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,n,a,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),i}function xee(e,t){let r=JA(e,t),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,r.internalFormatHalfFloat,a,s,0,r.textureFormatFloat,r.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),o}function PI(e){return e!==2?!1:ka(e).fenceSync!=null}function Od(e,t){Array.isArray(e)||(e=[e]),e.forEach(r=>{r!=null&&v.assert(r.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Me=Y();Me.registerFlag("HAS_WEBGL",()=>Me.getNumber("WEBGL_VERSION")>0);Me.registerFlag("WEBGL_VERSION",()=>Ry(2)?2:Ry(1)?1:0);Me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Me.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Me.get("WEBGL_VERSION")===2);Me.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Me.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Me.registerFlag("WEBGL_PACK",()=>Me.getBool("HAS_WEBGL"));Me.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_CLIP",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_PACK_REDUCE",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_LAZILY_UNPACK",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_CONV_IM2COL",()=>Me.getBool("WEBGL_PACK"));Me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>RI(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>$I(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Me.getNumber("WEBGL_VERSION");return e===0?0:MI(e)});Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Mh.isMobile());Me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>FI(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Me.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>_I(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_FENCE_API_ENABLED",()=>PI(Me.getNumber("WEBGL_VERSION")));Me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Me.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Mh.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Me.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Me.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Me.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Me.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Xr(){let e,t,r,n,a,s,i,o,l,u;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",r="out",n="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",r="varying",n="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:r,varyingFs:n,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function jl(e,t,r="index"){let n=v.computeStrides(t);return n.map((a,s)=>{let i=`int ${e[s]} = ${r} / ${a}`,o=s===n.length-1?`int ${e[s+1]} = ${r} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function Hm(e,t,r="index"){let n=v.computeStrides(t);return n.map((a,s)=>{let i=`int ${e[s]} = ${r} / outShapeStrides[${s}]`,o=s===n.length-1?`int ${e[s+1]} = ${r} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function bee(e,t){let r=e.length,n=e.map(s=>`${t}[${s}]`),a=new Array(r-1);a[r-2]=n[r-1];for(let s=r-3;s>=0;--s)a[s]=`(${a[s+1]} * ${n[s+1]})`;return a}function vee(e,t,r="index"){let n=e.map((s,i)=>i),a=bee(n,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${r} / ${a[i]}`,l=i===a.length-1?`int ${e[i+1]} = ${r} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function ex(e){let t=v.computeStrides(e).map(r=>r.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function tx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var zI=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:OI}=T;function wee(e,t,r){let n=[];if(e.forEach(d=>{let c=v.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${c>1?`[${c}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),r.enableShapeUniforms){let{uniformShape:f}=rx(r.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(f.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),r.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}r.customUniforms&&r.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let a=n.join(`
`),s=e.map(d=>kee(d,t,r.packedInputs,r.enableShapeUniforms)).join(`
`),i=t.texShape,o=Xr(),l=Cee(o),u,p,h=Eee(o);return t.isPacked?(u=Iee(t.logicalShape,i,r.enableShapeUniforms),p=Nee(o)):(u=See(t.logicalShape,i,r.enableShapeUniforms),p=Tee(o)),r.packedInputs&&(h+=Fee),[h,l,p,a,u,s,r.userCode].join(`
`)}function Dd(e,t=!1){let r=e.shapeInfo.logicalShape;switch(r.length){case 0:return jee(e,t);case 1:return qee(e,t);case 2:return Xee(e,t);case 3:return Yee(e,t);case 4:return Qee(e,t);case 5:return ete(e);case 6:return tte(e);default:throw new Error(`${r.length}-D input sampling is not yet supported`)}}function DI(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return Uee(e);case 1:return Hee(e,t);case 2:return Kee(e,t);case 3:return Zee(e,t);default:return Jee(e,t)}}function kee(e,t,r=!1,n){let a="";r?a+=DI(e,n):a+=Dd(e,n);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r?a+=rte(e,t):a+=nte(e,t)),a}function Iee(e,t,r){switch(e.length){case 0:return LI();case 1:return _ee(e,t,r);case 2:return Vee(e,t,r);case 3:return zee(e,t,r);default:return Dee(e,t,r)}}function See(e,t,r){switch(e.length){case 0:return LI();case 1:return Pee(e,t,r);case 2:return Gee(e,t,r);case 3:return Oee(e,t,r);case 4:return Lee(e,t,r);case 5:return Bee(e,t);case 6:return Wee(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function Cee(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function Tee(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function Nee(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function Eee(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ree}
    ${$ee}
    ${Mee}
  `}var Ree=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$ee=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Mee=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Fee=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function LI(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function _ee(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Pee(e,t,r){return t[0]===1?r?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?r?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function zee(e,t,r){if(r)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function Oee(e,t,r){if(r)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let n=jl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Dee(e,t,r){if(r)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}function Lee(e,t,r){if(r)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let n=jl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Bee(e,t){let r=jl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Wee(e,t){let r=jl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Vee(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return r?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return r?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function Gee(e,t,r){return v.arraysEqual(e,t)?r?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:r?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Hl(e){return`offset${e}`}function Uee(e){let t=e.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),n=Xr();return`
    vec4 ${r}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function jee(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${r};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${r}, halfCR);
      }
    `;let i=Hl(r);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], ${i});
      return sampleTexture(${r}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${r}, uv);
    }
  `}function Hee(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,s=Xr();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${r}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${r}, uv);
    }
  `}function qee(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Ld(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${r}, halfCR);
      }
    `;let o=Hl(r);return i===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${r}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${r}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${o});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${r}, uv);
    }
  `}function Kee(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=Xr();if(s!=null&&v.arraysEqual(r,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(r[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function Xee(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(s!=null&&v.arraysEqual(r,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let d=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:o}=v.squeezeShape(r),l=i;if(l.length<r.length){let d=Bd(e,l),c=["row","col"];return`
      ${Dd(d,t)}
      float ${a}(int row, int col) {
        return ${a}(${Wd(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${r[1]}, 1)));
        ${Ld(e)}
      }
    `;let u=s[0],p=s[1],h=Hl(n);return p===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${r[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function Zee(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(r[0]===1){let d=r.slice(1),c=[1,2],f=Bd(e,d),m=["b","row","col"];return`
        ${DI(f,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Wd(m,c)});
        }
      `}let o=Xr();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `;let l=i[0],u=i[1],p=Math.ceil(r[2]/2),h=p*Math.ceil(r[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${p}, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}function Yee(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r[1]*r[2],i=r[2],{newShape:o,keptDims:l}=v.squeezeShape(r),u=o;if(u.length<r.length){let m=Bd(e,u),g=["row","col","depth"];return`
        ${Dd(m,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Wd(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Ld(e)}
      }
    `;let p=e.shapeInfo.texShape,h=p[0],d=p[1],c=e.shapeInfo.flatOffset;if(d===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(d===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${r[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Hl(n);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * ${s} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Jee(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=Xr();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${r}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${r}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${r}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],h=Math.ceil(s[i-1]/2),d=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,d*=s[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${n}(${c}) {
      int index = ${f};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});
      return ${a.texture2D}(${r}, uv);
    }
  `}function Qee(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r[3],i=r[2]*s,o=r[1]*i,{newShape:l,keptDims:u}=v.squeezeShape(r);if(l.length<r.length){let A=Bd(e,l),x=["row","col","depth","depth2"];return`
      ${Dd(A,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Wd(x,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${Ld(e)}
      }
    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1],f=`int stride2 = ${n}Shape[3];`,m=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(c===o&&p==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===s&&p==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r[1]*r[2]}, ${r[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=Hl(n);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function ete(e){let t=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=v.squeezeShape(t);if(l.length<t.length){let m=Bd(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${Dd(m)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Wd(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${Ld(e)}
      }
    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1];if(c===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===a&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;let f=Hl(r);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${c}, index);
      return sampleTexture(${r}, uv);
    }
  `}function tte(e){let t=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),{newShape:a,keptDims:s}=v.squeezeShape(t);if(a.length<t.length){let g=Bd(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Dd(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Wd(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,p=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Ld(e)}
      }
    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===p&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;let m=Hl(r);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${r}, uv);
    }
  `}function Ld(e){let t=e.name,r=v.sizeFromShape(e.shapeInfo.logicalShape);return r<2?`return ${t};`:`
    for (int i = 0; i < ${r}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function rte(e,t){let r=e.name,n=r.charAt(0).toUpperCase()+r.slice(1),a="get"+n+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=OI(e.shapeInfo.logicalShape,t.logicalShape),l=At(i),u=i-s,p,h=["x","y","z","w","u","v"];s===0?p="":i<2&&o.length>=1?p="coords = 0;":p=o.map(g=>`coords.${h[g+u]} = 0;`).join(`
`);let d="";i<2&&s>0?d="coords":d=e.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+u]}`).join(", ");let c="return outputValue;",f=v.sizeFromShape(e.shapeInfo.logicalShape)===1,m=v.sizeFromShape(t.logicalShape)===1;if(s===1&&!f&&!m)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${d});
      ${c}
    }
  `}function nte(e,t){let r=e.name,n=r.charAt(0).toUpperCase()+r.slice(1),a="get"+n+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${r}, resultUV);
      }
    `;let u=At(l),p=OI(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,d,c=["x","y","z","w","u","v"];o===0?d="":l<2&&p.length>=1?d="coords = 0;":d=p.map(m=>`coords.${c[m+h]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${c[g+h]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${n}(${f});
    }
  `}function At(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function rx(e,t,r){let{newShape:n,keptDims:a}=v.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):n,l=!e&&s>1&&!v.arraysEqual(t,r)&&n.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function Bd(e,t){let r=JSON.parse(JSON.stringify(e));return r.shapeInfo.logicalShape=t,r}function Wd(e,t){return t.map(r=>e[r]).join(", ")}function ate(e,t,r,n){let a=r.map((p,h)=>{let d={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(d.flatOffset=p.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),s=a.map(p=>p.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},o=wee(a,i,t),l=mI(e.gl,o),u=e.createProgram(l);return Y().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,...BI(e,t,u)}}function BI(e,t,r){let n={},a={},s={},i=[],o,l,u,p=null,h=null;h=e.getUniformLocation(r,"NAN",!1),Y().getNumber("WEBGL_VERSION")===1&&(p=e.getUniformLocation(r,"INFINITY",!1));let d=!1;for(let c=0;c<t.variableNames.length;c++){let f=t.variableNames[c];n[f]=e.getUniformLocation(r,f,d),n[`offset${f}`]=e.getUniformLocation(r,`offset${f}`,d),t.enableShapeUniforms&&(a[`${f}Shape`]=e.getUniformLocation(r,`${f}Shape`,d),s[`${f}TexShape`]=e.getUniformLocation(r,`${f}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(r,"outShape",d),u=e.getUniformLocation(r,"outShapeStrides",d),l=e.getUniformLocation(r,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((c,f)=>{i[f]=e.getUniformLocation(r,c.name,d)}),{uniformLocations:n,customUniformLocations:i,infLoc:p,nanLoc:h,inShapesLocations:a,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function w7(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((r,n)=>{let a=r.logicalShape,s=t[n],i=s.shape;if(!v.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(r.isUniform&&s.isUniform)return;let o=r.texShape,l=s.isUniform?null:s.texData.texShape;if(!v.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function ste(e,t,r,n,a){t.program.enableShapeUniforms||(w7(t.inShapeInfos,r),w7([t.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),r.forEach((l,u)=>{let p=t.program.variableNames[u],h=t.uniformLocations[p],d=t.uniformLocations[`offset${p}`],c=t.inShapesLocations[`${p}Shape`],f=t.inTexShapesLocations[`${p}TexShape`];if(c){let{uniformShape:m}=rx(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(c,new Int32Array(m));break;case 2:e.gl.uniform2iv(c,new Int32Array(m));break;case 3:e.gl.uniform3iv(c,new Int32Array(m));break;case 4:e.gl.uniform4iv(c,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(h,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(h,m)}return}l.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,h,u)}});let o=t.outShapeLocation;if(o)switch(n.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(n.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(n.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(n.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(n.shape);switch(n.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach((l,u)=>{let p=t.customUniformLocations[u],h=a[u];if(l.type==="float")e.gl.uniform1fv(p,h);else if(l.type==="vec2")e.gl.uniform2fv(p,h);else if(l.type==="vec3")e.gl.uniform3fv(p,h);else if(l.type==="vec4")e.gl.uniform4fv(p,h);else if(l.type==="int")e.gl.uniform1iv(p,h);else if(l.type==="ivec2")e.gl.uniform2iv(p,h);else if(l.type==="ivec3")e.gl.uniform3iv(p,h);else if(l.type==="ivec4")e.gl.uniform4iv(p,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function ite(e,t,r){let n="";t.concat(r).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:p,keptDims:h}=rx(e.packedInputs,i.shape,l),d="",c="",f="";if(p.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(p.length===2&&!e.packedInputs)c=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!e.packedInputs){let w=v.computeStrides(p);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=i.shape.length,g=p.length===2&&v.arraysEqual(i.shape,l),y=v.sizeFromShape(i.shape)===1,A=T.getBroadcastDims(i.shape,r.shape),x=!e.packedInputs&&m===r.shape.length&&v.arraysEqual(l,r.texData.texShape),b=e.packedInputs||p.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${m}_${x}_${u?h:""}_${p.length}_${y}_${A}_${g}_${d}_${c}_${f}_${b}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${l}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+n+"_"+a+`${Y().getNumber("WEBGL_VERSION")}`,s}function hn(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var ote=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Xr();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hm(["r","c","d"],e):jl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},lte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Xr();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hm(["r","c","d"],e):jl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},ute=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=Xr();this.outputShape=e,this.userCode=`
      ${zI}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},dte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=Xr();this.outputShape=e,this.userCode=`
      ${zI}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},pte=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=Xr();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let n="result";t&&(n="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?tx():ex(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${n}, 0., 0., 0.);
      }
    `}},hte=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=Xr();this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let n="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;n+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?tx():ex(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${r.output} = ${a};
        }
    `}},WI={};Be(WI,{bindVertexProgramAttributeStreams:()=>ZI,createBufferFromOutputTexture:()=>QI,createFloat16MatrixTexture:()=>HI,createFloat16PackedMatrixTexture:()=>XI,createFloat32MatrixTexture:()=>jI,createIndexBuffer:()=>UI,createPackedMatrixTexture:()=>KI,createUnsignedBytesMatrixTexture:()=>qI,createVertexBuffer:()=>GI,createVertexShader:()=>VI,downloadByteEncodedFloatMatrixFromOutputTexture:()=>tS,downloadFloat32MatrixFromBuffer:()=>eS,downloadMatrixFromPackedOutputTexture:()=>nS,downloadPackedMatrixFromBuffer:()=>rS,getInternalFormatForFloat16MatrixTexture:()=>ax,getInternalFormatForFloat16PackedMatrixTexture:()=>ox,getInternalFormatForFloat32MatrixTexture:()=>nx,getInternalFormatForPackedMatrixTexture:()=>ix,getInternalFormatForUnsignedBytesMatrixTexture:()=>sx,uploadDenseMatrixToTexture:()=>YI,uploadPixelDataToTexture:()=>JI});function VI(e){let t=Xr(),r=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return fI(e,r)}function GI(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return AI(e,t)}function UI(e){let t=new Uint16Array([0,1,2,2,1,3]);return xI(e,t)}function sc(e,t,r,n,a,s){vI(t,r);let i=bI(e),o=e.TEXTURE_2D;return we(e,()=>e.bindTexture(o,i)),we(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),we(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),we(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),we(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?we(e,()=>e.texImage2D(o,0,n,t,r,0,a,s,null)):we(e,()=>e.texStorage2D(o,1,n,t,r)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[r,t]}}function nx(e){return e.internalFormatFloat}function jI(e,t,r,n){let[a,s]=ac(t,r);return sc(e,a,s,nx(n),n.textureFormatFloat,e.FLOAT)}function ax(e){return e.internalFormatHalfFloat}function HI(e,t,r,n){let[a,s]=ac(t,r);return sc(e,a,s,ax(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function sx(e){return e.downloadTextureFormat}function qI(e,t,r,n){let[a,s]=ac(t,r);return sc(e,a,s,sx(n),e.RGBA,e.UNSIGNED_BYTE)}function ix(e){return e.internalFormatPackedFloat}function KI(e,t,r,n){let[a,s]=zd(t,r);return sc(e,a,s,ix(n),e.RGBA,e.FLOAT)}function ox(e){return e.internalFormatPackedHalfFloat}function XI(e,t,r,n){let[a,s]=zd(t,r);return sc(e,a,s,ox(n),e.RGBA,n.textureTypeHalfFloat)}function ZI(e,t,r){return we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),Ny(e,t,"clipSpacePos",r,3,20,0)&&Ny(e,t,"uv",r,2,20,12)}function YI(e,t,r,n,a,s){we(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(r*n*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(r*n*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),Y().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r,n,e.RGBA,o,i)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,r,n,0,e.RGBA,o,i)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function JI(e,t,r){we(e,()=>e.bindTexture(e.TEXTURE_2D,t)),r.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r.width,r.height,e.RGBA,e.UNSIGNED_BYTE,r.data)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)):Y().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,r)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function QI(e,t,r,n){let a=e.createBuffer();we(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*r;return we(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),we(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,0)),we(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function eS(e,t,r){let n=e,a=new Float32Array(r);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,a),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),a}function tS(e,t,r,n){let[a,s]=ac(t,r),i=4,o=new Uint8Array(lee(t*r,i));return we(e,()=>e.readPixels(0,0,a,s,n.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function rS(e,t,r,n,a,s,i,o){let l=e,u=new Float32Array(uee(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function nS(e,t,r){let n=new Float32Array(t*r*4);return we(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,n)),n}var Fu=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,jm(t,e)):this.gl=ka(t);let r="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Y().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Wp(this.gl,a),_n(this.gl,s))this.textureHalfFloatExtension=Wp(this.gl,s);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),_n(this.gl,n))this.colorBufferHalfFloatExtension=Wp(this.gl,n);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",_n(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(_n(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=GI(this.gl),this.indexBuffer=UI(this.gl),this.framebuffer=wI(this.gl),this.textureConfig=JA(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;we(e,()=>e.finish()),we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.deleteFramebuffer(this.framebuffer)),we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),we(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),jI(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),HI(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),qI(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),JI(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,n){this.throwIfDisposed(),YI(this.gl,e,t,r,n,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),XI(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),KI(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ey(this.gl,this.framebuffer),this.outputTexture=null),we(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>tS(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,n,a,s){return rS(this.gl,e,t,r,n,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return eS(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);let n=QI(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let n=e,a=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{let s=n.clientWaitSync(a,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},t=a}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>nS(this.gl,t,r))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=VI(t));let r=gI(t);return we(t,()=>t.attachShader(r,this.vertexShader)),we(t,()=>t.attachShader(r,e)),yI(t,r),this.debug&&T0(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=ZI(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&we(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&T0(this.gl,this.program),we(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?II(this.gl,e,t):SI(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),we(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),CI(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();let[n,a]=zd(t,r);this.setOutputMatrixTextureDriver(e,n,a)}setOutputMatrixWriteRegion(e,t,r,n){this.setOutputMatrixWriteRegionDriver(r,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,r,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&T0(this.gl,this.program),Vp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),we(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),we(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Wp(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let r=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=r.createQuery();return r.beginQuery(n.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{let r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let r=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let r=this.getQueryTimerExtensionWebGL1(),n=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=cte(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),N0(this.gl,e,this.framebuffer),this.debug&&Vp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(N0(this.gl,this.outputTexture,this.framebuffer),this.debug&&Vp(this.gl)):Ey(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();let n=this.gl;N0(n,e,this.framebuffer),this.debug&&Vp(n),this.outputTexture=e,we(n,()=>n.viewport(0,0,t,r)),we(n,()=>n.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,n){this.throwIfDisposed(),we(this.gl,()=>this.gl.scissor(e,t,r,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function cte(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:fte,bincountImpl:aS,bincountReduceImpl:mte,ceilImpl:gte,concatImpl:yte,equalImpl:Ate,expImpl:xte,expm1Impl:bte,floorImpl:vte,gatherNdImpl:wte,gatherV2Impl:kte,greaterImpl:Ite,greaterEqualImpl:Ste,lessImpl:Cte,lessEqualImpl:Tte,linSpaceImpl:Nte,logImpl:Ete,maxImpl:Rte,maximumImpl:$te,minimumImpl:Mte,multiplyImpl:Fte,negImpl:_te,notEqualImpl:Pte,prodImpl:zte,rangeImpl:Ote,rsqrtImpl:Dte,scatterImpl:Lte,sigmoidImpl:Bte,simpleAbsImpl:sS,sliceImpl:Wte,sparseFillEmptyRowsImpl:Vte,sparseReshapeImpl:Gte,sparseSegmentReductionImpl:iS,sqrtImpl:Ute,stridedSliceImpl:jte,stringNGramsImpl:Hte,stringSplitImpl:qte,stringToHashBucketFastImpl:Kte,subImpl:Xte,tileImpl:Zte,topKImpl:Yte,transposeImpl:lx,uniqueImpl:Jte}=Gm;function oS(e,t){return["x","y","z","w","u","v"].slice(0,t).map(r=>`${e}.${r}`)}function Gr(e,t){return t===1?[e]:oS(e,t)}function Qte(e,t){if(e===1)return"rc";let r="";for(let n=0;n<e;n++)r+=t[n],n<e-1&&(r+=",");return r}var ere=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=hn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Gr("rc",this.rank),r=At(this.rank),n=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let r=0;r<=1;r++)for(let n=0;n<=1;n++){let a=`${r===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},lS=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let r="";for(let n=0;n<4;n++){let a="thisRC = rc;";n%2===1&&(a+="thisRC.z += 1;"),n>1&&(a+="thisRC.y += 1;"),r+=`
        ${a}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${tre(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?tx():ex(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}};function tre(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?vee(["r","c","d"],"inputShape"):jl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var rre=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,r){let n=I7(t,r),a=S7(e,n,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=k7(e,n,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].shift();return this.usedTextures[a].push(o),o}let i;return n===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):n===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):n===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):n===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):n===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,r,n){if(this.freeTextures==null)return;let a=I7(r,n),s=S7(t,a,n);s in this.freeTextures||(this.freeTextures[s]=[]);let i=k7(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n),o=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function nre(e,t){let r=e;if(t===r.R32F)return 4;if(t===r.R16F)return 2;if(t===r.RGBA32F||t===e.RGBA)return 16;if(t===r.RGBA16F)return 8;if(t===r.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function k7(e,t,r,n,a){let s=are(t,n),i;if(a){let[l,u]=zd(e[0],e[1]);i=l*u}else{let[l,u]=ac(e[0],e[1]);i=l*u}let o=nre(r,s);return i*o}function are(e,t){switch(e){case 3:return ix(t);case 4:return ox(t);case 1:return nx(t);case 0:return ax(t);case 2:return sx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function sre(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function I7(e,t){if(e===1)return 3;if(e===0||e==null)return sre(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function S7(e,t,r){return`${e[0]}_${e[1]}_${t}_${r}`}var Qa=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ra="if (isnan(x)) return x;",ire="return x;",C7="return abs(x);",ore="return (x >= 0.0) ? x : (exp(x) - 1.0);",lre=ra+`
  return (x < 0.0) ? 0.0 : x;
`,ure=ra+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,wu="return x;",dre="return 1.0 / (1.0 + exp(-1.0 * x));",pre="return x;",hre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,cre=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fre=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mre="return 1.0 / (1.0 + exp(-1.0 * x));",_o=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},gre=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let t=e.length,r=Gr("rc",t),n=At(t),a=Qte(t,r),s=r.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},yre=ea.whereImpl,Are=1e-7,xre=1e-4,Bg={};function bre(e){return e in Bg||(Bg[e]={}),Bg[e]}var vre=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),wre=600;function kre(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*wre/1024/1024}var uS=class extends Xu{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Fu)t=e;else{let r=ka(Y().getNumber("WEBGL_VERSION"),e);t=new Fu(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let r=ka(Y().getNumber("WEBGL_VERSION"));t=new Fu(r),this.binaryCache=bre(Y().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new rre(this.gpgpu),this.numMBBeforeWarning=kre(),this.texData=new ph(this,Xt())}nextDataId(){return uS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,r){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:t,dtype:r,values:e,usage:1,refCount:1}),n}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,r,n,a){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:n,values:t,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:r,dtype:n,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(s!=null){let h;o?h=new _o(i,wu):h=new Qa(i,wu);let d=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:n}],n),c=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),c}if(r!=null)return this.convertAndCacheOnCPU(e);if(n==="string")return r;let l=this.activeTimers!=null,u;l&&(u=v.now());let p;if(n==="complex64"){let h=this.readSync(a.real.dataId),d=this.readSync(a.imag.dataId);p=T.mergeRealAndImagArrays(h,d)}else p=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-u),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){let c=this.pendingRead.get(e);return new Promise(f=>c.push(f))}let t=this.texData.get(e),{values:r,shape:n,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(a!=null){let c;o?c=new _o(n,wu):c=new Qa(n,wu);let f=this.runWebGLProgram(c,[{dataId:e,shape:n,dtype:s}],s),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(r!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(s!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let c=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(c.texture.texture,...x0(n))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(s==="complex64"){let c=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=c[0],m=c[1];p=T.mergeRealAndImagArrays(f,m)}else if(l==null)p=this.getValuesFromTexture(e);else{let c=v.sizeFromShape(n);p=this.gpgpu.downloadFloat32MatrixFromBuffer(l,c)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){let c=this.gpgpu.gl;we(c,()=>c.deleteBuffer(l))}let h=this.convertAndCacheOnCPU(e,p),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(c=>c(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Xt().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let r=this.texData.get(e),{values:n,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(s!=null){let d;o?d=new _o(a,wu):d=new Qa(a,wu);let c=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:i}],i),f=this.readToGPU(c,t);return this.disposeIntermediateTensorInfo(c),f}if(l==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),p=Xt().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return{tensorRef:p,...h.texture}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let r=t.map(n=>v.decodeString(n));return Oe(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let r=e[t];if(!hI(r))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:r,isPacked:n}=this.texData.get(e),a=v.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let h=this.decode(e),d=this.texData.get(h.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...x0(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(h),c}let s=Y().getBool("WEBGL_PACK")&&n===!0,i=s?E0(t):t,o=s?new dte(i):new ute(i),l=this.runWebGLProgram(o,[{shape:i,dtype:r,dataId:e}],"float32"),u=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,r=[],n=!1;this.programTimersStack==null?(this.programTimersStack=r,n=!0):this.activeTimers.push(r),this.activeTimers=r,e();let a=v.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=v.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,n&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(a);i.kernelMs=v.sum(o),i.getExtraProfileInfo=()=>o.map((l,u)=>({name:s[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:r,texShape:n,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(n,r),this.textureManager.releaseTexture(t,n,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=vre){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&v.sizeFromShape(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return yre(e.shape,t)}packedUnaryOp(e,t,r){let n=new _o(e.shape,t),a=this.compileAndRun(n,[e],r);return Xt().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let n=sS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,n)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,C7,e.dtype);let t=new Qa(e.shape,C7),r=this.compileAndRun(t,[e]);return Xt().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let n;if(t==="string"&&r!=null&&r.length>0&&v.isString(r[0])){let a=r.map(s=>v.encodeString(s));n=this.write(a,e,t)}else n=this.write(r,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}}makeOutput(e,t,r){return Xt().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){let t=new gre(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new ere(e.shape),r=!0;return this.runWebGLProgram(t,[e],e.dtype,null,r)}packedReshape(e,t){let r=[Ho(e.shape),...qo(e.shape)],n={dtype:e.dtype,shape:r,dataId:e.dataId},a=[Ho(t),...qo(t)],s=new lS(a,r),i=!0,o=[r],l=this.runWebGLProgram(s,[n],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let r=this.texData.get(e),{isPacked:n,shape:a,dtype:s}=r;if(t!=null){let h=v.sizeFromShape(a),d=t[0]*t[1]*4;v.assert(h<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=E0(a),o;n?o=new lte(i):o=new ote(i);let l=!0,u=[t!=null?t:x0(i)],p=this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,l,t);return{dtype:s,shape:a,dataId:p.dataId}}runWebGLProgram(e,t,r,n,a=!1,s){let i=this.makeTensorInfo(e.outputShape,r),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===0){let g=s!=null?s:x0(e.outputShape);o.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(i.shape)===0)return o.values=v.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&v.sizeFromShape(g.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!uh(y.shape,g.shape)){let A=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),l.push(g),y=this.texData.get(g.dataId),A.shape=x}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);let p={shape:i.shape,texData:o,isUniform:!1},h=ite(e,u,p),d=this.getAndSaveBinary(h,()=>ate(this.gpgpu,e,u,p)),c=this.activeTimers!=null,f;c&&(f=this.startTimer()),Y().get("ENGINE_COMPILE_ONLY")||ste(this.gpgpu,d,u,p,n),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),c&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=Y().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=v.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&a===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,r,n,a=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,n,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=J(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Ie(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Are:xre}uploadToGPU(e){let t=this.texData.get(e),{shape:r,dtype:n,values:a,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,u;l&&(u=v.now());let p=t.texShape;if(p==null&&(p=EI(r,o),t.texShape=p),a!=null){let h=E0(r),d,c=p[1],f=p[0],m=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!m)&&([c,f]=zd(p[0],p[1])),o?d=new hte(h,m):d=new pte(h,m);let g=m?[f,c]:p,y=this.makeTensorInfo(g,n),A=this.texData.get(y.dataId);m?A.usage=2:A.usage=1,A.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),c,f,a);let x=[[f,c]],b=!0,w=this.runWebGLProgram(d,[y],n,x,b),I=this.texData.get(w.dataId);t.texShape=I.texShape,t.isPacked=I.isPacked,t.usage=I.usage,Y().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=I.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=v.now()-u)}else{let h=this.acquireTexture(p,i,n,o);t.texture=h}}convertAndCacheOnCPU(e,t){let r=this.texData.get(e),{dtype:n}=r;return this.releaseGPUData(e),t!=null&&(r.values=Ire(t,n)),r.values}acquireTexture(e,t,r,n){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,n)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let r=new Promise(n=>{try{this.checkCompletion_(t),n(!0)}catch(a){throw a}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await a5(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(QA(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:r,infLoc:n,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=BI(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=r,e.infLoc=n,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}},ic=uS;ic.nextDataId=0;function Ire(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let r=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let n=0;n<r.length;++n)r[n]=Math.round(e[n]);return r}else throw new Error(`Unknown dtype ${t}`)}var Sre="0.0.0";function dS(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}Mh.isBrowser()&&Ol("webgl",()=>new ic,2);var Cre={forceHalfFloat:dS},pS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Ku=class{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,r),this.enableShapeUniforms=hn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},qm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,oc=class{constructor(e,t,r,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,r);let a=this.outputShape.length;this.enableShapeUniforms=hn(a);let s="";if(n)if(a===0||v.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${At(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Gr("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function bn(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Tre={kernelName:bi,backendName:"webgl",kernelFunc:bn};function Qi(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.makeTensorInfo(n.shape,"complex64"),i=r.texData.get(s.dataId),o=bn({inputs:{x:n},backend:r}),l=bn({inputs:{x:a},backend:r});return i.complexTensorInfos={real:o,imag:l},s}var Nre={kernelName:ch,backendName:"webgl",kernelFunc:Qi},hS="return (a < 0.) ? b * a : a;",cS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ere(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n,i=r.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),o=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oc(cS,a.shape,i.shape):new Ku(hS,a.shape,i.shape),l=r.runWebGLProgram(o,[a,i],"float32");return r.disposeIntermediateTensorInfo(i),l}var Rre={kernelName:vi,backendName:"webgl",kernelFunc:Ere},fS="return (a < 0.) ? b * a : a;",mS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function $re(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,s=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oc(mS,n.shape,a.shape):new Ku(fS,n.shape,a.shape);return r.runWebGLProgram(s,[n,a],"float32")}var Mre={kernelName:Fi,backendName:"webgl",kernelFunc:$re},Vd="if (isnan(x)) return x;",Fre=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,_re=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function it({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:r,dtype:n}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=n||i.dtype;if(o.shouldExecuteOnCPU([i])&&r!=null){let h=o.texData.get(i.dataId),d=r(h.values,l);return o.makeTensorInfo(i.shape,l,d)}let u=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,p;return u?p=new _o(i.shape,t):p=new Qa(i.shape,e),o.runWebGLProgram(p,[i],l)}}function Ir({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:r=!1,supportsComplex:n=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,p=o;if(n&&l.dtype==="complex64"){let f=p.texData.get(l.dataId),m=p.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[b,w]=x,I={dataId:b.dataId,dtype:b.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:u.shape},E=new Ku(e,l.shape,u.shape);return p.runWebGLProgram(E,[I,C],Rr(b.dtype,w.dtype))}),A=Qi({inputs:{real:g,imag:y},backend:p});return p.disposeIntermediateTensorInfo(g),p.disposeIntermediateTensorInfo(y),A}let h=s||Rr(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||p.shouldExecuteOnCPU([l,u]))&&a!=null){let f=p.texData.get(l.dataId).values,m=p.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,y=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[A,x]=a(l.shape,u.shape,g,y,h),b=p.makeTensorInfo(x,h),w=p.texData.get(b.dataId);return w.values=A,b}let d=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return d?c=new oc(t,l.shape,u.shape,r):c=new Ku(e,l.shape,u.shape),p.runWebGLProgram(c,[l,u],h)}}function Km(e,t=!1){if(e==="linear")return t?pre:ire;if(e==="relu")return t?cre:lre;if(e==="elu")return t?hre:ore;if(e==="relu6")return t?fre:ure;if(e==="prelu")return t?mS:fS;if(e==="leakyrelu")return t?cS:hS;if(e==="sigmoid")return t?mre:dre;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var gS=class{constructor(e,t,r,n=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=hn(this.outputShape.length);let u=n?e[1]:e[2],p=Math.ceil(u/2),h=n?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",x="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${p}; i++) {
          int batchA = ${A};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${f[0]});
          result += (${c[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},T7={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},N7=class{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},E7="return a * b;";function ux(e){let{inputs:t,backend:r}=e,{a:n,b:a}=t,s=T.upcastType(n.dtype,a.dtype);if(n.dtype==="complex64"){let o=r.texData.get(n.dataId),l=r.texData.get(a.dataId),u=new N7(T7.REAL,n.shape,a.shape),p=new N7(T7.IMAG,n.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:n.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],d=r.runWebGLProgram(u,h,"float32"),c=r.runWebGLProgram(p,h,"float32"),f=Qi({inputs:{real:d,imag:c},backend:r});return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),f}if(r.shouldExecuteOnCPU([n,a])){let o=r.texData.get(n.dataId),l=r.texData.get(a.dataId),[u,p]=Fte(n.shape,a.shape,o.values,l.values,s),h=r.makeTensorInfo(p,s),d=r.texData.get(h.dataId);return d.values=u,h}let i;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new oc(E7,n.shape,a.shape):i=new Ku(E7,n.shape,a.shape),r.runWebGLProgram(i,[n,a],s)}var Pre={kernelName:Ri,backendName:"webgl",kernelFunc:ux};function zre(e,t,r){let n=[Ho(e.shape),...qo(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Ho(t),...qo(t)],i=new lS(s,n),o=!0,l=[n],u=r.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function Ae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=r,o=v.sizeFromShape(a.shape),l=v.inferFromImplicitShape(s,o),u=v.sizeFromShape(l);v.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let p=i.texData.get(a.dataId);return p.isPacked&&!uh(a.shape,l)&&!(p.texture!==null&&uh(p.shape,l))?zre(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}var Ore={kernelName:vl,backendName:"webgl",kernelFunc:Ae},R7=class{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i=Math.floor(r/4)*4,o=r%4,l="sumValue += dot(values, ones);";if(t!=null){let p=1/t;l=`sumValue += dot(values * ${v.isInt(p)?p.toPrecision(2):p}, ones);`}let u="";a%r>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},Dre=class{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(r/4)*4,p=r%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let c="";a%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${p===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${p===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function Lre(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let r=t.length?t[t.length-1].outSize:e[1],n=T.computeOptimalWindowSize(r);t.push({inSize:r,windowSize:n,outSize:Math.ceil(r/n)})}return t}function ql(e,t,r,n){let a=Lre(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:l,outSize:u}=a[i],p,h;r==="mean"?p=i===0?new R7({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new R7({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):p=new Dre({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},r),h=s,s=n.runWebGLProgram(p,[s],t),h.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(h)}return s}var Bre=class{constructor(e,t){this.variableNames=["A"];let r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[t[s]];this.outputShape=r,this.rank=r.length;let n=At(this.rank),a=Wre(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function Wre(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let a=0;a<e.length;a++)n[e[a]]=r[a];return n.join()}var Vre=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=new Array(e.length);for(let u=0;u<r.length;u++)r[u]=e[t[u]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=At(this.rank),a=oS("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${r[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Xm(e,t,r){let n=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vre(e.shape,t):new Bre(e.shape,t);return r.runWebGLProgram(n,[e],e.dtype)}function Gre(e,t,r,n){let a=t,s=e.shape.length,i=v.parseAxisParam(a,e.shape),o=i,l=T.getAxesPermutation(o,s),u=l!=null,p=e;u&&(p=Xm(e,l,n),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[h,d]=T.computeOutAndReduceShapes(p.shape,o),c=h;r&&(c=T.expandShapeToKeepDim(h,i));let f=v.sizeFromShape(d),m=v.sizeFromShape(e.shape)/f,g=Ae({inputs:{x:p},attrs:{shape:[m,f]},backend:n}),y=$h(e.dtype),A=ql(g,y,"sum",n),x=Ae({inputs:{x:A},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(A),u&&n.disposeIntermediateTensorInfo(p),x}function Zm(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;return Gre(a,s,i,r)}var Ure={kernelName:Gi,backendName:"webgl",kernelFunc:Zm};function jr(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{perm:s}=n,i=r,o=a.shape.length,l=new Array(o);for(let p=0;p<l.length;p++)l[p]=a.shape[s[p]];let u;if(i.shouldExecuteOnCPU([a])){let p=i.texData.get(a.dataId).values,h=lx(p,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype);let d=i.texData.get(u.dataId);d.values=h}else u=Xm(a,s,i);return u}var jre={kernelName:Pa,backendName:"webgl",kernelFunc:jr},yS=1e3;function df({a:e,b:t,transposeA:r,transposeB:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,h=r?e.shape[u-2]:e.shape[u-1],d=n?t.shape[p-1]:t.shape[p-2],c=r?e.shape[u-1]:e.shape[u-2],f=n?t.shape[p-2]:t.shape[p-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),A=v.sizeFromShape(g),x=Dl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);v.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${n} must match.`);let b=r?[y,h,c]:[y,c,h],w=n?[A,f,d]:[A,d,f],I=Ae({inputs:{x:e},backend:a,attrs:{shape:b}}),C=Ae({inputs:{x:t},backend:a,attrs:{shape:w}}),E=[I,C],R=Math.max(y,A),F=r?I.shape[1]:I.shape[2],$=s!=null,S=i!=null,O=l==="leakyrelu",z=l!=null?Km(l,!0):null,j=$||S||O||z!=null,K;if((c===1||f===1)&&F>yS&&j===!1){let Z=I,V=C;r&&(Z=jr({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),E.push(Z)),n&&(V=jr({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),E.push(V));let re=f!==1,Q=f===1,ie=Z;re&&(ie=Ae({inputs:{x:Z},backend:a,attrs:{shape:[R,F,1]}}),E.push(ie));let X=f===1?2:1,ae=V;Q&&(ae=Ae({inputs:{x:V},backend:a,attrs:{shape:[R,1,F]}}),E.push(ae));let de=ux({inputs:{a:ie,b:ae},backend:a});K=Zm({inputs:{x:de},backend:a,attrs:{axis:X,keepDims:!0}}),E.push(de)}else{let Z=Rr(e.dtype,t.dtype),V=new gS(b,w,[R,c,f],r,n,$,z,S,O),re=[I,C];if(s!=null&&re.push(s),S&&re.push(i),O){let Q=a.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));re.push(Q),E.push(Q)}K=a.runWebGLProgram(V,re,Z)}let D=Ae({inputs:{x:K},backend:a,attrs:{shape:x}});E.push(K);for(let Z of E)a.disposeIntermediateTensorInfo(Z);return D}function Hre(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=n;return df({a,b:s,transposeA:l,transposeB:u,backend:r,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:p})}var qre={kernelName:Bs,backendName:"webgl",kernelFunc:Hre},$7="return abs(x);";function Kre(e){let{inputs:t,backend:r}=e,{x:n}=t;if(r.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=r.texData.get(n.dataId),i=sS(s.values);return r.makeTensorInfo(n.shape,n.dtype,i)}let a;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new _o(n.shape,$7):a=new Qa(n.shape,$7),r.runWebGLProgram(a,[n],n.dtype)}var Xre={kernelName:Yo,backendName:"webgl",kernelFunc:Kre},Zre=ra+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Yre=it({opSnippet:Zre}),Jre={kernelName:Yu,backendName:"webgl",kernelFunc:Yre},Qre=ra+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,ene=it({opSnippet:Qre}),tne={kernelName:Ju,backendName:"webgl",kernelFunc:ene},M7="return a + b;",rne=Ir({opSnippet:M7,packedOpSnippet:M7,supportsComplex:!0,cpuKernelImpl:fte}),nne={kernelName:ns,backendName:"webgl",kernelFunc:rne},ane=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let r=[];this.variableNames.forEach(a=>{r.push(`float v${a} = get${a}AtOutCoords();`)});let n=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}},sne=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let r=[];this.variableNames.forEach(a=>{r.push(`vec4 v${a} = get${a}AtOutCoords();`)});let n=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function M0(e){let{inputs:t,backend:r}=e,n=t;if(n.length===1)return bn({inputs:{x:n[0]},backend:r});if(n.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(n.length/2),l=M0({inputs:n.slice(0,o),backend:r}),u=M0({inputs:n.slice(o),backend:r});return M0({inputs:[l,u],backend:r})}let a=n.map(o=>o.dtype).reduce((o,l)=>Rr(o,l)),s=n.map(o=>o.shape),i=Y().getBool("WEBGL_PACK")?new sne(n[0].shape,s):new ane(n[0].shape,s);return r.runWebGLProgram(i,n,a)}var ine={kernelName:ti,backendName:"webgl",kernelFunc:M0};function one(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=a;p!=null&&(h=jr({inputs:{x:a},backend:r,attrs:{perm:p}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("all",u,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,u),f=v.sizeFromShape(c),m=Ae({inputs:{x:h},backend:r,attrs:{shape:[-1,f]}}),g=ql(m,m.dtype,"all",r),y;if(i){let A=T.expandShapeToKeepDim(d,l);y=Ae({inputs:{x:g},backend:r,attrs:{shape:A}})}else y=Ae({inputs:{x:g},backend:r,attrs:{shape:d}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),p!=null&&r.disposeIntermediateTensorInfo(h),y}var lne={kernelName:Qu,backendName:"webgl",kernelFunc:one};function une(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=a;p!=null&&(h=jr({inputs:{x:a},backend:r,attrs:{perm:p}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("any",u,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,u),f=v.sizeFromShape(c),m=Ae({inputs:{x:h},backend:r,attrs:{shape:[-1,f]}}),g=ql(m,m.dtype,"any",r),y;if(i){let A=T.expandShapeToKeepDim(d,l);y=Ae({inputs:{x:g},backend:r,attrs:{shape:A}})}else y=Ae({inputs:{x:g},backend:r,attrs:{shape:d}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),p!=null&&r.disposeIntermediateTensorInfo(h),y}var dne={kernelName:ed,backendName:"webgl",kernelFunc:une},pne=class{constructor(e,t,r){this.variableNames=["A"];let{windowSize:n,batchSize:a,outSize:s}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},hne=class{constructor(e,t,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=At(o),u=Gr("coords",o),p,h;if(s===1){h=o+1;let C=At(h);p=`
        ${C} sourceLocR = ${C}(${u.join()}, 0);
        ++${u[o-1]};
        ${C} sourceLocG = ${C}(${u.join()}, 0);
        ++${u[o-2]};
        ${C} sourceLocA = ${C}(${u.join()}, 0);
        --${u[o-1]};
        ${C} sourceLocB = ${C}(${u.join()}, 0);
        --${u[o-2]};`}else h=o,p=`
        ${l} sourceLocR = coords;
        ++${u[o-1]};
        ${l} sourceLocG = coords;
        ++${u[o-2]};
        ${l} sourceLocA = coords;
        --${u[o-1]};
        ${l} sourceLocB = coords;
        --${u[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,h),c="."+d[h-1],f=d.map(C=>"int "+C),m=Gr("sourceLocR",h-1).concat("inIdx.r"),g=Gr("sourceLocG",h-1).concat("inIdx.g"),y=Gr("sourceLocB",h-1).concat("inIdx.b"),A=Gr("sourceLocA",h-1).concat("inIdx.a"),x=r==="max"?"greaterThan":"lessThan",b=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${A.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,I=n?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function AS(e,t,r,n=null){let a=t.shape[0],s=t.shape[1];n!=null&&(a=n.shape[0],s=n.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new pne(o,r,n==null),u=[t];n!=null&&u.push(n);let p=e.runWebGLProgram(l,u,"int32");if(p.shape[1]===1)return p;let h=AS(e,t,r,p);return e.disposeIntermediateTensorInfo(p),h}function xS(e,t,r,n=null){let a=n!=null?n.shape:t.shape,s=a[a.length-1],i=T.computeOptimalWindowSize(s),o=new hne(a,i,r,n==null),l=n==null?[t]:[t,n],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let p=xS(e,t,r,u);return e.disposeIntermediateTensorInfo(u),p}return u}function bS(e,t,r,n){let a=[r];if(T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[u,p]=T.computeOutAndReduceShapes(l.shape,a),h=v.sizeFromShape(p),d=Ae({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});s.push(d);let c=AS(e,d,n);s.push(c);let f=Ae({inputs:{x:c},backend:e,attrs:{shape:u}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return xS(e,t,n)}function cne(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=jr({inputs:{x:a},backend:r,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=bS(r,l,i[0],"max");return u.forEach(h=>r.disposeIntermediateTensorInfo(h)),p}var fne={kernelName:ri,backendName:"webgl",kernelFunc:cne};function mne(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=jr({inputs:{x:a},backend:r,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=bS(r,l,i[0],"min");return u.forEach(h=>r.disposeIntermediateTensorInfo(h)),p}var gne={kernelName:td,backendName:"webgl",kernelFunc:mne},yne=ra+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Ane=it({opSnippet:yne}),xne={kernelName:rd,backendName:"webgl",kernelFunc:Ane},bne=ra+"return log(x + sqrt(x * x + 1.0));",vne=it({opSnippet:bne}),wne={kernelName:nd,backendName:"webgl",kernelFunc:vne},kne=ra+`
  return atan(x);
`,Ine=it({opSnippet:kne}),Sne={kernelName:ad,backendName:"webgl",kernelFunc:Ine},Cne=Fre+`
  return atan(a, b);
`,Tne=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+_re+`
  return result;
`,Nne=Ir({opSnippet:Cne,packedOpSnippet:Tne}),Ene={kernelName:id,backendName:"webgl",kernelFunc:Nne},Rne=ra+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,$ne=it({opSnippet:Rne}),Mne={kernelName:sd,backendName:"webgl",kernelFunc:$ne},dh=class{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),r){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?a?m:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let A="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let b=Math.floor(s/4)*4,w=s%4,I=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${A}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${x});
      }
    `}},dx=class{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A=t==="avg",x="0.0";if(A||(x="-1.0 / 1e-20"),r){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let I=Math.floor(s/4)*4,C=s%4,E=`
      if (${A}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${I};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${w});
        }
      }
    `}};function Fne(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;Od(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l);if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))return bn({inputs:{x:a},backend:r});let h=new dh(p,"avg",!1);return r.runWebGLProgram(h,[a],"float32")}var _ne={kernelName:ni,backendName:"webgl",kernelFunc:Fne};function Pne(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n,p=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,p,o,l,u),d=new dx(h,"avg",!1);return r.runWebGLProgram(d,[a],"float32")}var zne={kernelName:hh,backendName:"webgl",kernelFunc:Pne},One=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,p=l-1-e.padInfo.left,h=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${p});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Dne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=p-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*r*n);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Lne(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=n,h=[1,1,1],d=T.computePool3DInfo(i.shape,o,l,h,u,p),c=new Dne(d);return r.runWebGLProgram(c,[a],i.dtype)}var Bne={kernelName:wf,backendName:"webgl",kernelFunc:Lne};function Wne(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s;Od([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=n,p=T.computePool2DInfo(i.shape,o,l,1,u),h=new One(p);return r.runWebGLProgram(h,[a],i.dtype)}var Vne={kernelName:vf,backendName:"webgl",kernelFunc:Wne};function Gne(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;return df({a,b:s,transposeA:i,transposeB:o,backend:r})}var Une={kernelName:ai,backendName:"webgl",kernelFunc:Gne},jne=class{constructor(e,t,r,n,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,r);let i="0.0";n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},Hne=class{constructor(e,t,r,n,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,r);let i="vec4(0.0)";n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},qne=({inputs:e,backend:t,attrs:r})=>{let{x:n,mean:a,variance:s,offset:i,scale:o}=e;v.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=r;l==null&&(l=.001);let u=[n,a,s],p=null;i!=null&&(p=i.shape,u.push(i));let h=null;o!=null&&(h=o.shape,u.push(o));let d=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Hne(n.shape,a.shape,s.shape,p,h,l):new jne(n.shape,a.shape,s.shape,p,h,l);return t.runWebGLProgram(d,u,u[0].dtype)},Kne={kernelName:Ai,backendName:"webgl",kernelFunc:qne},Xne=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=At(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let r=Zne(this.rank),n,a=e.map((s,i)=>`sourceLoc.${My[i]} = start[${i}] + coords.${My[i]};`);n=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${r}));
      }
    `}},My=["x","y","z","w","u","v"];function Zne(e){if(e===1)return"sourceLoc";if(e<=6)return My.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Yne=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=At(this.rank),r=Gr("coords",this.rank),n=Gr("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,p)=>`start[${p}]`).join()});`:e.map((u,p)=>`${n[p]} = ${r[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function Jne(e,t,r,n){let a=n.texData.get(e.dataId),s=n.makeTensorInfo(r,e.dtype),i=n.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=r,i.dtype=e.dtype;let o=Lt.computeFlatOffset(t,v.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,l+1),s}function Gd(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n,[o,l]=Lt.parseSliceParams(a,s,i);if(Lt.assertParamsValid(a,o,l),v.sizeFromShape(l)===0)return r.makeTensorInfo(l,a.dtype,[]);if(r.shouldExecuteOnCPU([a])||a.dtype==="string"){let h=r.texData.get(a.dataId),d=Wte(h.values,o,l,a.shape,a.dtype);return r.makeTensorInfo(l,a.dtype,d)}let{isPacked:u}=r.texData.get(a.dataId),p=Lt.isSliceContinous(a.shape,o,l);if(u||!p){let h=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yne(l):new Xne(l),d=[o];return r.runWebGLProgram(h,[a],a.dtype,d)}return r.uploadToGPU(a.dataId),Jne(a,o,l,r)}var Qne={kernelName:Cl,backendName:"webgl",kernelFunc:Gd},eae=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;v.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((A,x)=>A*x),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),p=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(p,i,s.length),c=[],f=Ae({inputs:{x:a},backend:r,attrs:{shape:l}}),m=jr({inputs:{x:f},backend:r,attrs:{perm:u}}),g=Ae({inputs:{x:m},backend:r,attrs:{shape:p}}),y=Gd({inputs:{x:g},backend:r,attrs:{begin:h,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(A=>r.disposeIntermediateTensorInfo(A)),y},tae={kernelName:Jo,backendName:"webgl",kernelFunc:eae};function rae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.readSync(a.dataId),l=r.readSync(s.dataId),u=aS(o,l,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,u)}var nae={kernelName:kf,backendName:"webgl",kernelFunc:rae};function aae(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.readSync(n.dataId),i=r.readSync(a.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var sae={kernelName:If,backendName:"webgl",kernelFunc:aae},iae="return float(a != b);",vS=Ir({opSnippet:iae,cpuKernelImpl:Pte,dtype:"bool"}),oae={kernelName:ml,backendName:"webgl",kernelFunc:vS};function lc(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.texData.get(n.dataId);return bn({inputs:{x:a.complexTensorInfos.real},backend:r})}var lae={kernelName:vh,backendName:"webgl",kernelFunc:lc},uae="return float(int(x));";function dae(e,t){let r=new Qa(e.shape,uae),n=t.runWebGLProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Fy(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dtype:s}=n;if(s==="complex64"){if(a.dtype==="complex64")return bn({inputs:{x:a},backend:r});let i=Ot(a.shape),o=Fy({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),l=Qi({inputs:{real:o,imag:i},backend:r});return i.dispose(),r.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){let i=lc({inputs:{input:a},backend:r}),o=Fy({inputs:{x:i},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(i),o}if(!v.hasEncodingLoss(a.dtype,s)){let i=bn({inputs:{x:a},backend:r});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return dae(a,r);if(s==="bool"){let i=r.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=vS({inputs:{a,b:i},backend:r});return r.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var pae={kernelName:si,backendName:"webgl",kernelFunc:Fy},F7="return ceil(x);",hae=it({opSnippet:F7,packedOpSnippet:F7,cpuKernelImpl:gte}),cae={kernelName:ii,backendName:"webgl",kernelFunc:hae},fae=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},mae=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function gae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=n,o;Y().getBool("WEBGL_PACK_CLIP")?o=new mae(a.shape):o=new fae(a.shape);let l=[[s],[i]];return r.runWebGLProgram(o,[a],a.dtype,l)}var yae={kernelName:as,backendName:"webgl",kernelFunc:gae},Aae=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function _7(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function xae(e){let{inputs:t,backend:r}=e,{x:n}=t,a=r.texData.get(n.dataId),s=new Aae(n.shape),i=[_7(n,a.complexTensorInfos.real),_7(n,a.complexTensorInfos.imag)];return r.runWebGLProgram(s,i,i[0].dtype)}var bae={kernelName:fh,backendName:"webgl",kernelFunc:xae},vae=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];r.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let n=t.length,a=t[t.length-1];r.push(`else setOutput(getT${n}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}},wae=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let r=this.outputShape,n=r.length,a=At(n),s=Gr("coords",n),i=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),p=i.join(),h=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${p}), vec2(${u.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];h+=`
        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${v0(i,l,m)}),
            vec2(${v0(u,l,m)}));
        }`}let d=o.length,c=o[o.length-1];h+=`
        return getChannel(
          getT${d}(${v0(i,l,c)}),
          vec2(${v0(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${r[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${r[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${r[n-2]} &&
            ${s[n-1]} < ${r[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function v0(e,t,r){let n=e.indexOf(t);return e.map((a,s)=>s===n?`${a} - ${r}`:a).join()}function Ym(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.texData.get(n.dataId);return bn({inputs:{x:a.complexTensorInfos.imag},backend:r})}var kae={kernelName:Ah,backendName:"webgl",kernelFunc:Ym};function Gp(e,t,r){let n=e[0].dtype;if(n==="complex64"){let h=e.map(g=>lc({inputs:{input:g},backend:r})),d=e.map(g=>Ym({inputs:{input:g},backend:r})),c=Gp(h,t,r),f=Gp(d,t,r),m=Qi({inputs:{real:c,imag:f},backend:r});return h.forEach(g=>r.disposeIntermediateTensorInfo(g)),d.forEach(g=>r.disposeIntermediateTensorInfo(g)),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),m}let a=r.shouldExecuteOnCPU(e);if(n==="string"&&(a=!0),a){let h=e.map(A=>{let x=v.sizeFromShape(A.shape.slice(t));return Ae({inputs:{x:A},backend:r,attrs:{shape:[-1,x]}})}),d=h.map(A=>({vals:r.readSync(A.dataId),shape:A.shape})),c=T.computeOutShape(h.map(A=>A.shape),1),f=h[0].shape[0]===1,m=yte(d,c,n,f),g=T.computeOutShape(e.map(A=>A.shape),t),y=r.makeTensorInfo(g,n,m);return h.forEach(A=>r.disposeIntermediateTensorInfo(A)),y}let s=Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>s){let h=[];for(let c=0;c<e.length;c+=s){let f=e.slice(c,c+s);h.push(Gp(f,t,r))}let d=Gp(h,t,r);for(let c of h)r.disposeIntermediateTensorInfo(c);return d}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let h=new wae(e.map(d=>d.shape),t);return r.runWebGLProgram(h,e,n)}let{tensors2D:i,outShape:o}=Iae(e,t,r),l=new vae(i.map(h=>h.shape)),u=r.runWebGLProgram(l,i,n);i.forEach(h=>r.disposeIntermediateTensorInfo(h));let p=Ae({inputs:{x:u},attrs:{shape:o},backend:r});return r.disposeIntermediateTensorInfo(u),p}function Iae(e,t,r){let n=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Ae({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:r})),outShape:n}}function wS(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=v.parseAxisParam(a,t[0].shape)[0],i=T.computeOutShape(t.map(u=>u.shape),s);if(v.sizeFromShape(i)===0)return r.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(u=>v.sizeFromShape(u.shape)>0);if(o.length===1)return bn({inputs:{x:o[0]},backend:r});let l=o.map(u=>u.shape);return T.assertParamsConsistent(l,s),Gp(o,s,r)}var Sae={kernelName:Qo,backendName:"webgl",kernelFunc:wS},kS=class{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,A=m?3:1,x="",b="";r&&(n?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:x=`
          float activation(float x) {
            ${r}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${A}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},Cae=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,r=e.padInfo.top,n=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,h=e.filterHeight,d=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Tae=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=hn(this.outputShape.length);let{dataFormat:r}=t,n=Xr(),a=r==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let p=0;p<=1;p++)l+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${u};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${n.output} = result;
      }
    `}};function pf(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&r===1&&e[0]>1?[e[0],1]:null}function IS({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=n.texData.get(e.dataId),p=r.inChannels,h=l[0]*l[1]*l[2],d=r.outChannels,c=r.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(s!=null){let A=pf(s.shape,c);A!=null&&(s=Ae({inputs:{x:s},backend:n,attrs:{shape:A}}),y.push(s))}if(a!=null){let A=pf(a.shape,c);A!=null&&(a=Ae({inputs:{x:a},backend:n,attrs:{shape:A}}),y.push(a))}if(!((h===1||d===1)&&p>yS)&&u.isPacked&&c&&u.texture!=null&&l[2]%2!==0&&v.arraysEqual(u.shape.slice(-3),l.slice(-3))){let A=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,A,r.inChannels],dtype:e.dtype},b=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,v.assert(uh(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);let w=Ae({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});y.push(w);let I=df({a:x,b:w,backend:n,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),C=n.texData.get(I.dataId);v.assert(C.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=b,C.shape=r.outShape,g=bn({inputs:{x:I},backend:n}),g.shape=r.outShape,y.push(I)}else{let A=r.outHeight*r.outWidth,x=Ae({inputs:{x:e},backend:n,attrs:{shape:c?[r.batchSize,A,r.inChannels]:[r.batchSize,r.inChannels,A]}}),b=Ae({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}}),w=df({a:c?x:b,b:c?b:x,transposeA:!c,transposeB:m,backend:n,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=Ae({inputs:{x:w},backend:n,attrs:{shape:r.outShape}}),y.push(x),y.push(b),y.push(w)}for(let A of y)n.disposeIntermediateTensorInfo(A);return g}function SS({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:h,outHeight:d,dataFormat:c}=r,f=c==="channelsLast",m=l*u*p,g=d*h,y=[r.batchSize,m,g],A=!0,x=!1,b=[];if(s!=null){let Z=pf(s.shape,f);Z!=null&&(s=Ae({inputs:{x:s},backend:n,attrs:{shape:Z}}),b.push(s))}if(a!=null){let Z=pf(a.shape,f);Z!=null&&(a=Ae({inputs:{x:a},backend:n,attrs:{shape:Z}}),b.push(a))}let w=Ae({inputs:{x:t},backend:n,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w);let I=new Tae(y,r),C=[e.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],E=n.runWebGLProgram(I,[e],"float32",C),R=Ae({inputs:{x:E},backend:n,attrs:{shape:y}});b.push(E),b.push(R);let F=a!=null,$=s!=null,S=o==="leakyrelu",O=o?Km(o,!0):null,z=new gS(f?R.shape:w.shape,f?w.shape:R.shape,f?[r.batchSize,g,r.outChannels]:[r.batchSize,r.outChannels,g],A,x,F,O,$,S),j=f?[R,w]:[w,R];if(a&&j.push(a),$&&j.push(s),S){let Z=n.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));j.push(Z),b.push(Z)}let K=n.runWebGLProgram(z,j,"float32"),D=Ae({inputs:{x:K},backend:n,attrs:{shape:r.outShape}});b.push(K);for(let Z of b)n.disposeIntermediateTensorInfo(Z);return D}function Nae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=n,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h),c;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))c=IS({x:a,filter:s,convInfo:d,backend:r});else if(Y().getBool("WEBGL_CONV_IM2COL"))c=SS({x:a,filter:s,convInfo:d,backend:r});else{let m=new kS(d);c=r.runWebGLProgram(m,[a,s],"float32")}let f=Ae({inputs:{x:c},backend:r,attrs:{shape:d.outShape}});return r.disposeIntermediateTensorInfo(c),f}var Eae={kernelName:oi,backendName:"webgl",kernelFunc:Nae},Rae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},$ae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=r-1-e.padInfo.left,l=s?1:2,u=s?2:3,p=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Mae=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Fae=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=r-1-e.padInfo.top,u=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function _ae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=n,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,p,i,1,o,u,!1,h),c=new Rae(d);return r.runWebGLProgram(c,[a,s],"float32")}var Pae={kernelName:Sf,backendName:"webgl",kernelFunc:_ae};function zae(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=n,h=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(i,s.shape,o,1,l,p,!1,h),c=new $ae(d);return r.runWebGLProgram(c,[a,s],"float32")}var Oae={kernelName:li,backendName:"webgl",kernelFunc:zae};function Dae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=n,u=T.computeConv3DInfo(a.shape,s.shape,i,l,o),p=new Cae(u);return r.runWebGLProgram(p,[a,s],"float32")}var Lae={kernelName:mh,backendName:"webgl",kernelFunc:Dae};function Bae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=n,u=T.computeConv3DInfo(a.shape,l,i,1,o),p=new Mae(u);return r.runWebGLProgram(p,[a,s],"float32")}var Wae={kernelName:Cf,backendName:"webgl",kernelFunc:Bae};function Vae(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=n,u=T.computeConv3DInfo(l,s.shape,o,1,i),p=new Fae(u);return r.runWebGLProgram(p,[a,s],"float32")}var Gae={kernelName:Tf,backendName:"webgl",kernelFunc:Vae},Uae=Vd+`
  return cos(x);
`,jae=it({opSnippet:Uae}),Hae={kernelName:ui,backendName:"webgl",kernelFunc:jae},qae=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Kae=it({opSnippet:qae}),Xae={kernelName:di,backendName:"webgl",kernelFunc:Kae},Zae=class{constructor(e,t,r,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,h]=r;this.outputShape=[u,p,h,l];let d=n==="bilinear"?1:0,[c,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,y]=p>1?[`${(i-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[A,x,b]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${A});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Yae=e=>{let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,p=new Zae(a.shape,s.shape,o,l,u);return r.runWebGLProgram(p,[a,s,i],"float32")},Jae={kernelName:tl,backendName:"webgl",kernelFunc:Yae},P7=class{constructor(e,t,r,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op==="*"?"1.0":"0.0",i=r?s:`getX(${z7(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";r?(l=n?`end != ${o-1}`:"end != 0",u=n?"end + 1":"end - 1"):(l=n?`end + pow2 < ${o}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${At(a)} coords = getOutputCoords();
        int end = ${O7(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${O7(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${z7(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function z7(e,t,r){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function O7(e,t,r){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function CS(e,t,r,n,a,s){let i=t.shape.length,o=T.getAxesPermutation([n],i),l=t;o!=null&&(l=jr({inputs:{x:t},backend:r,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let p=l.shape[u],h=bn({inputs:{x:l},backend:r});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){let c=new P7(e,l.shape,!1,s),f=[[d]],m=h;h=r.runWebGLProgram(c,[h],h.dtype,f),r.disposeIntermediateTensorInfo(m)}if(a){let d=new P7(e,l.shape,a,s),c=h;h=r.runWebGLProgram(d,[h],h.dtype),r.disposeIntermediateTensorInfo(c)}if(o!=null){let d=T.getUndoAxesPermutation(o),c=jr({inputs:{x:h},backend:r,attrs:{perm:d}});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(l),c}return h}function Qae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return CS("*",a,r,s,i,o)}var ese={kernelName:el,backendName:"webgl",kernelFunc:Qae};function tse(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return CS("+",a,r,s,i,o)}var rse={kernelName:pi,backendName:"webgl",kernelFunc:tse};function nse(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(a.shape.length===1){let l=r.readSync(a.dataId),u=r.readSync(s.dataId),p=aS(l,u,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,p)}else if(a.shape.length===2){let l=r.bufferSync(a),u=r.bufferSync(s),p=mte(l,u,i,o);return r.makeTensorInfo(p.shape,s.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var ase={kernelName:Nf,backendName:"webgl",kernelFunc:nse},sse=class{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ise(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],p=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,d=u*s,c=p/(s*s),f=i==="NHWC"?[o,h,d,c]:[o,c,h,d],m=new sse(f,s,i);return r.runWebGLProgram(m,[a],a.dtype)}var ose={kernelName:rl,backendName:"webgl",kernelFunc:ise},TS=class{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hn(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";r&&(n?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:l=`
          float activation(float x) {
            ${r}
          }
        `,u="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${u}
        setOutput(result);
      }
    `}},NS=class{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hn(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,h=p,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<p;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<p;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let y=g*2;if(d+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<p&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<p)){let A=i%2===0?v.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${A};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):A===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${A};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<p&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<p&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<p&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<p&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<p&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let c="",f="";r&&(n?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`vec4 activation(vec4 x) {
          ${r}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function lse(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=n,p=l;p==null&&(p=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let h=T.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),d;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new NS(h):d=new TS(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return r.runWebGLProgram(d,[a,s],"float32",c)}var use={kernelName:hi,backendName:"webgl",kernelFunc:lse},dse=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},pse=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=r-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function hse(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=n,h=T.computeConv2DInfo(a.shape,p,i,o,l,u,!0),d=new dse(h);return r.runWebGLProgram(d,[a,s],"float32")}var cse={kernelName:Ef,backendName:"webgl",kernelFunc:hse};function fse(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=n,h=T.computeConv2DInfo(p,s.shape,i,o,l,u,!0),d=new pse(h);return r.runWebGLProgram(d,[a,s],"float32")}var mse={kernelName:Rf,backendName:"webgl",kernelFunc:fse},gse=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function yse(e){let{inputs:t,backend:r}=e,{x:n}=t,a=[...n.shape,...n.shape],s=v.sizeFromShape(n.shape),i=Ae({inputs:{x:n},backend:r,attrs:{shape:[s]}}),o=new gse(s),l=r.runWebGLProgram(o,[i],i.dtype),u=Ae({inputs:{x:l},backend:r,attrs:{shape:a}});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),u}var Ase={kernelName:$f,backendName:"webgl",kernelFunc:yse},xse=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:r,padInfo:n,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:h}=n;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${p}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function bse(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=n,u=T.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p,h=new xse(u);p=r.runWebGLProgram(h,[a,s],"float32");let d=Ae({inputs:{x:p},backend:r,attrs:{shape:u.outShape}});return r.disposeIntermediateTensorInfo(p),d}var vse={kernelName:gh,backendName:"webgl",kernelFunc:bse};function wse(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=T.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of p[m]){let{permutationIndices:y,expandDims:A}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=jr({inputs:{x:s[g]},backend:r,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let w=0;w<A.length;++w)b.splice(A[w],0,1);v.arraysEqual(x.shape,b)||(x=Ae({inputs:{x},backend:r,attrs:{shape:b}}),f.push(x)),d===null?d=x:(d=ux({inputs:{a:x,b:d},backend:r}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Zm({inputs:{x:d},backend:r,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&r.disposeIntermediateTensorInfo(m);return d}var kse={kernelName:yh,backendName:"webgl",kernelFunc:wse},Ise="return (x >= 0.0) ? x : (exp(x) - 1.0);",Sse=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Cse=it({opSnippet:Ise,packedOpSnippet:Sse}),Tse={kernelName:fi,backendName:"webgl",kernelFunc:Cse},Nse="return (b >= 1.0) ? a : a * (b + 1.0);",Ese=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Rse=e=>{let{inputs:t,backend:r}=e,{dy:n,y:a}=t,s=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oc(Ese,n.shape,a.shape):new Ku(Nse,n.shape,a.shape);return r.runWebGLProgram(s,[n,a],n.dtype)},$se={kernelName:Mf,backendName:"webgl",kernelFunc:Rse},Mse=`
  return vec4(equal(a, b));
`,Fse="return float(a == b);",_se=Ir({opSnippet:Fse,packedOpSnippet:Mse,dtype:"bool",cpuKernelImpl:Ate}),Pse={kernelName:nl,backendName:"webgl",kernelFunc:_se},zse=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Ose=it({opSnippet:zse}),Dse={kernelName:od,backendName:"webgl",kernelFunc:Ose},Lse=Vd+`
  return exp(x);
`,Bse=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ES=it({opSnippet:Lse,packedOpSnippet:Bse,cpuKernelImpl:xte,dtype:"float32"}),Wse={kernelName:mi,backendName:"webgl",kernelFunc:ES};function _y(e){let{inputs:t,attrs:r,backend:n}=e,{dim:a}=r,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(v.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),Ae({inputs:{x:s},backend:n,attrs:{shape:o}})}var Vse={kernelName:al,backendName:"webgl",kernelFunc:_y},D7="return exp(x) - 1.0;",Gse=it({opSnippet:D7,packedOpSnippet:D7,cpuKernelImpl:bte}),Use={kernelName:sl,backendName:"webgl",kernelFunc:Gse},L7=class{constructor(e,t,r){this.variableNames=["real","imag"];let n=t[1];this.outputShape=t;let a=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=r?`${n}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function RS(e,t,r){let n=r.texData.get(e.dataId),a=v.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=Ae({inputs:{x:e},backend:r,attrs:{shape:[i,s]}}),l=o.shape,u=new L7("real",l,t),p=new L7("imag",l,t),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],d=r.runWebGLProgram(u,h,"float32"),c=r.runWebGLProgram(p,h,"float32"),f=Qi({inputs:{real:d,imag:c},backend:r});r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c);let m=Ae({inputs:{x:f},backend:r,attrs:{shape:e.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(f),m}function jse(e){let{inputs:t,backend:r}=e,{input:n}=t;return RS(n,!1,r)}var Hse={kernelName:Ff,backendName:"webgl",kernelFunc:jse},qse=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function uc(e){let{backend:t,attrs:r}=e,{shape:n,value:a}=r,{dtype:s}=r;if(s=s||v.inferDtype(a),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(n));return i.fill(a),t.makeTensorInfo(n,s,i)}else{let i=new qse(n,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var Kse={kernelName:ld,backendName:"webgl",kernelFunc:uc},Xse=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Zse={kernelName:il,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,n=t,a=new Xse(r.shape);return n.runWebGLProgram(a,[r],r.dtype)}},B7="return floor(x);",Yse=it({opSnippet:B7,packedOpSnippet:B7,cpuKernelImpl:vte}),Jse={kernelName:gi,backendName:"webgl",kernelFunc:Yse},Qse=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,eie=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,tie=Ir({opSnippet:Qse,packedOpSnippet:eie,dtype:"int32"}),rie={kernelName:yi,backendName:"webgl",kernelFunc:tie},nie=class{constructor(e){this.variableNames=["A"];let t=Xr(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},aie=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Xr(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},sie={kernelName:Qp,backendName:"webgl",kernelFunc:iie},ku;function iie(e){let{inputs:t,backend:r,attrs:n}=e,{pixels:a}=t,{numChannels:s}=n,i=typeof HTMLVideoElement!="undefined"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[u,l],h=[u,l,s];(o||i)&&(ku==null&&(ku=document.createElement("canvas").getContext("2d")),ku.canvas.width=l,ku.canvas.height=u,ku.drawImage(a,0,0,l,u),a=ku.canvas);let d=r.makeTensorInfo(p,"int32");r.texData.get(d.dataId).usage=2,r.gpgpu.uploadPixelDataToTexture(r.getTexture(d.dataId),a);let c=Y().getBool("WEBGL_PACK")?new aie(h):new nie(h),f=r.runWebGLProgram(c,[d],"int32");return r.disposeData(d.dataId),f}function oie(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=T.convertConv2DDataFormat(p),g=T.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!1,m),y,A=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=IS({x:a,filter:s,convInfo:g,backend:r,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL"))y=SS({x:a,filter:s,convInfo:g,backend:r,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else{let b=i!=null,w=o!=null,I=c==="leakyrelu",C=c?Km(c,!1):null,E=new kS(g,b,C,w,I),R=[a,s],F=($,S)=>{if(S==="NCHW"&&$.shape.length===1&&$.shape[0]!==1){let O=Ae({inputs:{x:$},backend:r,attrs:{shape:[$.shape[0],1,1]}});return A.push(O),O}return $};if(b&&R.push(F(i,p)),w&&R.push(F(o,p)),I){let $=r.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));R.push($),A.push($)}y=r.runWebGLProgram(E,R,"float32")}let x=Ae({inputs:{x:y},backend:r,attrs:{shape:g.outShape}});return A.push(y),A.forEach(b=>r.disposeIntermediateTensorInfo(b)),x}var lie={kernelName:Ws,backendName:"webgl",kernelFunc:oie};function uie(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=n,f=[],m=p;m==null&&(m=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(a.shape,s.shape,l,m,u,h,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,A=d?Km(d,y):null,x=[a,s],b=i!=null,w=o!=null,I=d==="leakyrelu";if(b&&x.push(i),w&&x.push(o),I){let F=r.makeTensorInfo([],"float32",v.createScalarValue(c,"float32"));x.push(F),f.push(F)}let C;y?C=new NS(g,b,A,w,I):C=new TS(g,b,A,w,I);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=r.runWebGLProgram(C,x,"float32",E);return f.forEach(F=>r.disposeIntermediateTensorInfo(F)),R}var die={kernelName:Vs,backendName:"webgl",kernelFunc:uie},pie=class{constructor(e,t,r,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=r;let a=At(t.length),s=At(r.length),i=this.sliceDim>1?"strides[j]":"strides",o=At(n.length),l=n.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${a} strides = ${a}(${this.strides});
        ${o} paramsShape = ${o}(${this.paramsShape});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${l};
            flattenIndex += index * ${i};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function hie(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=a.shape,i=s[s.length-1],o=v.sizeFromShape(n.shape),[l,u,p,h]=T.prepareAndValidate(n,a),d=Ae({inputs:{x:a},backend:r,attrs:{shape:[u,i]}}),c=Ae({inputs:{x:n},backend:r,attrs:{shape:[v.sizeFromShape(n.shape)/p,p]}});if(r.shouldExecuteOnCPU([n,a])||n.dtype==="string"){let y=r.readSync(a.dataId),A=r.bufferSync(n),x=wte(y,A,n.dtype,u,i,p,h,n.shape,o);return r.makeTensorInfo(l,n.dtype,x.values)}let f=new pie(i,h,[u,p],n.shape),m=r.runWebGLProgram(f,[c,d],c.dtype),g=Ae({inputs:{x:m},backend:r,attrs:{shape:l}});return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(m),g}var cie={kernelName:ll,backendName:"webgl",kernelFunc:hie},fie=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let r=At(this.rank),n=mie(e,2);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function mie(e,t){let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)a===2?n.push("index"):n.push(`${r[a]}`);return n.join()}function $S(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n,l=v.parseAxisParam(i,a.shape)[0];if(Y().get("DEBUG")){let A=r.readSync(s.dataId),x=a.shape[l];for(let b=0;b<A.length;++b){let w=A[b];v.assert(w<=x-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${x-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=v.sizeFromShape(s.shape),h=[],d=Ae({inputs:{x:a},backend:r,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=Ae({inputs:{x:s},backend:r,attrs:{shape:[u.batchSize,p/u.batchSize]}});h.push(d),h.push(c);let f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(r.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let A=r.bufferSync(c),x=r.bufferSync(d),b=kte(x,A,f);return h.forEach(w=>r.disposeIntermediateTensorInfo(w)),r.makeTensorInfo(u.outputShape,b.dtype,b.values)}let m=new fie(d.shape,f),g=r.runWebGLProgram(m,[d,c],d.dtype);h.push(g);let y=Ae({inputs:{x:g},backend:r,attrs:{shape:u.outputShape}});return h.forEach(A=>r.disposeIntermediateTensorInfo(A)),y}var gie={kernelName:ol,backendName:"webgl",kernelFunc:$S},yie="return float(a > b);",Aie=`
  return vec4(greaterThan(a, b));
`,xie=Ir({opSnippet:yie,packedOpSnippet:Aie,cpuKernelImpl:Ite,dtype:"bool"}),bie={kernelName:ul,backendName:"webgl",kernelFunc:xie},vie="return float(a >= b);",wie=`
  return vec4(greaterThanEqual(a, b));
`,kie=Ir({opSnippet:vie,packedOpSnippet:wie,dtype:"bool",cpuKernelImpl:Ste}),Iie={kernelName:xi,backendName:"webgl",kernelFunc:kie};function Sie(e){let{inputs:t,backend:r}=e,{input:n}=t;return RS(n,!0,r)}var Cie={kernelName:_f,backendName:"webgl",kernelFunc:Sie},Tie="return float(!isnan(x) && !isinf(x));",Nie=it({opSnippet:Tie,dtype:"bool"}),Eie={kernelName:ud,backendName:"webgl",kernelFunc:Nie},Rie="return float(isinf(x));",$ie=it({opSnippet:Rie,dtype:"bool"}),Mie={kernelName:dd,backendName:"webgl",kernelFunc:$ie},Fie="return float(isnan(x));",_ie=it({opSnippet:Fie,dtype:"bool"}),Pie={kernelName:pd,backendName:"webgl",kernelFunc:_ie},zie="return float(a < b);",Oie=`
  return vec4(lessThan(a, b));
`,Die=Ir({opSnippet:zie,packedOpSnippet:Oie,cpuKernelImpl:Cte,dtype:"bool"}),Lie={kernelName:dl,backendName:"webgl",kernelFunc:Die},Bie="return float(a <= b);",Wie=`
  return vec4(lessThanEqual(a, b));
`,Vie=Ir({opSnippet:Bie,packedOpSnippet:Wie,cpuKernelImpl:Tte,dtype:"bool"}),Gie={kernelName:pl,backendName:"webgl",kernelFunc:Vie};function Uie(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=Nte(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}var jie={kernelName:Pf,backendName:"webgl",kernelFunc:Uie},Hie=Vd+`
  return x < 0.0 ? 0./0. : log(x);
`,qie=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Kie=it({opSnippet:Hie,packedOpSnippet:qie,cpuKernelImpl:Ete}),Xie={kernelName:wi,backendName:"webgl",kernelFunc:Kie},Zie=Vd+`
  return log(1.0 + x);
`,Yie=it({opSnippet:Zie}),Jie={kernelName:hd,backendName:"webgl",kernelFunc:Yie},Qie="return float(a >= 1.0 && b >= 1.0);",eoe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,toe=Ir({opSnippet:Qie,packedOpSnippet:eoe,dtype:"bool"}),roe={kernelName:hl,backendName:"webgl",kernelFunc:toe},noe="return float(!(x >= 1.0));",aoe=it({opSnippet:noe}),soe={kernelName:cl,backendName:"webgl",kernelFunc:aoe},ioe="return float(a >= 1.0 || b >= 1.0);",ooe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,loe=Ir({opSnippet:ioe,packedOpSnippet:ooe,dtype:"bool"}),uoe={kernelName:cd,backendName:"webgl",kernelFunc:loe},doe=class{constructor(e,t,r,n,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${r}) + float(${n}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},poe=class{constructor(e,t,r,n,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${r}) + float(${n}) * sum`;a===.5?o=`inversesqrt(${l})`:a===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},hoe=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n,u=Y().getBool("WEBGL_PACK_NORMALIZATION")?new poe(a.shape,s,i,o,l):new doe(a.shape,s,i,o,l);return r.runWebGLProgram(u,[a],a.dtype)},coe={kernelName:xh,backendName:"webgl",kernelFunc:hoe},foe=class{constructor(e,t,r,n,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=n,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${a})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},moe=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=n,h=new foe(a.shape,o,l,u,p);return r.runWebGLProgram(h,[a,s,i],a.dtype)},goe={kernelName:zf,backendName:"webgl",kernelFunc:moe};function yoe(e,t,r,n){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=Ae({inputs:{x:e},attrs:{shape:[s,a]},backend:n}),o=ql(i,e.dtype,"max",n),l=Ae({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}function MS(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=n,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=p!=null,d=r.shouldExecuteOnCPU([a]),c=a;if(h){if(d){let A=r.texData.get(c.dataId).values,x=new Array(o);for(let I=0;I<x.length;I++)x[I]=a.shape[p[I]];let b=lx(A,a.shape,a.dtype,p,x);c=r.makeTensorInfo(x,a.dtype);let w=r.texData.get(c.dataId);w.values=b}else c=Xm(a,p,r);u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("max",u,o);let[f,m]=T.computeOutAndReduceShapes(c.shape,u),g=f;i&&(g=T.expandShapeToKeepDim(f,l));let y;if(d){let A=r.texData.get(c.dataId).values,x=Rte(A,v.sizeFromShape(m),g,a.dtype);y=r.makeTensorInfo(g,a.dtype);let b=r.texData.get(y.dataId);b.values=x}else y=yoe(c,m,g,r);return h&&r.disposeIntermediateTensorInfo(c),y}var Aoe={kernelName:ki,backendName:"webgl",kernelFunc:MS},xoe=pS+`
  return max(a, b);
`,boe=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+qm+`
  return result;
`,voe=Ir({opSnippet:xoe,packedOpSnippet:boe,cpuKernelImpl:$te}),woe={kernelName:Ii,backendName:"webgl",kernelFunc:voe};function koe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;Od(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=T.computePool2DInfo(a.shape,s,i,u,o,l);if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))return bn({inputs:{x:a},backend:r});let h=new dh(p,"max",!1);return r.runWebGLProgram(h,[a],a.dtype)}var Ioe={kernelName:Si,backendName:"webgl",kernelFunc:koe};function Soe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=n,p=[1,1,1],h=T.computePool3DInfo(a.shape,s,i,p,o,u,l),d=new dx(h,"max",!1);return r.runWebGLProgram(d,[a],a.dtype)}var Coe={kernelName:bh,backendName:"webgl",kernelFunc:Soe},Toe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,r=e.strideWidth,n=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Noe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${h}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Eoe(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=n,h=[1,1,1],d=T.computePool3DInfo(i.shape,o,l,h,u,p),c=new dx(d,"max",!0),f=r.runWebGLProgram(c,[i],i.dtype),m=new Noe(d),g=r.runWebGLProgram(m,[a,f],i.dtype);return r.disposeIntermediateTensorInfo(f),g}var Roe={kernelName:Df,backendName:"webgl",kernelFunc:Eoe};function $oe(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t,o=s;Od([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=n,d=T.computePool2DInfo(o.shape,l,u,1,p,h),c=!0,f=new dh(d,"max",c),m=r.runWebGLProgram(f,[o],o.dtype),g=new Toe(d),y=r.runWebGLProgram(g,[a,m],o.dtype);return r.disposeIntermediateTensorInfo(m),y}var Moe={kernelName:Of,backendName:"webgl",kernelFunc:$oe};function Foe(e,t,r,n){let a=new dh(r,"max",!1),s=n.runWebGLProgram(a,[e],"float32");a=new dh(r,"max",!0,!0,t);let i=n.runWebGLProgram(a,[e],"float32");return[s,i]}var _oe={kernelName:Lf,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=r;v.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let p=T.computePool2DInfo(n.shape,a,s,u,i),[h,d]=Foe(n,o,p,l);return[h,d]}};function Poe(e,t,r,n){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=Ae({inputs:{x:e},attrs:{shape:[s,a]},backend:n}),o=ql(i,"float32","mean",n),l=Ae({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}var zoe={kernelName:Ci,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{keepDims:a,axis:s}=t,i=r,o=n.shape.length,l=v.parseAxisParam(s,n.shape),u=l,p=T.getAxesPermutation(u,o),h=p!=null,d=i.shouldExecuteOnCPU([n]),c=[],f=n;if(h){if(d){let x=i.texData.get(f.dataId).values,b=new Array(o);for(let C=0;C<b.length;C++)b[C]=n.shape[p[C]];let w=lx(x,n.shape,n.dtype,p,b);f=i.makeTensorInfo(b,n.dtype);let I=i.texData.get(f.dataId);I.values=w}else f=Xm(n,p,i);c.push(f),u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=T.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=T.expandShapeToKeepDim(m,l));let A=Poe(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return A}};function Ooe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,l=v.parseAxisParam(s,a.shape),u=l,p=T.getAxesPermutation(u,o),h=a;p!=null&&(h=jr({inputs:{x:a},backend:r,attrs:{perm:p}}),u=T.getInnerMostAxes(u.length,a.shape.length)),T.assertAxesAreInnerMostDims("min",u,o);let[d,c]=T.computeOutAndReduceShapes(h.shape,u),f=v.sizeFromShape(c),m=Ae({inputs:{x:h},backend:r,attrs:{shape:[-1,f]}}),g=ql(m,m.dtype,"min",r),y;if(i){let A=T.expandShapeToKeepDim(d,l);y=Ae({inputs:{x:g},backend:r,attrs:{shape:A}})}else y=Ae({inputs:{x:g},backend:r,attrs:{shape:d}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),p!=null&&r.disposeIntermediateTensorInfo(h),y}var Doe={kernelName:Ti,backendName:"webgl",kernelFunc:Ooe},Loe=pS+`
  return min(a, b);
`,Boe=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+qm+`
  return result;
`,Woe=Ir({opSnippet:Loe,packedOpSnippet:Boe,cpuKernelImpl:Mte}),Voe={kernelName:Ni,backendName:"webgl",kernelFunc:Woe},Goe=class{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((u,p)=>u[0]+e[p]+u[1]);let n=e.length,a=At(n),s=t.map(u=>u[0]).join(","),i=t.map((u,p)=>u[0]+e[p]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),l=r==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},Uoe=class{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,f)=>c[0]+e[f]+c[1]);let n=e.length,a=At(n),s=t.map(c=>c[0]).join(","),i=t.map((c,f)=>c[0]+e[f]).join(","),o=Gr("rc",n),l=Gr("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${l.slice(-2).join()})`,h=r==="reflect"?0:1,d="";if(n===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${o[n-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${o[n-1]} += 1;
        if(${u}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
        rc = outputLoc;
        ${o[n-2]} += 1;
        if(${o[n-2]} < ${this.outputShape[n-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${p});
          ${o[n-1]} += 1;
          if(${u}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},joe=({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{paddings:a,mode:s}=r,i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uoe(n.shape,a,s):new Goe(n.shape,a,s);return t.runWebGLProgram(i,[n],n.dtype)},Hoe={kernelName:Ei,backendName:"webgl",kernelFunc:joe},qoe=`if (b == 0.0) return NAN;
  return mod(a, b);`,Koe=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+qm+`
  return result;
`,Xoe=Ir({opSnippet:qoe,packedOpSnippet:Koe}),Zoe={kernelName:fd,backendName:"webgl",kernelFunc:Xoe},Yoe=class{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Joe=`
if (a == b) {
  return 1.0;
};
return a / b;`,Qoe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,FS=Ir({opSnippet:Joe,packedOpSnippet:Qoe,checkOutOfBounds:!0}),ele={kernelName:ci,backendName:"webgl",kernelFunc:FS},W7="return a - b;",_S=Ir({opSnippet:W7,packedOpSnippet:W7,supportsComplex:!0,cpuKernelImpl:Xte}),tle={kernelName:Hi,backendName:"webgl",kernelFunc:_S};function PS(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=v.parseAxisParam([s],a.shape),o=MS({inputs:{x:a},backend:r,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=Ae({inputs:{x:o},backend:r,attrs:{shape:l}}),p=_S({inputs:{a,b:u},backend:r}),h=ES({inputs:{x:p},backend:r}),d=Zm({inputs:{x:h},backend:r,attrs:{axis:i,keepDims:!1}}),c=Ae({inputs:{x:d},backend:r,attrs:{shape:l}}),f=FS({inputs:{a:h,b:c},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),f}var rle={kernelName:Ui,backendName:"webgl",kernelFunc:PS};function nle(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n,l=o?a:PS({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),u=l.shape[0],p=l.shape[1],h=new Yoe(u,p,s),d=[[i]],c=r.runWebGLProgram(h,[l],"int32",d);return o||r.disposeIntermediateTensorInfo(l),c}var ale={kernelName:Bf,backendName:"webgl",kernelFunc:nle},sle=ra+`
  return -x;
`,ile=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function ole(e){let{inputs:t,backend:r}=e,{x:n}=t;if(r.shouldExecuteOnCPU([n])){let s=r.texData.get(n.dataId),[i,o]=_te(s.values,n.shape,n.dtype);return r.makeTensorInfo(o,n.dtype,i)}let a;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new _o(n.shape,ile):a=new Qa(n.shape,sle),r.runWebGLProgram(a,[n],n.dtype)}var lle={kernelName:fl,backendName:"webgl",kernelFunc:ole},ule=ea.nonMaxSuppressionV3Impl;function dle(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n,u=r.readSync(a.dataId),p=r.readSync(s.dataId),{selectedIndices:h}=ule(u,p,i,o,l);return r.makeTensorInfo([h.length],"int32",new Int32Array(h))}var ple={kernelName:gl,backendName:"webgl",kernelFunc:dle},hle=ea.nonMaxSuppressionV4Impl;function cle(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n,p=r.readSync(a.dataId),h=r.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=hle(p,h,i,o,l,u);return[r.makeTensorInfo([d.length],"int32",new Int32Array(d)),r.makeTensorInfo([],"int32",new Int32Array([c]))]}var fle={kernelName:md,backendName:"webgl",kernelFunc:cle},mle=ea.nonMaxSuppressionV5Impl;function gle(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n,p=r.readSync(a.dataId),h=r.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=mle(p,h,d,c,f,m);return[r.makeTensorInfo([g.length],"int32",new Int32Array(g)),r.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var yle={kernelName:yl,backendName:"webgl",kernelFunc:gle},Ale=class{constructor(e,t,r,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${r}),
                      float(index == coords.y)));
      }
    `}},xle=e=>{let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=n,l=v.sizeFromShape(a.shape),u=new Ale(l,s,i,o),p=Ae({inputs:{x:a},backend:r,attrs:{shape:[l]}}),h=r.runWebGLProgram(u,[p],a.dtype);r.disposeIntermediateTensorInfo(p);let d=[...a.shape,s],c=Ae({inputs:{x:h},backend:r,attrs:{shape:d}});return r.disposeIntermediateTensorInfo(h),c},ble={kernelName:xl,backendName:"webgl",kernelFunc:xle};function hf(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="complex64"){let a=lc({inputs:{input:n},backend:r}),s=hf({inputs:{x:a},backend:r}),i=Ym({inputs:{input:n},backend:r}),o=hf({inputs:{x:i},backend:r}),l=Qi({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}else return uc({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:r})}var vle={kernelName:Pl,backendName:"webgl",kernelFunc:hf};function zS(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let a=lc({inputs:{input:n},backend:r}),s=zS({inputs:{x:a},backend:r}),i=Ym({inputs:{input:n},backend:r}),o=hf({inputs:{x:i},backend:r}),l=Qi({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}else return uc({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:r})}var wle={kernelName:Al,backendName:"webgl",kernelFunc:zS};function kle(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(t.length===1)return _y({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{v.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(p=>{let h=_y({inputs:{input:p},backend:r,attrs:{dim:a}});return o.push(h),h}),u=wS({inputs:l,backend:r,attrs:{axis:a}});return o.forEach(p=>r.disposeIntermediateTensorInfo(p)),u}var Ile={kernelName:bl,backendName:"webgl",kernelFunc:kle},Sle=class{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let n=e.length,a=At(n),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},Cle=class{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let n=e.length,a=At(n),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=Gr("rc",n),l=Gr("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[n-1]} += 1;
       if(${u}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${o[n-2]} += 1;
       if(${o[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${o[n-1]} += 1;
         if(${u}) {`],d=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=n===1?2:4;f<m;f++)c+=`
        ${h[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${p});
        }
      `;c+=n===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},OS=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;if(v.sizeFromShape(a.shape)===0){let u=s.map((p,h)=>p[0]+a.shape[h]+p[1]);return uc({backend:r,attrs:{shape:u,value:i,dtype:a.dtype}})}let o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cle(a.shape,s,i):new Sle(a.shape,s,i),l=[[i]];return r.runWebGLProgram(o,[a],a.dtype,l)},Tle={kernelName:$i,backendName:"webgl",kernelFunc:OS},Nle=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Ele=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+qm+`
  return result;
`,Rle=Ir({opSnippet:Nle,packedOpSnippet:Ele}),$le={kernelName:Mi,backendName:"webgl",kernelFunc:Rle};function Mle(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,l=[],u=v.parseAxisParam(s,a.shape),p=u,h=T.getAxesPermutation(p,o),d=a;h!=null&&(d=jr({inputs:{x:a},backend:r,attrs:{perm:h}}),p=T.getInnerMostAxes(p.length,o),l.push(d)),T.assertAxesAreInnerMostDims("prod",p,o);let c;if(r.shouldExecuteOnCPU([d])){let f=r.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=zte(d.shape,d.dtype,f,p);c=r.makeTensorInfo(g,y,m)}else{let[f,m]=T.computeOutAndReduceShapes(d.shape,p),g=v.sizeFromShape(m),y=Ae({inputs:{x:d},backend:r,attrs:{shape:[-1,g]}}),A=$h(a.dtype),x=ql(y,A,"prod",r);c=Ae({inputs:{x},backend:r,attrs:{shape:f}}),l.push(y),l.push(x)}if(i){l.push(c);let f=T.expandShapeToKeepDim(c.shape,u);c=Ae({inputs:{x:c},backend:r,attrs:{shape:f}})}return l.forEach(f=>r.disposeIntermediateTensorInfo(f)),c}var Fle={kernelName:_i,backendName:"webgl",kernelFunc:Mle},DS=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:s,dtype:i}=r,o=Ote(n,a,s,i);return t.makeTensorInfo([o.length],i,o)},_le={kernelName:gd,backendName:"webgl",kernelFunc:DS},Ple="return 1.0 / x;",zle=it({opSnippet:Ple}),Ole={kernelName:yd,backendName:"webgl",kernelFunc:zle},Dle=ra+`
  return (x < 0.0) ? 0.0 : x;
`,Lle=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ble=it({opSnippet:Dle,packedOpSnippet:Lle}),Wle={kernelName:Pi,backendName:"webgl",kernelFunc:Ble},Vle=ra+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Gle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ule=it({opSnippet:Vle,packedOpSnippet:Gle}),jle={kernelName:Di,backendName:"webgl",kernelFunc:Ule},Hle=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],p=[n&&t>1?t-1:t,n&&r>1?r-1:r],h;a?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},qle=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],p=[n&&t>1?t-1:t,n&&r>1?r-1:r],h;a?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Kle(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,p=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qle(a.shape,l,u,s,i):new Hle(a.shape,l,u,s,i);return r.runWebGLProgram(p,[a],"float32")}var Xle={kernelName:Oi,backendName:"webgl",kernelFunc:Kle},Zle=class{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],l=[r&&s>1?s-1:s,r&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Yle(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new Zle(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}var Jle={kernelName:Vf,backendName:"webgl",kernelFunc:Yle},Qle=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],p=[n&&t>1?t-1:t,n&&r>1?r-1:r],h=n?"0.5":"0.0",d;a?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},eue=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],p=[n&&t>1?t-1:t,n&&r>1?r-1:r],h=n?"0.5":"0.0",d;a?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function tue(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,p=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new eue(a.shape,l,u,s,i):new Qle(a.shape,l,u,s,i);return r.runWebGLProgram(p,[a],a.dtype)}var rue={kernelName:zi,backendName:"webgl",kernelFunc:tue},nue=class{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],l=[r&&s>1?s-1:s,r&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function aue(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new nue(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}var sue={kernelName:Wf,backendName:"webgl",kernelFunc:aue},iue=class{constructor(e,t){this.variableNames=["x"];let r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>n(o)).join(","),s=At(r);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},oue=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;let n=Gr("rc",r),a=`${n[r-1]} + 1 < ${this.outputShape[r-1]}`,s=`${n[r-2]} + 1 < ${this.outputShape[r-2]}`,i=At(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(n.slice())};
          if(${a}){
            result.g = ${l(n.slice())};
          }
          if(${s}) {
            result.b = ${u(n.slice())};
            if(${a}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return h(c)}function l(c){return c[r-1]="("+c[r-1]+" + 1)",h(c)}function u(c){return c[r-2]="("+c[r-2]+" + 1)",h(c)}function p(c){return c[r-1]="("+c[r-1]+" + 1)",c[r-2]="("+c[r-2]+" + 1)",h(c)}function h(c){let f=e.map((y,A)=>d(A,c)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(c,f){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${f[c]} - 1`:`${f[c]}`}}};function lue(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n,i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return bn({inputs:{x:a},backend:r});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oue(a.shape,o):new iue(a.shape,o);return r.runWebGLProgram(l,[a],a.dtype)}var uue={kernelName:wl,backendName:"webgl",kernelFunc:lue},due=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let r=e[1],n=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},pue={kernelName:zl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=r,l=new due(n.shape,s),[u,p]=T.getImageCenter(i,n.shape[1],n.shape[2]),h=[[u,p,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[n],n.dtype,h)}},hue=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,cue=it({opSnippet:hue}),fue={kernelName:kl,backendName:"webgl",kernelFunc:cue},mue="return inversesqrt(x);",gue=it({opSnippet:mue,cpuKernelImpl:Dte}),yue={kernelName:Li,backendName:"webgl",kernelFunc:gue},LS=class{constructor(e,t,r,n,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=At(a.length),l=At(s.length),u="";r===1?u="i":r===2&&(u="i, j");let p=`getIndices(${u})`,h="";n===1?h="i":n===2&&(h="i, coords[1]");let d=`getUpdates(${h})`,c=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${a});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${c};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Aue(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=T.calculateShapes(s,a,i),d=[h/u,u];if(h===0)return r.makeTensorInfo(i,a.dtype);let c=Ae({inputs:{x:a},backend:r,attrs:{shape:[l,o]}}),f=Ae({inputs:{x:s},backend:r,attrs:{shape:[l,u]}}),m=r.makeTensorInfo([],"float32",new Float32Array([0])),g=new LS(l,o,c.shape.length,f.shape.length,p,d),y=r.runWebGLProgram(g,[f,c,m],f.dtype),A=Ae({inputs:{x:y},backend:r,attrs:{shape:i}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(m),A}var xue={kernelName:Il,backendName:"webgl",kernelFunc:Aue},bue=class{constructor(e,t,r,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=Y().getNumber("WEBGL_VERSION")===2?a:s,o=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function vue(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=new bue(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return r.runWebGLProgram(o,[a,s],"int32",l)}var wue={kernelName:Gf,backendName:"webgl",kernelFunc:vue},kue=class{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let n,a;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)a="resRC",n="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);n=o.join(),a=l.join()}let s=At(r);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function Iue(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t,i=new kue(n.shape.length,a.shape,a.shape.length);return r.runWebGLProgram(i,[n,a,s],Rr(a.dtype,s.dtype))}var Sue={kernelName:Sl,backendName:"webgl",kernelFunc:Iue},Cue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Tue=it({opSnippet:Cue}),Nue={kernelName:Ad,backendName:"webgl",kernelFunc:Tue},Eue=Vd+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Rue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$ue=it({opSnippet:Eue,packedOpSnippet:Rue,cpuKernelImpl:Bte}),Mue={kernelName:Wi,backendName:"webgl",kernelFunc:$ue},Fue=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,_ue=it({opSnippet:Fue}),Pue={kernelName:xd,backendName:"webgl",kernelFunc:_ue},zue=Vd+`
  return sin(x);
`,Oue=it({opSnippet:zue}),Due={kernelName:Bi,backendName:"webgl",kernelFunc:Oue},Lue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Bue=it({opSnippet:Lue}),Wue={kernelName:Tl,backendName:"webgl",kernelFunc:Bue},Vue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Gue=it({opSnippet:Vue}),Uue={kernelName:bd,backendName:"webgl",kernelFunc:Gue},jue=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;v.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,A)=>y*A),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],p=OS({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(p.shape,s,o,!1),d=T.getPermuted(h.length,s.length,!1),c=T.getReshapedPermuted(p.shape,s,o,!1),f=Ae({inputs:{x:p},backend:r,attrs:{shape:h}}),m=jr({inputs:{x:f},backend:r,attrs:{perm:d}}),g=Ae({inputs:{x:m},backend:r,attrs:{shape:c}});return u.push(p),u.push(f),u.push(m),u.forEach(y=>r.disposeIntermediateTensorInfo(y)),g},Hue={kernelName:Nl,backendName:"webgl",kernelFunc:jue};function que(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.readSync(n.dataId),l=r.readSync(a.dataId),u=r.readSync(s.dataId),p=r.readSync(i.dataId)[0],[h,d,c,f,m]=Vte(o,n.shape,n.dtype,l,a.dtype,u,p);return[r.makeTensorInfo(d,n.dtype,h),r.makeTensorInfo([d[0]],a.dtype,c),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var Kue={kernelName:wh,backendName:"webgl",kernelFunc:que};function Xue(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.readSync(a.dataId)),o=r.readSync(n.dataId),l=Array.from(r.readSync(s.dataId)),[u,p,h]=Gte(o,n.shape,n.dtype,i,l);return[r.makeTensorInfo(p,n.dtype,u),r.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var Zue={kernelName:vd,backendName:"webgl",kernelFunc:Xue};function Yue(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,p]=iS(i,n.shape,n.dtype,o,l,!0);return r.makeTensorInfo(p,n.dtype,u)}var Jue={kernelName:kh,backendName:"webgl",kernelFunc:Yue};function Que(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,p]=iS(i,n.shape,n.dtype,o,l);return r.makeTensorInfo(p,n.dtype,u)}var ede={kernelName:Ih,backendName:"webgl",kernelFunc:Que};function tde(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=T.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=r.bufferSync(a),A=r.bufferSync(s),x=v.decodeString(r.readSync(i.dataId)[0]),b=Lte(y,A,o,d,p,u,l,h,x,c);return r.makeTensorInfo(o,b.dtype,b.values)}let f=new LS(u,l,a.shape.length,s.shape.length,h,[d,1],c),m=r.runWebGLProgram(f,[s,a,i],s.dtype),g=Ae({inputs:{x:m},backend:r,attrs:{shape:o}});return r.disposeIntermediateTensorInfo(m),g}var rde={kernelName:Sh,backendName:"webgl",kernelFunc:tde};function nde(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=a.shape.length,p=new Array(u).fill(0),h=a.shape.slice();return l.map(d=>{let c=[...h];c[o]=d;let f=Gd({inputs:{x:a},backend:r,attrs:{begin:p,size:c}});return p[o]+=d,f})}var ade={kernelName:El,backendName:"webgl",kernelFunc:nde},V7="return sqrt(x);",sde=it({opSnippet:V7,packedOpSnippet:V7,cpuKernelImpl:Ute}),ide={kernelName:Vi,backendName:"webgl",kernelFunc:sde},ode="return x * x;",lde=it({opSnippet:ode}),ude={kernelName:wd,backendName:"webgl",kernelFunc:lde},G7="return (a - b) * (a - b);",dde=Ir({opSnippet:G7,packedOpSnippet:G7}),pde={kernelName:ji,backendName:"webgl",kernelFunc:dde};function hde({inputs:e,attrs:t,backend:r}){let{x:n}=e,a=ra+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Qa(n.shape,a);return r.runWebGLProgram(s,[n],n.dtype)}var cde={kernelName:Ki,backendName:"webgl",kernelFunc:hde},fde=class{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;let n=r.length,a=At(r.length),s=At(r.length),i="";if(n===1)i="coords * strides + begin";else{let o=0;i=r.map((l,u)=>(o++,r.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function mde(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Lt.sliceInfo(a.shape,s,i,o,l,u,p,h,d),w;if(m)w=Ae({inputs:{x:a},backend:r,attrs:{shape:f}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let C=Lt.computeOutShape(A,x,b),E=Gd({inputs:{x:a},backend:r,attrs:{begin:A,size:C}});w=Ae({inputs:{x:E},backend:r,attrs:{shape:f}}),r.disposeIntermediateTensorInfo(E)}else if(r.shouldExecuteOnCPU([a])){let C=r.readSync(a.dataId),E=Oe(a.shape,a.dtype,C),R=jte(c,E,b,A);w=r.makeTensorInfo(f,a.dtype,R.values)}else{let C=new fde(A,b,c);w=r.runWebGLProgram(C,[a],a.dtype)}let I=Ae({inputs:{x:w},backend:r,attrs:{shape:f}});return r.disposeIntermediateTensorInfo(w),I}var gde={kernelName:Rl,backendName:"webgl",kernelFunc:mde};function yde(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:p,dataSplits:h}=t,d=r.readSync(p.dataId),c=r.readSync(h.dataId),[f,m]=Hte(d,c,a,s,i,o,l,u);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(h.shape,"int32",m)]}var Ade={kernelName:kd,backendName:"webgl",kernelFunc:yde};function xde(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.readSync(s.dataId),l=r.readSync(i.dataId)[0],[u,p,h]=qte(o,l,a),d=p.length;return[r.makeTensorInfo([d,2],"int32",u),r.makeTensorInfo([d],"string",p),r.makeTensorInfo([2],"int32",new Int32Array(h))]}var bde={kernelName:Ch,backendName:"webgl",kernelFunc:xde};function vde(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=r.readSync(s.dataId),o=Kte(i,a);return r.makeTensorInfo(s.shape,"int32",o)}var wde={kernelName:Th,backendName:"webgl",kernelFunc:vde},kde="return tan(x);",Ide=it({opSnippet:kde}),Sde={kernelName:$l,backendName:"webgl",kernelFunc:Ide},Cde=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Tde=it({opSnippet:Cde}),Nde={kernelName:qi,backendName:"webgl",kernelFunc:Tde},Ede=class{constructor(e,t){this.variableNames=["A"];let r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[s]*t[s];this.outputShape=r,this.rank=r.length;let n=At(this.rank),a=Rde(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function Rde(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let a=0;a<e.length;a++)n.push(`imod(${r[a]}, ${e[a]})`);return n.join()}function BS(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;if(a.dtype==="string"||a.shape.length>5){let o=r.readSync(a.dataId),l=a.dtype==="string"?o.map(h=>v.decodeString(h)):o,u=Oe(a.shape,a.dtype,l),p=Zte(u,s);return r.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new Ede(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}var $de={kernelName:ss,backendName:"webgl",kernelFunc:BS},Mde=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Fde=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Io(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function U7(e){let t=1;for(;t<e;)t*=2;return t}function _de(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n,o=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,p=u[u.length-1];if(r.shouldExecuteOnCPU([a])||p<o||s>l){let R=r.readSync(a.dataId),[F,$]=Yte(R,u,a.dtype,s,i);return[r.makeTensorInfo(F.shape,F.dtype,F.values),r.makeTensorInfo($.shape,$.dtype,$.values)]}if(s===0)return u[u.length-1]=0,[r.makeTensorInfo(u,a.dtype,[]),r.makeTensorInfo(u,"int32",[])];if(p===1)return[a,uc({attrs:{shape:u,dtype:"int32",value:0},backend:r})];let h=r.texData.get(a.dataId),d=h!==null&&h.isPacked,c=d?r.unpackTensor(a):a,f=v.sizeFromShape(u)/p,m=Ae({inputs:{x:c},attrs:{shape:[f,p]},backend:r});d&&Io(r,c);let g=U7(s),y=U7(p),A=null,x=()=>A===null?[m,m]:[m,A],b=(R,F,$)=>{let S=x(),O=new Mde($),z=[[p],[A===null?1:0],[Number.NEGATIVE_INFINITY],[R],[F]],j=A;A=r.runWebGLProgram(O,S,"int32",z),Io(r,j)};for(let R=1;R<g;R*=2){let F=R*2;for(let $=R;$>=1;$/=2)b(F,$,[f,y])}for(let R=y;R>g;R/=2){let F=x(),$=new Fde([f,R/2]),S=[[p],[A===null?1:0],[g]],O=A;A=r.runWebGLProgram($,F,"int32",S),Io(r,O);let z=g/2,j=z*2;for(let K=z;K>=1;K/=2)b(j,K,A.shape)}let w=A;A=Gd({inputs:{x:A},backend:r,attrs:{begin:0,size:[f,s]}}),Io(r,w);let I=$S({inputs:{x:m,indices:A},backend:r,attrs:{axis:1,batchDims:1}});Io(r,m);let C=u.slice(0,-1);C.push(s),w=A,A=Ae({inputs:{x:A},attrs:{shape:C},backend:r}),Io(r,w);let E=I;return I=Ae({inputs:{x:I},attrs:{shape:C},backend:r}),Io(r,E),[I,A]}var Pde={kernelName:Ml,backendName:"webgl",kernelFunc:_de},zde=class{constructor(e,t,r,n,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=r==="nearest"?1:2,o;switch(n){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Ode(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=a.shape,[f,m]=u!=null?u:[h,d],g=[p,f,m,c],y=new zde(h,d,i,o,l,g);return r.runWebGLProgram(y,[a,s],"float32")}var Dde={kernelName:Fl,backendName:"webgl",kernelFunc:Ode};function Lde(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;Od(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=Jte(i,a,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}var Bde={kernelName:Uf,backendName:"webgl",kernelFunc:Lde};function Wde(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),p=0;for(let m=0;m<o;m++)m!==s&&(u[p++]=i.shape[m]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;let g=Gd({inputs:{x:i},backend:r,attrs:{begin:d,size:c}}),y=Ae({inputs:{x:g},backend:r,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>r.disposeIntermediateTensorInfo(m)),f}var Vde={kernelName:_l,backendName:"webgl",kernelFunc:Wde},Gde=class{constructor(e,t){this.variableNames=["x","segmentIds"];let r=e.windowSize,n=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/r);this.outputShape=[n,i];let o="0.0",l="sumValue",u=Math.floor(r/4)*4,p=r%4,h=`
        sumValue += dot(values, segFilter);
    `,d="";a%r>0&&(d=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function Ude(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n,o=a.shape.length,l=[],u=0,p=T.getAxesPermutation([u],o),h=a;p!=null&&(h=jr({inputs:{x:a},backend:r,attrs:{perm:p}}),l.push(h),u=T.getInnerMostAxes(1,o)[0]);let d=T.segment_util.computeOutShape(h.shape,u,i),c=v.sizeFromShape([h.shape[u]]),f=Ae({inputs:{x:h},backend:r,attrs:{shape:[-1,c]}});l.push(f);let m=$h(a.dtype),g=(b,w,I,C,E)=>{let R=b.shape[0],F=b.shape[1],$=T.segment_util.segOpComputeOptimalWindowSize(F,E),S={windowSize:$,inSize:F,batchSize:R,numSegments:E},O=new Gde(S,w),z=r.compileAndRun(O,[b,I],C);if(l.push(z),z.shape[1]===E)return z;let j=DS({backend:r,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),K=BS({inputs:{x:j},backend:r,attrs:{reps:[F/$]}});return l.push(j),l.push(K),g(z,w,K,C,E)},y=g(f,"unsortedSegmentSum",s,m,i),A=Ae({inputs:{x:y},backend:r,attrs:{shape:d}}),x=A;if(p!=null){l.push(A);let b=T.getUndoAxesPermutation(p);x=jr({inputs:{x},backend:r,attrs:{perm:b}})}return l.forEach(b=>r.disposeIntermediateTensorInfo(b)),x}var jde={kernelName:Nh,backendName:"webgl",kernelFunc:Ude},Hde=[qre,Xre,Jre,tne,nne,ine,lne,dne,fne,gne,xne,wne,Sne,Ene,Mne,_ne,zne,Bne,Vne,Une,Kne,tae,nae,sae,pae,cae,yae,Nre,bae,Sae,Eae,Pae,Oae,Lae,Wae,Gae,Hae,Xae,Jae,ese,rse,ase,ose,use,cse,mse,Ase,vse,kse,Tse,$se,Pse,Dse,Wse,Vse,Use,Hse,Kse,Zse,Jse,rie,sie,lie,die,cie,gie,bie,Iie,Tre,Cie,kae,Eie,Mie,Pie,Rre,Lie,Gie,jie,Xie,Jie,roe,soe,uoe,coe,goe,Aoe,woe,Ioe,Coe,Roe,Moe,_oe,zoe,Doe,Voe,Hoe,Zoe,ale,Pre,lle,ple,fle,yle,oae,ble,wle,Ile,Tle,$le,Mre,Fle,_le,lae,ele,Ole,Wle,jle,Ore,Xle,Jle,rue,sue,uue,pue,fue,yue,xue,wue,Sue,Nue,Mue,Pue,Due,Wue,Qne,rle,Uue,Hue,Kue,Zue,Jue,ede,rde,ade,ide,ude,pde,cde,gde,Ade,bde,wde,tle,Ure,Sde,Nde,$de,Pde,Dde,jre,Bde,Vde,jde,vle];for(let e of Hde)Jn(e);var eo=Y();eo.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);eo.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);eo.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);eo.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);eo.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);eo.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);eo.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);eo.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!1);var qde="return a + b;",Kde="return areal * breal - aimag * bimag;",Xde="return areal * bimag + aimag * breal;",Zde="return a / b;",Yde="return a * b;",Jde="return (a - b) * (a - b);",Qde="return a - b;",epe="return f32(a == b);",tpe="return vec4<f32>(a == b);",rpe="return f32(a > b);",npe="return vec4<f32>(a > b);",ape="return f32(a >= b);",spe="return vec4<f32>(a >= b);",ipe="return f32(a < b);",ope="return vec4<f32>(a < b);",lpe="return f32(a <= b);",upe="return vec4<f32>(a <= b);",dpe="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",ppe=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,hpe=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,WS=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,cpe=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,fpe=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,mpe="return f32(a != b);",gpe="return vec4<f32>(a != b);",ype=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Ape=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${WS}
  return resultTemp;
  `,xpe="if (a < 0.0) { return b * a; }  return a;",bpe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function j7(e,t){let r=t?WS:hpe;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+r+`
    return resultTemp;
  `:r+`
    return ${e}(a, b);
  `}function cf(e,t){switch(e){case 0:return Yde;case 1:return qde;case 2:return Qde;case 3:return Zde;case 4:return t?tpe:epe;case 5:return t?npe:rpe;case 6:return t?spe:ape;case 7:return t?ope:ipe;case 8:return t?upe:lpe;case 9:return t?ppe:dpe;case 10:return t?gpe:mpe;case 11:return Jde;case 12:return t?fpe:cpe;case 14:return t?bpe:xpe;case 15:return j7("max",t);case 16:return j7("min",t);case 13:return t?Ape:ype;case 17:return Kde;case 18:return Xde;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var vpe="return abs(a);",wpe="return ceil(a);",kpe="return cos(a);",Ipe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Spe="return exp(a) - 1.0;",Cpe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Tpe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Npe="return exp(a);",Epe="return floor(a);",Rpe="return a;",$pe=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Mpe="return f32(!(a >= 1.0));",Fpe="return -a;",_pe="if (a < 0.0) { return uniforms.alpha * a; } return a;",Ppe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,zpe="return select(a, 0.0, a < 0.0);",Ope="return clamp(a, 0.0, 6.0);",Dpe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Lpe=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Bpe="return 1.0/sqrt(a);",Wpe="return 1.0 / (1.0 + exp(-1.0 * a));",Vpe="return sin(a);",Gpe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Upe="return sqrt(a);",jpe="return a * a;",Hpe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,qpe="return f32(i32((a)));";function To(e,t){switch(e){case 0:return vpe;case 2:return kpe;case 3:return Ipe;case 1:return wpe;case 4:return t?Tpe:Cpe;case 5:return Npe;case 6:return Spe;case 7:return Epe;case 8:return Rpe;case 9:return $pe;case 10:return Mpe;case 11:return Fpe;case 14:return t?Ppe:_pe;case 12:return t?Lpe:zpe;case 13:return t?Dpe:Ope;case 15:return Bpe;case 18:return Wpe;case 16:return Vpe;case 17:return Gpe;case 19:return Upe;case 20:return jpe;case 21:return Hpe;case 22:return qpe;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var mn=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}};function ps(e,t=!1,r=!1,n=3){if(e===null)return"";let a="";if(e==="linear")a=To(8);else if(e==="relu")a=To(12,r);else if(e==="elu")a=To(4,r);else if(e==="relu6")a=To(13,r);else if(e==="prelu")a=cf(14,r);else if(e==="sigmoid")a=To(18,r);else if(e==="leakyrelu")a=To(14,r);else throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let s=mn(r?4:1),i="";return t?i=`
      fn activation(a : ${s}, coords : vec${n}<i32>) -> ${s} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${a}
      }`:i=`
      fn activation(a : ${s}, coords : vec${n}<i32>) -> ${s} {
        ${a}
      }`,i}function hs(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}var VS={};Be(VS,{ArrayBufferToTypedArray:()=>jS,GPUBytesPerElement:()=>US,computeDispatch:()=>Le,computeWorkGroupSizeForConv2d:()=>px,computeWorkGroupSizeForMatMul:()=>GS,computeWorkPerThreadForConv2d:()=>hx,flatDispatchLayout:()=>tt,isWebGPUSupported:()=>cx,tilesFitEvenlyIntoShape:()=>Kpe});var Do=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t};function Kpe(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((r,n)=>r%e[n]===0)}function Le(e,t,r=[1,1,1],n=[1,1,1]){let[a,s,i]=[Math.ceil(Do(e.x.map(o=>t[o]))/(r[0]*n[0])),e.y?Math.ceil(Do(e.y.map(o=>t[o]))/(r[1]*n[1])):1,e.z?Math.ceil(Do(e.z.map(o=>t[o]))/(r[2]*n[2])):1];return[a,s,i]}function px(e,t,r=!1){if(r)return[8,8,1];let n=Do(e.x.map(s=>t[s])),a=Do(e.y.map(s=>t[s]));return n<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function GS(e,t,r){return e===1?[32,1,1]:r===1?[1,32,1]:[8,8,1]}function hx(e,t,r=!1){if(r)return[4,4,1];let n=Do(e.x.map(s=>t[s])),a=Do(e.y.map(s=>t[s]));return n<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function tt(e){return{x:e.map((t,r)=>r)}}function US(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function jS(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function cx(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}var Xpe=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(
          t * TileInner + inputRow,
          globalRowStart / ${t} + inputCol, globalId);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(
          globalRow + innerRow,
          t * TileInner / ${t} + inputCol, globalId);
        `,Zpe=(e,t)=>e?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached[0] * ACached0[i] + acc[i];
          acc[i] = BCached[1] * ACached1[i] + acc[i];
          acc[i] = BCached[2] * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached[0] * ACached.x + acc[i];
          acc[i] = BCached[1] * ACached.y + acc[i];
          acc[i] = BCached[2] * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
        }`;function fx(e,t,r,n,a=4,s=!1){let i=s?t:n,o=s?n:t,l=s?e[1]:a;return v.assert((s&&t===r||n%4===0||n%3===0)&&e[0]===4&&(a===3||a===4),()=>`tileInner ${n} must be divisible by 4|3. ColPerThread ${e[0]} must be 4.
           innerElementSize ${a} must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${l}<f32>, ${i/l}>, ${o}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${r/e[0]}>, ${n}>;

  const RowPerThread = ${e[1]};
  const ColPerThread = ${e[0]};
  const InnerElementSize = ${a};
  const TileInner = ${n};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
          @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${t===1?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let globalRowStart = i32(workgroupId.y) * ${t};

    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = localRow * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Xpe(s,l)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${a===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${Zpe(s,a)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var Ype=class{constructor(e,t,r,n,a=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&!a?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let l=s!=null,u=o!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1&&!a?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=u,this.batchAEqualOne=r,this.batchBEqualOne=n,this.transposeA=a;let p=a?e[1]:e[2];this.fitAOuter=t[1]%this.tileAOuter===0,this.fitBOuter=t[2]%this.tileBOuter===0,this.fitInner=p%this.tileInner===0,this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.transposeA}`}getUserCode(){let e=this.fitAOuter&&this.fitInner?"return A[batch * batchASize + row * uniforms.aShape[2] / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.aShape[1], uniforms.aShape[2]))) {
            return A[batch * batchASize + row * uniforms.aShape[2] / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitInner&&this.fitBOuter?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`;return`
      ${ps(this.activation,this.hasPreluActivationWeights,!0)}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
        `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
          let batch = i32(globalId.z);
        `}

        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchBEqualOne?`
          let batchBSize = 0;
          let batch = 0;
          `:`
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
          let batch = i32(globalId.z);
       `}
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let coords = vec3<i32>(batch, row, col * 4);
          ${hs(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], value);
        }
      }
      ${fx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,4,this.transposeA)}
    `}};function Jpe(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let r=e.length,n=e.map(s=>`${t}[${s}]`),a=new Array(r-1);a[r-2]=n[r-1];for(let s=r-3;s>=0;--s)a[s]=`(${a[s+1]} * ${n[s+1]})`;return a}var Qpe=(e,t,r,n)=>{let a={dtype:n.dtype,shape:n.shape},s=ehe(r,a,t),i=e.createShaderModule({code:s,label:t.constructor.name});return e.createComputePipeline({compute:{module:i,entryPoint:"main"},label:t.constructor.name,layout:"auto"})};function wr(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Ds(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function rt(){return`
    ${Ud()}
      let index = getGlobalIndex();
`}function Ud(){return`
  ${Jm()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Jm(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function ehe(e,t,r){let n=[];if(n.push(`
      const workGroupSizeX = ${r.workGroupSize[0]}u;
      const workGroupSizeY = ${r.workGroupSize[1]}u;
      const workGroupSizeZ = ${r.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${HS(r)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),r.isFromPixels)return n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${Xp(t.dtype,r.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[H7,n.join(`
`),q7(t.shape),r.getUserCode()].join(`
`);let a=!1,s=!1,i="struct Uniforms { NAN : f32, ";r.variableNames.forEach((c,f)=>{let m=wr(e[f].shape.length);(m==="vec5"||m==="vec6")&&(s=!0),(a||s)&&(i+="@align(16) "),a=s,i+=`${c.charAt(0).toLowerCase()+c.slice(1)}Shape : ${m}, `});let o=wr(t.shape.length);s=o==="vec5"||o==="vec6",(a||s)&&(i+="@align(16) "),a=s,i+=`outShape : ${o}, `;let l=t.shape.length-1,u=wr(l);s=u==="vec5"||u==="vec6",(a||s)&&(i+="@align(16) "),a=s,i+=`
         outShapeStrides: ${u}, `,r.size&&(a&&(i+="@align(16) "),a=!1,i+="size : i32, "),r.uniforms&&(a&&(i+="@align(16) "),i+=r.uniforms),i+="};",n.push(i),r.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Xp(t.dtype,r.isVec4)}>;
    `),r.variableNames.forEach((c,f)=>{n.push(`
      @group(0) @binding(${1+f}) var<storage, read> ${c}: array<${r.variableTypes?r.variableTypes[f]:Xp(e[f].dtype,r.isVec4)}>;
        `)}),i!==""&&n.push(`
      @group(0) @binding(${1+r.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let p=she(t.shape,r.dispatchLayout),h=[H7,n.join(`
`),q7(t.shape),p,ihe(t.shape.length)];r.atomic||h.push(ohe(t.shape,t.dtype,r.isVec4));let d=e.map((c,f)=>ahe(c,t.shape,r.variableTypes?r.variableTypes[f]==="vec4<f32>":r.isVec4,r.dispatchLayout.x.length===t.shape.length)).join(`
`);return h.push(d),h.push(r.getUserCode()),h.join(`
`)}function the(e,t,r,n){let a=e.shaderKey;if(e.isFromPixels)return a;let s=r.map(p=>p.dtype).concat(n.dtype),i=r.map(p=>T.getBroadcastDims(p.shape,n.shape)),o=r.map(p=>v.arraysEqual(p.shape,n.shape)).join("_"),l=i.map(p=>p.join("_")).join(";"),u=HS(e)?"flatDispatch":"";return a+="_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(p=>p.length).join(",")+s.join(",")+e.variableNames.join(",")+l+o+u,a}var H7=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function q7(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let r=v.computeStrides(e),n=wr(t),a=[];for(let i=0;i<t;i++)a.push(`d${i}`);if(r.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+r.map((i,o)=>{let l=`let ${a[o]} = index2 / uniforms.outShapeStrides.${Ds(o)}`,u=o===r.length-1?`let ${a[o+1]} = index2 - ${a[o]} * uniforms.outShapeStrides.${Ds(o)}`:`index2 = index2 - ${a[o]} * uniforms.outShapeStrides.${Ds(o)}`;return`${l}; ${u};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${a.join(",")});
    }
  `}function rhe(e,t){let r=e.name,n=e.shape.length,a=wr(n),s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,n),o=i.map(p=>`${p} : i32`).join(", ");if(n<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${r}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${r}[0]);
      }
    `;let l=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,u=`${n}D`;return n===0&&(u="1D"),t?`
      fn ${s}(${o}) -> vec4<f32> {
        return vec4<f32>(${r}[getIndexFromCoords${u}(${a}(${i.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${s}(${o}) -> f32 {
      return f32(${r}[getIndexFromCoords${u}(${a}(${i.join(",")}),
        ${l})]);
    }
   `}function nhe(e,t,r,n){let a=e.name,s=a.charAt(0).toUpperCase()+a.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=wr(l);if(v.arraysEqual(e.shape,t)&&n)return r?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${a}[globalIndex]);
      }

      fn ${i}Coords(coords : ${u}) -> vec4<f32> {
        return vec4<f32>(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      return f32(${a}[globalIndex]);
    }

    fn ${i}Coords(coords : ${u}) -> f32 {
      return f32(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let p=T.getBroadcastDims(e.shape,t),h=l-o,d="";if(o===0)return r?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      return get${s}();
    }

    fn ${i}Coords(coords : ${u}) -> vec4<f32> {
      return get${s}();
    }
  `:`
    fn ${i}Index(globalIndex : i32) -> f32{
      return get${s}();
    }

    fn ${i}Coords(coords : ${u}) -> f32{
      return get${s}();
    }
  `;l<2&&p.length>=1?d="coords = 0;":d=p.map(g=>`coords.${Ds(g+h)} = 0;`).join(`
`);let c="";if(l<2&&o>0)c="coords";else if(l>1){let g=wr(o),y=e.shape.map((A,x)=>`coords.${Ds(x+h)}`).join(", ");c=`${g}(${y})`}else c="coords";let f=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,m=`${o}D`;return r?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return ${a}[getIndexFromCoords${m}(${c}, ${f}) / 4];
    }

    fn ${i}Coords(coordsIn : ${u}) -> vec4<f32> {
      var coords = coordsIn;
      ${d}
      return ${a}[getIndexFromCoords${m}(${c}, ${f}) / 4];
    }
  `:`
  fn ${i}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return f32(${a}[getIndexFromCoords${m}(${c}, ${f})]);
  }

  fn ${i}Coords(coordsIn : ${u}) -> f32 {
    var coords = coordsIn;
    ${d}
    return f32(${a}[getIndexFromCoords${m}(${c}, ${f})]);
  }
`}function ahe(e,t,r,n){let a=rhe(e,r);return e.shape.length<=t.length&&(a+=nhe(e,t,r,n)),a}function she(e,t){let{x:r,y:n=[],z:a=[]}=t,s=e.length;if(r.length===s)return`fn getOutputCoords() -> ${wr(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",o=[r,n,a],l=0;for(let d=0;d<o.length;d++){let c=o[d];if(c.length!==0)if(l+=c.length,c.length===1)i+=`let d${c[0]} = i32(globalId[${d}]);`;else{let f=Jpe(c,"uniforms.outShape");i+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)i+=`let d${c[m]} = index${d} / ${f[m]};`,m===f.length-1?i+=`let d${c[m+1]} = index${d} - d${c[m]} * ${f[m]};`:i+=`index${d} = index${d} - d${c[m]} * ${f[m]};`}}let u=[];for(let d=0;d<l;d++)u.push(`d${d}`);let p=wr(l),h=`fn getOutputCoords() -> ${p} {
  ${i}
`;return u.length===0?h+=`return ${p}(0); }`:h+=`return ${p}(${u.join(",")}); }`,h}function ihe(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function HS(e){return e.dispatch[1]===1&&e.dispatch[2]===1}function Xp(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function ohe(e,t,r){let n=e.length,a=Xp(t,r),s;if(r?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${a}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${a}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${a}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${a}(value);
    }`,n>=2){let i=["d0","d1","d2","d3","d4","d5"].slice(0,n),o=wr(n);r?s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}var lhe=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(
          t * TileInner + inputRow,
          globalRowStart + inputCol, globalId);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(
          globalRowStart + inputRow,
          t * TileInner + inputCol, globalId);
        `,uhe=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function mx(e,t,r=!1,n=32){let a=e[1]*t[1],s=e[0]*t[0],i=r?a:n,o=r?n:a;v.assert(o%t[1]===0&&i%t[0]===0&&n%t[1]===0,()=>`tileAHight ${o} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${i} must be divisible by workGroupSize[0]${t[0]}, tileInner ${n} must be divisible by workGroupSize[1]${t[1]}`);let l=o/t[1],u=i/t[0],p=n/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${i}>, ${o}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${n}>;
    const RowPerThread = ${e[1]};
    const ColPerThread = ${e[0]};
    const TileInner = ${n};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;

      let globalRowStart = i32(workgroupId.y) * ${a};

      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${l};
      let tileColA = i32(localId.x) * ${u};
      let tileRowB = i32(localId.y) * ${p};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${l}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${u}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${lhe(r)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${n} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${uhe(r)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(globalRow + innerRow,
                   globalCol + innerCol,
                   acc[innerRow][innerCol], globalId);
        }
      }
    }
  `}var dhe=e=>e?`
      mm_readA(colA, globalRow, globalId),
      mm_readA(colA + 1, globalRow, globalId),
      mm_readA(colA + 2, globalRow, globalId),
      mm_readA(colA + 3, globalRow, globalId)
  `:`
      mm_readA(globalRow, colA, globalId),
      mm_readA(globalRow, colA + 1, globalId),
      mm_readA(globalRow, colA + 2, globalId),
      mm_readA(globalRow, colA + 3, globalId)
  `;function phe(e,t=!1){return v.assert(e[1]===1&&e[2]===1,()=>`A linear work group size is required. But got ${e}.`),`
    const TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Ud()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${dhe(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(globalRow, globalCol, acc, globalId);
    }
  `}var hhe=class{constructor(e,t,r,n,a,s=!1,i=!1,o=null,l=null,u=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let p=s?e[1]:e[2];this.workGroupSize=GS(t[1],p,t[2]),(t[1]===1||t[2]===1)&&(r=1),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[r,r,1]),v.arraysEqual(this.dispatch,[1,1,1])&&(r=1,this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[r,r,1]));let h=o!=null,d=u!=null;h&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=r,this.transposeA=s,this.transposeB=i,this.addBias=h,this.activation=l,this.hasPreluActivationWeights=d,this.batchAEqualOne=n,this.batchBEqualOne=a,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],p),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${i}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,r){let n=this.workGroupSize[1]*this.workPerThread,a=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,this.outputShape[1]===1&&(this.tileInner=this.workGroupSize[0]*4);let s=e%n===0,i=t%a===0,o=r%this.tileInner===0;return[s,i,o]}getUserCode(){let e=this.fitAOuter&&this.fitInner?"return A[batch * batchASize + row * uniforms.aShape[2] + col];":`
        if(row < uniforms.aShape[1] && col < uniforms.aShape[2]) {
          return A[batch * batchASize + row * uniforms.aShape[2] + col];
        }
        return 0.0;
         `,t;return this.transposeB===!1?t="return B[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B[batch * batchBSize + col * uniforms.dimInner + row];",`
      ${ps(this.activation,this.hasPreluActivationWeights)}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
        let batch = 0;
        let batchASize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        `}
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
        let batch = 0;
        let batchBSize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        `}
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        ${this.fitAOuter&&this.fitBOuter?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
        {
        var value = valueIn;
        let batch = i32(globalId.z);
        let coords = vec3<i32>(batch, row, col);
        ${hs(this.addBias,this.activation)}
        setOutputAtCoords(batch, row, col, value);
        }
      }
      ${this.outputShape[1]>1?mx([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):phe(this.workGroupSize,this.transposeA)}
    `}};function che(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Ud()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var fhe=class{constructor(e,t,r,n=!1,a=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=s!=null,u=o!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=a,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=u,this.batchAEqualOne=t,this.batchBEqualOne=r,this.shaderKey=`matMulReduce_${this.activation}_${n}_${a}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e;this.transposeA===!1?e="return f32(A[batch * batchASize + row * uniforms.dimInner + col]);":e="return f32(A[batch * batchASize + col * uniforms.dimAOuter + row]);";let t;return this.transposeB===!1?t="return f32(B[batch * batchBSize + row * uniforms.dimBOuter + col]);":t="return f32(B[batch * batchBSize + col * uniforms.dimInner + row]);",`
      ${ps(this.activation,this.hasPreluActivationWeights)}

      fn mm_readA(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = batchIn;
          `}
        ${e}
      }

      fn mm_readB(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = batchIn;
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, col);
        ${hs(this.addBias,this.activation)}
        setOutputAtCoords(batch, row, col, value);
      }
      ${che()}
    `}};function mhe(e){let t=e[1],r=e[0],n=t>r?t:r;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Ud()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(globalRow, globalColA, globalId);
    var regB0 = mm_readB(globalRowB + 2 * tileRow, globalCol, globalId);
    var regB1 = mm_readB(globalRowB + 2 * tileRow + 1, globalCol, globalId);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(globalRow, globalColA, globalId);
      regB0 = mm_readB(globalRowB + 2 * tileRow, globalCol, globalId);
      regB1 = mm_readB(globalRowB + 2 * tileRow + 1, globalCol, globalId);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(globalRow, globalCol, acc, globalId);
  }
  `}var ghe=class{constructor(e,t,r,n=null,a=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,8,1],v.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=r,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(r[2]/this.workGroupSize[0]),Math.ceil(r[1]/this.workGroupSize[1]),r[0]];let i=n!=null;i&&this.variableNames.push("bias");let o=s!=null;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e=`var result: f32;
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          result =  A[batch * batchASize + row * uniforms.dimInner + col];
        } else {
          result = 0.0;
        }
        return result;`,t=`var result: f32;
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           result = B[batch * batchBSize + row * uniforms.dimBOuter + col];
         } else {
           result = 0.0;
         }
         return result;`;return`
      ${ps(this.activation,this.hasPreluActivationWeights)}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
          let batch = 0;
          let batchASize = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = i32(globalId.z);
          `}
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = i32(globalId.z);
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let coords = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${hs(this.addBias,this.activation)}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${mhe(this.workGroupSize)}
    `}},yhe=class{constructor(e,t,r,n,a=!1,s=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.atomic=!0,this.tileInner=32,v.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.elementsPerThread=[4,4,this.tileInner],this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1),this.dispatch=Le(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=a,this.transposeB=s,this.batchAEqualOne=r,this.batchBEqualOne=n,this.shaderKey=`matMulSplitK_${a}_${s}_${r}_${n}_${this.elementsPerThread}`}getUserCode(){let e;this.transposeA===!1?e=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            value = A[batch * batchASize + row * uniforms.dimInner + col];
          }
          return value;`:e=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            value = A[batch* batchASize + col * uniforms.dimAOuter + row];
          }
          return value;`;let t;return this.transposeB===!1?t=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
            value = B[batch * batchBSize + row * uniforms.dimBOuter + col];
          }
          return value;`:t=`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
            value = B[batch * batchBSize + col * uniforms.dimInner + row];
          }
          return value;`,`
      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        var value = 0.0;
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        var value = 0.0;
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          var value = valueIn;
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          
     var oldValue = atomicLoad(&(result[flatIndex]));
     var exchanged = false;
     for (; !exchanged;) {
       let newValueF32 = bitcast<f32>(oldValue) + value;
       let newValue = bitcast<i32>(newValueF32);
       let res = atomicCompareExchangeWeak(&(result[flatIndex]), oldValue, newValue);
       oldValue = res.old_value;
       exchanged = res.exchanged;
     }
     
        }
      }

      ${this.makeMatMulSplitKSource()}
    `}makeMatMulSplitKSource(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],r=this.elementsPerThread[1],n=this.elementsPerThread[0],a=this.tileInner/this.workGroupSize[0],s=this.tileInner/this.workGroupSize[1];return v.assert(this.tileInner%this.workGroupSize[0]===0&&this.tileInner%this.workGroupSize[1]===0,()=>`tileInner ${this.tileInner} must be divisible by workGroupSize[0]${this.workGroupSize[0]} and workGroupSize[1]${this.workGroupSize[1]}`),`
      var<workgroup> mm_Asub : array<array<f32, ${this.tileInner}>, ${e}>;
      var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${this.tileInner}>;
      ${Ud()}
        let tileRow = i32(localId.y) * ${r};
        let tileCol = i32(localId.x) * ${n};

        let globalRow = i32(globalId.y) * ${r};
        let globalCol = i32(globalId.x) * ${n};
        let batch = 0;
        let kStart = i32(globalId.z) * ${this.tileInner};

        // Load one tile of A into local memory.
        let tileColA = i32(localId.x) * ${a};
        for (var innerRow = 0; innerRow < ${r}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${a}; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;
            mm_Asub[inputRow][inputCol] = mm_readA(${this.batchAEqualOne?0:"batch"},
                globalRow + innerRow,
                kStart + inputCol);
          }
        }
        // Load one tile of B into local memory.
        let tileRowB = i32(localId.y) * ${s};
        for (var innerRow = 0; innerRow < ${s}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${n}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(${this.batchBEqualOne?0:"batch"},
                kStart + inputRow,
                globalCol + innerCol);
          }
        }

        workgroupBarrier();

        var acc : array<array<f32, ${n}>, ${r}>;
        // Loop over shared dimension. Compute acc values for a single thread.
        for (var k = 0; k < ${this.tileInner}; k = k + 1) {
          var BCached : array<f32, ${n}>;
          for (var inner = 0; inner < ${n}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${r}; innerRow = innerRow + 1) {
            let ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${n}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        for (var innerRow = 0; innerRow < ${r}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${n}; innerCol = innerCol + 1) {
            mm_write(batch, globalRow + innerRow, globalCol + innerCol, acc[innerRow][innerCol]);
          }
        }
      }
    `}},Ahe=class{constructor(e,t=null,r=null,n=null){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=n!=null,this.activation=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${r}`}getUserCode(){return`
    ${ps(this.activation,this.hasPreluActivationWeights)}
    ${rt()}
      if (index < uniforms.size) {
        let outCoord = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${hs(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},xhe=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${rt()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Kl(e){let{backend:t,attrs:r}=e,{shape:n,value:a}=r,{dtype:s}=r;if(s=s||v.inferDtype(a),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(n));return i.fill(a),t.makeTensorInfo(n,s,i)}else{let i=new xhe(n),o=[{type:"float32",data:[a]}];return t.runWebGPUProgram(i,[],s,o)}}var bhe={kernelName:ld,backendName:"webgpu",kernelFunc:Kl};function We(e){let{inputs:t,attrs:r}=e,{x:n}=t,{shape:a}=r,s=v.sizeFromShape(n.shape),i=v.inferFromImplicitShape(a,s),o=v.sizeFromShape(i);return v.assert(s===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var vhe={kernelName:vl,backendName:"webgpu",kernelFunc:We};function gx({a:e,b:t,transposeA:r,transposeB:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,h=r?e.shape[u-2]:e.shape[u-1],d=n?t.shape[p-1]:t.shape[p-2],c=r?e.shape[u-1]:e.shape[u-2],f=n?t.shape[p-2]:t.shape[p-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),A=v.sizeFromShape(g),x=Dl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);v.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${n} must match.`);let b=r?[y,h,c]:[y,c,h],w=n?[A,f,d]:[A,d,f],I=We({inputs:{x:e},backend:a,attrs:{shape:b}}),C=We({inputs:{x:t},backend:a,attrs:{shape:w}}),E=[I,C],R=Math.max(y,A),F=y===1,$=A===1,S=(h%4===0&&!r||c%4===0&&r)&&f%4===0&&!n,O=[I,C],z=[{type:"int32",data:[c]},{type:"int32",data:[f]},{type:"int32",data:[h]}],j,K,D=[R,c,f];if(c*f<=128)j=new fhe(D,F,$,r,n,s,l,i);else if(R===1&&c<=128&&f<=48&&d>=2e3){if(K=Kl({backend:a,attrs:{shape:D,value:0,dtype:e.dtype}}),j=new yhe(D,d,F,$,r,n),s||l){K=a.runWebGPUProgram(j,O,e.dtype,z,K);let V=new Ahe(K.shape,s,l,i),re=null,Q=[K];s&&Q.push(s),i&&Q.push(i),l==="leakyrelu"&&(re=[{type:"float32",data:[o]}],V.uniforms+=" alpha : f32,");let ie=a.runWebGPUProgram(V,Q,K.dtype,re);E.push(K);let X=We({inputs:{x:ie},backend:a,attrs:{shape:x}});E.push(ie);for(let ae of E)a.disposeData(ae.dataId);return X}}else!r&&!n&&(c<=16&&(f<=512||d>=2*f)||f<=16&&(c<=512||h>=2*c))?j=new ghe(b,w,D,s,l,i):S?j=new Ype(b,D,F,$,r,s,l,i):j=new hhe(b,D,Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),F,$,r,n,s,l,i);s&&O.push(s),i&&O.push(i),l==="leakyrelu"&&(z.push({type:"float32",data:[o]}),j.uniforms+=" alpha : f32,"),K=a.runWebGPUProgram(j,O,e.dtype,z,K);let Z=We({inputs:{x:K},backend:a,attrs:{shape:x}});E.push(K);for(let V of E)a.disposeData(V.dataId);return Z}function whe(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=n;return gx({a,b:s,transposeA:l,transposeB:u,backend:r,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:p})}var khe={kernelName:Bs,backendName:"webgpu",kernelFunc:whe},K7=class{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,r),this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${cf(this.op,!1)}
      }

      ${rt()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Py=class{constructor(e,t,r){this.size=!0,this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,r),this.dispatchLayout=tt(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length===1&&r.length>1&&t[0]<1024,this.useSharedMemoryWithB=r.length===1&&t.length>1&&r[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?r[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(v.arraysEqual(t,r)&&v.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if(this.type==="shared"){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputCoords(coords);`;e=`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${cf(this.op,this.isVec4)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${rt()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${r}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}else{let t=this.type==="vec4"?"vec4<f32>":"f32",r=cf(this.op,this.isVec4);e=`
       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
         ${r}
       }
       ${rt()}
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `}return e}};function vn(e){let{inputs:t}=e,{x:r}=t;return e.backend.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var Ihe={kernelName:bi,backendName:"webgpu",kernelFunc:vn};function jd(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.makeTensorInfo(n.shape,"complex64"),i=r.tensorMap.get(s.dataId),o=vn({inputs:{x:n},backend:r}),l=vn({inputs:{x:a},backend:r});return i.complexTensorInfos={real:o,imag:l},s}var She={kernelName:ch,backendName:"webgpu",kernelFunc:jd},dc=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${To(this.op,!1)}
      }
      ${rt()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Sr({opType:e,cpuKernelImpl:t,dtype:r}){return({inputs:n,backend:a})=>{let{x:s}=n,i=a,o=r||s.dtype;if(i.shouldExecuteOnCPU([s])&&t!=null){let u=i.tensorMap.get(s.dataId),p=t(u.values,o);return i.makeTensorInfo(s.shape,o,p)}let l=new dc(s.shape,e);return i.runWebGPUProgram(l,[s],o)}}function Zr({opType:e,cpuKernelImpl:t,supportsComplex:r=!1,dtype:n}){return({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(r&&i.dtype==="complex64"){let h=l.tensorMap.get(i.dataId),d=l.tensorMap.get(o.dataId),c,f;if(e!==0)[c,f]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[y,A]=g,x={dataId:y.dataId,dtype:y.dtype,shape:i.shape},b={dataId:A.dataId,dtype:A.dtype,shape:o.shape},w=new Py(e,i.shape,o.shape);return l.runWebGPUProgram(w,[x,b],Rr(y.dtype,A.dtype))});else{let g=new K7(17,i.shape,o.shape),y=new K7(18,i.shape,o.shape),A=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape}];c=l.runWebGPUProgram(g,A,"float32"),f=l.runWebGPUProgram(y,A,"float32")}let m=jd({inputs:{real:c,imag:f},backend:l});return l.disposeData(c.dataId),l.disposeData(f.dataId),m}let u=n||Rr(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([i,o]))&&t!=null){let h=l.tensorMap.get(i.dataId).values,d=l.tensorMap.get(o.dataId).values,c=i.dtype==="string"?T.fromUint8ToStringArray(h):h,f=i.dtype==="string"?T.fromUint8ToStringArray(d):d,[m,g]=t(i.shape,o.shape,c,f,u);return l.makeTensorInfo(g,u,m)}let p=new Py(e,i.shape,o.shape);return l.runWebGPUProgram(p,[i,o],u)}}var{addImpl:Che,ceilImpl:The,concatImpl:Nhe,equalImpl:Ehe,expImpl:Rhe,expm1Impl:$he,floorImpl:Mhe,gatherNdImpl:Fhe,gatherV2Impl:_he,greaterEqualImpl:Phe,greaterImpl:zhe,lessEqualImpl:Ohe,lessImpl:Dhe,logImpl:Lhe,maxImpl:Bhe,maximumImpl:Whe,minimumImpl:Vhe,multiplyImpl:Ghe,negImpl:Uhe,notEqualImpl:jhe,prodImpl:Hhe,rangeImpl:qhe,rsqrtImpl:Khe,scatterImpl:Xhe,simpleAbsImpl:Zhe,sliceImpl:Yhe,stridedSliceImpl:Jhe,stringNGramsImpl:Qhe,subImpl:ece,tileImpl:tce,topKImpl:rce,transposeImpl:nce,uniqueImpl:qAe}=Gm,ace=Sr({opType:0,cpuKernelImpl:Zhe}),sce={kernelName:Yo,backendName:"webgpu",kernelFunc:ace},ice=Zr({opType:1,cpuKernelImpl:Che,supportsComplex:!0}),oce={kernelName:ns,backendName:"webgpu",kernelFunc:ice},lce=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,r)=>`T${r}`),this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});let t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${rt()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function uce(e){let{inputs:t,backend:r}=e,n=t;if(n.length===1)return vn({inputs:{x:n[0]},backend:r});let a=n.map(o=>o.dtype).reduce((o,l)=>Rr(o,l)),s=n.map(o=>o.shape),i=new lce(s);return r.runWebGPUProgram(i,n,a)}var dce={kernelName:ti,backendName:"webgpu",kernelFunc:uce},qS=class{constructor(e,t,r){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let n=[t];T.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),n,e.length),this.op=r==="min"?"<":">";let[a]=T.computeOutAndReduceShapes(e,n);this.outputShape=a.length===0?[1]:a,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ds(this.inputShape.length-1)}`,r=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)n+=`outputCoords.${Ds(a)},`;return n};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${rt()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${r()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},pce=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let r=new Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];this.outputShape=r,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Jm()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},hce=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let r=new Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];this.outputShape=r,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=wr(this.outputShape.length),t=cce(this.newDim);return`
      ${rt()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function cce(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=new Array(t);for(let n=0;n<e.length;n++)r[e[n]]=`resRC.${Ds(n)}`;return r.join()}function rs(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{perm:s}=n,i=r,o=a.shape.length,l=new Array(o);for(let p=0;p<l.length;p++)l[p]=a.shape[s[p]];if(r.shouldExecuteOnCPU([a])){let p=i.tensorMap.get(a.dataId).values,h=nce(p,a.shape,a.dtype,s,l);return r.makeTensorInfo(l,a.dtype,h)}if(a.shape.length===2&&v.arraysEqual(s,[1,0])){let p=new pce(a.shape,s);return i.runWebGPUProgram(p,[a],a.dtype)}let u=new hce(a.shape,s);return i.runWebGPUProgram(u,[a],a.dtype)}var fce={kernelName:Pa,backendName:"webgpu",kernelFunc:rs};function mce(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=rs({inputs:{x:a},backend:r,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=new qS(l.shape,i[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=r.runWebGPUProgram(p,[l],"int32",h);return u.forEach(c=>r.disposeData(c.dataId)),d}var gce={kernelName:ri,backendName:"webgpu",kernelFunc:mce};function yce(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=v.parseAxisParam(s,a.shape),o=T.getAxesPermutation(i,a.shape.length),l=a,u=[];o!=null&&(l=rs({inputs:{x:a},backend:r,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=new qS(l.shape,i[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=r.runWebGPUProgram(p,[l],"int32",h);return u.forEach(c=>r.disposeData(c.dataId)),d}var Ace={kernelName:td,backendName:"webgpu",kernelFunc:yce},KS=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${rt()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},XS=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${rt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function xce(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1,p=T.computePool2DInfo(a.shape,s,i,u,o,l);if(p.filterWidth===1&&p.filterHeight===1&&v.arraysEqual(p.inShape,p.outShape))return vn({inputs:{x:a},backend:r});let h,d=[{type:"int32",data:[p.strideHeight,p.strideWidth]}];return p.filterHeight===1&&p.filterWidth===1?h=new XS(p):(h=new KS(p,"avg"),d.push({type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]})),r.runWebGPUProgram(h,[a],a.dtype,d)}var bce={kernelName:ni,backendName:"webgpu",kernelFunc:xce};function vce(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;return gx({a,b:s,transposeA:i,transposeB:o,backend:r})}var wce={kernelName:ai,backendName:"webgpu",kernelFunc:vce},kce=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${wr(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=wr(this.rank),t=Ice(this.rank),r;return this.start.length===1?r=this.outputShape.map((n,a)=>"sourceLoc = uniforms.start + coords;"):r=this.outputShape.map((n,a)=>`sourceLoc.${zy[a]} = uniforms.start[${a}] + coords.${zy[a]};`),`
      ${rt()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${r.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},zy=["x","y","z","w","u","v"];function Ice(e){if(e===1)return"sourceLoc";if(e<=6)return zy.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Hd(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n,[o,l]=Lt.parseSliceParams(a,s,i);if(Lt.assertParamsValid(a,o,l),r.shouldExecuteOnCPU([a])||a.dtype==="string"){let h=r.tensorMap.get(a.dataId),d=Yhe(h.values,o,l,a.shape,a.dtype);return r.makeTensorInfo(l,a.dtype,d)}if(v.sizeFromShape(l)===0)return r.makeTensorInfo(l,a.dtype,[]);let u=new kce(o,l),p=[{type:"int32",data:o}];return r.runWebGPUProgram(u,[a],a.dtype,p)}var Sce={kernelName:Cl,backendName:"webgpu",kernelFunc:Hd},Cce=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;v.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((A,x)=>A*x),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),p=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(p,i,s.length),c=[],f=We({inputs:{x:a},backend:r,attrs:{shape:l}}),m=rs({inputs:{x:f},backend:r,attrs:{perm:u}}),g=We({inputs:{x:m},backend:r,attrs:{shape:p}}),y=Hd({inputs:{x:g},backend:r,attrs:{begin:h,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(A=>r.disposeData(A.dataId)),y},Tce={kernelName:Jo,backendName:"webgpu",kernelFunc:Cce},ZS=Zr({opType:10,dtype:"bool",cpuKernelImpl:jhe}),Nce={kernelName:ml,backendName:"webgpu",kernelFunc:ZS};function pc(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.tensorMap.get(n.dataId);return vn({inputs:{x:a.complexTensorInfos.real},backend:r})}var Ece={kernelName:vh,backendName:"webgpu",kernelFunc:pc};function Rce(e,t){let r=new dc(e.shape,22),n=t.runWebGPUProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Oy(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dtype:s}=n;if(s==="complex64"){if(a.dtype==="complex64")return vn({inputs:{x:a},backend:r});let i=Ot(a.shape),o=Oy({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),l=jd({inputs:{real:o,imag:i},backend:r});return i.dispose(),r.disposeData(o.dataId),l}if(a.dtype==="complex64"){let i=pc({inputs:{input:a},backend:r}),o=Oy({inputs:{x:i},backend:r,attrs:{dtype:s}});return r.disposeData(i.dataId),o}if(!v.hasEncodingLoss(a.dtype,s)){let i=vn({inputs:{x:a},backend:r});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return Rce(a,r);if(s==="bool"){let i=r.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=ZS({inputs:{a,b:i},backend:r});return r.disposeData(i.dataId),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var $ce={kernelName:si,backendName:"webgpu",kernelFunc:Oy},Mce=Sr({opType:1,cpuKernelImpl:The}),Fce={kernelName:ii,backendName:"webgpu",kernelFunc:Mce},_ce=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${rt()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},Pce=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${rt()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function zce(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=n,o,l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return v.sizeFromShape(a.shape)%4===0?o=new _ce(a.shape):o=new Pce(a.shape),r.runWebGPUProgram(o,[a],a.dtype,l)}var Oce={kernelName:as,backendName:"webgpu",kernelFunc:zce},Dce=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,r)=>`T${r}`),this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let n=1;n<this.offsetLength;n++)e.push(`else if (yC < uniforms.offset${[n]}){ setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${n-1})); }`);let t=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${rt()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Qm(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.tensorMap.get(n.dataId);return vn({inputs:{x:a.complexTensorInfos.imag},backend:r})}var Lce={kernelName:Ah,backendName:"webgpu",kernelFunc:Qm};function Up(e,t,r){let n=e[0].dtype;if(n==="complex64"){let f=e.map(x=>pc({inputs:{input:x},backend:r})),m=e.map(x=>Qm({inputs:{input:x},backend:r})),g=Up(f,t,r),y=Up(m,t,r),A=jd({inputs:{real:g,imag:y},backend:r});return f.forEach(x=>r.disposeData(x.dataId)),m.forEach(x=>r.disposeData(x.dataId)),r.disposeData(g.dataId),r.disposeData(y.dataId),A}let a=r.shouldExecuteOnCPU(e);if(n==="string"&&(a=!0),a){let f=e.map(w=>{let I=v.sizeFromShape(w.shape.slice(t));return We({inputs:{x:w},backend:r,attrs:{shape:[-1,I]}})}),m=f.map(w=>({vals:r.readSync(w.dataId),shape:w.shape})),g=T.computeOutShape(f.map(w=>w.shape),1),y=f[0].shape[0]===1,A=Nhe(m,g,n,y),x=T.computeOutShape(e.map(w=>w.shape),t),b=r.makeTensorInfo(x,n,A);return f.forEach(w=>r.disposeData(w.dataId)),b}let s=r.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>s){let f=[];for(let g=0;g<e.length;g+=s){let y=e.slice(g,g+s);f.push(Up(y,t,r))}let m=Up(f,t,r);for(let g of f)r.disposeData(g.dataId);return m}let{tensors2D:i,outShape:o}=Bce(e,t,r),l=i.map(f=>f.shape),u=new Dce(l),p=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],p.push({type:"int32",data:[h[0]]});for(let f=1;f<h.length;f++)h[f]=h[f-1]+l[f][1],p.push({type:"int32",data:[h[f]]})}let d=r.runWebGPUProgram(u,i,i[0].dtype,p);i.forEach(f=>r.disposeData(f.dataId));let c=We({inputs:{x:d},backend:r,attrs:{shape:o}});return r.disposeData(d.dataId),c}function Bce(e,t,r){let n=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>We({inputs:{x:a},backend:r,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:n}}function YS(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=v.parseAxisParam(a,t[0].shape)[0],i=T.computeOutShape(t.map(u=>u.shape),s);if(v.sizeFromShape(i)===0)return r.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(u=>v.sizeFromShape(u.shape)>0);if(o.length===1)return vn({inputs:{x:o[0]},backend:r});let l=o.map(u=>u.shape);return T.assertParamsConsistent(l,s),Up(o,s,r)}var Wce={kernelName:Qo,backendName:"webgpu",kernelFunc:YS};function Vce(e,t,r,n,a=!1,s=null,i=!1,o=4,l=4,u=4){let p=E=>{switch(E){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${E} is not supported.`)}},h=E=>{switch(E){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${E} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,c=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=e?"uniforms.xShape[1]":"uniforms.xShape[2]",m=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",y=e?"col":"row",A=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${y} % inChannels;
      var resData = ${mn(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${p(o)}
      }
      return resData;`,x=e?t&&n?`
      let col = colIn * ${o};
      ${A}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${A}
      }
      return ${mn(o)}(0.0);`:n&&r?`
      let col = colIn * ${o};
      ${A}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${A}
      }
      return ${mn(o)}(0.0);`,b=`${h(l)}`,w=mn(u),I=mn(e?o:l),C=mn(e?l:o);return`
      ${ps(s,i,u===4,4)}
      fn mm_readA(row : i32, colIn : i32, globalId : vec3<u32>) -> ${I} {
        let batch = i32(globalId.z);
        ${e?x:b}
      }

      fn mm_readB(row : i32, colIn : i32, globalId : vec3<u32>) -> ${C} {
        let batch = i32(globalId.z);
        ${e?b:x}
      }

      fn mm_write(row : i32, colIn : i32, valueIn : ${w}, globalId : vec3<u32>) {
        let col = colIn * ${u};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        let batch = i32(globalId.z);
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${c}
        ${hs(a,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var Gce=class{constructor(e,t,r,n,a=!1,s=null,i=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=px(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hx(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),a&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=a,this.activation=s,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=r%this.tileBOuter===0,this.fitInner=n%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let e=this.isVec4?fx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize,!this.isChannelsLast):mx(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.isChannelsLast?this.innerElementSize:4,4,4]:[1,1,1];return`
    ${Vce(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};function X7(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&r===1&&e[0]>1?[e[0],1]:null}function Uce({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=r.dataFormat==="channelsLast",u=!l,p=!1,h=l&&r.filterHeight===r.inHeight&&r.filterWidth===r.inWidth&&r.padInfo.type==="VALID",d=[],c,f;if(h){let y=r.inHeight*r.inWidth*r.inChannels;c=We({inputs:{x:e},backend:n,attrs:{shape:[1,r.batchSize,y]}}),f=We({inputs:{x:t},backend:n,attrs:{shape:[1,y,r.outChannels]}})}else c=We({inputs:{x:e},backend:n,attrs:{shape:l?[r.batchSize,r.inHeight*r.inWidth,r.inChannels]:[r.batchSize,r.inChannels,r.inHeight*r.inWidth]}}),f=We({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});if(d.push(c),d.push(f),s!=null){let y=X7(s.shape,l);y!=null&&(s=We({inputs:{x:s},backend:n,attrs:{shape:y}}),d.push(s))}if(a!=null){let y=X7(a.shape,l);y!=null&&(a=We({inputs:{x:a},backend:n,attrs:{shape:y}}),d.push(a))}let m=gx({a:l?c:f,b:l?f:c,transposeA:u,transposeB:p,backend:n,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),g=We({inputs:{x:m},backend:n,attrs:{shape:r.outShape}});d.push(m);for(let y of d)n.disposeData(y.dataId);return g}function JS({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=a!=null,u=s!=null,p=r.dataFormat==="channelsLast";if(p&&r.filterHeight===r.inHeight&&r.filterWidth===r.inWidth&&r.padInfo.type==="VALID"||r.filterHeight===1&&r.filterWidth===1&&r.dilationHeight===1&&r.dilationWidth===1&&r.strideHeight===1&&r.strideWidth===1&&(r.padInfo.type==="SAME"||r.padInfo.type==="VALID"))return Uce({x:e,filter:t,convInfo:r,backend:n,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});let h=p?r.outHeight*r.outWidth:r.outChannels,d=p?r.outChannels:r.outHeight*r.outWidth,c=r.filterHeight*r.filterWidth*r.inChannels,f=[r.padInfo.top,r.padInfo.left],m=[{type:"int32",data:[r.filterHeight,r.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[r.strideHeight,r.strideWidth]},{type:"int32",data:[r.dilationHeight,r.dilationWidth]},{type:"int32",data:[h]},{type:"int32",data:[d]},{type:"int32",data:[c]}],g=new Gce(r,h,d,c,l,o,u),y=[],A=[e,t];l&&(!p&&a.shape.length===1&&(a=We({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}}),y.push(a)),A.push(a)),u&&(!p&&s.shape.length===1&&(s=We({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),y.push(s)),A.push(s)),o==="leakyrelu"&&(m.push({type:"float32",data:[i]}),g.uniforms+=" alpha : f32,");let x=n.runWebGPUProgram(g,A,e.dtype,m);for(let b of y)n.disposeData(b.dataId);return x}function jce(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,h);return JS({x:a,filter:s,convInfo:d,backend:n})}var Hce={kernelName:oi,backendName:"webgpu",kernelFunc:jce};function qce(e=4){let t=n=>{switch(n){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${n} is not supported.`)}},r=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${mn(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${mn(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`}
      }
      return ${mn(e)}(0.0);`;return`
  fn mm_readA(row : i32, colIn : i32, globalId : vec3<u32>) -> ${mn(e)} {
    let col = colIn * ${e};
    var batch = i32(globalId.z);
    ${r}
  }

  fn mm_readB(row : i32, colIn : i32, globalId : vec3<u32>) -> ${mn(e)} {
    let col = colIn * ${e};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(e)}
    }
    return ${mn(e)}(0.0);
  }

  fn mm_write(row : i32, colIn : i32, valueInput : ${mn(e)}, globalId : vec3<u32>) {
    let col = colIn * ${e};
    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}var Kce=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=px(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hx(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.innerElementSize=4,this.variableTypes=["vec4<f32>","f32"]):this.innerElementSize=this.elementsPerThread[0],this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}_${this.innerElementSize}`}getUserCode(){let e=this.isVec4?fx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize):mx(this.elementsPerThread,this.workGroupSize);return`
    ${qce(this.isVec4?4:1)}
    ${e}
    `}},Xce=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,r=this.isChannelsLast?3:1;return`
    ${rt()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${r}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Zce(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=n,h=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(i,s.shape,o,1,l,p,!1,h),c=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Xce(d);else{f=new Kce(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],y=d.filterHeight*d.filterWidth*d.outChannels;c.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return r.runWebGPUProgram(f,[a,s],"float32",c)}var Yce={kernelName:li,backendName:"webgpu",kernelFunc:Zce},Jce=Sr({opType:2}),Qce={kernelName:ui,backendName:"webgpu",kernelFunc:Jce},e0e=Sr({opType:3}),t0e={kernelName:di,backendName:"webgpu",kernelFunc:e0e},r0e=class{constructor(e,t,r,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[a]=t;this.outputShape=[a,r[0],r[1],e],this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=n==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[r,n,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${rt()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${r});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${i};
        let in_y = ${a};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},n0e=e=>{let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,p=new r0e(a.shape[3],s.shape,o,l),h=[{type:"float32",data:[u]}];return r.runWebGPUProgram(p,[a,s,i],"float32",h)},a0e={kernelName:tl,backendName:"webgpu",kernelFunc:n0e},Z7=class{constructor(e,t,r,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let a=128;this.workGroupSize=[a,1,1],this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=r,this.reverse=n,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",r=this.exclusive?t:`getX(${Y7(e,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],a="",s="";return this.exclusive?(a=this.reverse?`end != ${n-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(a=this.reverse?`end + pow2 < ${n}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${rt()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${J7(e,"coords",this.op)};
         var val = ${r};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${a}) {
           let idx = ${s};
           ${J7(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${Y7(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function Y7(e,t,r){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function J7(e,t,r){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function QS(e,t,r,n,a,s){let i=t.shape.length,o=T.getAxesPermutation([n],i),l=t;o!=null&&(l=rs({inputs:{x:t},backend:r,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let p=l.shape[u],h=vn({inputs:{x:l},backend:r});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){let c=new Z7(e,l.shape,!1,s),f=h,m=[{type:"float32",data:[d]}];h=r.runWebGPUProgram(c,[h],h.dtype,m),r.disposeData(f.dataId)}if(a){let d=new Z7(e,l.shape,a,s),c=h,f=[{type:"float32",data:[0]}];h=r.runWebGPUProgram(d,[h],h.dtype,f),r.disposeData(c.dataId)}if(o!=null){let d=T.getUndoAxesPermutation(o),c=rs({inputs:{x:h},backend:r,attrs:{perm:d}});return r.disposeData(h.dataId),r.disposeData(l.dataId),c}return h}function s0e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return QS("*",a,r,s,i,o)}var i0e={kernelName:el,backendName:"webgpu",kernelFunc:s0e};function o0e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return QS("+",a,r,s,i,o)}var l0e={kernelName:pi,backendName:"webgpu",kernelFunc:o0e},u0e=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${rt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function d0e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],p=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,d=u*s,c=p/(s*s),f=i==="NHWC"?[o,h,d,c]:[o,c,h,d],m=[{type:"int32",data:[s]}],g=new u0e(f,i);return r.runWebGPUProgram(g,[a],a.dtype,m)}var p0e={kernelName:rl,backendName:"webgpu",kernelFunc:d0e},h0e=class{constructor(e,t,r,n=!1,a=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=a,this.hasPreluActivation=s,this.filterHeight=t,this.filterWidth=r,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],r=this.workGroupSize[1]+this.filterHeight-1,n=this.workGroupSize[0]+this.filterWidth-1;return`
      ${ps(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${r}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Jm()}
      fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(local_invocation_index) LocalIndex: u32,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${hs(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},eC=class{constructor(e,t=!1,r=null,n=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=r,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${r}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){let e=4+this.convInfo.filterWidth-1;return`
      ${ps(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, row, col, channel);
        }
        return value;
      }
      ${Jm()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * 4;
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          for (var i = 0; i < ${e}; i++)
          {
            xVals[i] = readX(batch, xR, xCCorner + i, d1);
          }
          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
            let wValue = getW(wR, wC, d1, 0);
            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;
            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;
            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;
            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${hs(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},tC=class{constructor(e,t=!1,r=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=r,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${ps(this.activation,this.hasPreluActivation,!1,4)}

      ${Ud()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${hs(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function c0e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=n,h=T.convertConv2DDataFormat(l),d=u;d==null&&(d=[1,1]);let c=T.computeConv2DInfo(a.shape,s.shape,i,d,o,p,!0,h),f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.inHeight,c.inWidth]}],m=c.dataFormat==="channelsLast",g;return!m&&c.inHeight>16&&c.inWidth>16&&c.strideHeight===1&&c.strideWidth===1&&c.dilationWidth===1&&c.dilationHeight===1&&c.inChannels===c.outChannels?g=new h0e(c.outShape,c.filterHeight,c.filterWidth):m&&c.inHeight>4&&c.inWidth>4&&c.strideHeight===1&&c.strideWidth===1&&c.inChannels===c.outChannels&&c.dilationHeight===1&&c.dilationWidth===1&&c.inChannels%4===0?g=new eC(c):(g=new tC(c),f.push({type:"int32",data:[c.filterHeight]},{type:"int32",data:[c.filterWidth]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]})),r.runWebGPUProgram(g,[a,s],a.dtype,f)}var f0e={kernelName:hi,backendName:"webgpu",kernelFunc:c0e},rC=Zr({opType:0,cpuKernelImpl:Ghe,supportsComplex:!0}),m0e={kernelName:Ri,backendName:"webgpu",kernelFunc:rC},g0e=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[r]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${rt()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}};function hc(e,t,r,n,a){let s=e.shape.length,i=[],o=v.parseAxisParam(t,e.shape),l=o,u=T.getAxesPermutation(l,s),p=e;u!=null&&(p=rs({inputs:{x:e},attrs:{perm:u},backend:a}),l=T.getInnerMostAxes(l.length,s),i.push(p)),T.assertAxesAreInnerMostDims(n,l,s);let[h,d]=T.computeOutAndReduceShapes(p.shape,l),c=h;r&&(c=T.expandShapeToKeepDim(h,o));let f;if((n==="max"||n==="prod")&&a.shouldExecuteOnCPU([p])){let m=a.tensorMap.get(p.dataId).values;switch(n){case"max":let g=Bhe(m,v.sizeFromShape(d),c,e.dtype);f=a.makeTensorInfo(c,e.dtype,g);break;case"prod":let{outVals:y,outShape:A,outDtype:x}=Hhe(p.shape,p.dtype,m,l);f=a.makeTensorInfo(A,x,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(d),g=v.sizeFromShape(p.shape)/m,y={windowSize:m,inSize:m,batchSize:g,outSize:1},A=n==="mean"?"float32":$h(e.dtype),x=[{type:"int32",data:[m]}],b=new g0e(y,n),w=a.runWebGPUProgram(b,[p],A,x);i.push(w),f=We({inputs:{x:w},attrs:{shape:c},backend:a})}return i.forEach(m=>a.disposeData(m.dataId)),f}function yx(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;return hc(a,s,i,"sum",r)}var y0e={kernelName:Gi,backendName:"webgpu",kernelFunc:yx};function A0e(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(a,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=T.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of p[m]){let{permutationIndices:y,expandDims:A}=T.getEinsumPermutation(c,l[g]),x;T.isIdentityPermutation(y)?x=s[g]:(x=rs({inputs:{x:s[g]},backend:r,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let w=0;w<A.length;++w)b.splice(A[w],0,1);v.arraysEqual(x.shape,b)||(x=We({inputs:{x},backend:r,attrs:{shape:b}}),f.push(x)),d===null?d=x:(d=rC({inputs:{a:x,b:d},backend:r}),f.push(d))}m<h-1&&(u[m]>=0&&(d=yx({inputs:{x:d},backend:r,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&r.disposeData(m.dataId);return d}var x0e={kernelName:yh,backendName:"webgpu",kernelFunc:A0e},b0e=Sr({opType:4}),v0e={kernelName:fi,backendName:"webgpu",kernelFunc:b0e},w0e=Zr({opType:4,dtype:"bool",cpuKernelImpl:Ehe}),k0e={kernelName:nl,backendName:"webgpu",kernelFunc:w0e},nC=Sr({opType:5,cpuKernelImpl:Rhe,dtype:"float32"}),I0e={kernelName:mi,backendName:"webgpu",kernelFunc:nC};function Dy(e){let{inputs:t,attrs:r,backend:n}=e,{dim:a}=r,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(v.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),We({inputs:{x:s},backend:n,attrs:{shape:o}})}var S0e={kernelName:al,backendName:"webgpu",kernelFunc:Dy},C0e=Sr({opType:6,cpuKernelImpl:$he}),T0e={kernelName:sl,backendName:"webgpu",kernelFunc:C0e},N0e=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${rt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},E0e={kernelName:il,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,n=t,a=new N0e(r.shape);return n.runWebGPUProgram(a,[r],r.dtype)}},R0e=Sr({opType:7,cpuKernelImpl:Mhe}),$0e={kernelName:gi,backendName:"webgpu",kernelFunc:R0e},M0e=Zr({opType:12,dtype:"int32"}),F0e={kernelName:yi,backendName:"webgpu",kernelFunc:M0e},_0e=class{constructor(e,t,r=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=r,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${rt()}
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},P0e={kernelName:Qp,backendName:"webgpu",kernelFunc:z0e},Iu,w0=new Map;function z0e(e){let{inputs:t,backend:r,attrs:n}=e,{pixels:a}=t,{numChannels:s}=n;if(a==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&a instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&a instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&a instanceof OffscreenCanvas,u=typeof ImageBitmap!="undefined"&&a instanceof ImageBitmap,[p,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[h,p,s],c=Y().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||o;if(u||l||f){let A;if(c){let F=a;if(!w0.has(F)||w0.get(F).expired){let $={source:F};w0.set(F,r.device.importExternalTexture($))}A={width:p,height:h,format:null,usage:null,texture:w0.get(F)}}else{f&&(Iu==null&&(Iu=document.createElement("canvas").getContext("2d")),Iu.canvas.width=p,Iu.canvas.height=h,Iu.drawImage(a,0,0,p,h),a=Iu.canvas);let F=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,$="rgba8unorm",S=r.textureManager.acquireTexture(d[1],d[0],$,F);r.queue.copyExternalImageToTexture({source:a},{texture:S},[d[1],d[0]]),A={width:p,height:h,format:$,usage:F,texture:S}}let x=v.sizeFromShape(d),b=v.computeStrides(d),w=new _0e(d,s,c),I=[{type:"uint32",data:[x]},{type:"uint32",data:[s]},{type:"uint32",data:[...b]}],C=r.makeTensorInfo([h,p],"int32"),E=r.tensorMap.get(C.dataId);E.resourceInfo=A;let R=r.runWebGPUProgram(w,[C],"int32",I);return r.disposeData(C.dataId),R}let m=a.data,g=m;if(s!=null&&s!==4){g=new Uint8Array(a.width*a.height*s);let A=m.length,x=0;for(let b=0;b<A;b++)b%4<s&&(g[x++]=m[b])}let y=r.makeTensorInfo(d,"int32",new Int32Array(g));return r.uploadToGPU(y.dataId),y}var O0e=class{constructor(e,t,r,n,a){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,r),this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset")),a!=null&&(T.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=a,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${rt()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},D0e={kernelName:Ai,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n,scale:a,offset:s,mean:i,variance:o}=e,{varianceEpsilon:l}=t,u=r,p=[n,i,o],h=null;s!=null&&(h=s.shape,p.push(s));let d=null;a!=null&&(d=a.shape,p.push(a));let c=new O0e(n.shape,i.shape,o.shape,h,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(c,p,n.dtype,f)}};function L0e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=T.convertConv2DDataFormat(p),g=T.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!1,m);return JS({x:a,filter:s,convInfo:g,backend:r,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}var B0e={kernelName:Ws,backendName:"webgpu",kernelFunc:L0e};function W0e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=n,f=p;f==null&&(f=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=T.computeConv2DInfo(a.shape,s.shape,l,f,u,h,!0),g=[a,s],y=i!=null,A=o!=null;y&&g.push(i),A&&g.push(o);let x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.inHeight>4&&m.inWidth>4&&m.strideHeight===1&&m.strideWidth===1&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?b=new eC(m,y,d,A):(b=new tC(m,y,d,A),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(x.push({type:"float32",data:[c]}),b.uniforms+=" alpha : f32,"),r.runWebGPUProgram(b,g,"float32",x)}var V0e={kernelName:Vs,backendName:"webgpu",kernelFunc:W0e},G0e=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${wr(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${rt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function U0e(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=a.shape,i=s[s.length-1],o=v.sizeFromShape(n.shape),[l,u,p,h]=T.prepareAndValidate(n,a),d=We({inputs:{x:a},backend:r,attrs:{shape:[u,i]}}),c=We({inputs:{x:n},backend:r,attrs:{shape:[v.sizeFromShape(n.shape)/p,p]}});if(r.shouldExecuteOnCPU([n,a])||n.dtype==="string"){let A=r.readSync(a.dataId),x=r.bufferSync(n),b=Fhe(A,x,n.dtype,u,i,p,h,n.shape,o);return r.makeTensorInfo(l,n.dtype,b.values)}let f=new G0e(i,[u,p]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],g=r.runWebGPUProgram(f,[c,d],c.dtype,m),y=We({inputs:{x:g},backend:r,attrs:{shape:l}});return r.disposeData(d.dataId),r.disposeData(c.dataId),r.disposeData(g.dataId),y}var j0e={kernelName:ll,backendName:"webgpu",kernelFunc:U0e},H0e=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=q0e(this.aShape);return`
      ${rt()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function q0e(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<e.length;n++)n===2?r.push("indexZ"):r.push(`${t[n]}`);return r.join()}function aC(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n,l=v.parseAxisParam(i,a.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=v.sizeFromShape(s.shape),h=[],d=We({inputs:{x:a},backend:r,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=We({inputs:{x:s},backend:r,attrs:{shape:[u.batchSize,p/u.batchSize]}});h.push(d),h.push(c);let f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(r.shouldExecuteOnCPU([a,s])){let A=r.tensorMap.get(c.dataId).values,x=Oe(c.shape,c.dtype,A),b=r.tensorMap.get(d.dataId).values,w=Oe(d.shape,d.dtype,b),I=_he(w,x,f);return h.forEach(C=>r.disposeData(C.dataId)),r.makeTensorInfo(u.outputShape,I.dtype,I.values)}let m=new H0e(d.shape,f),g=r.runWebGPUProgram(m,[d,c],d.dtype);h.push(g);let y=We({inputs:{x:g},backend:r,attrs:{shape:u.outputShape}});return h.forEach(A=>r.disposeData(A.dataId)),y}var K0e={kernelName:ol,backendName:"webgpu",kernelFunc:aC},X0e=Zr({opType:5,cpuKernelImpl:zhe,dtype:"bool"}),Z0e={kernelName:ul,backendName:"webgpu",kernelFunc:X0e},Y0e=Zr({opType:6,dtype:"bool",cpuKernelImpl:Phe}),J0e={kernelName:xi,backendName:"webgpu",kernelFunc:Y0e};function Q0e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n,i=[{type:"float32",data:[s]}],o=new dc(a.shape,14);return o.uniforms="alpha : f32,",r.runWebGPUProgram(o,[a],"float32",i)}var efe={kernelName:vi,backendName:"webgpu",kernelFunc:Q0e},tfe=Zr({opType:7,dtype:"bool",cpuKernelImpl:Dhe}),rfe={kernelName:dl,backendName:"webgpu",kernelFunc:tfe},nfe=Zr({opType:8,dtype:"bool",cpuKernelImpl:Ohe}),afe={kernelName:pl,backendName:"webgpu",kernelFunc:nfe},sfe=Sr({opType:9,cpuKernelImpl:Lhe}),ife={kernelName:wi,backendName:"webgpu",kernelFunc:sfe},ofe=Zr({opType:9,dtype:"bool"}),lfe={kernelName:hl,backendName:"webgpu",kernelFunc:ofe},ufe=Sr({opType:10}),dfe={kernelName:cl,backendName:"webgpu",kernelFunc:ufe};function sC(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=n;return hc(a,s,i,"max",r)}var pfe={kernelName:ki,backendName:"webgpu",kernelFunc:sC},hfe=Zr({opType:15,cpuKernelImpl:Whe}),cfe={kernelName:Ii,backendName:"webgpu",kernelFunc:hfe};function ffe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1,p=T.computePool2DInfo(a.shape,s,i,u,o,l),h,d=[];if(p.filterHeight===1&&p.filterWidth===1){if(v.arraysEqual(p.inShape,p.outShape))return vn({inputs:{x:a},backend:r});h=new XS(p),d.push({type:"int32",data:[p.strideHeight,p.strideWidth]})}else h=new KS(p,"max"),d.push({type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]});return r.runWebGPUProgram(h,[a],a.dtype,d)}var mfe={kernelName:Si,backendName:"webgpu",kernelFunc:ffe};function gfe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{keepDims:s,axis:i}=n;return hc(a,i,s,"mean",r)}var yfe={kernelName:Ci,backendName:"webgpu",kernelFunc:gfe};function Afe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;return hc(a,s,i,"min",r)}var xfe={kernelName:Ti,backendName:"webgpu",kernelFunc:Afe},bfe=Zr({opType:16,cpuKernelImpl:Vhe}),vfe={kernelName:Ni,backendName:"webgpu",kernelFunc:bfe},wfe=class{constructor(e,t,r){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,a)=>n[0]+e[a]+n[1]),this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((n,a)=>{this.uniforms+=` pad${a} : vec2<i32>,`}),this.offset=r==="reflect"?0:1,this.shaderKey=`mirrorPad_${r}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,u)=>`uniforms.pad${u}[0]`).join(","),r=this.xShape.map((l,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),n=e===1?"start":"start[i]",a=e===1?"end":"end[i]",s=e===1?"outC":"outC[i]",i=wr(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${rt()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${r});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${s} < ${n}) {
              ${s} = ${n} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${a}) {
              ${s} = (${a} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},kfe={kernelName:Ei,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{paddings:a,mode:s}=t,i=r,o=a.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new wfe(n.shape,a,s);return i.runWebGPUProgram(l,[n],n.dtype,o)}};function Ife(e){let{inputs:t,backend:r}=e,{x:n}=t;if(r.shouldExecuteOnCPU([n])){let s=r.tensorMap.get(n.dataId),[i,o]=Uhe(s.values,n.shape,n.dtype);return r.makeTensorInfo(o,n.dtype,i)}let a=new dc(n.shape,11);return r.runWebGPUProgram(a,[n],n.dtype)}var Sfe={kernelName:fl,backendName:"webgpu",kernelFunc:Ife};function Cfe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n,u=r.readSync(a.dataId),p=r.readSync(s.dataId),{selectedIndices:h}=ea.nonMaxSuppressionV3Impl(u,p,i,o,l);return r.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Tfe={kernelName:gl,backendName:"webgpu",kernelFunc:Cfe};function Nfe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n,p=r.readSync(a.dataId),h=r.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=ea.nonMaxSuppressionV5Impl(p,h,d,c,f,m);return[r.makeTensorInfo([g.length],"int32",new Int32Array(g)),r.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Efe={kernelName:yl,backendName:"webgpu",kernelFunc:Nfe};function ff(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="complex64"){let a=pc({inputs:{input:n},backend:r}),s=ff({inputs:{x:a},backend:r}),i=Qm({inputs:{input:n},backend:r}),o=ff({inputs:{x:i},backend:r}),l=jd({inputs:{real:s,imag:o},backend:r});return r.disposeData(a.dataId),r.disposeData(s.dataId),r.disposeData(i.dataId),r.disposeData(o.dataId),l}else return Kl({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:r})}var Rfe={kernelName:Pl,backendName:"webgpu",kernelFunc:ff};function iC(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let a=pc({inputs:{input:n},backend:r}),s=iC({inputs:{x:a},backend:r}),i=Qm({inputs:{input:n},backend:r}),o=ff({inputs:{x:i},backend:r}),l=jd({inputs:{real:s,imag:o},backend:r});return r.disposeData(a.dataId),r.disposeData(s.dataId),r.disposeData(i.dataId),r.disposeData(o.dataId),l}else return Kl({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:r})}var $fe={kernelName:Al,backendName:"webgpu",kernelFunc:iC};function Mfe(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(t.length===1)return Dy({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{v.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(p=>{let h=Dy({inputs:{input:p},backend:r,attrs:{dim:a}});return o.push(h),h}),u=YS({inputs:l,backend:r,attrs:{axis:a}});return o.forEach(p=>r.disposeData(p.dataId)),u}var Ffe={kernelName:bl,backendName:"webgpu",kernelFunc:Mfe},_fe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,n)=>r[0]+e[n]+r[1]),this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((r,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=wr(e),r=this.xShape.map((u,p)=>`uniforms.pad${p}[0]`).join(","),n=this.xShape.map((u,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),a=e>1?`${t}(${r})`:`${r}`,s=e>1?`${t}(${n})`:`${n}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${rt()}
        if (index < uniforms.size) {
          let start = ${a};
          let end = ${s};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},oC=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;if(s.every(u=>v.arraysEqual(u,[0,0])))return vn({inputs:{x:a},backend:r});if(v.sizeFromShape(a.shape)===0){let u=s.map((p,h)=>p[0]+a.shape[h]+p[1]);return Kl({backend:r,attrs:{shape:u,value:i,dtype:a.dtype}})}let o=[{type:"float32",data:[i]}];s.map(u=>o.push({type:"int32",data:[u[0],u[1]]}));let l=new _fe(a.shape,s);return r.runWebGPUProgram(l,[a],a.dtype,o)},Pfe={kernelName:$i,backendName:"webgpu",kernelFunc:oC},zfe=Zr({opType:13}),Ofe={kernelName:Mi,backendName:"webgpu",kernelFunc:zfe};function Dfe(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,s=new Py(14,n.shape,a.shape);return r.runWebGPUProgram(s,[n,a],"float32")}var Lfe={kernelName:Fi,backendName:"webgpu",kernelFunc:Dfe};function Bfe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;return hc(a,s,i,"prod",r)}var Wfe={kernelName:_i,backendName:"webgpu",kernelFunc:Bfe},Vfe=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:s,dtype:i}=r,o=qhe(n,a,s,i);return t.makeTensorInfo([o.length],i,o)},Gfe={kernelName:gd,backendName:"webgpu",kernelFunc:Vfe},lC=Zr({opType:3}),Ufe={kernelName:ci,backendName:"webgpu",kernelFunc:lC},jfe=Sr({opType:12}),Hfe={kernelName:Pi,backendName:"webgpu",kernelFunc:jfe},qfe=Sr({opType:13}),Kfe={kernelName:Di,backendName:"webgpu",kernelFunc:qfe},Xfe=class{constructor(e,t,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,r,e[3]],this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${rt()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Zfe(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,size:i,halfPixelCenters:o}=n,[l,u]=i,p=s&&l>1?1:0,h=s&&u>1?1:0,d=[{type:"float32",data:[p,h]},{type:"float32",data:[o?.5:0]}],c=new Xfe(a.shape,l,u);return r.runWebGPUProgram(c,[a],"float32",d)}var Yfe={kernelName:Oi,backendName:"webgpu",kernelFunc:Zfe},Jfe=class{constructor(e,t,r,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,r,e[3]],this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${rt()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Qfe(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,p=s&&l>1?1:0,h=s&&u>1?1:0,d=[{type:"float32",data:[p,h]},{type:"float32",data:[s?.5:0]}],c=new Jfe(a.shape,l,u,i);return r.runWebGPUProgram(c,[a],a.dtype,d)}var eme={kernelName:zi,backendName:"webgpu",kernelFunc:Qfe},tme=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${rt()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},rme={kernelName:zl,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=r,l=new tme(n.shape,s),[u,p]=T.getImageCenter(i,n.shape[1],n.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(a)]},{type:"float32",data:[Math.cos(a)]}];return typeof s=="number"?h.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):h.push({type:"float32",data:s}),o.runWebGPUProgram(l,[n],n.dtype,h)}},nme=Sr({opType:15,cpuKernelImpl:Khe}),ame={kernelName:Li,backendName:"webgpu",kernelFunc:nme},F0=class{constructor(e,t,r,n,a,s,i,o=!0){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.sumDupeIndices=o,this.dispatchLayout=tt(e),this.dispatch=Le(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${r}_${n}_${this.sliceDimGreaterThanOne}_${i}_${o}`;let l=wr(a.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=n,this.indicesRank=r}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,r=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",a="";this.dispatchLayout.x.length===1?(n="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(n="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let s=`getUpdates(${Array.from({length:this.updatesRank},(o,l)=>`coords[${l}]`).join(", ")})`,i=(o,l)=>{let u=`atomicAdd(${o}, bitcast<i32>(${l}))`;this.type==="float32"&&(u=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${l});
            loop {
              let info = atomicCompareExchangeWeak(${o}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${l});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let p=`atomicStore(${o}, bitcast<i32>(${l}));`;return this.sumDupeIndices?u:p};return`
    ${a}

      ${rt()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${r};
          }
          let updateValue =
              ${Xp(this.type,!1)}(${s});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${i("&result[flatIndex]","updateValue")};
        }
      }`}};function sme(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=T.calculateShapes(s,a,i),d=[h/u,u];if(h===0)return r.makeTensorInfo(i,a.dtype);let c=We({inputs:{x:a},backend:r,attrs:{shape:[l,o]}}),f=We({inputs:{x:s},backend:r,attrs:{shape:[l,u]}}),m=f.dtype,g=Kl({backend:r,attrs:{shape:d,value:0,dtype:m}}),y=v.sizeFromShape(f.shape),A=[{type:"int32",data:[o]},{type:"int32",data:p},{type:"int32",data:[y]}],x=new F0(f.shape,o,c.shape.length,f.shape.length,p,d,m),b=r.runWebGPUProgram(x,[f,c],m,A,g),w=We({inputs:{x:b},backend:r,attrs:{shape:i}});return r.disposeData(c.dataId),r.disposeData(f.dataId),r.disposeData(b.dataId),w}var ime={kernelName:Il,backendName:"webgpu",kernelFunc:sme},ome=class{constructor(e,t,r){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=r,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[],a=[];for(let s=0;s<this.outputShape.length;s++)a.push(`${r[s]}`),s<this.cRank&&n.push(`${r[s]}`);e=n.join(),t=a.join()}return`
      ${rt()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function lme(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t,i=new ome(n.shape.length,a.shape,a.shape.length);return r.runWebGPUProgram(i,[n,a,s],Rr(a.dtype,s.dtype))}var ume={kernelName:Sl,backendName:"webgpu",kernelFunc:lme},dme=Sr({opType:18}),pme={kernelName:Wi,backendName:"webgpu",kernelFunc:dme},hme=Sr({opType:16}),cme={kernelName:Bi,backendName:"webgpu",kernelFunc:hme},fme=Sr({opType:17}),mme={kernelName:Tl,backendName:"webgpu",kernelFunc:fme},uC=Zr({opType:2,cpuKernelImpl:ece,supportsComplex:!0}),gme={kernelName:Hi,backendName:"webgpu",kernelFunc:uC};function yme(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=v.parseAxisParam([s],a.shape),o=sC({inputs:{x:a},backend:r,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=We({inputs:{x:o},backend:r,attrs:{shape:l}}),p=uC({inputs:{a,b:u},backend:r}),h=nC({inputs:{x:p},backend:r}),d=yx({inputs:{x:h},backend:r,attrs:{axis:i,keepDims:!1}}),c=We({inputs:{x:d},backend:r,attrs:{shape:l}}),f=lC({inputs:{a:h,b:c},backend:r});return r.disposeData(o.dataId),r.disposeData(u.dataId),r.disposeData(p.dataId),r.disposeData(h.dataId),r.disposeData(d.dataId),r.disposeData(c.dataId),f}var Ame={kernelName:Ui,backendName:"webgpu",kernelFunc:yme},xme=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;v.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((y,A)=>y*A),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],p=oC({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(p.shape,s,o,!1),d=T.getPermuted(h.length,s.length,!1),c=T.getReshapedPermuted(p.shape,s,o,!1),f=We({inputs:{x:p},backend:r,attrs:{shape:h}}),m=rs({inputs:{x:f},backend:r,attrs:{perm:d}}),g=We({inputs:{x:m},backend:r,attrs:{shape:c}});return u.push(p),u.push(f),u.push(m),u.forEach(y=>r.disposeData(y.dataId)),g},bme={kernelName:Nl,backendName:"webgpu",kernelFunc:xme},vme=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let r=new Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[n]*t[n];this.outputShape=r,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=wme(this.rank,"uniforms.");return`
      ${rt()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function wme(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e;a++)n.push(`(${r[a]} % ${t}aShape[${a}])`);return n.join()}function dC(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;if(r.shouldExecuteOnCPU([a])||a.dtype==="string"||a.shape.length>=5){let o=r.readSync(a.dataId),l=a.dtype==="string"?o.map(h=>v.decodeString(h)):o,u=Oe(a.shape,a.dtype,l),p=tce(u,s);return r.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new vme(a.shape,s);return r.runWebGPUProgram(i,[a],a.dtype)}var kme={kernelName:ss,backendName:"webgpu",kernelFunc:dC};function Ime(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=T.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let E=r.bufferSync(a),R=r.bufferSync(s),F=v.decodeString(r.readSync(i.dataId)[0]),$=Xhe(E,R,o,d,p,u,l,h,F,c);return r.makeTensorInfo(o,$.dtype,$.values)}let f=[d/p,p],m=We({inputs:{x:a},backend:r,attrs:{shape:[u,l]}}),g=s.shape.length?We({inputs:{x:s},backend:r,attrs:{shape:[u,p]}}):vn({inputs:{x:s},backend:r}),y=g.dtype,A=r.makeTensorInfo([],y,v.makeZerosTypedArray(1,y)),x=We({inputs:{x:i},backend:r,attrs:{shape:Array(f.length).fill(1)}}),b=dC({inputs:{x},backend:r,attrs:{reps:f}}),w=v.sizeFromShape([u,p]),I=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[w]}];switch(u){case 0:break;case 1:{let E=new F0([u,p],l,m.shape.length,g.shape.length,h,f,y,c);r.runWebGPUProgram(E,[g,m],y,I,b)}break;default:{let E=new F0([u,p],l,m.shape.length,A.shape.length,h,f,y,c);r.runWebGPUProgram(E,[A,m],y,I,b)}{let E=new F0([u,p],l,m.shape.length,g.shape.length,h,f,y);r.runWebGPUProgram(E,[g,m],y,I,b)}}let C=We({inputs:{x:b},backend:r,attrs:{shape:o}});return r.disposeData(m.dataId),r.disposeData(g.dataId),r.disposeData(x.dataId),r.disposeData(A.dataId),r.disposeData(b.dataId),C}var Sme={kernelName:Sh,backendName:"webgpu",kernelFunc:Ime};function Cme(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=a.shape.length,p=new Array(u).fill(0),h=a.shape.slice();return l.map(d=>{let c=[...h];c[o]=d;let f=Hd({inputs:{x:a},backend:r,attrs:{begin:p,size:c}});return p[o]+=d,f})}var Tme={kernelName:El,backendName:"webgpu",kernelFunc:Cme},Nme=Sr({opType:19}),Eme={kernelName:Vi,backendName:"webgpu",kernelFunc:Nme},Rme={kernelName:wd,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:r}=e,n=t,a=new dc(r.shape,20);return n.runWebGPUProgram(a,[r],r.dtype)}},$me=Zr({opType:11}),Mme={kernelName:ji,backendName:"webgpu",kernelFunc:$me},Fme=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=wr(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((n,a)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${r-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${rt()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function _me(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Lt.sliceInfo(a.shape,s,i,o,l,u,p,h,d),w;if(m)w=We({inputs:{x:a},backend:r,attrs:{shape:f}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let I=Lt.computeOutShape(A,x,b),C=Hd({inputs:{x:a},backend:r,attrs:{begin:A,size:I}});w=We({inputs:{x:C},backend:r,attrs:{shape:f}}),r.disposeData(C.dataId)}else if(r.shouldExecuteOnCPU([a])){let I=r.readSync(a.dataId),C=Oe(a.shape,a.dtype,I),E=Jhe(c,C,b,A);w=r.makeTensorInfo(f,a.dtype,E.values)}else{let I=new Fme(c),C=[{type:"int32",data:A},{type:"int32",data:b}],E=r.runWebGPUProgram(I,[a],a.dtype,C);w=We({inputs:{x:E},backend:r,attrs:{shape:f}}),r.disposeData(E.dataId)}return w}var Pme={kernelName:Rl,backendName:"webgpu",kernelFunc:_me};function zme(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:p,dataSplits:h}=t,d=r.readSync(p.dataId),c=r.readSync(h.dataId),[f,m]=Qhe(d,c,a,s,i,o,l,u);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(h.shape,"int32",m)]}var Ome={kernelName:kd,backendName:"webgpu",kernelFunc:zme},Dme=Sr({opType:21}),Lme={kernelName:qi,backendName:"webgpu",kernelFunc:Dme},Bme=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${rt()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Wme=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${rt()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Su(e,t){t!==null&&e.disposeData(t.dataId)}function Q7(e){let t=1;for(;t<e;)t*=2;return t}function Vme(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n,o=a.shape,l=o[o.length-1];if(r.shouldExecuteOnCPU([a])){let b=r.readSync(a.dataId),[w,I]=rce(b,o,a.dtype,s,i);return[r.makeTensorInfo(w.shape,w.dtype,w.values),r.makeTensorInfo(I.shape,I.dtype,I.values)]}if(s===0)return o[o.length-1]=0,[r.makeTensorInfo(o,a.dtype,[]),r.makeTensorInfo(o,"int32",[])];if(l===1)return[a,Kl({attrs:{shape:o,dtype:"int32",value:0},backend:r})];let u=v.sizeFromShape(o)/l,p=We({inputs:{x:a},attrs:{shape:[u,l]},backend:r}),h=Q7(s),d=Q7(l),c=null,f=()=>c===null?[p,p]:[p,c],m=(b,w,I)=>{let C=f(),E=new Bme(I),R=[{type:"int32",data:[l]},{type:"int32",data:[c===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[b]},{type:"int32",data:[w]}],F=c;c=r.runWebGPUProgram(E,C,"int32",R),Su(r,F)};for(let b=1;b<h;b*=2){let w=b*2;for(let I=b;I>=1;I/=2)m(w,I,[u,d])}for(let b=d;b>h;b/=2){let w=f(),I=new Wme([u,b/2]),C=[{type:"int32",data:[l]},{type:"int32",data:[c===null?1:0]},{type:"int32",data:[h]}],E=c;c=r.runWebGPUProgram(I,w,"int32",C),Su(r,E);let R=h/2,F=R*2;for(let $=R;$>=1;$/=2)m(F,$,c.shape)}let g=c;c=Hd({inputs:{x:c},backend:r,attrs:{begin:0,size:[u,s]}}),Su(r,g);let y=aC({inputs:{x:p,indices:c},backend:r,attrs:{axis:1,batchDims:1}});Su(r,p);let A=o.slice(0,-1);A.push(s),g=c,c=We({inputs:{x:c},attrs:{shape:A},backend:r}),Su(r,g);let x=y;return y=We({inputs:{x:y},attrs:{shape:A},backend:r}),Su(r,x),[y,c]}var Gme={kernelName:Ml,backendName:"webgpu",kernelFunc:Vme},Ume=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${rt()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function jme(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=a.shape,[f,m]=u!=null?u:[h,d],g=[p,f,m,c],y=new Ume(g),A=i==="nearest"?1:2,x;switch(o){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let b=[{type:"int32",data:[A]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return r.runWebGPUProgram(y,[a,s],"float32",b)}var Hme={kernelName:Fl,backendName:"webgpu",kernelFunc:jme};function qme(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),p=0;for(let m=0;m<o;m++)m!==s&&(u[p++]=i.shape[m]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;let g=Hd({inputs:{x:i},backend:r,attrs:{begin:d,size:c}}),y=We({inputs:{x:g},backend:r,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>r.disposeData(m.dataId)),f}var Kme={kernelName:_l,backendName:"webgpu",kernelFunc:qme},Xme=[khe,sce,oce,dce,gce,Ace,bce,wce,Tce,$ce,Fce,Oce,She,Wce,Hce,Yce,Qce,t0e,a0e,i0e,l0e,p0e,f0e,x0e,v0e,k0e,I0e,S0e,T0e,bhe,E0e,P0e,$0e,F0e,D0e,B0e,V0e,j0e,K0e,Z0e,J0e,Ihe,Lce,efe,rfe,afe,ife,lfe,dfe,pfe,cfe,mfe,yfe,xfe,vfe,kfe,m0e,Sfe,Tfe,Efe,Nce,$fe,Ffe,Pfe,Ofe,Lfe,Wfe,Gfe,Ece,Ufe,Hfe,Kfe,vhe,Yfe,eme,rme,ame,ime,ume,pme,cme,mme,Sce,Pme,Ome,Ame,bme,Sme,Tme,Eme,Rme,Mme,gme,y0e,Lme,kme,Gme,Hme,fce,Kme,Rfe];for(let e of Xme)Jn(e);var Zme=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,r=!1){let n=e6(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let s=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(s),s}this.numBytesAllocated+=e;let a=this.device.createBuffer({size:e,usage:t,mappedAtCreation:r});return this.usedBuffers.get(n).push(a),a}releaseBuffer(e,t,r){if(this.freeBuffers.size===0)return;let n=e6(t,r);this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.freeBuffers.get(n).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let a=this.usedBuffers.get(n),s=a.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");a.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,r){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,r)},n=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function e6(e,t){return`${e}_${t}`}var Yme=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,r,n){let a=r6(r),s=e*t*a,i=t6(e,t,r,n);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let l=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(l),l}this.numBytesAllocated+=s;let o=this.device.createTexture({size:[e,t],format:r,usage:n});return this.usedTextures.get(i).push(o),o}releaseTexture(e,t,r,n,a){if(this.freeTextures.size===0)return;let s=t6(t,r,n,a);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(s),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1);let l=r6(n),u=t*r*l;this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(r=>{r.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function t6(e,t,r,n){return`${e}_${t}_${r}_${n}`}function r6(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}var Jme=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Qme=(e,t)=>{let r=e.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,a=t.dispatch;if(a.every(i=>i<=r))return a;v.assert(a[0]>r&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(a[0]));return s>r?(s=Math.ceil(Math.cbrt(a[0])),v.assert(s<=r,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},pC=class extends Xu{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!cx())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Zme(this.device),this.textureManager=new Yme(this.device),this.tensorMap=new ph(this,Xt()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return pC.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let r=this.tensorMap.get(e);if(this.decRef(e),!t&&r.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:n}=this.tensorMap.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let r=t.resourceInfo;r.texture instanceof GPUTexture&&this.textureManager.releaseTexture(r.texture,r.width,r.height,r.format,r.usage),r.texture=null}else{let r=t.resourceInfo;this.bufferManager.releaseBuffer(r.buffer,r.size,r.usage),r.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,r){if(r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.tensorMap.set(n,{dtype:r,shape:t,values:e,refCount:1}),n}move(e,t,r,n,a){if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:n,shape:r,values:t,refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let r=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),await r.mapAsync(GPUMapMode.READ);let n=r.getMappedRange().slice(0);return r.unmap(),r!=null&&this.bufferManager.releaseBuffer(r,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let r=this.tensorMap.get(e);return this.releaseResource(e),r.values=t,r.values}readSync(e){let t=this.tensorMap.get(e),{values:r}=t;if(r==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return r}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:r}=t;if(r!=null)return this.convertAndCacheOnCPU(e,r);let n;if(t.dtype==="complex64"){let a=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),s=a[0],i=a[1];n=T.mergeRealAndImagArrays(s,i)}else{let a=t.resourceInfo,s=await this.getBufferData(a.buffer,a.size);n=jS(s,t.dtype)}return this.convertAndCacheOnCPU(e,n),n}readToGPU(e){let t=this.tensorMap.get(e),{values:r,dtype:n,shape:a,resourceInfo:s}=t;if(n==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(s==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=s.size,o=this.bufferManager.acquireBuffer(i,s.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(s.buffer,0,o,0,i),this.submitQueue();let l=this.makeTensorInfo(a,n),u=Xt().makeTensorFromTensorInfo(l),p=this.tensorMap.get(l.dataId);return p.resourceInfo={size:i,usage:this.defaultGpuBufferUsage(),buffer:o},{tensorRef:u,buffer:o,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let r=t.map(n=>v.decodeString(n));return Oe(e.shape,e.dtype,r)}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Oe(e.shape,e.dtype,t)}async time(e){let t=this.activeTimers,r=[],n=!1;this.programTimersStack==null?(this.programTimersStack=r,n=!0):this.activeTimers.push(r),this.activeTimers=r,e();let a=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),s=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,n&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(a);return i.kernelMs=v.sum(o),i.getExtraProfileInfo=()=>o.map((l,u)=>({name:s[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,r){return t==="string"&&r!=null&&r.length>0&&v.isString(r[0])&&(r=r.map(n=>v.encodeString(n))),{dataId:this.write(r,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let n=t.resourceInfo;return n.texture instanceof GPUExternalTexture?n.texture:n.texture.createView()}let r=t.resourceInfo;return{offset:0,size:r.size,buffer:r.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let r=US(t.dtype)*v.sizeFromShape(t.shape),n=this.bufferManager.acquireBuffer(r,this.defaultGpuBufferUsage());if(t.resourceInfo={size:r,usage:this.defaultGpuBufferUsage(),buffer:n},t.values){let a=this.bufferManager.acquireUploadBuffer(r,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=a.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),a.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a,0,n,0,r);let i={size:r,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:a};this.stagingPendingDisposal.push(i)}}makeUniforms(e){let t=0,r=0,n=[];e.forEach(o=>{o.data.length===0&&(o.data=[1]);let l;switch(o.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:v.assert(!1,()=>`Unsupported ${o.data.length}D shape`)}(r===5||r===6)&&(l=16),t=Math.ceil(t/l)*l,r=o.data.length,n.push(t),t+=o.data.length*4});let a=new ArrayBuffer(t);e.forEach((o,l)=>{let u=n[l];o.type==="int32"?new Int32Array(a,u,o.data.length).set(o.data):o.type==="uint32"?new Uint32Array(a,u,o.data.length).set(o.data):new Float32Array(a,u,o.data.length).set(o.data)});let s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(s,0,a,0,t);let i={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:s};return this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,r,n,a){if(a||(a=this.makeTensorInfo(e.outputShape,r)),v.sizeFromShape(a.shape)===0)return this.tensorMap.get(a.dataId).values=v.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId),e.dispatch=Qme(this.device,e);let s=[],i=[];if(!e.isFromPixels){s.push({type:"float32",data:[NaN]}),i=t.concat(a).map(g=>g.shape);let f="int32";i.map(g=>{s.push({type:f,data:g})});let m=v.computeStrides(a.shape);if(s.push({type:f,data:m}),e.size){let g=v.sizeFromShape(e.outputShape);s.push({type:f,data:[e.isVec4?g/4:g]})}}let o=t.map((f,m)=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(f.dataId),{dtype:this.tensorMap.get(f.dataId).dtype,shape:f.shape,name:e.variableNames[m]}}),l=the(e,i,o,a),u;l in this.pipelineCache?u=this.pipelineCache[l]:(u=Qpe(this.device,e,o,a),this.pipelineCache[l]=u),n&&(s=[...s,...n]);let p=[this.tensorToBinding(a),...t.map(f=>this.tensorToBinding(f)),this.makeUniforms(s)],h=this.device.createBindGroup({layout:u.getBindGroupLayout(0),entries:p.map((f,m)=>({binding:m,resource:f}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),c=this.activeTimers!=null;return c&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(u),d.setBindGroup(0,h),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),c&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(f=>{this.commandQueueOwnedIds.add(f.dataId)}),this.commandQueueOwnedIds.add(a.dataId),Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),c&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,r,0,16),this.submitQueue(),await r.mapAsync(GPUMapMode.READ);let n=new BigUint64Array(r.getMappedRange()),a=Number(n[1]-n[0]);return r.unmap(),this.bufferManager.releaseBuffer(r,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e,t=Jme){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(r=>this.tensorMap.get(r.dataId).resourceInfo==null&&v.sizeFromShape(r.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},Ax=pC;Ax.nextDataId=0;var hC={};Be(hC,{WebGPUBackend:()=>Ax,webgpu_util:()=>VS});cx()&&Ol("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),r=t.limits,n={},a=t.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize},a?n.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await t.requestDevice(n);return new Ax(s,a)},3);var Ut=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Ut||{}),e1=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(e1||{}),cC;function e1e(e){cC=e.wasm.cwrap(Bs,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function t1e(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=n,d=r.dataIdMap.get(a.dataId).id,c=r.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let E=r.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=o==null?0:r.dataIdMap.get(o.dataId).id,g=e1[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],A=u?s.shape[1]:s.shape[2],x=Dl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),b=r.makeOutput([...x,y,A],a.dtype),w=r.dataIdMap.get(b.dataId).id,I=new Uint8Array(new Int32Array(a.shape).buffer),C=new Uint8Array(new Int32Array(s.shape).buffer);return cC(d,I,a.shape.length,c,C,s.shape.length,l,u,g,f,m,h||0,w),b}var r1e={kernelName:Bs,backendName:"wasm",setupFunc:e1e,kernelFunc:t1e};function vr(e,t){let r;function n(s){r=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,u=i.makeOutput(o.shape,t||o.dtype),p=i.dataIdMap.get(u.dataId).id;return v.sizeFromShape(u.shape)===0||r(l,Ut[o.dtype],p),u}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:a}}var n1e=vr(Yo);function Cr(e,t,r){let n;function a(i){n=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:u,b:p}=l,h=o.dataIdMap.get(u.dataId).id,d=o.dataIdMap.get(p.dataId).id,c=r!=null?r:u.dtype,f=T.assertAndGetBroadcastShape(u.shape,p.shape),m=o.makeOutput(f,c);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(p.shape).buffer),A=o.dataIdMap.get(m.dataId).id;return n(h,g,u.shape.length,d,y,p.shape.length,Ut[u.dtype],A),m}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var a1e=!0,s1e=Cr(ns,a1e),fC;function i1e(e){fC=e.wasm.cwrap(ti,null,["array","number","number","number"])}function o1e(e){let{inputs:t,backend:r}=e,n=r.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(n.shape)===0)return n;let a=t.map(o=>r.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=r.dataIdMap.get(n.dataId).id;return fC(s,a.length,Ut[n.dtype],i),n}var l1e={kernelName:ti,backendName:"wasm",setupFunc:i1e,kernelFunc:o1e};function t1(e){let{inputs:{x:t},backend:r}=e,n=r.makeOutput(t.shape,t.dtype),a=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(n).set(a),n}var u1e={kernelName:bi,backendName:"wasm",kernelFunc:t1},mC;function d1e(e){mC=e.wasm.cwrap(Pa,null,["number","array","number","number","number","array","number"])}function Qs(e){let{inputs:t,backend:r,attrs:n}=e,[a,s]=h1e(t.x.shape,n.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=p1e(t.x.shape,n.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let f=t1({inputs:t,backend:r});return f.shape=o,f}let u=r.makeOutput(o,l.dtype),p=r.dataIdMap.get(l.dataId).id,h=r.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return mC(p,c,l.shape.length,Ut[l.dtype],h,d,s.length),u}function p1e(e,t){let r=new Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];return r}function h1e(e,t){let r=[],n=[];for(let a=0;a<e.length;++a)e[a]!==1&&r.push(e[a]),e[t[a]]!==1&&n.push(t[a]);for(let a=0;a<n.length;++a){let s=-1;for(let i=0;i<n.length;++i)n[i]>=a&&(s===-1||n[s]>n[i])&&(s=i);n[s]=a}return[r,n]}var c1e={kernelName:Pa,backendName:"wasm",kernelFunc:Qs,setupFunc:d1e};function to(e,t,r){let n=e.shape,a=e.shape.length,s=v.parseAxisParam(t,n),i=s,o=T.getAxesPermutation(i,a),l=null,u=!1;if(o!=null){let p=new Array(a);for(let d=0;d<p.length;d++)p[d]=n[o[d]];i=T.getInnerMostAxes(i.length,a),l=Qs({inputs:{x:e},attrs:{perm:o},backend:r});let h=r.dataIdMap.get(e.dataId).id;r.dataIdMap.get(l.dataId).id!==h&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var gC;function f1e(e){gC=e.wasm.cwrap(Qu,null,["number, number, number"])}function m1e(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=to(i,a,t);if(d){let A=t.dataIdMap.get(u.dataId).id;l=u,o=A}let c=l.shape.length;T.assertAxesAreInnerMostDims("all",p,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,p),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;gC(o,g,A)}if(d&&t.disposeData(u.dataId),s){let A=T.expandShapeToKeepDim(y.shape,h);y.shape=A}return y}var g1e={kernelName:Qu,backendName:"wasm",setupFunc:f1e,kernelFunc:m1e},yC;function y1e(e){yC=e.wasm.cwrap(ed,null,["number, number, number"])}function A1e(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=to(i,a,t);if(d){let A=t.dataIdMap.get(u.dataId).id;l=u,o=A}let c=l.shape.length;T.assertAxesAreInnerMostDims("any",p,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,p),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;yC(o,g,A)}if(d&&t.disposeData(u.dataId),s){let A=T.expandShapeToKeepDim(y.shape,h);y.shape=A}return y}var x1e={kernelName:ed,backendName:"wasm",setupFunc:y1e,kernelFunc:A1e},AC;function b1e(e){AC=e.wasm.cwrap(ri,null,["number","number","number","number","number"])}function v1e(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a}=n,{x:s}=r,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:p,inputWasTransposed:h}=to(s,a,t);if(h){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(l=u,o=y)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=v.sizeFromShape(c.shape),g=l.shape[p[0]];return AC(o,Ut[l.dtype],m,g,f),h&&t.disposeData(u.dataId),c}var w1e={kernelName:ri,backendName:"wasm",kernelFunc:v1e,setupFunc:b1e},xC;function k1e(e){xC=e.wasm.cwrap(ni,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function I1e(e){let{inputs:t,attrs:r,backend:n}=e,a=t.x,s=n.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=T.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,A=p.strideWidth,x=p.inChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(p.dilationWidth!==1||p.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let b=n.makeOutput(p.outShape,"float32"),w=n.dataIdMap.get(b.dataId).id;return xC(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,A,x,w),b}var S1e={kernelName:ni,backendName:"wasm",setupFunc:k1e,kernelFunc:I1e};function on(e){let{inputs:t,attrs:r}=e,{x:n}=t,{shape:a}=r,s=v.sizeFromShape(n.shape),i=v.inferFromImplicitShape(a,s);return v.assert(s===v.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var C1e={kernelName:vl,backendName:"wasm",kernelFunc:on},bC;function T1e(e){bC=e.wasm.cwrap(ai,null,["number","array","number","number","array","number","number","number","number"])}function N1e(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=Dl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);v.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,p,d]:[g,d,p],b=o?[y,c,h]:[y,h,c],w=on({inputs:{x:a},backend:r,attrs:{shape:x}}),I=on({inputs:{x:s},backend:r,attrs:{shape:b}}),C=r.dataIdMap.get(w.dataId).id,E=r.dataIdMap.get(I.dataId).id,R=i?w.shape[2]:w.shape[1],F=o?I.shape[1]:I.shape[2],$=Math.max(g,y),S=r.makeOutput([$,R,F],w.dtype),O=r.dataIdMap.get(S.dataId).id,z=new Uint8Array(new Int32Array(w.shape).buffer),j=new Uint8Array(new Int32Array(I.shape).buffer);return bC(C,z,w.shape.length,E,j,I.shape.length,i,o,O),r.disposeData(w.dataId),r.disposeData(I.dataId),S.shape=A,S}var E1e={kernelName:ai,backendName:"wasm",setupFunc:T1e,kernelFunc:N1e};function Ko(e){let{inputs:{x:t},attrs:{begin:r,size:n},backend:a}=e,[s,i]=Lt.parseSliceParams(t,r,n),o=Lt.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),p=v.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let f=Lt.computeFlatOffset(s,p);return t.dtype==="string"?h.stringBytes=l.slice(f,f+v.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(f,f+v.sizeFromShape(i))),u}if(t.dtype==="string"){let f=sf(l,s,i,t.shape,t.dtype);return h.stringBytes=f,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(c===2)R1e(l,p[0],d,s,i);else if(c===3)$1e(l,p[0],p[1],d,s,i);else if(c===4)M1e(l,p[0],p[1],p[2],d,s,i);else{let f=sf(l,s,i,t.shape,t.dtype);d.set(f)}return u}function R1e(e,t,r,n,a){let s=0,i=n[0],o=n[1],l=i+a[0];for(let u=i;u<l;u++){let p=u*t+o;r.set(e.subarray(p,p+a[1]),s),s+=a[1]}}function $1e(e,t,r,n,a,s){let i=0,o=a[0],l=a[1],u=a[2],p=o+s[0],h=l+s[1];for(let d=o;d<p;d++)for(let c=l;c<h;c++){let f=d*t+c*r+u;n.set(e.subarray(f,f+s[2]),i),i+=s[2]}}function M1e(e,t,r,n,a,s,i){let o=0,l=s[0],u=s[1],p=s[2],h=l+i[0],d=u+i[1],c=p+i[2],f=s[3];for(let m=l;m<h;m++)for(let g=u;g<d;g++)for(let y=p;y<c;y++){let A=m*t+g*r+y*n+f;a.set(e.subarray(A,A+i[3]),o),o+=i[3]}}var F1e={kernelName:Cl,backendName:"wasm",kernelFunc:Ko};function _1e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n,o=s.reduce((y,A)=>y*A),l=T.getReshaped(a.shape,s,o),u=T.getPermuted(l.length,s.length),p=T.getReshapedPermuted(a.shape,s,o),h=T.getSliceBeginCoords(i,s.length),d=T.getSliceSize(p,i,s.length),c=on({inputs:{x:a},backend:r,attrs:{shape:l}}),f=Qs({inputs:{x:c},backend:r,attrs:{perm:u}}),m=on({inputs:{x:f},backend:r,attrs:{shape:p}}),g=Ko({inputs:{x:m},backend:r,attrs:{begin:h,size:d}});return r.disposeData(c.dataId),r.disposeData(f.dataId),r.disposeData(c.dataId),g}var P1e={kernelName:Jo,backendName:"wasm",kernelFunc:_1e};function qd(e){let{inputs:{x:t},attrs:{dtype:r},backend:n}=e,a=n.makeOutput(t.shape,r),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(s),a}var z1e={kernelName:si,backendName:"wasm",kernelFunc:qd},O1e=vr(ii),vC;function D1e(e){vC=e.wasm.cwrap(as,null,["number","number","number","number"])}function L1e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=n,o=r.dataIdMap.get(a.dataId).id,l=r.makeOutput(a.shape,a.dtype),u=r.dataIdMap.get(l.dataId).id;return vC(o,s,i,u),l}var B1e={kernelName:as,backendName:"wasm",setupFunc:D1e,kernelFunc:L1e};function wC(e){let{inputs:t,backend:r}=e,n=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=T.computeOutShape(t.map(c=>c.shape),n),s=t.filter(c=>v.sizeFromShape(c.shape)>0);if(s.length===1)return t1({inputs:{x:s[0]},backend:r});let i=r.makeOutput(a,t[0].dtype);if(v.sizeFromShape(a)===0)return i;let o=s.map(c=>c.shape);if(T.assertParamsConsistent(o,n),s[0].dtype==="string"){let c=s.map(x=>{let b=v.sizeFromShape(x.shape.slice(n));return on({inputs:{x},backend:r,attrs:{shape:[-1,b]}})}),f=c.map(x=>({vals:r.readSync(x.dataId),shape:x.shape}));a=T.computeOutShape(c.map(x=>x.shape),1);let m=c[0].shape[0]===1,g=BA(f,a,t[0].dtype,m),y=T.computeOutShape(s.map(x=>x.shape),n);i.shape=y;let A=r.dataIdMap.get(i.dataId);return A.stringBytes=T.fromStringArrayToUint8(g),c.forEach(x=>r.disposeData(x.dataId)),i}let l=v.sizeFromShape(s[0].shape.slice(0,n)),u=0,p=s.map(c=>{let f=v.sizeFromShape(c.shape.slice(n));return u+=f,f}),h=s.map(c=>r.typedArrayFromHeap(c)),d=r.typedArrayFromHeap(i);for(let c=0;c<l;c++){let f=c*u;for(let m=0;m<h.length;m++){let g=p[m],y=c*g,A=h[m].subarray(y,y+g);d.set(A,f),f+=g}}return i}var W1e={kernelName:Qo,backendName:"wasm",kernelFunc:wC},kC;function V1e(e){kC=e.wasm.cwrap(oi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function G1e(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h,dataFormat:d}=r,c=T.convertConv2DDataFormat(d),f=T.computeConv2DInfo(a.shape,s.shape,l,u,p,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,I=f.dilationWidth,C=f.strideHeight,E=f.strideWidth,R=f.inChannels,F=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let S=n.makeOutput(f.outShape,"float32"),O=n.dataIdMap.get(S.dataId).id;return kC(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,A,x,b,$,w,I,C,E,R,F,O),S}var U1e={kernelName:oi,backendName:"wasm",setupFunc:V1e,kernelFunc:G1e},IC;function j1e(e){IC=e.wasm.cwrap(li,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function H1e(e){let{backend:t,inputs:r,attrs:n}=e,{dy:a,filter:s}=r,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=n,h=1,d=T.convertConv2DDataFormat(l),c=T.computeConv2DInfo(p,s.shape,i,h,o,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:A,inWidth:x,outChannels:b,outHeight:w,outWidth:I,strideHeight:C,strideWidth:E}=c,R=m-1-c.padInfo.top,F=g-1-c.padInfo.left,$=c.dataFormat==="channelsLast",S=v.computeStrides(c.inShape),O=v.computeStrides(a.shape),[z,j,K]=v.computeStrides(s.shape),D=S[0],Z=$?S[1]:S[2],V=$?S[2]:1,re=$?1:S[1],Q=O[0],ie=$?O[1]:O[2],X=$?O[2]:1,ae=$?1:O[1],de=t.makeOutput(c.inShape,"float32"),be=t.dataIdMap.get(de.dataId).id,ve=t.dataIdMap.get(a.dataId).id,Ee=t.dataIdMap.get(s.dataId).id;return IC(ve,Ee,f,m,g,A,x,y,w,I,b,C,E,R,F,z,j,K,D,Z,V,re,Q,ie,X,ae,be),de}var q1e={kernelName:li,backendName:"wasm",setupFunc:j1e,kernelFunc:H1e},K1e=vr(ui),X1e=vr(di),SC=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(SC||{}),CC;function Z1e(e){CC=e.wasm.cwrap(tl,null,["number","number","number","number","array","number","number","number","number","number"])}function Y1e(e){let{backend:t,inputs:r,attrs:n}=e,{method:a,extrapolationValue:s,cropSize:i}=n,{image:o,boxes:l,boxInd:u}=r,p=l.shape[0],[h,d]=i,c=[p,h,d,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=qd({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(c,"float32"),b=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return CC(g,y,A,p,w,h,d,SC[a],s,b),m!=null&&t.disposeData(m.dataId),x}var J1e={kernelName:tl,backendName:"wasm",setupFunc:Z1e,kernelFunc:Y1e},TC;function Q1e(e){TC=e.wasm.cwrap(el,null,["number","number","number","number","number","number"])}function e2e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n,l=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),p=a;u!==null&&(p=Qs({inputs:{x:a},attrs:{perm:u},backend:r}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[h],l);let d=r.makeOutput(p.shape,p.dtype),c=p.shape[h],f=r.dataIdMap.get(p.dataId).id,m=r.dataIdMap.get(d.dataId).id;TC(f,i?1:0,o?1:0,c,m,Ut[a.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Qs({inputs:{x:d},attrs:{perm:y},backend:r}),r.disposeData(p.dataId),r.disposeData(d.dataId)}return g}var t2e={kernelName:el,backendName:"wasm",setupFunc:Q1e,kernelFunc:e2e},NC;function r2e(e){NC=e.wasm.cwrap(pi,null,["number","number","number","number","number","number"])}function n2e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n,l=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),p=a;u!==null&&(p=Qs({inputs:{x:a},attrs:{perm:u},backend:r}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[h],l);let d=r.makeOutput(p.shape,p.dtype),c=p.shape[h],f=r.dataIdMap.get(p.dataId).id,m=r.dataIdMap.get(d.dataId).id;NC(f,i?1:0,o?1:0,c,m,Ut[a.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Qs({inputs:{x:d},attrs:{perm:y},backend:r}),r.disposeData(p.dataId),r.disposeData(d.dataId)}return g}var a2e={kernelName:pi,backendName:"wasm",setupFunc:r2e,kernelFunc:n2e},EC;function s2e(e){EC=e.wasm.cwrap(rl,null,["number","number","number","array","number","array","array","number","number"])}function i2e(e){let{backend:t,inputs:r,attrs:n}=e,{x:a}=r,{blockSize:s,dataFormat:i}=n,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],p=i==="NHWC"?a.shape[3]:a.shape[1],h=l*s,d=u*s,c=p/(s*s),f=i==="NHWC"?[o,h,d,c]:[o,c,h,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),b=t.dataIdMap.get(m.dataId).id;return EC(g,s,i==="NHWC"?1:0,y,a.shape.length-1,A,x,f.length,b),m}var o2e={kernelName:rl,backendName:"wasm",setupFunc:s2e,kernelFunc:i2e},RC;function l2e(e){RC=e.wasm.cwrap(hi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function u2e(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h}=r,d=u==null?[1,1]:u,c=T.computeConv2DInfo(a.shape,s.shape,l,d,p,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,x=c.padInfo.left,b=c.dilationHeight,w=c.dilationWidth,I=c.strideHeight,C=c.strideWidth,E=c.inChannels,R=c.outChannels,F=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let $=n.makeOutput(c.outShape,"float32"),S=n.dataIdMap.get($.dataId).id;return RC(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,A,x,F,b,w,I,C,E,R,S),$}var d2e={kernelName:hi,backendName:"wasm",setupFunc:l2e,kernelFunc:u2e},p2e=vr(fi),h2e=!1,c2e=Cr(nl,h2e,"bool"),f2e=vr(mi,"float32");function Ly(e){let{inputs:t,attrs:r,backend:n}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),on({inputs:{x:a},backend:n,attrs:{shape:o}})}var m2e={kernelName:al,backendName:"wasm",kernelFunc:Ly};function $C(e){let{attrs:{shape:t,value:r,dtype:n},backend:a}=e,s=a.makeOutput(t,n);return a.typedArrayFromHeap(s).fill(r),s}var g2e={kernelName:ld,backendName:"wasm",kernelFunc:$C},MC;function y2e(e){MC=e.wasm.cwrap(il,null,["number","number","number","number","number","number"])}function A2e(e){let{inputs:t,backend:r}=e,{image:n}=t,a=r.makeOutput(n.shape,n.dtype),s=r.dataIdMap.get(n.dataId).id,i=r.dataIdMap.get(a.dataId).id,[o,l,u,p]=n.shape;return MC(s,o,l,u,p,i),a}var x2e={kernelName:il,backendName:"wasm",kernelFunc:A2e,setupFunc:y2e},b2e=vr(gi),v2e=!1,w2e=Cr(yi,v2e),FC;function k2e(e){FC=e.wasm.cwrap(Ai,null,["number","number","number","number","number","number","number"])}function I2e(e){let{backend:t,inputs:r,attrs:n}=e,{varianceEpsilon:a}=n,{x:s,mean:i,variance:o,offset:l,scale:u}=r,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(v.sizeFromShape(s.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return FC(p,h,d,c,f,a,g),m}var S2e={kernelName:Ai,backendName:"wasm",setupFunc:k2e,kernelFunc:I2e},_C;function C2e(e){_C=e.wasm.cwrap(Ws,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function T2e(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=T.computeConv2DInfo(a.shape,s.shape,l,p,u,d),g=e1[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(a.dataId).id,A=n.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let X=n.dataIdMap.get(i.dataId);if(X.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${X.shape.length}.`);if(X.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${X.shape}) does not match the number of output channels (${x})`);b=X.id}let w=m.filterHeight,I=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,$=m.dilationHeight,S=m.dilationWidth,O=m.strideHeight,z=m.strideWidth,j=m.inChannels,K=m.padInfo.type==="SAME"?1:0,D=m.batchSize,Z=m.inHeight,V=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let re=n.makeOutput(m.outShape,"float32"),Q=n.dataIdMap.get(re.dataId).id,ie=o==null?0:n.dataIdMap.get(o.dataId).id;return _C(y,D,Z,V,A,w,I,b,C,E,R,F,K,$,S,O,z,j,x,g,ie,f||0,Q),re}var N2e={kernelName:Ws,backendName:"wasm",setupFunc:C2e,kernelFunc:T2e},PC;function E2e(e){PC=e.wasm.cwrap(Vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function R2e(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=T.computeConv2DInfo(a.shape,s.shape,l,p,u,d,!0),g=e1[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(a.dataId).id,A=n.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let X=n.dataIdMap.get(i.dataId);if(X.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${X.shape.length}.`);if(X.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${X.shape}) does not match the number of output channels (${x})`);b=X.id}let w=m.filterHeight,I=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,$=m.dilationHeight,S=m.dilationWidth,O=m.strideHeight,z=m.strideWidth,j=m.inChannels,K=m.padInfo.type==="SAME"?1:0,D=m.batchSize,Z=m.inHeight,V=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let re=n.makeOutput(m.outShape,"float32"),Q=n.dataIdMap.get(re.dataId).id,ie=o==null?0:n.dataIdMap.get(o.dataId).id;return PC(y,D,Z,V,A,w,I,b,C,E,R,F,K,$,S,O,z,j,x,g,ie,f||0,Q),re}var $2e={kernelName:Vs,backendName:"wasm",setupFunc:E2e,kernelFunc:R2e},zC;function M2e(e){zC=e.wasm.cwrap(ll,null,["number","number","number","number","number","number","array","number"])}function F2e(e){let{backend:t,inputs:r}=e,{params:n,indices:a}=r,[s,i,o,l]=l3.prepareAndValidate(n,a),u=t.makeOutput(s,n.dtype);if(i===0)return u;let p=a.shape,h=p[p.length-1],d=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return zC(d,Ut[n.dtype],c,i,h,o,f,m),u}var _2e={kernelName:ll,backendName:"wasm",setupFunc:M2e,kernelFunc:F2e},OC;function P2e(e){OC=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function z2e(e){let{backend:t,inputs:r,attrs:n}=e,{x:a,indices:s}=r,{axis:i,batchDims:o}=n,l=v.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),p=a.shape[l];for(let C=0;C<u.length;++C){let E=u[C];v.assert(E<=p-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${p-1}]`)}let h=T.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=on({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=v.sizeFromShape(s.shape),f=on({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(v.sizeFromShape(a.shape)===0)return g;let y=d.shape.length-1,A=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(v.computeStrides(d.shape)).buffer),I=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return OC(A,Ut[a.dtype],w,y,x,h.batchSize,I,b),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}var O2e={kernelName:ol,backendName:"wasm",setupFunc:P2e,kernelFunc:z2e},D2e=!1,L2e=Cr(ul,D2e,"bool"),B2e=!1,W2e=Cr(xi,B2e,"bool"),DC;function V2e(e){DC=e.wasm.cwrap(vi,null,["number","number","number","number"])}function G2e(e){let{inputs:{x:t},attrs:{alpha:r},backend:n}=e,a=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;DC(a,Ut[t.dtype],r,i)}return s}var U2e={kernelName:vi,backendName:"wasm",setupFunc:V2e,kernelFunc:G2e},j2e=!1,H2e=Cr(dl,j2e,"bool"),q2e=!1,K2e=Cr(pl,q2e,"bool"),X2e=vr(wi),Z2e=!1,Y2e=Cr(hl,Z2e,"bool"),J2e=vr(cl),Q2e=!1,ege=Cr(cd,Q2e,"bool"),tge=!1,rge=Cr(k6,tge,"bool"),LC;function nge(e){LC=e.wasm.cwrap(ki,null,["number","number","number","number"])}function age(e){let{backend:t,inputs:r,attrs:n}=e,{reductionIndices:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=to(i,a,t);if(d){let A=t.dataIdMap.get(u.dataId).id;l=u,o=A}let c=l.shape.length;T.assertAxesAreInnerMostDims("max",p,c);let[f,m]=T.computeOutAndReduceShapes(l.shape,p),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;LC(o,Ut[i.dtype],g,A)}if(d&&t.disposeData(u.dataId),s){let A=T.expandShapeToKeepDim(y.shape,h);y.shape=A}return y}var sge={kernelName:ki,backendName:"wasm",setupFunc:nge,kernelFunc:age},ige=!1,oge=Cr(Ii,ige),BC;function lge(e){BC=e.wasm.cwrap(Si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function uge(e){let{inputs:t,attrs:r,backend:n}=e,a=t.x,s=n.dataIdMap.get(a.dataId).id;v.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=T.computePool2DInfo(a.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,A=p.dilationWidth,x=p.strideHeight,b=p.strideWidth,w=p.inChannels,I=p.outChannels;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let C=n.makeOutput(p.outShape,"float32"),E=n.dataIdMap.get(C.dataId).id;return BC(s,a.shape[0],a.shape[1],a.shape[2],h,d,c,f,m,g,y,A,x,b,w,I,E),C}var dge={kernelName:Si,backendName:"wasm",setupFunc:lge,kernelFunc:uge},WC;function pge(e){WC=e.wasm.cwrap(Ci,null,["number, number, number"])}function hge(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=to(i,a,t),f=h;if(c){let b=t.dataIdMap.get(p.dataId).id;b!==o&&(u=p,l=b,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),A=u;u.dtype!=="float32"&&(A=qd({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let x=t.makeOutput(m,"float32");if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(x.dataId).id;WC(l,y,b)}if(c&&t.disposeData(p.dataId),s){let b=T.expandShapeToKeepDim(x.shape,d);x.shape=b}return u.dtype!=="float32"&&t.disposeData(A.dataId),x}var cge={kernelName:Ci,backendName:"wasm",setupFunc:pge,kernelFunc:hge},VC;function fge(e){VC=e.wasm.cwrap(Ti,null,["number","number","number","number"])}function mge(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=to(i,a,t);if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x)}let f=u.shape.length;T.assertAxesAreInnerMostDims("min",h,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,h),y=v.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;VC(l,Ut[i.dtype],y,x)}if(c&&t.disposeData(p.dataId),s){let x=T.expandShapeToKeepDim(A.shape,d);A.shape=x}return A}var gge={kernelName:Ti,backendName:"wasm",setupFunc:fge,kernelFunc:mge},yge=!1,Age=Cr(Ni,yge),GC=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(GC||{}),UC;function xge(e){UC=e.wasm.cwrap(Ei,null,["number","array","number","number","array","array","number","number"])}function bge(e){let{inputs:{x:t},backend:r,attrs:{paddings:n,mode:a}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]),i=r.dataIdMap.get(t.dataId).id,o=r.makeOutput(s,t.dtype),l=r.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=n.map(f=>f[0]),h=n.map(f=>f[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return UC(i,u,t.shape.length,Ut[t.dtype],d,c,GC[a],l),o}var vge={kernelName:Ei,backendName:"wasm",kernelFunc:bge,setupFunc:xge},wge=!0,kge=Cr(Ri,wge),Ige=vr(fl);function xx(e,t){let r=new Int32Array(e.wasm.HEAPU8.buffer,t,4),n=r[0],a=r[1],s=r[2],i=r[3];return e.wasm._free(t),{pSelectedIndices:n,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var jC;function Sge(e){jC=e.wasm.cwrap(gl,"number",["number","number","number","number","number"])}function Cge(e){let{backend:t,inputs:r,attrs:n}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=n,{boxes:o,scores:l}=r,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=jC(u,p,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=xx(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}var Tge={kernelName:gl,backendName:"wasm",setupFunc:Sge,kernelFunc:Cge},HC;function Nge(e){HC=e.wasm.cwrap(md,"number",["number","number","number","number","number","bool"])}function Ege(e){let{backend:t,inputs:r,attrs:n}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=n,{boxes:l,scores:u}=r,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=HC(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=xx(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),A=t.makeOutput([],"int32",g);return[y,A]}var Rge={kernelName:md,backendName:"wasm",setupFunc:Nge,kernelFunc:Ege},qC;function $ge(e){qC=e.wasm.cwrap(yl,"number",["number","number","number","number","number","number"])}function Mge(e){let{backend:t,inputs:r,attrs:n}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=n,{boxes:l,scores:u}=r,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=qC(p,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=xx(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),A=t.makeOutput([f],"float32",m);return[y,A]}var Fge={kernelName:yl,backendName:"wasm",setupFunc:$ge,kernelFunc:Mge},_ge=!1,Pge=Cr(ml,_ge,"bool"),KC;function zge(e){KC=e.wasm.cwrap(xl,null,["number","number","number","number","number"])}function Oge(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=n,l=r.makeOutput([...a.shape,s],"int32"),u=r.dataIdMap.get(l.dataId).id,p=r.dataIdMap.get(a.dataId).id;return KC(p,s,i,o,u),l}var Dge={kernelName:xl,backendName:"wasm",setupFunc:zge,kernelFunc:Oge};function Lge(e){let{inputs:{x:t},backend:r}=e,n=r.makeOutput(t.shape,t.dtype);return r.typedArrayFromHeap(n).fill(1),n}var Bge={kernelName:Al,backendName:"wasm",kernelFunc:Lge};function Wge(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(t.length===1)return Ly({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(p=>{v.assertShapesMatch(s,p.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(p=>{let h=Ly({inputs:{input:p},backend:r,attrs:{dim:a}});return o.push(h),h}),u=wC({inputs:l,backend:r,attrs:{axis:a}});return o.forEach(p=>r.disposeData(p.dataId)),u}var Vge={kernelName:bl,backendName:"wasm",kernelFunc:Wge},XC;function Gge(e){XC=e.wasm.cwrap($i,null,["number","array","number","number","array","array","number","number"])}function Uge(e){let{inputs:{x:t},backend:r,attrs:{paddings:n,constantValue:a}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]);if(v.sizeFromShape(t.shape)===0)return $C({backend:r,attrs:{shape:s,value:a,dtype:t.dtype}});let i=r.dataIdMap.get(t.dataId).id,o=r.makeOutput(s,t.dtype),l=r.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=n.map(f=>f[0]),h=n.map(f=>f[1]),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return XC(i,u,t.shape.length,Ut[t.dtype],d,c,a,l),o}var ZC={kernelName:$i,backendName:"wasm",kernelFunc:Uge,setupFunc:Gge},jge=!1,Hge=Cr(Mi,jge),YC;function qge(e){YC=e.wasm.cwrap(Fi,null,["number","number","number"])}function Kge(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,s=r.dataIdMap.get(n.dataId).id,i=r.dataIdMap.get(a.dataId).id,o=s,l=n,u=l;l.dtype!=="float32"&&(u=qd({backend:r,inputs:{x:n},attrs:{dtype:"float32"}}),o=r.dataIdMap.get(u.dataId).id);let p=r.makeOutput(n.shape,"float32"),h=r.dataIdMap.get(p.dataId).id;return YC(o,i,h),l.dtype!=="float32"&&r.disposeData(u.dataId),p}var Xge={kernelName:Fi,backendName:"wasm",setupFunc:qge,kernelFunc:Kge},JC;function Zge(e){JC=e.wasm.cwrap(_i,null,["number","number","number","number"])}function Yge(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=to(i,a,t),f=h;if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;JC(l,y,Ut[A.dtype],x)}if(c&&t.disposeData(p.dataId),s){let x=T.expandShapeToKeepDim(A.shape,d);A.shape=x}return A}var Jge={kernelName:_i,backendName:"wasm",setupFunc:Zge,kernelFunc:Yge},Qge=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:s,dtype:i}=r,o=GA(n,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},eye={kernelName:gd,backendName:"wasm",kernelFunc:Qge},tye=!0,rye=Cr(ci,tye),nye=vr(Pi),aye=vr(Di),QC;function sye(e){QC=e.wasm.cwrap(Oi,null,["number","number","number","number","number","number","number","number","number","number"])}function iye(e){let{backend:t,inputs:r,attrs:n}=e,{images:a}=r,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,[p,h,d,c]=a.shape,f=[p,l,u,c],m=t.dataIdMap.get(a.dataId),g;m.dtype!=="float32"&&(g=qd({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,A=t.makeOutput(f,"float32");if(v.sizeFromShape(a.shape)===0)return A;let x=t.dataIdMap.get(A.dataId).id;return QC(y,p,h,d,c,l,u,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),A}var oye={kernelName:Oi,backendName:"wasm",setupFunc:sye,kernelFunc:iye},eT;function lye(e){eT=e.wasm.cwrap(zi,null,["number","number","number","number","number","number","number","number","number","number"])}function uye(e){let{backend:t,inputs:r,attrs:n}=e,{images:a}=r,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,[p,h,d,c]=a.shape,f=[p,l,u,c],m=t.makeOutput(f,"float32");if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=qd({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let A=g.id,x=t.dataIdMap.get(m.dataId).id;return eT(A,p,h,d,c,l,u,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),m}var dye={kernelName:zi,backendName:"wasm",setupFunc:lye,kernelFunc:uye},tT;function pye(e){tT=e.wasm.cwrap(wl,null,["number","array","number","array","number","number"])}function hye(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n,i=v.parseAxisParam(s,a.shape);if(a.shape.length===0)return t1({inputs:{x:a},backend:r});let o=r.makeOutput(a.shape,a.dtype),l=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);tT(l,p,i.length,h,a.shape.length,u);let d=on({inputs:{x:o},attrs:{shape:a.shape},backend:r});return r.disposeData(o.dataId),d}var cye={kernelName:wl,backendName:"wasm",kernelFunc:hye,setupFunc:pye},rT;function fye(e){rT=e.wasm.cwrap(zl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function mye(e){let{inputs:t,backend:r,attrs:n}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r.makeOutput(a.shape,a.dtype),u=r.dataIdMap.get(a.dataId).id,p=r.dataIdMap.get(l.dataId).id,[h,d,c,f]=a.shape,[m,g]=T.getImageCenter(o,d,c),y=i===0,A=255,x=typeof i=="number"?[i,i,i,y?0:A]:[...i,A],b=new Uint8Array(new Int32Array(x).buffer);return rT(u,h,d,c,f,s,m,g,b,x.length,p),l}var gye={kernelName:zl,backendName:"wasm",kernelFunc:mye,setupFunc:fye},yye=vr(kl),Aye=vr(Li),nT;function xye(e){nT=e.wasm.cwrap(Il,null,["number","number","number","number","number","number","array","number","number"])}function bye(e){let{backend:t,inputs:r,attrs:n}=e,{indices:a,updates:s}=r,{shape:i}=n,o=t.makeOutput(i,s.dtype);if(v.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=u3.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return nT(c,f,Ut[s.dtype],l,u,p,m,d,g),o}var vye={kernelName:Il,backendName:"wasm",setupFunc:xye,kernelFunc:bye},aT;function wye(e){aT=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function kye(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(a.dataId).id,l=r.dataIdMap.get(s.dataId).id,u=r.makeOutput(a.shape,a.dtype),p=r.dataIdMap.get(u.dataId).id,h=n.shape.length,d=a.shape.length,c=h===0||h>1||d===1?1:v.sizeFromShape(a.shape.slice(1));return aT(i,o,l,c,p),u}var Iye={kernelName:Sl,backendName:"wasm",kernelFunc:kye,setupFunc:wye},sT;function Sye(e){sT=e.wasm.cwrap(Wi,null,["number","number"])}function Cye(e){let{backend:t,inputs:{x:r}}=e,n=t.dataIdMap.get(r.dataId).id,a=t.makeOutput(r.shape,r.dtype),s=t.dataIdMap.get(a.dataId).id;return v.sizeFromShape(a.shape)===0||sT(n,s),a}var Tye={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Sye,kernelFunc:Cye},Nye=vr(Bi),iT;function Eye(e){iT=e.wasm.cwrap(Ui,null,["number","number","number","number"])}function Rye(e){let{backend:t,inputs:{logits:r},attrs:{dim:n}}=e,a=t.dataIdMap.get(r.dataId).id,s=t.makeOutput(r.shape,r.dtype),i=t.dataIdMap.get(s.dataId).id,o=r.shape[n],l=v.sizeFromShape(r.shape)/o;return v.sizeFromShape(s.shape)===0||iT(a,i,o,l),s}var $ye={kernelName:Ui,backendName:"wasm",setupFunc:Eye,kernelFunc:Rye};function Mye(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n,o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=ZC.kernelFunc({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(u.shape,s,o,!1),h=T.getPermuted(p.length,s.length,!1),d=T.getReshapedPermuted(u.shape,s,o,!1),c=on({inputs:{x:u},backend:r,attrs:{shape:p}}),f=Qs({inputs:{x:c},backend:r,attrs:{perm:h}}),m=on({inputs:{x:f},backend:r,attrs:{shape:d}});return r.disposeData(u.dataId),r.disposeData(c.dataId),r.disposeData(f.dataId),m}var Fye={kernelName:Nl,backendName:"wasm",kernelFunc:Mye},oT;function _ye(e){oT=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Pye(e){let{backend:t,inputs:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=r,o=n.shape[0],l=n.shape[1],u=t.readSync(s.dataId)[0],p=[o+u,l],h=t.dataIdMap.get(n.dataId).id,d=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(p,n.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(p.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,A=t.makeOutput([u],"bool"),x=t.dataIdMap.get(A.dataId).id,b=t.makeOutput([o],n.dtype),w=t.dataIdMap.get(b.dataId).id,I=t.makeOutput([4],"int32"),C=t.dataIdMap.get(I.dataId).id,E=oT(h,d,Ut[a.dtype],o,u,l,c,m,y,x,w,C),R=t.readSync(I.dataId),F;switch(R[0]){case 1:{F=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{F=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:F=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:F=""}if(t.disposeData(I.dataId),F)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(A.dataId),t.disposeData(b.dataId),new Error(F);let $=f,S=g;return E!==p[0]&&($=Ko({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),S=Ko({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,S,A,b]}var zye={kernelName:wh,backendName:"wasm",setupFunc:_ye,kernelFunc:Pye},lT;function Oye(e){lT=e.wasm.cwrap(vd,null,["number","number","number","number","number","number","number"])}function Dye(e){let{backend:t,inputs:r}=e,{inputIndices:n,inputShape:a,newShape:s}=r;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(n.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=n.shape[0],p=v.sizeFromShape(s.shape),h=t.makeOutput([u,p],n.dtype),d=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;lT(i,o,l,u,d,f,g);let y=t.readSync(m.dataId),A;switch(y[0]){case 0:{A=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{A=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:A=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),b=Array.from(t.readSync(c.dataId));A=T.getSparseReshapeInputOutputMultipleErrorMessage(x,b);break}case 4:{let x=Array.from(t.readSync(a.dataId)),b=Array.from(t.readSync(c.dataId));A=T.getSparseReshapeInputOutputMismatchErrorMessage(x,b);break}default:A=""}if(t.disposeData(m.dataId),A)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(A);return[h,c]}var Lye={kernelName:vd,backendName:"wasm",setupFunc:Oye,kernelFunc:Dye},uT;function dT(e){uT=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function pT(e,t){let{backend:r,inputs:n}=e,{data:a,indices:s,segmentIds:i}=n,o=s.shape[0],l=r.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=a.shape.slice();p[0]=u;let h=r.dataIdMap.get(a.dataId).id,d=r.dataIdMap.get(s.dataId).id,c=r.dataIdMap.get(i.dataId).id,f=r.makeOutput(p,a.dtype),m=r.dataIdMap.get(f.dataId).id,g=r.makeOutput([4],"int32"),y=r.dataIdMap.get(g.dataId).id;uT(h,Ut[a.dtype],a.shape[0],d,c,m,y,t,0);let A=r.readSync(g.dataId),x;switch(A[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:x=""}if(r.disposeData(g.dataId),x)throw r.disposeData(f.dataId),new Error(x);return f}function Bye(e){return pT(e,!0)}var Wye={kernelName:kh,backendName:"wasm",setupFunc:dT,kernelFunc:Bye};function Vye(e){return pT(e,!1)}var Gye={kernelName:Ih,backendName:"wasm",setupFunc:dT,kernelFunc:Vye};function Uye(e){let{inputs:t,attrs:r,backend:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=v.parseAxisParam(i,a.shape)[0],l=T.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(h=>{let d=[...p];d[o]=h;let c=Ko({inputs:{x:a},attrs:{begin:u,size:d},backend:n});return u[o]+=h,c})}var jye={kernelName:El,backendName:"wasm",kernelFunc:Uye},Hye=vr(Vi),qye=vr(wd),Kye=!0,Xye=Cr(ji,Kye),hT;function Zye(e){hT=e.wasm.cwrap(Ki,null,["number","number","number","number"])}function Yye(e){let{backend:t,inputs:r,attrs:n}=e,{alpha:a}=n,{x:s}=r,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return hT(i,a,Ut[s.dtype],l),o}var Jye={kernelName:Ki,backendName:"wasm",setupFunc:Zye,kernelFunc:Yye},cT;function Qye(e){cT=e.wasm.cwrap(Rl,null,["number","array","number","array","array","array","array","array","number","number"])}function e3e(e){let{backend:t,inputs:r,attrs:n}=e,{x:a}=r,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Lt.sliceInfo(a.shape,s,i,o,l,u,p,h,d),w;if(m)w=on({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let I=Lt.computeOutShape(A,x,b),C=Ko({inputs:{x:a},backend:t,attrs:{begin:A,size:I}});w=on({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}else{let I=t.makeOutput(c,"float32"),C=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),R=new Uint8Array(new Int32Array(A).buffer),F=new Uint8Array(new Int32Array(x).buffer),$=new Uint8Array(new Int32Array(b).buffer),S=new Uint8Array(new Int32Array(c).buffer),O=new Uint8Array(new Int32Array(v.computeStrides(c)).buffer),z=t.dataIdMap.get(I.dataId).id;cT(C,E,a.shape.length,R,F,$,S,O,c.length,z),w=on({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeData(I.dataId)}return w}var t3e={kernelName:Rl,backendName:"wasm",setupFunc:Qye,kernelFunc:e3e};function r3e(e){let{backend:t,inputs:r,attrs:n}=e,{data:a,dataSplits:s}=r,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:h}=n,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=jA(d,c,i,o,l,u,p,h),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let A=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(A).set(m),[g,A]}var n3e={kernelName:kd,backendName:"wasm",kernelFunc:r3e};function a3e(e){let{backend:t,inputs:r,attrs:n}=e,{input:a,delimiter:s}=r,{skipEmpty:i}=n,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,p,h]=HA(o,l[0],i),d=p.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=p;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(h),[c,f,g]}var s3e={kernelName:Ch,backendName:"wasm",kernelFunc:a3e};function i3e(e){let{backend:t,inputs:r,attrs:n}=e,{input:a}=r,{numBuckets:s}=n,i=t.readSync(a.dataId),o=qA(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var o3e={kernelName:Th,backendName:"wasm",kernelFunc:i3e},l3e=!0,u3e=Cr(Hi,l3e),fT;function d3e(e){fT=e.wasm.cwrap(Gi,null,["number","number","number","number"])}function p3e(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=to(i,a,t),f=h;if(c){let x=t.dataIdMap.get(p.dataId).id;x!==o&&(u=p,l=x,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;fT(l,y,Ut[A.dtype],x)}if(c&&t.disposeData(p.dataId),s){let x=T.expandShapeToKeepDim(A.shape,d);A.shape=x}return A}var h3e={kernelName:Gi,backendName:"wasm",setupFunc:d3e,kernelFunc:p3e},c3e=vr($l),f3e=vr(qi),mT;function m3e(e){mT=e.wasm.cwrap(ss,null,["number","array","number","array","number","number"])}function g3e(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,s=r.dataIdMap.get(a.dataId).id,{reps:i}=n,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=r.makeOutput(o,a.dtype),h=r.dataIdMap.get(p.dataId).id;return mT(s,l,a.shape.length,u,o.length,Ut[p.dtype],h),p}var y3e={kernelName:ss,backendName:"wasm",setupFunc:m3e,kernelFunc:g3e},gT;function A3e(e){gT=e.wasm.cwrap(Ml,null,["number","array","number","number","number","bool","number","number"])}var x3e=({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{k:a,sorted:s}=r,i=t.dataIdMap.get(n.dataId).id,o=new Uint8Array(new Int32Array(n.shape).buffer),l=n.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,n.dtype),p=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return gT(i,o,n.shape.length,Ut[n.dtype],a,s,p,d),[u,h]},b3e={kernelName:Ml,backendName:"wasm",setupFunc:A3e,kernelFunc:x3e},yT;function v3e(e){yT=e.wasm.cwrap(Fl,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function w3e(e){let{backend:t,inputs:r,attrs:n}=e,{image:a,transforms:s}=r,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=a.shape,[f,m]=u!=null?u:[h,d],g=[p,f,m,c],y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),A=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(A.dataId).id,b=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(s.dataId).id,I=i==="nearest"?1:2,C;switch(o){case"constant":C=1;break;case"reflect":C=2;break;case"wrap":C=3;break;case"nearest":C=4;break;default:C=1;break}return yT(b,w,s.shape[0]>1,p,f,m,c,d,h,y,a.shape.length-1,I,C,l,x),A}var k3e={kernelName:Fl,backendName:"wasm",setupFunc:v3e,kernelFunc:w3e};function I3e(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let p=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let c=0;c<p.length;c++)h[s]=c,p[c]=Ko({inputs:{x:a},attrs:{begin:h,size:d},backend:r});return p.map(({dataId:c,dtype:f})=>({dataId:c,dtype:f,shape:l}))}var S3e={kernelName:_l,backendName:"wasm",kernelFunc:I3e};function C3e(e){let{inputs:{x:t},backend:r}=e,n=r.makeOutput(t.shape,t.dtype);return r.typedArrayFromHeap(n).fill(0),n}var T3e={kernelName:Pl,backendName:"wasm",kernelFunc:C3e},N3e=[r1e,n1e,s1e,l1e,g1e,x1e,w1e,S1e,E1e,P1e,z1e,O1e,B1e,W1e,U1e,q1e,K1e,X1e,J1e,t2e,a2e,o2e,d2e,p2e,c2e,f2e,m2e,g2e,x2e,b2e,w2e,S2e,N2e,$2e,_2e,O2e,L2e,W2e,u1e,U2e,H2e,K2e,X2e,Y2e,J2e,ege,rge,sge,oge,dge,cge,gge,Age,vge,kge,Ige,Tge,Rge,Fge,Pge,Dge,Bge,Vge,ZC,Hge,Xge,Jge,eye,rye,nye,aye,C1e,oye,dye,cye,gye,yye,Aye,vye,Iye,Tye,Nye,F1e,$ye,Fye,zye,Lye,Wye,Gye,jye,Hye,qye,Xye,Jye,t3e,n3e,s3e,o3e,u3e,h3e,c3e,f3e,y3e,b3e,k3e,c1e,S3e,T3e];for(let e of N3e)Jn(e);var By=Y();By.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));By.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(By.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var n6=Xo(w$()),mt={},AT=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";AT&&(Wg=u6(),Vg=Wg.parentPort,Vg.on("message",function(e){onmessage({data:e})}),Wy=Af(),Object.assign(global,{self:global,require:o$,Module:mt,location:{href:__filename},Worker:Wg.Worker,importScripts:function(e){(0,eval)(Wy.readFileSync(e,"utf8"))},postMessage:function(e){Vg.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}}));var Wg,Vg,Wy;function E3e(){var e=Array.prototype.slice.call(arguments).join(" ");if(AT){Wy.writeSync(2,e+`
`);return}console.error(e)}function R3e(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:mt._pthread_self()})}var k0=E3e;self.alert=R3e;mt.instantiateWasm=(e,t)=>{var r=new WebAssembly.Instance(mt.wasmModule,e);return t(r),mt.wasmModule=null,r.exports};self.onmessage=e=>{try{if(e.data.cmd==="load"){if(mt.wasmModule=e.data.wasmModule,mt.wasmMemory=e.data.wasmMemory,mt.buffer=mt.wasmMemory.buffer,mt.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}WasmBackendModuleThreadedSimd(mt).then(function(n){mt=n})}else if(e.data.cmd==="run"){mt.__performance_now_clock_drift=performance.now()-e.data.time,mt.__emscripten_thread_init(e.data.threadInfoStruct,0,0,1),mt.establishStackSpace(),mt.PThread.receiveObjectTransfer(e.data),mt.PThread.threadInit();try{var r=mt.invokeEntryPoint(e.data.start_routine,e.data.arg);mt.keepRuntimeAlive()?mt.PThread.setExitStatus(r):mt.__emscripten_thread_exit(r)}catch(n){if(n!="unwind")if(n instanceof mt.ExitStatus)mt.keepRuntimeAlive()||mt.__emscripten_thread_exit(n.status);else throw n}}else e.data.cmd==="cancel"?mt._pthread_self()&&mt.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="processThreadQueue"?mt._pthread_self()&&mt._emscripten_current_thread_process_queued_calls():e.data.cmd==="processProxyingQueue"?mt._pthread_self()&&mt._emscripten_proxy_execute_queue(e.data.queue):(k0("worker.js received unknown command "+e.data.cmd),k0(e.data)))}catch(n){throw k0("worker.js onmessage() captured an uncaught exception: "+n),n&&n.stack&&k0(n.stack),mt.__emscripten_thread_crashed&&mt.__emscripten_thread_crashed(),n}};var a6=Xo(k$()),s6=n6.default||n6,$3e=a6.default||a6,xT=class extends Xu{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(bT),Vy=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ph(this,Xt())}write(e,t,r){let n={id:this.dataIdNextNumber++};return this.move(n,e,t,r,1),n}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,r,n,a){let s=this.dataIdNextNumber++;if(n==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:r,dtype:n,memoryOffset:null,refCount:a});return}let i=v.sizeFromShape(r),o=i*v.bytesPerElement(n),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:r,dtype:n,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,r){let{memoryOffset:n,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(r==null||r>=i.length)?i:i.slice(t,r);t=t||0,r=r||v.sizeFromShape(s);let o=v.bytesPerElement(a),l=this.wasm.HEAPU8.slice(n+t*o,n+r*o);return _3e(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let r=this.dataIdMap.get(e);if(r.refCount--,!t&&r.refCount>0)return!1;this.wasm._free(r.memoryOffset),this.wasm.tfjs.disposeData(r.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,r){let n;if(r==null)n=this.write(null,e,t);else{let a=this.dataIdNextNumber++;n={id:a},this.dataIdMap.set(n,{id:a,memoryOffset:r,shape:e,dtype:t,refCount:1});let s=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,r)}return{dataId:n,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:r}){let n=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(r),s=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(n,a,s);case"int32":return new Int32Array(n,a,s);case"bool":return new Uint8Array(n,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function M3e(e){return(t,r)=>(v.fetch(e,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${e}'`),n.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{r(s.instance,s.module)})})}),{})}function i6(e,t,r){if(mf!=null)return mf;let n="tfjs-backend-wasm.wasm";return e&&t?n="tfjs-backend-wasm-threaded-simd.wasm":e&&(n="tfjs-backend-wasm-simd.wasm"),Zp!=null&&Zp[n]!=null?Zp[n]:r+n}async function F3e(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((r,n)=>{let a={};a.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let u=(void 0).replace(/\n/g,"\\n"),p=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(p)}return o.endsWith(".wasm")?i6(e,t,jp!=null?jp:l):l+o},bx&&(a.instantiateWasm=M3e(i6(e,t,jp!=null?jp:"")));let s=!1;a.onAbort=()=>{s||Yp||(Yp=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&mf==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+s6.toString()],{type:"text/javascript"}),i=s6(a)):i=$3e(a),i.then(o=>{s=!0,Yp=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},r({wasm:o})}).catch(n)})}function _3e(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var P3e=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],mf=null,jp=null,Zp={},Yp=!1,bx=!1;function z3e(e,t=!1){if(a3("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Yp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");mf=e,bx=t}function vx(e,t=!1){if(Yp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")jp=e;else{Zp=e;let r=P3e.filter(n=>Zp[n]==null);if(r.length>0)throw new Error(`There were no entries found for the following binaries: ${r.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}bx=t}var bT=-1,Vy=-1;function O3e(e){bT=e}function D3e(){if(Vy===-1)throw new Error("WASM backend not initialized.");return Vy}var L3e="0.0.0",B3e=2;Ol("wasm",async()=>{let{wasm:e}=await F3e();return new xT(e)},B3e);var Es="3.18.0-20220713",cc={tfjs:Es,"tfjs-core":Es,"tfjs-data":Es,"tfjs-layers":Es,"tfjs-converter":Es,"tfjs-backend-cpu":Es,"tfjs-backend-webgl":Es,"tfjs-backend-wasm":Es};var vT=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var wT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,kT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,IT=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,ST=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,CT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var wx=(e,t,r)=>{let n=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(n,(a,s)=>(r[s]=0,a))},kx=class{constructor(t,r,n){fe(this,"uniform",{});fe(this,"attribute",{});fe(this,"gl");fe(this,"id");fe(this,"compile",(t,r)=>{let n=this.gl.createShader(r);return n?(this.gl.shaderSource(n,t),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(se(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)}`),null)):(se("filter: could not create shader"),null)});this.gl=t;let a=this.compile(r,this.gl.VERTEX_SHADER),s=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!a||!s)){if(!this.id){se("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,a),this.gl.attachShader(this.id,s),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){se(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),wx(r,"attribute",this.attribute);for(let i in this.attribute)this.attribute[i]=this.gl.getAttribLocation(this.id,i);wx(r,"uniform",this.uniform),wx(n,"uniform",this.uniform);for(let i in this.uniform)this.uniform[i]=this.gl.getUniformLocation(this.id,i)}}};function TT(){let e=0,t=null,r=!1,n=-1,a=[null,null],s=[],i=null,o=null,l=Yr(100,100),u={},p={INTERMEDIATE:1},h=l.getContext("webgl");if(!h){se("filter: cannot get webgl context");return}this.gl=h;function d(A,x){if(!(A===l.width&&x===l.height)){if(l.width=A,l.height=x,!i){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,i),h.bufferData(h.ARRAY_BUFFER,b,h.STATIC_DRAW),h.pixelStorei(h.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}h.viewport(0,0,l.width,l.height),a=[null,null]}}function c(A,x){let b=h.createFramebuffer();h.bindFramebuffer(h.FRAMEBUFFER,b);let w=h.createRenderbuffer();h.bindRenderbuffer(h.RENDERBUFFER,w);let I=h.createTexture();return h.bindTexture(h.TEXTURE_2D,I),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,A,x,0,h.RGBA,h.UNSIGNED_BYTE,null),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.LINEAR),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.LINEAR),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,h.TEXTURE_2D,I,0),h.bindTexture(h.TEXTURE_2D,null),h.bindFramebuffer(h.FRAMEBUFFER,null),{fbo:b,texture:I}}function f(A){return a[A]=a[A]||c(l.width,l.height),a[A]}function m(A=0){if(!o)return;let x=null,b=null,w=!1;e===0?x=t:x=f(n).texture||null,e++,r&&!(A&p.INTERMEDIATE)?(b=null,w=e%2===0):(n=(n+1)%2,b=f(n).fbo||null),h.bindTexture(h.TEXTURE_2D,x),h.bindFramebuffer(h.FRAMEBUFFER,b),h.uniform1f(o.uniform.flipY,w?-1:1),h.drawArrays(h.TRIANGLES,0,6)}function g(A){if(u[A])return o=u[A],h.useProgram((o?o.id:null)||null),o;if(o=new kx(h,vT,A),!o)return se("filter: could not get webgl program"),null;let x=Float32Array.BYTES_PER_ELEMENT,b=4*x;return h.enableVertexAttribArray(o.attribute.pos),h.vertexAttribPointer(o.attribute.pos,2,h.FLOAT,!1,b,0*x),h.enableVertexAttribArray(o.attribute.uv),h.vertexAttribPointer(o.attribute.uv,2,h.FLOAT,!1,b,2*x),u[A]=o,o}let y={colorMatrix:A=>{let x=new Float32Array(A);x[4]/=255,x[9]/=255,x[14]/=255,x[19]/=255;let b=x[18]===1&&x[3]===0&&x[8]===0&&x[13]===0&&x[15]===0&&x[16]===0&&x[17]===0&&x[19]===0?kT:wT,w=g(b);!w||(h.uniform1fv(w.uniform.m,x),m())},brightness:A=>{let x=(A||0)+1;y.colorMatrix([x,0,0,0,0,0,x,0,0,0,0,0,x,0,0,0,0,0,1,0])},saturation:A=>{let x=(A||0)*2/3+1,b=(x-1)*-.5;y.colorMatrix([x,b,b,0,0,b,x,b,0,0,b,b,x,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:A=>{let x=(A||0)+1,b=-128*(x-1);y.colorMatrix([x,0,0,0,b,0,x,0,0,b,0,0,x,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:A=>{A=(A||0)/180*Math.PI;let x=Math.cos(A),b=Math.sin(A),w=.213,I=.715,C=.072;y.colorMatrix([w+x*(1-w)+b*-w,I+x*-I+b*-I,C+x*-C+b*(1-C),0,0,w+x*-w+b*.143,I+x*(1-I)+b*.14,C+x*-C+b*-.283,0,0,w+x*-w+b*-(1-w),I+x*-I+b*I,C+x*(1-C)+b*C,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:A=>{let x=new Float32Array(A),b=1/l.width,w=1/l.height,I=g(CT);!I||(h.uniform1fv(I.uniform.m,x),h.uniform2f(I.uniform.px,b,w),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:A=>{let x=A||1;y.convolution.call(this,[0,-1*x,0,-1*x,1+4*x,-1*x,0,-1*x,0])},emboss:A=>{let x=A||1;y.convolution.call(this,[-2*x,-1*x,0,-1*x,1,1*x,0,1*x,2*x])},blur:A=>{let x=A/7/l.width,b=A/7/l.height,w=g(ST);!w||(h.uniform2f(w.uniform.px,0,b),m(p.INTERMEDIATE),h.uniform2f(w.uniform.px,x,0),m())},pixelate:A=>{let x=A/l.width,b=A/l.height,w=g(IT);!w||(h.uniform2f(w.uniform.size,x,b),m())}};this.add=function(A){let x=Array.prototype.slice.call(arguments,1),b=y[A];s.push({func:b,args:x})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(A){d(A.width,A.height),e=0,t||(t=h.createTexture()),h.bindTexture(h.TEXTURE_2D,t),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,h.RGBA,h.UNSIGNED_BYTE,A);for(let x=0;x<s.length;x++){r=x===s.length-1;let b=s[x];b.func.apply(this,b.args||[])}return l},this.draw=function(A){return this.add("brightness",0),this.apply(A)}}async function r1(e){let t=e.shape.length===4?nt(e):e,r=Jt(t,3,2),n=[js(r[0]),js(r[1]),js(r[2])],a=[Ar(r[0]),Ar(r[1]),Ar(r[2])],s=await Promise.all(a.map(c=>c.data())),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[ce(r[0],n[0]),ce(r[1],n[1]),ce(r[2],n[2])],l=[ce(a[0],n[0]),ce(a[1],n[1]),ce(a[2],n[2])],u=[pe(i,l[0]),pe(i,l[1]),pe(i,l[2])],p=[L(o[0],u[0]),L(o[1],u[1]),L(o[2],u[2])],h=dr([p[0],p[1],p[2]],2),d=G(h,[1,t.shape[0],t.shape[1],3]);return ee([...r,...n,...a,...o,...l,...u,...p,h,t]),d}var n1=3840,dt=null,tr=null,Kd=null,Et,cs={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Yr(e,t){let r;if(he.browser)if(he.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");r=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");r=document.createElement("canvas"),r.width=e,r.height=t}else typeof he.Canvas!="undefined"?r=new he.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(r=new globalThis.Canvas(e,t));return r}function a1(e,t){let r=t||Yr(e.width,e.height);return r.getContext("2d").drawImage(e,0,0),r}async function Xd(e,t,r=!0){if(!e)return t.debug&&se("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof Qe)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof he.Canvas!="undefined"&&e instanceof he.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof Qe){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)n=Zt(e,0);else if(e.shape[2]===4){let a=Yi(e,[0,0,0],[-1,-1,3]);n=Zt(a,0),ee(a)}}else e.shape.length===4&&(e.shape[3]===3?n=Nr(e):e.shape[3]===4&&(n=qs(e,[0,0,0,0],[-1,-1,-1,3])));if(n==null||n.shape.length!==4||n.shape[0]!==1||n.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(n.dtype==="int32"){let a=me(n,"float32");ee(n),n=a}return{tensor:n,canvas:t.filter.return?tr:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&se("input stream is not ready"),{tensor:null,canvas:dt};let n=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,a=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!n||!a)return t.debug&&se("cannot determine input dimensions"),{tensor:null,canvas:dt};let s=n,i=a;if(s>n1&&(s=n1,i=Math.trunc(s*a/n)),i>n1&&(i=n1,s=Math.trunc(i*n/a)),(t.filter.width||0)>0?s=t.filter.width:(t.filter.height||0)>0&&(s=n*((t.filter.height||0)/a)),(t.filter.height||0)>0?i=t.filter.height:(t.filter.width||0)>0&&(i=a*((t.filter.width||0)/n)),!s||!i)throw new Error("input error: cannot determine dimension");(!dt||(dt==null?void 0:dt.width)!==s||(dt==null?void 0:dt.height)!==i)&&(dt=Yr(s,i));let o=dt.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?o.putImageData(e,0,0):t.filter.flip&&typeof o.translate!="undefined"?(o.translate(n,0),o.scale(-1,1),o.drawImage(e,0,0,n,a,0,0,dt==null?void 0:dt.width,dt==null?void 0:dt.height),o.setTransform(1,0,0,1,0,0)):o.drawImage(e,0,0,n,a,0,0,dt==null?void 0:dt.width,dt==null?void 0:dt.height),(!tr||dt.width!==tr.width||(dt==null?void 0:dt.height)!==(tr==null?void 0:tr.height))&&(tr=Yr(dt.width,dt.height)),t.filter.enabled&&he.webgl.supported?(Et||(Et=he.browser?new TT:null),he.filter=!!Et,!Et||!Et.add?(t.debug&&se("input process error: cannot initialize filters"),he.webgl.supported=!1,t.filter.enabled=!1,a1(dt,tr)):(Et.reset(),t.filter.brightness!==0&&Et.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Et.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Et.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Et.add("blur",t.filter.blur),t.filter.saturation!==0&&Et.add("saturation",t.filter.saturation),t.filter.hue!==0&&Et.add("hue",t.filter.hue),t.filter.negative&&Et.add("negative"),t.filter.sepia&&Et.add("sepia"),t.filter.vintage&&Et.add("brownie"),t.filter.sepia&&Et.add("sepia"),t.filter.kodachrome&&Et.add("kodachrome"),t.filter.technicolor&&Et.add("technicolor"),t.filter.polaroid&&Et.add("polaroid"),t.filter.pixelate!==0&&Et.add("pixelate",t.filter.pixelate),Et.get()>0?tr=Et.apply(dt):tr=Et.draw(dt))):(a1(dt,tr),Et&&(Et=null),he.filter=!!Et),!r)return{tensor:null,canvas:tr};if(!tr)throw new Error("canvas error: cannot create output");let l,u=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(he.browser&&Wn)l=Wn?Wn.fromPixels(e):null;else{u=e.data.length/e.height/e.width;let d=new Uint8Array(e.data.buffer);l=ut(d,[e.height,e.width,u],"int32")}else if((!Kd||tr.width!==Kd.width||tr.height!==Kd.height)&&(Kd=Yr(tr.width,tr.height)),Wn&&he.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Wn.fromPixels(tr):(Kd=a1(tr),l=Wn.fromPixels(Kd));else{let f=a1(tr).getContext("2d").getImageData(0,0,s,i);u=f.data.length/s/i;let m=new Uint8Array(f.data.buffer);l=ut(m,[s,i,u])}if(u===4){let d=Yi(l,[0,0,0],[-1,-1,3]);ee(l),l=d}if(!l)throw new Error("input error: cannot create tensor");let p=me(l,"float32"),h=t.filter.equalization?await r1(p):Zt(p,0);return ee([l,p]),{tensor:h,canvas:t.filter.return?tr:null}}}async function NT(e,t){let r=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return r;if(!cs.inputTensor)cs.inputTensor=Nr(t);else if(cs.inputTensor.shape[1]!==t.shape[1]||cs.inputTensor.shape[2]!==t.shape[2])ee(cs.inputTensor),cs.inputTensor=Nr(t);else{let n={};n.diff=ce(t,cs.inputTensor),n.squared=L(n.diff,n.diff),n.sum=ke(n.squared);let s=(await n.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ee([cs.inputTensor,n.diff,n.squared,n.sum]),cs.inputTensor=Nr(t),r=s<=(e.cacheSensitivity||0)}return r}async function ET(e,t,r){let n={};if(!t||!r||t.shape.length!==4||t.shape.length!==r.shape.length)return e.debug||se("invalid input tensor or tensor shapes do not match:",t.shape,r.shape),0;if(t.shape[0]!==1||r.shape[0]!==1||t.shape[3]!==3||r.shape[3]!==3)return e.debug||se("input tensors must be of shape [1, height, width, 3]:",t.shape,r.shape),0;n.input1=Nr(t),n.input2=t.shape[1]!==r.shape[1]||t.shape[2]!==r.shape[2]?Te.resizeBilinear(r,[t.shape[1],t.shape[2]]):Nr(r),n.diff=ce(n.input1,n.input2),n.squared=L(n.diff,n.diff),n.sum=ke(n.squared);let s=(await n.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ee([n.input1,n.input2,n.diff,n.squared,n.sum]),s}var Ix=class{constructor(){fe(this,"browser");fe(this,"node");fe(this,"worker");fe(this,"platform","");fe(this,"agent","");fe(this,"backends",[]);fe(this,"initial");fe(this,"filter");fe(this,"tfjs");fe(this,"offscreen");fe(this,"perfadd",!1);fe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});fe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});fe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});fe(this,"cpu",{model:void 0,flags:[]});fe(this,"kernels",[]);fe(this,"Canvas");fe(this,"Image");fe(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:cc["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let r=t[0].match(/\(([^()]+)\)/g);this.platform=r&&r[0]?r[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Xt().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&qr()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Yr(100,100),r=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof r!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(qr()==="webgl"||qr()==="humangl")){let n=Bn().gpgpu!=="undefined"?await Bn().getGPGPUContext().gl:null;n&&(this.webgl.version=n.getParameter(n.VERSION),this.webgl.renderer=n.getParameter(n.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(n){this.webgpu.supported=!1}try{this.kernels=Oa(qr()).map(n=>n.kernelName.toLowerCase())}catch(n){}}async updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},he=new Ix;var Jr={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},Ga={};async function U3e(e,t){return Jr.debug&&se("load model fetch:",e,t),fetch(e,t)}function RT(e){Jr.cacheModels=e.cacheModels,Jr.verbose=e.debug,Jr.modelBasePath=e.modelBasePath}async function je(e){var u,p,h;let t=v4(Jr.modelBasePath,e||"");t.toLowerCase().endsWith(".json")||(t+=".json");let r=t.split("/"),n=r[r.length-1].replace(".json",""),a="indexeddb://"+n;Ga[n]={name:n,manifest:0,weights:0,cached:!1},Jr.cacheSupported=typeof window!="undefined"&&typeof window.localStorage!="undefined"&&typeof window.indexedDB!="undefined";let s={};try{s=Jr.cacheSupported&&Jr.cacheModels?await yn.listModels():{}}catch(d){Jr.cacheSupported=!1}Ga[n].cached=Jr.cacheSupported&&Jr.cacheModels&&Object.keys(s).includes(a);let i=typeof fetch=="undefined"?{}:{fetchFunc:(d,c)=>U3e(d,c)},o=new rc(Ga[n].cached?a:t,i),l=!1;try{o.findIOHandler(),Jr.debug&&se("model load handler:",o.handler);let d=await o.handler.load();Ga[n].manifest=((u=d==null?void 0:d.weightData)==null?void 0:u.byteLength)||0,o.loadSync(d),Ga[n].weights=((h=(p=o==null?void 0:o.artifacts)==null?void 0:p.weightData)==null?void 0:h.byteLength)||0,Jr.verbose&&se("load model:",o.modelUrl,{bytes:Ga[n].weights},Jr),l=!0}catch(d){se("error loading model:",t,d)}if(l&&Jr.cacheModels&&Jr.cacheSupported&&!Ga[n].cached)try{let d=await o.save(a);se("model saved:",a,d)}catch(d){se("error saving model:",t,d)}return o}var Sx="2.8.1";var B1={};Ts(B1,{Models:()=>kc,getModelStats:()=>zb,load:()=>Ob,reset:()=>L1,validate:()=>Db});var na,Cx=[],q3e=["white","black","asian","indian","other"],K3e=[15,23,28,35.5,45.5,55.5,65],$T=0,MT=0,Tx=Number.MAX_SAFE_INTEGER;async function FT(e){var t;return he.initial&&(na=null),na?e.debug&&se("cached model:",na.modelUrl):na=await je((t=e.face.gear)==null?void 0:t.modelPath),na}async function Nx(e,t,r,n){var i,o;if(!na)return{age:0,gender:"unknown",genderScore:0,race:[]};let a=Tx<(((i=t.face.gear)==null?void 0:i.skipFrames)||0),s=(((o=t.face.gear)==null?void 0:o.skipTime)||0)>oe()-MT;return t.skipAllowed&&s&&a&&$T===n&&Cx[r]?(Tx++,Cx[r]):(Tx=0,new Promise(async l=>{var y,A;if(!(na!=null&&na.inputs[0].shape))return;let u={},p=[[0,.1,.9,.9]];u.resize=Te.cropAndResize(e,p,[0],[na.inputs[0].shape[2],na.inputs[0].shape[1]]);let h={age:0,gender:"unknown",genderScore:0,race:[]};(y=t.face.gear)!=null&&y.enabled&&([u.age,u.gender,u.race]=na.execute(u.resize,["age_output","gender_output","race_output"]));let d=await u.gender.data();h.gender=d[0]>d[1]?"male":"female",h.genderScore=Math.round(100*(d[0]>d[1]?d[0]:d[1]))/100;let c=await u.race.data();for(let x=0;x<c.length;x++)c[x]>(((A=t.face.gear)==null?void 0:A.minConfidence)||.2)&&h.race.push({score:Math.round(100*c[x])/100,race:q3e[x]});h.race.sort((x,b)=>b.score-x.score);let m=Array.from(await u.age.data()).map((x,b)=>[K3e[b],x]).sort((x,b)=>b[1]-x[1]),g=m[0][0];for(let x=1;x<m.length;x++)g+=m[x][1]*(m[x][0]-g);h.age=Math.round(10*g)/10,Object.keys(u).forEach(x=>ee(u[x])),Cx[r]=h,$T=n,MT=oe(),l(h)}))}var Je={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function PT(){Je.tf255=Ie(255,"float32"),Je.tf1=Ie(1,"float32"),Je.tf2=Ie(2,"float32"),Je.tf05=Ie(.5,"float32"),Je.tf127=Ie(127.5,"float32"),Je.rgb=$t([.2989,.587,.114],"float32")}var kn,s1=[],zT=0,OT=0,Ex=Number.MAX_SAFE_INTEGER;async function DT(e){return he.initial&&(kn=null),kn?e.debug&&se("cached model:",kn.modelUrl):kn=await je(e.face.ssrnet.modelPathAge),kn}async function Rx(e,t,r,n){var i,o,l,u;if(!kn)return{age:0};let a=Ex<(((i=t.face.ssrnet)==null?void 0:i.skipFrames)||0),s=(((o=t.face.ssrnet)==null?void 0:o.skipTime)||0)>oe()-OT;return t.skipAllowed&&a&&s&&zT===n&&((l=s1[r])==null?void 0:l.age)&&((u=s1[r])==null?void 0:u.age)>0?(Ex++,s1[r]):(Ex=0,new Promise(async p=>{if(!(kn!=null&&kn.inputs)||!kn.inputs[0]||!kn.inputs[0].shape)return;let h={};h.resize=Te.resizeBilinear(e,[kn.inputs[0].shape[2],kn.inputs[0].shape[1]],!1),h.enhance=L(h.resize,Je.tf255);let d={age:0};if(t.face.ssrnet.enabled&&(h.age=kn.execute(h.enhance)),h.age){let c=await h.age.data();d.age=Math.trunc(10*c[0])/10}Object.keys(h).forEach(c=>ee(h[c])),s1[r]=d,zT=n,OT=oe(),p(d)}))}var aa,i1=[],BT=0,WT=0,$x=Number.MAX_SAFE_INTEGER,Mx=[.2989,.587,.114];async function VT(e){return he.initial&&(aa=null),aa?e.debug&&se("cached model:",aa.modelUrl):aa=await je(e.face.ssrnet.modelPathGender),aa}async function Fx(e,t,r,n){var i,o,l,u;if(!aa)return{gender:"unknown",genderScore:0};let a=$x<(((i=t.face.ssrnet)==null?void 0:i.skipFrames)||0),s=(((o=t.face.ssrnet)==null?void 0:o.skipTime)||0)>oe()-WT;return t.skipAllowed&&a&&s&&BT===n&&((l=i1[r])==null?void 0:l.gender)&&((u=i1[r])==null?void 0:u.genderScore)>0?($x++,i1[r]):($x=0,new Promise(async p=>{if(!(aa!=null&&aa.inputs[0].shape))return;let h={};h.resize=Te.resizeBilinear(e,[aa.inputs[0].shape[2],aa.inputs[0].shape[1]],!1),h.enhance=J(()=>{let[f,m,g]=Jt(h.resize,3,3),y=L(f,Mx[0]),A=L(m,Mx[1]),x=L(g,Mx[2]),b=Hf([y,A,x]);return L(ce(b,Je.tf05),2)});let d={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(h.gender=aa.execute(h.enhance));let c=await h.gender.data();d.gender=c[0]>c[1]?"female":"male",d.genderScore=c[0]>c[1]?Math.trunc(100*c[0])/100:Math.trunc(100*c[1])/100,Object.keys(h).forEach(f=>ee(h[f])),i1[r]=d,BT=n,WT=oe(),p(d)}))}var Mr,o1=[],_x=Number.MAX_SAFE_INTEGER,UT=0,jT=0;async function HT(e){var t;return he.initial&&(Mr=null),Mr?e.debug&&se("cached model:",Mr.modelUrl):Mr=await je((t=e.face.antispoof)==null?void 0:t.modelPath),Mr}async function Px(e,t,r,n){var i,o;if(!Mr)return 0;let a=(((i=t.face.antispoof)==null?void 0:i.skipTime)||0)>oe()-jT,s=_x<(((o=t.face.antispoof)==null?void 0:o.skipFrames)||0);return t.skipAllowed&&a&&s&&UT===n&&o1[r]?(_x++,o1[r]):(_x=0,new Promise(async l=>{let u=Te.resizeBilinear(e,[Mr!=null&&Mr.inputs[0].shape?Mr.inputs[0].shape[2]:0,Mr!=null&&Mr.inputs[0].shape?Mr.inputs[0].shape[1]:0],!1),p=Mr==null?void 0:Mr.execute(u),h=(await p.data())[0];o1[r]=Math.round(100*h)/100,UT=n,jT=oe(),ee([u,p]),l(o1[r])}))}var sa={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},zx={count:468,mouth:13,symmetryLine:[13,sa.midwayBetweenEyes[0]]},Xl={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Ox=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],mc=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Zl=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var Z3e=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],Y3e=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],J3e=[33,133,362,263,1,78,308],e8e=Z3e.map(e=>mc[e]),t8e=Y3e.map(e=>mc[e]),r8e=J3e.map(e=>mc[e]);function ro(e){let t=e.map(r=>r[0]);return t.push(e[e.length-1][1]),t}var Q3e=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],e5e=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],t5e=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],r5e=[[474,475],[475,476],[476,477],[477,474]],n5e=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],a5e=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],s5e=[[469,470],[470,471],[471,472],[472,469]],i5e=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],n8e={lips:ro(Q3e),leftEye:ro(e5e),leftEyebrow:ro(t5e),leftIris:ro(r5e),rightEye:ro(n5e),rightEyebrow:ro(a5e),rightIris:ro(s5e),faceOval:ro(i5e)};var Zd=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],l1=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],u1=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],d1=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],ZT=(e,t)=>{let r=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],n=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:r,endPoint:n,landmarks:e.landmarks,confidence:e.confidence}},Lx=(e,t,r)=>{let n=t.shape[1],a=t.shape[2],s=[e.startPoint[1]/n,e.startPoint[0]/a,e.endPoint[1]/n,e.endPoint[0]/a],i=Te.cropAndResize(t,[s],[0],r),o=pe(i,Je.tf255);return ee(i),o},p1=(e,t)=>{let r=l1(e),n=Zd(e),a=[t*n[0]/2,t*n[1]/2];return{startPoint:[r[0]-a[0],r[1]-a[1]],endPoint:[r[0]+a[0],r[1]+a[1]],landmarks:e.landmarks,confidence:e.confidence}},h1=e=>{let t=l1(e),r=Zd(e),n=Math.max(...r)/2;return{startPoint:[Math.round(t[0]-n),Math.round(t[1]-n)],endPoint:[Math.round(t[0]+n),Math.round(t[1]+n)],landmarks:e.landmarks,confidence:e.confidence}},YT=e=>{let t=e.map(n=>n[0]),r=e.map(n=>n[1]);return{startPoint:[Math.min(...t),Math.min(...r)],endPoint:[Math.max(...t),Math.max(...r)],landmarks:e}},Bx=[[1,0,0],[0,1,0],[0,0,1]],o5e=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),l5e=(e,t)=>o5e(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var KT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Yl=(e,t)=>{let r=0;for(let n=0;n<e.length;n++)r+=e[n]*t[n];return r},u5e=(e,t)=>{let r=[];for(let n=0;n<e.length;n++)r.push(e[n][t]);return r},XT=(e,t)=>{let r=[],n=e.length;for(let a=0;a<n;a++){r.push([]);for(let s=0;s<n;s++)r[a].push(Yl(e[a],u5e(t,s)))}return r},JT=(e,t)=>{let r=Math.cos(e),n=Math.sin(e),a=[[r,-n,0],[n,r,0],[0,0,1]],s=KT(t[0],t[1]),i=XT(s,a),o=KT(-t[0],-t[1]);return XT(i,o)},d5e=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],r=[e[0][2],e[1][2]],n=[-Yl(t[0],r),-Yl(t[1],r)];return[t[0].concat(n[0]),t[1].concat(n[1]),[0,0,1]]},p5e=(e,t)=>[Yl(e,t[0]),Yl(e,t[1])];function QT(e){let t=e===192?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},r=[];for(let n=0;n<t.strides.length;n++){let a=t.strides[n],s=Math.floor((e+a-1)/a),i=Math.floor((e+a-1)/a),o=t.anchors[n];for(let l=0;l<s;l++){let u=a*(l+.5);for(let p=0;p<i;p++){let h=a*(p+.5);for(let d=0;d<o;d++)r.push([h,u])}}}return r}function eN(e,t,r,n,a){let s=Zd(t),i=e.map(c=>[s[0]/a*(c[0]-a/2),s[1]/a*(c[1]-a/2),c[2]||0]),o=r&&r!==0&&Math.abs(r)>.2,l=o?JT(r,[0,0]):Bx,u=o?i.map(c=>[...p5e(c,l),c[2]]):i,p=o?d5e(n):Bx,h=l1(t),d=[Yl(h,p[0]),Yl(h,p[1])];return u.map(c=>[Math.trunc(c[0]+d[0]),Math.trunc(c[1]+d[1]),Math.trunc(c[2]||0)])}function tN(e,t,r,n){let a=t.landmarks.length>=zx.count?zx.symmetryLine:Xl.symmetryLine,s=0,i=Bx,o;if(e&&he.kernels.includes("rotatewithoffset"))if(s=l5e(t.landmarks[a[0]],t.landmarks[a[1]]),s&&s!==0&&Math.abs(s)>.2){let u=l1(t),p=[u[0]/r.shape[2],u[1]/r.shape[1]],h=Te.rotateWithOffset(r,s,0,p);i=JT(-s,u),o=Lx(t,h,[n,n]),ee(h)}else o=Lx(t,r,[n,n]);else o=Lx(t,r,[n,n]);return[s,i,o]}var h5e=e=>{let t=e.map(n=>n[0]),r=e.map(n=>n[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...r)+(Math.max(...r)-Math.min(...r))/2]},rN=(e,t)=>{let r=h5e(e),n=Zd(t);return{startPoint:[r[0]-n[0]/2,r[1]-n[1]/2],endPoint:[r[0]+n[0]/2,r[1]+n[1]/2]}};var nN=6,c5e=1.4,Ua,aN=null,no=0,gc=null,Yd=()=>no;async function sN(e){var t;return he.initial&&(Ua=null),Ua?e.debug&&se("cached model:",Ua.modelUrl):Ua=await je((t=e.face.detector)==null?void 0:t.modelPath),no=Ua.inputs[0].shape?Ua.inputs[0].shape[2]:0,gc=Ie(no,"int32"),aN=Kn(QT(no)),Ua}function f5e(e){let t={};t.boxStarts=_e(e,[0,1],[-1,2]),t.centers=le(t.boxStarts,aN),t.boxSizes=_e(e,[0,3],[-1,2]),t.boxSizesNormalized=pe(t.boxSizes,gc),t.centersNormalized=pe(t.centers,gc),t.halfBoxSize=pe(t.boxSizesNormalized,Je.tf2),t.starts=ce(t.centersNormalized,t.halfBoxSize),t.ends=le(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,gc),t.endNormalized=L(t.ends,gc);let r=Ll([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(n=>ee(t[n])),r}async function iN(e,t){var o,l,u,p;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let r={};r.resized=Te.resizeBilinear(e,[no,no]),r.div=pe(r.resized,Je.tf127),r.normalized=ce(r.div,Je.tf05);let n=Ua==null?void 0:Ua.execute(r.normalized);if(Array.isArray(n)&&n.length>2){let h=n.sort((d,c)=>d.size-c.size);r.concat384=Ct([h[0],h[2]],2),r.concat512=Ct([h[1],h[3]],2),r.concat=Ct([r.concat512,r.concat384],1),r.batch=nt(r.concat,0)}else Array.isArray(n)?r.batch=nt(n[0]):r.batch=nt(n);ee(n),r.boxes=f5e(r.batch),r.logits=_e(r.batch,[0,0],[-1,1]),r.sigmoid=Er(r.logits),r.scores=nt(r.sigmoid),r.nms=await Te.nonMaxSuppressionAsync(r.boxes,r.scores,((o=t.face.detector)==null?void 0:o.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((u=t.face.detector)==null?void 0:u.minConfidence)||0);let a=await r.nms.array(),s=[],i=await r.scores.data();for(let h=0;h<a.length;h++){let d=i[a[h]];if(d>(((p=t.face.detector)==null?void 0:p.minConfidence)||0)){let c={};c.bbox=_e(r.boxes,[a[h],0],[1,-1]),c.slice=_e(r.batch,[a[h],nN-1],[1,-1]),c.squeeze=nt(c.slice),c.landmarks=G(c.squeeze,[nN,-1]);let f=await c.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await c.landmarks.array(),confidence:d},g=ZT(m,[(e.shape[2]||0)/no,(e.shape[1]||0)/no]),y=p1(g,t.face.scale||c5e),A=h1(y);s.push(A),Object.keys(c).forEach(x=>ee(c[x]))}}return Object.keys(r).forEach(h=>ee(r[h])),s}var c1={};Ts(c1,{connected:()=>Gx,kpt:()=>Vx});var Vx=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Gx={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]};var lN=224,m5e,g5e=5,f1=[8,16,32,32,32];async function uN(){let e=[],t=0;for(;t<g5e;){let r=0,n=t;for(;n<f1.length&&f1[n]===f1[t];)r+=2,n++;let a=f1[t],s=Math.ceil(lN/a),i=Math.ceil(lN/a);for(let o=0;o<s;++o)for(let l=0;l<i;++l)for(let u=0;u<r;++u)e.push({x:(l+.5)/i,y:(o+.5)/s});t=n}m5e={x:$t(e.map(r=>r.x)),y:$t(e.map(r=>r.y))}}function fs(e,t=[1,1]){let r=[e.map(o=>o[0]),e.map(o=>o[1])],n=[Math.min(...r[0]),Math.min(...r[1])],a=[Math.max(...r[0]),Math.max(...r[1])],s=[n[0],n[1],a[0]-n[0],a[1]-n[1]],i=[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]];return{box:s,boxRaw:i}}function dN(e,t=[1,1]){let r=[e.map(u=>u[0]),e.map(u=>u[1])],n=[Math.min(...r[0]),Math.min(...r[1])],a=[Math.max(...r[0]),Math.max(...r[1])],s=[(n[0]+a[0])/2,(n[1]+a[1])/2],i=Math.max(s[0]-n[0],s[1]-n[1],-s[0]+a[0],-s[1]+a[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)],l=[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]];return{box:o,boxRaw:l}}function m1(e,t){let r=[e[2]*t,e[3]*t];return[e[0]-(r[0]-e[2])/2,e[1]-(r[1]-e[3])/2,r[0],r[1]]}var cN={initial:!0},In={detector:null,landmarks:null},Jd={detector:[224,224],landmarks:[256,256]},Ux=Number.MAX_SAFE_INTEGER,A5e={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},y1=null,yc,ao=[[0,0],[0,0],[0,0],[0,0]],pN=0,hN=e=>1-1/(1+Math.exp(e));async function fN(e){if(cN.initial&&(In.detector=null),!In.detector&&e.body.detector&&e.body.detector.modelPath){In.detector=await je(e.body.detector.modelPath);let t=Object.values(In.detector.modelSignature.inputs);Jd.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Jd.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&In.detector&&se("cached model:",In.detector.modelUrl);return await uN(),In.detector}async function mN(e){if(cN.initial&&(In.landmarks=null),In.landmarks)e.debug&&se("cached model:",In.landmarks.modelUrl);else{In.landmarks=await je(e.body.modelPath);let t=Object.values(In.landmarks.modelSignature.inputs);Jd.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Jd.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return In.landmarks}async function x5e(e,t){let r={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let n;if(yc&&(r.cropped=Te.cropAndResize(e,[yc],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let a=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],s=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];ao=[[0,0],a,s,[0,0]],r.pad=Qn(r.cropped||e,ao),r.resize=Te.resizeBilinear(r.pad,[t,t]),n=pe(r.resize,Je.tf255)}else e.shape[1]!==t?(r.resize=Te.resizeBilinear(r.cropped||e,[t,t]),n=pe(r.resize,Je.tf255)):n=pe(r.cropped||e,Je.tf255);return Object.keys(r).forEach(a=>ee(r[a])),n}function b5e(e,t){for(let r of e)r.position=[Math.trunc(r.position[0]*(t[0]+ao[2][0]+ao[2][1])/t[0]-ao[2][0]),Math.trunc(r.position[1]*(t[1]+ao[1][0]+ao[1][1])/t[1]-ao[1][0]),r.position[2]],r.positionRaw=[r.position[0]/t[0],r.position[1]/t[1],2*r.position[2]/(t[0]+t[1])];if(yc)for(let r of e)r.positionRaw=[r.positionRaw[0]+yc[1],r.positionRaw[1]+yc[0],r.positionRaw[2]],r.position=[Math.trunc(r.positionRaw[0]*t[0]),Math.trunc(r.positionRaw[1]*t[1]),r.positionRaw[2]];return e}async function v5e(e){let t=e.find(o=>o.part==="leftPalm"),r=e.find(o=>o.part==="leftWrist"),n=e.find(o=>o.part==="leftIndex");t.position[2]=((r.position[2]||0)+(n.position[2]||0))/2;let a=e.find(o=>o.part==="rightPalm"),s=e.find(o=>o.part==="rightWrist"),i=e.find(o=>o.part==="rightIndex");a.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}async function w5e(e,t,r){var f;let n={};[n.ld,n.segmentation,n.heatmap,n.world,n.poseflag]=(f=In.landmarks)==null?void 0:f.execute(e,A5e.landmarks);let a=(await n.poseflag.data())[0],s=await n.ld.data(),i=await n.world.data();Object.keys(n).forEach(m=>ee(n[m]));let o=[],l=5;for(let m=0;m<s.length/l;m++){let g=hN(s[l*m+3]),y=hN(s[l*m+4]),A=Math.trunc(100*g*y*a)/100,x=[s[l*m+0]/Jd.landmarks[0],s[l*m+1]/Jd.landmarks[1],s[l*m+2]+0],b=[Math.trunc(r[0]*x[0]),Math.trunc(r[1]*x[1]),x[2]],w=[i[l*m+0],i[l*m+1],i[l*m+2]+0];o.push({part:Vx[m],positionRaw:x,position:b,distance:w,score:A})}if(a<(t.body.minConfidence||0))return null;v5e(o);let u=b5e(o,r),p=u.map(m=>m.position),h=fs(p,[r[0],r[1]]),d={};for(let[m,g]of Object.entries(Gx)){let y=[];for(let A=0;A<g.length-1;A++){let x=u.find(w=>w.part===g[A]),b=u.find(w=>w.part===g[A+1]);x&&b&&y.push([x.position,b.position])}d[m]=y}return{id:0,score:Math.trunc(100*a)/100,box:h.box,boxRaw:h.boxRaw,keypoints:u,annotations:d}}async function jx(e,t){let r=[e.shape[2]||0,e.shape[1]||0],n=(t.body.skipTime||0)>oe()-pN,a=Ux<(t.body.skipFrames||0);if(t.skipAllowed&&n&&a&&y1!==null)Ux++;else{let s={};s.landmarks=await x5e(e,256),y1=await w5e(s.landmarks,t,r),Object.keys(s).forEach(i=>ee(s[i])),pN=oe(),Ux=0}return y1?[y1]:[]}var Qd=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var ms,Jl=0,Hx=[],yN=0,qx=Number.MAX_SAFE_INTEGER;async function AN(e){if(he.initial&&(ms=null),ms)e.debug&&se("cached model:",ms.modelUrl);else{ms=await je(e.object.modelPath);let t=Object.values(ms.modelSignature.inputs);Jl=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return ms}async function k5e(e,t,r){if(!e)return[];let n={},a=[],s=await e.array();n.squeeze=nt(e);let i=Jt(n.squeeze,6,1);n.stack=dr([i[1],i[0],i[3],i[2]],1),n.boxes=nt(n.stack),n.scores=nt(i[4]),n.classes=nt(i[5]),ee([e,...i]),n.nms=await Te.nonMaxSuppressionAsync(n.boxes,n.scores,r.object.maxDetected,r.object.iouThreshold,r.object.minConfidence||0);let o=await n.nms.data(),l=0;for(let u of Array.from(o)){let p=Math.trunc(100*s[0][u][4])/100,h=s[0][u][5],d=Qd[h].label,[c,f]=[s[0][u][0]/Jl,s[0][u][1]/Jl],m=[c,f,s[0][u][2]/Jl-c,s[0][u][3]/Jl-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];a.push({id:l++,score:p,class:h,label:d,box:g,boxRaw:m})}return Object.keys(n).forEach(u=>ee(n[u])),a}async function Kx(e,t){let r=(t.object.skipTime||0)>oe()-yN,n=qx<(t.object.skipFrames||0);return t.skipAllowed&&r&&n&&Hx.length>0?(qx++,Hx):(qx=0,new Promise(async a=>{let s=[e.shape[2]||0,e.shape[1]||0],i=Te.resizeBilinear(e,[Jl,Jl]),o=t.object.enabled?ms==null?void 0:ms.execute(i,["tower_0/detections"]):null;yN=oe(),ee(i);let l=await k5e(o,s,t);Hx=l,a(l)}))}var A1={};Ts(A1,{connected:()=>Zx,kpt:()=>Xx});var Xx=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],Zx={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var Fr,bN=0,Qr={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Yx=Number.MAX_SAFE_INTEGER;async function vN(e){return he.initial&&(Fr=null),Fr?e.debug&&se("cached model:",Fr.modelUrl):Fr=await je(e.body.modelPath),Fr}async function I5e(e,t){let[r,n]=e.shape,a=G(e,[n*r]),s=Ar(a,0),i=(await s.data())[0];if(ee([a,s]),i>t){let o=Pn(a,0),l=Td(o,r),u=(await l.data())[0],p=pe(o,Ie(r,"int32")),h=(await p.data())[0];return ee([l,p]),[u,h,i]}return[0,0,i]}async function Jx(e,t){let r=(t.body.skipTime||0)>oe()-bN,n=Yx<(t.body.skipFrames||0);return t.skipAllowed&&r&&n&&Object.keys(Qr.keypoints).length>0?(Yx++,[Qr]):(Yx=0,new Promise(async a=>{var h;let s=J(()=>{if(!(Fr!=null&&Fr.inputs[0].shape))return null;let d=Te.resizeBilinear(e,[Fr.inputs[0].shape[2],Fr.inputs[0].shape[1]],!1),c=L(d,Je.tf2);return ce(c,Je.tf1)}),i;if(t.body.enabled&&(i=Fr==null?void 0:Fr.execute(s)),bN=oe(),ee(s),i){Qr.keypoints.length=0;let d=i.squeeze();ee(i);let c=d.unstack(2);ee(d);for(let f=0;f<c.length;f++){let[m,g,y]=await I5e(c[f],t.body.minConfidence);y>(((h=t.body)==null?void 0:h.minConfidence)||0)&&Qr.keypoints.push({score:Math.round(100*y)/100,part:Xx[f],positionRaw:[m/Fr.inputs[0].shape[2],g/Fr.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/Fr.inputs[0].shape[2]),Math.round(e.shape[1]*g/Fr.inputs[0].shape[1])]})}c.forEach(f=>ee(f))}Qr.score=Qr.keypoints.reduce((d,c)=>c.score>d?c.score:d,0);let o=Qr.keypoints.map(d=>d.position[0]),l=Qr.keypoints.map(d=>d.position[1]);Qr.box=[Math.min(...o),Math.min(...l),Math.max(...o)-Math.min(...o),Math.max(...l)-Math.min(...l)];let u=Qr.keypoints.map(d=>d.positionRaw[0]),p=Qr.keypoints.map(d=>d.positionRaw[1]);Qr.boxRaw=[Math.min(...u),Math.min(...p),Math.max(...u)-Math.min(...u),Math.max(...p)-Math.min(...p)];for(let[d,c]of Object.entries(Zx)){let f=[];for(let m=0;m<c.length-1;m++){let g=Qr.keypoints.find(A=>A.part===c[m]),y=Qr.keypoints.find(A=>A.part===c[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}Qr.annotations[d]=f}a([Qr])}))}var S5e=["angry","disgust","fear","happy","sad","surprise","neutral"],Gn,x1=[],kN=0,IN=0,Qx=Number.MAX_SAFE_INTEGER;async function SN(e){var t;return he.initial&&(Gn=null),Gn?e.debug&&se("cached model:",Gn.modelUrl):Gn=await je((t=e.face.emotion)==null?void 0:t.modelPath),Gn}async function eb(e,t,r,n){var i,o;if(!Gn)return[];let a=Qx<(((i=t.face.emotion)==null?void 0:i.skipFrames)||0),s=(((o=t.face.emotion)==null?void 0:o.skipTime)||0)>oe()-IN;return t.skipAllowed&&s&&a&&kN===n&&x1[r]&&x1[r].length>0?(Qx++,x1[r]):(Qx=0,new Promise(async l=>{var p,h;let u=[];if((p=t.face.emotion)!=null&&p.enabled){let d={},c=Gn!=null&&Gn.inputs[0].shape?Gn.inputs[0].shape[2]:0;d.resize=Te.resizeBilinear(e,[c,c],!1),d.channels=L(d.resize,Je.rgb),d.grayscale=ke(d.channels,3,!0),d.grayscaleSub=ce(d.grayscale,Je.tf05),d.grayscaleMul=L(d.grayscaleSub,Je.tf2),d.emotion=Gn==null?void 0:Gn.execute(d.grayscaleMul),IN=oe();let f=await d.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((h=t.face.emotion)==null?void 0:h.minConfidence)||0)&&u.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:S5e[m]});u.sort((m,g)=>g.score-m.score),Object.keys(d).forEach(m=>ee(d[m]))}x1[r]=u,kN=n,l(u)}))}var Sn,tb=[],TN=0,NN=0,EN=Number.MAX_SAFE_INTEGER;async function RN(e){return he.initial&&(Sn=null),Sn?e.debug&&se("cached model:",Sn.modelUrl):Sn=await je(e.face.mobilefacenet.modelPath),Sn}async function rb(e,t,r,n){var i,o;if(!Sn)return[];let a=EN<(((i=t.face.embedding)==null?void 0:i.skipFrames)||0),s=(((o=t.face.embedding)==null?void 0:o.skipTime)||0)>oe()-NN;return t.skipAllowed&&s&&a&&TN===n&&tb[r]?(EN++,tb[r]):new Promise(async l=>{var p;let u=[];if(((p=t.face.embedding)==null?void 0:p.enabled)&&(Sn==null?void 0:Sn.inputs[0].shape)){let h={};h.crop=Te.resizeBilinear(e,[Sn.inputs[0].shape[2],Sn.inputs[0].shape[1]],!1),h.data=Sn==null?void 0:Sn.execute(h.crop);let d=await h.data.data();u=Array.from(d)}tb[r]=u,TN=n,NN=oe(),l(u)})}var gs,so=0,C5e=2.3,nb=sa.leftEyeLower0,ab=sa.rightEyeLower0,ep={leftBounds:[nb[0],nb[nb.length-1]],rightBounds:[ab[0],ab[ab.length-1]]},tp={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function PN(e){var t;return he.initial&&(gs=null),gs?e.debug&&se("cached model:",gs.modelUrl):gs=await je((t=e.face.iris)==null?void 0:t.modelPath),so=gs.inputs[0].shape?gs.inputs[0].shape[2]:0,so===-1&&(so=64),gs}function b1(e,t,r,n){for(let a=0;a<Ox.length;a++){let{key:s,indices:i}=Ox[a],o=sa[`${r}${s}`];if(!n||n.includes(s))for(let l=0;l<i.length;l++){let u=i[l];e[o[l]]=[t[u][0],t[u][1],(t[u][2]+e[o[l]][2])/2]}}}var T5e=e=>{let t=e[ep.leftBounds[0]][2],r=e[ep.rightBounds[0]][2];return t-r},MN=(e,t,r,n,a,s=!1)=>{let i=h1(p1(YT([e[r],e[n]]),C5e)),o=Zd(i),l=Te.cropAndResize(t,[[i.startPoint[1]/a,i.startPoint[0]/a,i.endPoint[1]/a,i.endPoint[0]/a]],[0],[so,so]);if(s&&he.kernels.includes("flipleftright")){let u=Te.flipLeftRight(l);ee(l),l=u}return{box:i,boxSize:o,crop:l}},FN=(e,t,r,n=!1)=>{let a=[];for(let s=0;s<tp.numCoordinates;s++){let i=e[s*3],o=e[s*3+1],l=e[s*3+2];a.push([(n?1-i/so:i/so)*r[0]+t.startPoint[0],o/so*r[1]+t.startPoint[1],l])}return{rawCoords:a,iris:a.slice(tp.index)}},_N=(e,t,r)=>{let n=e[sa[`${r}EyeUpper0`][tp.upperCenter]][2],a=e[sa[`${r}EyeLower0`][tp.lowerCenter]][2],s=(n+a)/2;return t.map((i,o)=>{let l=s;return o===2?l=n:o===4&&(l=a),[i[0],i[1],l]})};async function zN(e,t,r,n){if(!gs)return r.debug&&se("face mesh iris detection requested, but model is not loaded"),e;let{box:a,boxSize:s,crop:i}=MN(e,t,ep.leftBounds[0],ep.leftBounds[1],n,!0),{box:o,boxSize:l,crop:u}=MN(e,t,ep.rightBounds[0],ep.rightBounds[1],n,!0),p=Ct([i,u]);ee(i),ee(u);let h=gs.execute(p);ee(p);let d=await h.data();ee(h);let c=d.slice(0,tp.numCoordinates*3),{rawCoords:f,iris:m}=FN(c,a,s,!0),g=d.slice(tp.numCoordinates*3),{rawCoords:y,iris:A}=FN(g,o,l,!1),x=T5e(e);Math.abs(x)<30?(b1(e,f,"left",null),b1(e,y,"right",null)):x<1?b1(e,f,"left",["EyeUpper0","EyeLower0"]):b1(e,y,"right",["EyeUpper0","EyeLower0"]);let b=_N(e,m,"left"),w=_N(e,A,"right");return e.concat(b).concat(w)}var N5e=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],E5e=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],R5e=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],$5e=[[474,475],[475,476],[476,477],[477,474]],M5e=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],F5e=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],_5e=[[469,470],[470,471],[471,472],[472,469]],P5e=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]];function io(e){let t=e.map(r=>r[0]);return t.push(e[e.length-1][1]),t}var z5e={lips:io(N5e),leftEye:io(E5e),leftEyebrow:io(R5e),leftIris:io($5e),rightEye:io(M5e),rightEyebrow:io(F5e),rightIris:io(_5e),faceOval:io(P5e)},O5e=Object.entries(z5e).map(([e,t])=>t.map(r=>[r,e])).flat(),M8e=new Map(O5e),Ac=[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],Ql=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],eu=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];async function LN(e,t){let r={lips:await t.filter(s=>s.size===160)[0].data(),irisL:await t.filter(s=>s.size===10)[0].data(),eyeL:await t.filter(s=>s.size===142)[0].data(),irisR:await t.filter(s=>s.size===10)[1].data(),eyeR:await t.filter(s=>s.size===142)[1].data()},n=Ql.reduce((s,i)=>s+=e[i][2],0)/Ql.length;for(let s=0;s<r.irisL.length/2;s++)e.push([r.irisL[2*s+0],r.irisL[2*s+1],n]);let a=eu.reduce((s,i)=>s+=e[i][2],0)/eu.length;for(let s=0;s<r.irisR.length/2;s++)e.push([r.irisR[2*s+0],r.irisR[2*s+1],a]);for(let s=0;s<r.eyeL.length/2;s++)e[Ql[s]]=[r.eyeL[2*s+0],r.eyeL[2*s+1],e[Ql[s]][2]];for(let s=0;s<r.eyeR.length/2;s++)e[eu[s]]=[r.eyeR[2*s+0],r.eyeR[2*s+1],e[eu[s]][2]];for(let s=0;s<r.lips.length/2;s++)e[Ac[s]]=[r.lips[2*s+0],r.lips[2*s+1],e[Ac[s]][2]];return e}var ja={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},_r=null,tu=0;async function BN(e,t){var o,l,u,p,h,d,c,f,m,g,y;let r=(((o=t.face.detector)==null?void 0:o.skipTime)||0)>oe()-ja.timestamp,n=ja.skipped<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);!t.skipAllowed||!r||!n||ja.boxes.length===0?(ja.boxes=await iN(e,t),ja.timestamp=oe(),ja.skipped=0):ja.skipped++;let a=[],s=[],i=0;for(let A=0;A<ja.boxes.length;A++){let x=ja.boxes[A],b=0,w,I={id:i++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([b,w,I.tensor]=tN((u=t.face.detector)==null?void 0:u.rotation,x,e,(p=t.face.mesh)!=null&&p.enabled?tu:Yd()),(h=t==null?void 0:t.filter)!=null&&h.equalization){let C=await r1(I.tensor);ee(I.tensor),I.tensor=C}if(I.boxScore=Math.round(100*x.confidence)/100,(d=t.face.mesh)!=null&&d.enabled)if(!_r)t.debug&&se("face mesh detection requested, but model is not loaded");else{let C=_r.execute(I.tensor),R=await C.find(F=>F.shape[F.shape.length-1]===1).data();if(I.faceScore=Math.round(100*R[0])/100,I.faceScore<(((c=t.face.detector)==null?void 0:c.minConfidence)||1)){if(x.confidence=I.faceScore,(f=t.face.mesh)!=null&&f.keepInvalid){I.box=u1(x,e),I.boxRaw=d1(x,e),I.score=I.boxScore,I.mesh=x.landmarks.map(F=>[(x.startPoint[0]+x.endPoint[0])/2+(x.endPoint[0]+x.startPoint[0])*F[0]/Yd(),(x.startPoint[1]+x.endPoint[1])/2+(x.endPoint[1]+x.startPoint[1])*F[1]/Yd()]),I.meshRaw=I.mesh.map(F=>[F[0]/(e.shape[2]||1),F[1]/(e.shape[1]||1),(F[2]||0)/tu]);for(let F of Object.keys(Xl))I.annotations[F]=[I.mesh[Xl[F]]]}}else{let F=C.find(z=>z.shape[z.shape.length-1]===1404),$=G(F,[-1,3]),S=await $.array();ee($),(m=t.face.attention)!=null&&m.enabled?S=await LN(S,C):(g=t.face.iris)!=null&&g.enabled&&(S=await zN(S,I.tensor,t,tu)),I.mesh=eN(S,x,b,w,tu),I.meshRaw=I.mesh.map(z=>[z[0]/(e.shape[2]||0),z[1]/(e.shape[1]||0),(z[2]||0)/tu]);for(let z of Object.keys(sa))I.annotations[z]=sa[z].map(j=>I.mesh[j]);I.score=I.faceScore;let O={...rN(I.mesh,x),confidence:x.confidence,landmarks:x.landmarks};I.box=u1(O,e),I.boxRaw=d1(O,e),s.push(O)}ee(C)}else{I.box=u1(x,e),I.boxRaw=d1(x,e),I.score=I.boxScore,I.mesh=x.landmarks.map(C=>[(x.startPoint[0]+x.endPoint[0])/2+(x.endPoint[0]+x.startPoint[0])*C[0]/Yd(),(x.startPoint[1]+x.endPoint[1])/2+(x.endPoint[1]+x.startPoint[1])*C[1]/Yd()]),I.meshRaw=I.mesh.map(C=>[C[0]/(e.shape[2]||0),C[1]/(e.shape[1]||0),(C[2]||0)/tu]);for(let C of Object.keys(Xl))I.annotations[C]=[I.mesh[Xl[C]]]}I.score>(((y=t.face.detector)==null?void 0:y.minConfidence)||1)?a.push(I):ee(I.tensor)}return ja.boxes=s,a}async function WN(e){var t,r,n,a,s,i;return he.initial&&(_r=null),((r=(t=e==null?void 0:e.face)==null?void 0:t.attention)==null?void 0:r.enabled)&&(_r==null?void 0:_r.signature)&&Object.keys(((n=_r==null?void 0:_r.signature)==null?void 0:n.outputs)||{}).length<6&&(_r=null),_r?e.debug&&se("cached model:",_r.modelUrl):(a=e.face.attention)!=null&&a.enabled?_r=await je((s=e.face.attention)==null?void 0:s.modelPath):_r=await je((i=e.face.mesh)==null?void 0:i.modelPath),tu=_r.inputs[0].shape?_r.inputs[0].shape[2]:0,_r}var VN=Zl,GN=mc;var Cn,v1=[],UN=0,jN=0,ib=Number.MAX_SAFE_INTEGER;async function HN(e){var t;return he.initial&&(Cn=null),Cn?e.debug&&se("cached model:",Cn.modelUrl):Cn=await je((t=e.face.description)==null?void 0:t.modelPath),Cn}function ob(e){let t=e.image||e.tensor||e;if(!(Cn!=null&&Cn.inputs[0].shape))return t;let r=Te.resizeBilinear(t,[Cn.inputs[0].shape[2],Cn.inputs[0].shape[1]],!1),n=L(r,Je.tf255);return ee(r),n}async function lb(e,t,r,n){var i,o,l,u;if(!Cn)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let a=ib<(((i=t.face.description)==null?void 0:i.skipFrames)||0),s=(((o=t.face.description)==null?void 0:o.skipTime)||0)>oe()-UN;return t.skipAllowed&&a&&s&&jN===n&&((l=v1[r])==null?void 0:l.age)&&((u=v1[r])==null?void 0:u.age)>0?(ib++,v1[r]):(ib=0,new Promise(async p=>{var d,c;let h={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((d=t.face.description)!=null&&d.enabled){let f=ob(e),m=Cn==null?void 0:Cn.execute(f);UN=oe(),ee(f);let y=await(await m.find(R=>R.shape[1]===1)).data(),A=Math.trunc(200*Math.abs(y[0]-.5))/100;A>(((c=t.face.description)==null?void 0:c.minConfidence)||0)&&(h.gender=y[0]<=.5?"female":"male",h.genderScore=Math.min(.99,A));let x=Pn(m.find(R=>R.shape[1]===100),1),b=(await x.data())[0];ee(x);let I=await m.find(R=>R.shape[1]===100).data();h.age=Math.round(I[b-1]>I[b+1]?10*b-100*I[b-1]:10*b+100*I[b+1])/10;let C=m.find(R=>R.shape[1]===1024),E=C?await C.data():[];h.descriptor=Array.from(E),m.forEach(R=>ee(R))}v1[r]=h,jN=n,p(h)}))}function w1(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function xc(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function XN(e,t,r){let n=t.shape[1],a=t.shape[2],s=[[e.startPoint[1]/n,e.startPoint[0]/a,e.endPoint[1]/n,e.endPoint[0]/a]];return Te.cropAndResize(t,s,[0],r)}function ZN(e,t){let r=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],n=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],a=e.palmLandmarks.map(s=>[s[0]*t[0],s[1]*t[1]]);return{startPoint:r,endPoint:n,palmLandmarks:a,confidence:e.confidence}}function k1(e,t=1.5){let r=xc(e),n=w1(e),a=[t*n[0]/2,t*n[1]/2],s=[r[0]-a[0],r[1]-a[1]],i=[r[0]+a[0],r[1]+a[1]];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function I1(e){let t=xc(e),r=w1(e),a=Math.max(...r)/2,s=[t[0]-a,t[1]-a],i=[t[0]+a,t[1]+a];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function L5e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function YN(e,t){let r=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return L5e(r)}var qN=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function oo(e,t){let r=0;for(let n=0;n<e.length;n++)r+=e[n]*t[n];return r}function B5e(e,t){let r=[];for(let n=0;n<e.length;n++)r.push(e[n][t]);return r}function KN(e,t){let r=[],n=e.length;for(let a=0;a<n;a++){r.push([]);for(let s=0;s<n;s++)r[a].push(oo(e[a],B5e(t,s)))}return r}function db(e,t){let r=Math.cos(e),n=Math.sin(e),a=[[r,-n,0],[n,r,0],[0,0,1]],s=qN(t[0],t[1]),i=KN(s,a),o=qN(-t[0],-t[1]);return KN(i,o)}function JN(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],r=[e[0][2],e[1][2]],n=[-oo(t[0],r),-oo(t[1],r)];return[t[0].concat(n[0]),t[1].concat(n[1]),[0,0,1]]}function pb(e,t){return[oo(e,t[0]),oo(e,t[1])]}var eE=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var S1=class{constructor(t){fe(this,"model");fe(this,"anchors");fe(this,"anchorsTensor");fe(this,"inputSize");fe(this,"inputSizeTensor");fe(this,"doubleInputSizeTensor");this.model=t,this.anchors=eE.map(r=>[r.x,r.y]),this.anchorsTensor=Kn(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=$t([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=$t([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let r={};r.boxOffsets=_e(t,[0,0],[-1,2]),r.boxSizes=_e(t,[0,2],[-1,2]),r.div=pe(r.boxOffsets,this.inputSizeTensor),r.boxCenterPoints=le(r.div,this.anchorsTensor),r.halfBoxSizes=pe(r.boxSizes,this.doubleInputSizeTensor),r.sub=ce(r.boxCenterPoints,r.halfBoxSizes),r.startPoints=L(r.sub,this.inputSizeTensor),r.add=le(r.boxCenterPoints,r.halfBoxSizes),r.endPoints=L(r.add,this.inputSizeTensor);let n=Ll([r.startPoints,r.endPoints],1);return Object.keys(r).forEach(a=>ee(r[a])),n}normalizeLandmarks(t,r){let n={};n.reshape=G(t,[-1,7,2]),n.div=pe(n.reshape,this.inputSizeTensor),n.landmarks=le(n.div,this.anchors[r]);let a=L(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach(s=>ee(n[s])),a}async predict(t,r){let n={};n.resize=Te.resizeBilinear(t,[this.inputSize,this.inputSize]),n.div=pe(n.resize,Je.tf127),n.image=ce(n.div,Je.tf1),n.batched=this.model.execute(n.image),n.predictions=nt(n.batched),n.slice=_e(n.predictions,[0,0],[-1,1]),n.sigmoid=Er(n.slice),n.scores=nt(n.sigmoid);let a=await n.scores.data();n.boxes=_e(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await Te.nonMaxSuppressionAsync(n.norm,n.scores,3*r.hand.maxDetected,r.hand.iouThreshold,r.hand.minConfidence);let s=await n.nms.array(),i=[];for(let o of s){let l={};l.box=_e(n.norm,[o,0],[1,-1]),l.slice=_e(n.predictions,[o,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,o),l.palmLandmarks=G(l.norm,[-1,2]);let u=await l.box.data(),p=u.slice(0,2),h=u.slice(2,4),d=await l.palmLandmarks.array(),c={startPoint:p,endPoint:h,palmLandmarks:d,confidence:a[o]},f=ZN(c,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);i.push(f),Object.keys(l).forEach(m=>ee(l[m]))}return Object.keys(n).forEach(o=>ee(n[o])),i}};var G5e=5,tE=1.65,rE=[0,5,9,13,17,1,2],U5e=0,j5e=2,nE=0,C1=class{constructor(t,r){fe(this,"handDetector");fe(this,"handPoseModel");fe(this,"inputSize");fe(this,"storedBoxes");fe(this,"skipped");fe(this,"detectedHands");this.handDetector=t,this.handPoseModel=r,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let r=t.map(i=>i[0]),n=t.map(i=>i[1]),a=[Math.min(...r),Math.min(...n)],s=[Math.max(...r),Math.max(...n)];return{startPoint:a,endPoint:s}}getBoxForPalmLandmarks(t,r){let n=t.map(s=>pb([...s,1],r)),a=this.calculateLandmarksBoundingBox(n);return k1(I1(a),G5e)}getBoxForHandLandmarks(t){let r=this.calculateLandmarksBoundingBox(t),n=k1(I1(r),tE);n.palmLandmarks=[];for(let a=0;a<rE.length;a++)n.palmLandmarks.push(t[rE[a]].slice(0,2));return n}transformRawCoords(t,r,n,a){let s=w1(r),i=[s[0]/this.inputSize,s[1]/this.inputSize,(s[0]+s[1])/this.inputSize/2],o=t.map(c=>[i[0]*(c[0]-this.inputSize/2),i[1]*(c[1]-this.inputSize/2),i[2]*c[2]]),l=db(n,[0,0]),u=o.map(c=>[...pb(c,l),c[2]]),p=JN(a),h=[...xc(r),1],d=[oo(h,p[0]),oo(h,p[1])];return u.map(c=>[Math.trunc(c[0]+d[0]),Math.trunc(c[1]+d[1]),Math.trunc(c[2])])}async estimateHands(t,r){let n=!1,a,s=(r.hand.skipTime||0)>oe()-nE,i=this.skipped<(r.hand.skipFrames||0);r.skipAllowed&&s&&i&&(a=await this.handDetector.predict(t,r),this.skipped=0),r.skipAllowed&&this.skipped++,a&&a.length>0&&(a.length!==this.detectedHands&&this.detectedHands!==r.hand.maxDetected||!r.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...a],this.storedBoxes.length>0&&(n=!0));let o=[];for(let l=0;l<this.storedBoxes.length;l++){let u=this.storedBoxes[l];if(!!u)if(r.hand.landmarks){let p=r.hand.rotation?YN(u.palmLandmarks[U5e],u.palmLandmarks[j5e]):0,h=xc(u),d=[h[0]/t.shape[2],h[1]/t.shape[1]],c=r.hand.rotation&&he.kernels.includes("rotatewithoffset")?Te.rotateWithOffset(t,p,0,d):t.clone(),f=db(-p,h),m=n?this.getBoxForPalmLandmarks(u.palmLandmarks,f):u,g=XN(m,c,[this.inputSize,this.inputSize]),y=pe(g,Je.tf255);ee(g),ee(c);let[A,x]=this.handPoseModel.execute(y);nE=oe(),ee(y);let b=(await A.data())[0];if(ee(A),b>=r.hand.minConfidence/4){let w=G(x,[-1,3]),I=await w.array();ee(x),ee(w);let C=this.transformRawCoords(I,m,p,f),E=this.getBoxForHandLandmarks(C);this.storedBoxes[l]={...E,confidence:b};let R={landmarks:C,confidence:b,boxConfidence:u.confidence,fingerConfidence:b,box:{topLeft:E.startPoint,bottomRight:E.endPoint}};o.push(R)}else this.storedBoxes[l]=null;ee(x)}else{let p=k1(I1(u),tE),h={confidence:u.confidence,boxConfidence:u.confidence,fingerConfidence:0,box:{topLeft:p.startPoint,bottomRight:p.endPoint},landmarks:[]};o.push(h)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=o.length,o.length>r.hand.maxDetected&&(o.length=r.hand.maxDetected),o}};var en={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>en.nameMapping[e],getPoints:e=>en.pointsMapping[e]},uo={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>uo.nameMapping[e]},Wt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Wt.nameMapping[e]},lo=class{constructor(t){fe(this,"name");fe(this,"curls");fe(this,"directions");fe(this,"weights");fe(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,r,n){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([r,n])}direction(t,r,n){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([r,n])}weight(t,r){this.weights[t]=r;let n=this.weights.reduce((a,s)=>a+s,0);this.weightsRelative=this.weights.map(a=>a*5/n)}matchAgainst(t,r){let n=0;for(let a in t){let s=t[a],i=this.curls[a];if(typeof i=="undefined"){n+=this.weightsRelative[a];continue}for(let[o,l]of i)if(s===o){n+=l*this.weightsRelative[a];break}}for(let a in r){let s=r[a],i=this.directions[a];if(typeof i=="undefined"){n+=this.weightsRelative[a];continue}for(let[o,l]of i)if(s===o){n+=l*this.weightsRelative[a];break}}return n/10}};var{thumb:Ca,index:ys,middle:As,ring:ru,pinky:nu}=en,{none:Ta,half:q5e,full:Na}=uo,{verticalUp:rp,verticalDown:q8e,horizontalLeft:hb,horizontalRight:K5e,diagonalUpRight:X5e,diagonalUpLeft:np,diagonalDownRight:K8e,diagonalDownLeft:X8e}=Wt,po=new lo("thumbs up");po.curl(Ca,Ta,1);po.direction(Ca,rp,1);po.direction(Ca,np,.25);po.direction(Ca,X5e,.25);for(let e of[en.index,en.middle,en.ring,en.pinky])po.curl(e,Na,1),po.direction(e,hb,1),po.direction(e,K5e,1);var rr=new lo("victory");rr.curl(Ca,q5e,.5);rr.curl(Ca,Ta,.5);rr.direction(Ca,rp,1);rr.direction(Ca,np,1);rr.curl(ys,Ta,1);rr.direction(ys,rp,.75);rr.direction(ys,np,1);rr.curl(As,Ta,1);rr.direction(As,rp,1);rr.direction(As,np,.75);rr.curl(ru,Na,1);rr.direction(ru,rp,.2);rr.direction(ru,np,1);rr.direction(ru,hb,.2);rr.curl(nu,Na,1);rr.direction(nu,rp,.2);rr.direction(nu,np,1);rr.direction(nu,hb,.2);rr.weight(ys,2);rr.weight(As,2);var ho=new lo("point");ho.curl(Ca,Na,1);ho.curl(ys,Ta,.5);ho.curl(As,Na,.5);ho.curl(ru,Na,.5);ho.curl(nu,Na,.5);ho.weight(ys,2);ho.weight(As,2);var co=new lo("middle finger");co.curl(Ca,Ta,1);co.curl(ys,Na,.5);co.curl(As,Na,.5);co.curl(ru,Na,.5);co.curl(nu,Na,.5);co.weight(ys,2);co.weight(As,2);var ap=new lo("open palm");ap.curl(Ca,Ta,.75);ap.curl(ys,Ta,.75);ap.curl(As,Ta,.75);ap.curl(ru,Ta,.75);ap.curl(nu,Ta,.75);var aE=[po,rr,ho,co,ap];var Z5e=.7,au={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function sE(e,t,r,n){let a=(t-n)/(e-r),s=Math.atan(a)*180/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function oE(e,t){if(!e||!t)return[0,0];let r=sE(e[0],e[1],t[0],t[1]);if(e.length===2)return r;let n=sE(e[1],e[2],t[1],t[2]);return[r,n]}function iE(e,t=1){let r=0,n=0,a=0;return e>=75&&e<=105?r=1*t:e>=25&&e<=155?n=1*t:a=1*t,[r,n,a]}function Y5e(e,t,r){let n=e[0]-t[0],a=e[0]-r[0],s=t[0]-r[0],i=e[1]-t[1],o=e[1]-r[1],l=t[1]-r[1],u=e[2]-t[2],p=e[2]-r[2],h=t[2]-r[2],d=Math.sqrt(n*n+i*i+u*u),c=Math.sqrt(a*a+o*o+p*p),f=Math.sqrt(s*s+l*l+h*h),m=(f*f+d*d-c*c)/(2*f*d);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>au.NO_CURL_START_LIMIT?y=uo.none:g>au.HALF_CURL_START_LIMIT?y=uo.half:y=uo.full,y}function lE(e,t,r,n){let a;return n===Math.abs(e)?e>0?a=Wt.horizontalLeft:a=Wt.horizontalRight:n===Math.abs(t)?t>0?a=Wt.horizontalLeft:a=Wt.horizontalRight:r>0?a=Wt.horizontalLeft:a=Wt.horizontalRight,a}function uE(e,t,r,n){let a;return n===Math.abs(e)?e<0?a=Wt.verticalDown:a=Wt.verticalUp:n===Math.abs(t)?t<0?a=Wt.verticalDown:a=Wt.verticalUp:r<0?a=Wt.verticalDown:a=Wt.verticalUp,a}function J5e(e,t,r,n,a,s,i,o){let l,u=uE(e,t,r,n),p=lE(a,s,i,o);return u===Wt.verticalUp?p===Wt.horizontalLeft?l=Wt.diagonalUpLeft:l=Wt.diagonalUpRight:p===Wt.horizontalLeft?l=Wt.diagonalDownLeft:l=Wt.diagonalDownRight,l}function Q5e(e,t,r,n){let a=e[0]-t[0],s=e[0]-r[0],i=t[0]-r[0],o=e[1]-t[1],l=e[1]-r[1],u=t[1]-r[1],p=Math.max(Math.abs(a),Math.abs(s),Math.abs(i)),h=Math.max(Math.abs(o),Math.abs(l),Math.abs(u)),d=0,c=0,f=0,m=h/(p+1e-5);m>1.5?d+=au.DISTANCE_VOTE_POWER:m>.66?c+=au.DISTANCE_VOTE_POWER:f+=au.DISTANCE_VOTE_POWER;let g=Math.sqrt(a*a+o*o),y=Math.sqrt(s*s+l*l),A=Math.sqrt(i*i+u*u),x=Math.max(g,y,A),b=e[0],w=e[1],I=r[0],C=r[1];x===g?(I=r[0],C=r[1]):x===A&&(b=t[0],w=t[1]);let F=oE([b,w],[I,C]),$=iE(F,au.TOTAL_ANGLE_VOTE_POWER);d+=$[0],c+=$[1],f+=$[2];for(let O of n){let z=iE(O,au.SINGLE_ANGLE_VOTE_POWER);d+=z[0],c+=z[1],f+=z[2]}let S;return d===Math.max(d,c,f)?S=uE(l,o,u,h):f===Math.max(c,f)?S=lE(s,a,i,p):S=J5e(l,o,u,h,s,a,i,p),S}function dE(e){let t=[],r=[],n=[],a=[];if(!e)return{curls:n,directions:a};for(let s of en.all){let i=en.getPoints(s),o=[],l=[];for(let u of i){let p=e[u[0]],h=e[u[1]],d=oE(p,h),c=d[0],f=d[1];o.push(c),l.push(f)}t.push(o),r.push(l)}for(let s of en.all){let i=s===en.thumb?1:0,o=en.getPoints(s),l=e[o[i][0]],u=e[o[i+1][1]],p=e[o[3][1]],h=Y5e(l,u,p),d=Q5e(l,u,p,t[s].slice(i));n[s]=h,a[s]=d}return{curls:n,directions:a}}function T1(e){if(!e||e.length===0)return null;let t=dE(e),r={};for(let n of en.all)r[en.getName(n)]={curl:uo.getName(t.curls[n]),direction:Wt.getName(t.directions[n])};return r}function pE(e){let t=[];if(!e||e.length===0)return t;let r=dE(e);for(let n of aE){let a=n.matchAgainst(r.curls,r.directions);a>=Z5e&&t.push({name:n.name,confidence:a})}return t}var hE={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},sp,ip,cE;async function fb(e,t){let r=await cE.estimateHands(e,t);if(!r)return[];let n=[];for(let a=0;a<r.length;a++){let s={};if(r[a].landmarks)for(let p of Object.keys(hE))s[p]=hE[p].map(h=>r[a].landmarks[h]);let i=r[a].landmarks,o=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(i&&i.length>0){for(let p of i)p[0]<o[0]&&(o[0]=p[0]),p[1]<o[1]&&(o[1]=p[1]),p[0]>o[2]&&(o[2]=p[0]),p[1]>o[3]&&(o[3]=p[1]);o[2]-=o[0],o[3]-=o[1],l=[o[0]/(e.shape[2]||0),o[1]/(e.shape[1]||0),o[2]/(e.shape[2]||0),o[3]/(e.shape[1]||0)]}else o=r[a].box?[Math.trunc(Math.max(0,r[a].box.topLeft[0])),Math.trunc(Math.max(0,r[a].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,r[a].box.bottomRight[0])-Math.max(0,r[a].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,r[a].box.bottomRight[1])-Math.max(0,r[a].box.topLeft[1]))]:[0,0,0,0],l=[r[a].box.topLeft[0]/(e.shape[2]||0),r[a].box.topLeft[1]/(e.shape[1]||0),(r[a].box.bottomRight[0]-r[a].box.topLeft[0])/(e.shape[2]||0),(r[a].box.bottomRight[1]-r[a].box.topLeft[1])/(e.shape[1]||0)];let u=T1(i);n.push({id:a,score:Math.round(100*r[a].confidence)/100,boxScore:Math.round(100*r[a].boxConfidence)/100,fingerScore:Math.round(100*r[a].fingerConfidence)/100,label:"hand",box:o,boxRaw:l,keypoints:i,annotations:s,landmarks:u})}return n}async function mb(e){var r,n;he.initial&&(sp=null,ip=null),!sp||!ip?[sp,ip]=await Promise.all([e.hand.enabled?je((r=e.hand.detector)==null?void 0:r.modelPath):null,e.hand.landmarks?je((n=e.hand.skeleton)==null?void 0:n.modelPath):null]):(e.debug&&se("cached model:",sp.modelUrl),e.debug&&se("cached model:",ip.modelUrl));let t=new S1(sp);return cE=new C1(t,ip),[sp,ip]}var hr=[null,null],eAe=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],fo=[[0,0],[0,0]],tAe=["hand","fist","pinch","point","face","tip","pinchtip"],mE=4,gE=1.6,rAe=512,nAe=1.4,N1=Number.MAX_SAFE_INTEGER,gb=0,xs=[0,0],qt={boxes:[],hands:[]},yE={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function AE(e){var t;if(he.initial&&(hr[0]=null),hr[0])e.debug&&se("cached model:",hr[0].modelUrl);else{E1(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),hr[0]=await je((t=e.hand.detector)==null?void 0:t.modelPath);let r=Object.values(hr[0].modelSignature.inputs);fo[0][0]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[1].size):0,fo[0][1]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[2].size):0}return hr[0]}async function xE(e){var t;if(he.initial&&(hr[1]=null),hr[1])e.debug&&se("cached model:",hr[1].modelUrl);else{hr[1]=await je((t=e.hand.skeleton)==null?void 0:t.modelPath);let r=Object.values(hr[1].modelSignature.inputs);fo[1][0]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[1].size):0,fo[1][1]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[2].size):0}return hr[1]}async function aAe(e,t){let r=[];if(!e||!hr[0])return r;let n={},a=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(Math.round((e.shape[1]||0)/8)*8,rAe),i=Math.round(s*a/8)*8;n.resize=Te.resizeBilinear(e,[s,i]),n.cast=me(n.resize,"int32"),[n.rawScores,n.rawBoxes]=await hr[0].executeAsync(n.cast,eAe),n.boxes=nt(n.rawBoxes,[0,2]),n.scores=nt(n.rawScores,[0]);let o=ln(n.scores,1);ee(o[mE]),o.splice(mE,1),n.filtered=dr(o,1),ee(o),n.max=Ar(n.filtered,1),n.argmax=Pn(n.filtered,1);let l=0;n.nms=await Te.nonMaxSuppressionAsync(n.boxes,n.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let u=await n.nms.data(),p=await n.max.data(),h=await n.argmax.data();for(let d of Array.from(u)){let c=_e(n.boxes,d,1),f=await c.data();ee(c);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=m1(m,nAe),y=[Math.trunc(m[0]*xs[0]),Math.trunc(m[1]*xs[1]),Math.trunc(m[2]*xs[0]),Math.trunc(m[3]*xs[1])],A=p[d],x=tAe[h[d]],b={id:l++,score:A,box:y,boxRaw:g,label:x};r.push(b)}return Object.keys(n).forEach(d=>ee(n[d])),r.sort((d,c)=>c.score-d.score),r.length>(t.hand.maxDetected||1)&&(r.length=t.hand.maxDetected||1),r}async function yb(e,t,r){let n={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&hr[1]&&r.hand.landmarks&&t.score>(r.hand.minConfidence||0)){let a={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];a.crop=Te.cropAndResize(e,[s],[0],[fo[1][0],fo[1][1]],"bilinear"),a.div=pe(a.crop,Je.tf255),[a.score,a.keypoints]=hr[1].execute(a.div,["Identity_1","Identity"]);let i=(await a.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(r.hand.minConfidence||0)){n.fingerScore=o,a.reshaped=G(a.keypoints,[-1,3]);let p=(await a.reshaped.array()).map(h=>[h[0]/fo[1][1],h[1]/fo[1][0],h[2]||0]).map(h=>[h[0]*t.boxRaw[2],h[1]*t.boxRaw[3],h[2]||0]);n.keypoints=p.map(h=>[xs[0]*(h[0]+t.boxRaw[0]),xs[1]*(h[1]+t.boxRaw[1]),h[2]||0]),n.landmarks=T1(n.keypoints);for(let h of Object.keys(yE))n.annotations[h]=yE[h].map(d=>n.landmarks&&n.keypoints[d]?n.keypoints[d]:null)}Object.keys(a).forEach(l=>ee(a[l]))}return n}async function Ab(e,t){var a,s;if(!hr[0]||!hr[1]||!((a=hr[0])!=null&&a.inputs[0].shape)||!((s=hr[1])!=null&&s.inputs[0].shape))return[];xs=[e.shape[2]||0,e.shape[1]||0],N1++;let r=(t.hand.skipTime||0)>oe()-gb,n=N1<(t.hand.skipFrames||0);return t.skipAllowed&&r&&n?qt.hands:new Promise(async i=>{let o=3*(t.hand.skipTime||0)>oe()-gb,l=N1<3*(t.hand.skipFrames||0);t.skipAllowed&&qt.hands.length===t.hand.maxDetected?qt.hands=await Promise.all(qt.boxes.map(p=>yb(e,p,t))):t.skipAllowed&&o&&l&&qt.hands.length>0?qt.hands=await Promise.all(qt.boxes.map(p=>yb(e,p,t))):(qt.boxes=await aAe(e,t),gb=oe(),qt.hands=await Promise.all(qt.boxes.map(p=>yb(e,p,t))),N1=0);let u=[...qt.boxes];if(qt.boxes.length=0,t.cacheSensitivity>0)for(let p=0;p<qt.hands.length;p++){let h=dN(qt.hands[p].keypoints,xs);if(h.box[2]/(e.shape[2]||1)>.05&&h.box[3]/(e.shape[1]||1)>.05&&qt.hands[p].fingerScore&&qt.hands[p].fingerScore>(t.hand.minConfidence||0)){let d=m1(h.box,gE),c=m1(h.boxRaw,gE);qt.boxes.push({...u[p],box:d,boxRaw:c})}}for(let p=0;p<qt.hands.length;p++){let h=fs(qt.hands[p].keypoints,xs);qt.hands[p].box=h.box,qt.hands[p].boxRaw=h.boxRaw}i(qt.hands)})}var Pr,R1=[],xb=Number.MAX_SAFE_INTEGER,vE=0,wE=0;async function kE(e){var t;return he.initial&&(Pr=null),Pr?e.debug&&se("cached model:",Pr.modelUrl):Pr=await je((t=e.face.liveness)==null?void 0:t.modelPath),Pr}async function bb(e,t,r,n){var i,o;if(!Pr)return 0;let a=(((i=t.face.liveness)==null?void 0:i.skipTime)||0)>oe()-wE,s=xb<(((o=t.face.liveness)==null?void 0:o.skipFrames)||0);return t.skipAllowed&&a&&s&&vE===n&&R1[r]?(xb++,R1[r]):(xb=0,new Promise(async l=>{let u=Te.resizeBilinear(e,[Pr!=null&&Pr.inputs[0].shape?Pr.inputs[0].shape[2]:0,Pr!=null&&Pr.inputs[0].shape?Pr.inputs[0].shape[1]:0],!1),p=Pr==null?void 0:Pr.execute(u),h=(await p.data())[0];R1[r]=Math.round(100*h)/100,vE=n,wE=oe(),ee([u,p]),l(R1[r])}))}var bc={};Ts(bc,{connected:()=>M1,horizontal:()=>vb,kpt:()=>$1,relative:()=>kb,vertical:()=>wb});var $1=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],vb=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],wb=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],kb=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],M1={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var SE=.005,Tn={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function Ib(e){for(let t of vb){let r=e.keypoints.findIndex(a=>a.part===t[0]),n=e.keypoints.findIndex(a=>a.part===t[1]);if(e.keypoints[r]&&e.keypoints[n]&&e.keypoints[r].position[0]<e.keypoints[n].position[0]){let a=e.keypoints[r];e.keypoints[r]=e.keypoints[n],e.keypoints[n]=a}}for(let t of wb){let r=e.keypoints.findIndex(a=>a&&a.part===t[0]),n=e.keypoints.findIndex(a=>a&&a.part===t[1]);e.keypoints[r]&&e.keypoints[n]&&e.keypoints[r].position[1]<e.keypoints[n].position[1]&&e.keypoints.splice(r,1)}for(let[t,r]of kb){let n=e.keypoints.findIndex(u=>u&&u.part===t[0]),a=e.keypoints.findIndex(u=>u&&u.part===t[1]),s=e.keypoints.findIndex(u=>u&&u.part===r[0]),i=e.keypoints.findIndex(u=>u&&u.part===r[1]);if(!e.keypoints[s]||!e.keypoints[i])continue;let o=e.keypoints[n]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[n].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[n].position[0])]:[0,0],l=e.keypoints[a]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){let u=e.keypoints[n];e.keypoints[n]=e.keypoints[a],e.keypoints[a]=u}}}function CE(e){for(let t=0;t<e.length;t++)if(e[t]&&Tn.keypoints[t]){let r=[Math.abs(e[t].positionRaw[0]-Tn.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Tn.keypoints[t].positionRaw[1])];r[0]<SE&&r[1]<SE?e[t]=Tn.keypoints[t]:Tn.keypoints[t]=e[t]}else Tn.keypoints[t]=e[t];return e}function TE(e,t){let r={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Tn.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],r.pad=Qn(e,Tn.padding),r.resize=Te.resizeBilinear(r.pad,[t,t]);let n=me(r.resize,"int32");return Object.keys(r).forEach(a=>ee(r[a])),n}function NE(e,t){e.keypoints=e.keypoints.filter(n=>n&&n.position);for(let n of e.keypoints)n.position=[n.position[0]*(t[0]+Tn.padding[2][0]+Tn.padding[2][1])/t[0]-Tn.padding[2][0],n.position[1]*(t[1]+Tn.padding[1][0]+Tn.padding[1][1])/t[1]-Tn.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];let r=fs(e.keypoints.map(n=>n.position),t);return e.box=r.box,e.boxRaw=r.boxRaw,e}var Nn,F1=0,Sb=Number.MAX_SAFE_INTEGER,su={boxes:[],bodies:[],last:0};async function EE(e){return he.initial&&(Nn=null),Nn?e.debug&&se("cached model:",Nn.modelUrl):(E1(["size"],e),Nn=await je(e.body.modelPath)),F1=Nn.inputs[0].shape?Nn.inputs[0].shape[2]:0,F1<64&&(F1=256),Nn}async function iAe(e,t,r){let n=e[0][0],a=[],s=0;for(let p=0;p<n.length;p++)if(s=n[p][2],s>t.body.minConfidence){let h=[n[p][1],n[p][0]];a.push({score:Math.round(100*s)/100,part:$1[p],positionRaw:h,position:[Math.round((r.shape[2]||0)*h[0]),Math.round((r.shape[1]||0)*h[1])]})}s=a.reduce((p,h)=>h.score>p?h.score:p,0);let i=[],o=fs(a.map(p=>p.position),[r.shape[2],r.shape[1]]),l={};for(let[p,h]of Object.entries(M1)){let d=[];for(let c=0;c<h.length-1;c++){let f=a.find(g=>g.part===h[c]),m=a.find(g=>g.part===h[c+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&d.push([f.position,m.position])}l[p]=d}let u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:a,annotations:l};return Ib(u),i.push(u),i}async function oAe(e,t,r){let n=[];for(let a=0;a<e[0].length;a++){let s=e[0][a],i=Math.round(100*s[51+4])/100;if(i>t.body.minConfidence){let o=[];for(let h=0;h<17;h++){let d=s[3*h+2];if(d>t.body.minConfidence){let c=[s[3*h+1],s[3*h+0]];o.push({part:$1[h],score:Math.round(100*d)/100,positionRaw:c,position:[Math.round((r.shape[2]||0)*c[0]),Math.round((r.shape[1]||0)*c[1])]})}}let l=fs(o.map(h=>h.position),[r.shape[2],r.shape[1]]),u={};for(let[h,d]of Object.entries(M1)){let c=[];for(let f=0;f<d.length-1;f++){let m=o.find(y=>y.part===d[f]),g=o.find(y=>y.part===d[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&c.push([m.position,g.position])}u[h]=c}let p={id:a,score:i,box:l.box,boxRaw:l.boxRaw,keypoints:[...o],annotations:u};Ib(p),n.push(p)}}return n.sort((a,s)=>s.score-a.score),n.length>t.body.maxDetected&&(n.length=t.body.maxDetected),n}async function Cb(e,t){if(!Nn||!(Nn!=null&&Nn.inputs[0].shape))return[];t.skipAllowed||(su.boxes.length=0),Sb++;let r=(t.body.skipTime||0)>oe()-su.last,n=Sb<(t.body.skipFrames||0);return t.skipAllowed&&r&&n?su.bodies:new Promise(async a=>{let s={};Sb=0,s.input=TE(e,F1),s.res=Nn==null?void 0:Nn.execute(s.input),su.last=oe();let i=await s.res.array();su.bodies=s.res.shape[2]===17?await iAe(i,t,e):await oAe(i,t,e);for(let o of su.bodies)NE(o,[e.shape[2]||1,e.shape[1]||1]),CE(o.keypoints);Object.keys(s).forEach(o=>ee(s[o])),a(su.bodies)})}var op,_1=[],$E=0,Tb=Number.MAX_SAFE_INTEGER,z1=0,P1=2.5;async function ME(e){if(!op||he.initial){op=await je(e.object.modelPath);let t=Object.values(op.modelSignature.inputs);z1=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&se("cached model:",op.modelUrl);return op}async function lAe(e,t,r){let n=0,a=[];for(let l of[1,2,4])J(async()=>{let u=l*13,p=nt(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)===Qd.length)),h=nt(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)<Qd.length)),c=await h.reshape([-1,4,h.shape[1]/4]).argMax(2).array(),f=await p.array();for(let m=0;m<p.shape[0];m++)for(let g=0;g<p.shape[1];g++){let y=f[m][g];if(y>(r.object.minConfidence||0)&&g!==61){let A=(.5+Math.trunc(m%u))/u,x=(.5+Math.trunc(m/u))/u,b=c[m].map(S=>S*(u/l/z1)),[w,I]=[A-P1/l*b[0],x-P1/l*b[1]],[C,E]=[A+P1/l*b[2]-w,x+P1/l*b[3]-I],R=[w,I,C,E];R=R.map(S=>Math.max(0,Math.min(S,1)));let F=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],$={id:n++,score:Math.round(100*y)/100,class:g+1,label:Qd[g].label,box:F.map(S=>Math.trunc(S)),boxRaw:R};a.push($)}}});e.forEach(l=>ee(l));let s=a.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),i=a.map(l=>l.score),o=[];if(s&&s.length>0){let l=await Te.nonMaxSuppressionAsync(s,i,r.object.maxDetected,r.object.iouThreshold,r.object.minConfidence);o=await l.data(),ee(l)}return a=a.filter((l,u)=>o.includes(u)).sort((l,u)=>u.score-l.score),a}async function Nb(e,t){let r=(t.object.skipTime||0)>oe()-$E,n=Tb<(t.object.skipFrames||0);return t.skipAllowed&&r&&n&&_1.length>0?(Tb++,_1):(Tb=0,!he.kernels.includes("mod")||!he.kernels.includes("sparsetodense")?_1:new Promise(async a=>{let s=[e.shape[2]||0,e.shape[1]||0],i=Te.resizeBilinear(e,[z1,z1],!1),o=pe(i,Je.tf255),l=o.transpose([0,3,1,2]);ee(o),ee(i);let u;t.object.enabled&&(u=op.execute(l)),$E=oe(),ee(l);let p=await lAe(u,s,t);_1=p,a(p)}))}var wc=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],uAe=wc.length,vc=wc.reduce((e,t,r)=>(e[t]=r,e),{}),dAe=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],xke=dAe.map(([e,t])=>[vc[e],vc[t]]),_E=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function PE(e){let t=e.reduce(({maxX:r,maxY:n,minX:a,minY:s},{position:{x:i,y:o}})=>({maxX:Math.max(r,i),maxY:Math.max(n,o),minX:Math.min(a,i),minY:Math.min(s,o)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function zE(e,[t,r],[n,a]){let s=t/n,i=r/a,o=(u,p)=>({id:p,score:u.score,boxRaw:[u.box[0]/a,u.box[1]/n,u.box[2]/a,u.box[3]/n],box:[Math.trunc(u.box[0]*i),Math.trunc(u.box[1]*s),Math.trunc(u.box[2]*i),Math.trunc(u.box[3]*s)],keypoints:u.keypoints.map(({score:h,part:d,position:c})=>({score:h,part:d,position:[Math.trunc(c.x*i),Math.trunc(c.y*s)],positionRaw:[c.x/n,c.y/n]})),annotations:{}});return e.map((u,p)=>o(u,p))}var O1=class{constructor(t,r){fe(this,"priorityQueue");fe(this,"numberOfElements");fe(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=r}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let r=2*t;if(r<this.numberOfElements&&this.less(r,r+1)&&r++,!this.less(t,r))break;this.exchange(t,r),t=r}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,r){return this.getValueAt(t)<this.getValueAt(r)}exchange(t,r){let n=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[r],this.priorityQueue[r]=n}};function Eb(e,t,r,n){return{y:n.get(e,t,r),x:n.get(e,t,r+uAe)}}function Rb(e,t,r){let{heatmapY:n,heatmapX:a,id:s}=e,{y:i,x:o}=Eb(n,a,s,r);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function $b(e,t,r){return e<t?t:e>r?r:e}function OE(e,t,r,n){let a=r-e,s=n-t;return a*a+s*s}function Mb(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Ea,hAe=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],D1=1,lp=16,cAe=50**2;function DE(e,t,r,n,a,s,i=2){let o=y=>({y:s.get(y.y,y.x,e),x:s.get(y.y,y.x,s.shape[2]/2+e)}),l=(y,A,x)=>({y:$b(Math.round(y.y/lp),0,A-1),x:$b(Math.round(y.x/lp),0,x-1)}),[u,p]=n.shape,h=l(t.position,u,p),d=o(h),f=Mb(t.position,d);for(let y=0;y<i;y++){let A=l(f,u,p),x=Eb(A.y,A.x,r,a);f=Mb({x:A.x*lp,y:A.y*lp},{x:x.x,y:x.y})}let m=l(f,u,p),g=n.get(m.y,m.x,r);return{position:f,part:wc[r],score:g}}function fAe(e,t,r,n,a){let s=_E.map(([d,c])=>[vc[d],vc[c]]),i=s.map(([,d])=>d),o=s.map(([d])=>d),l=t.shape[2],u=i.length,p=new Array(l),h=Rb(e.part,lp,r);p[e.part.id]={score:e.score,part:wc[e.part.id],position:h};for(let d=u-1;d>=0;--d){let c=i[d],f=o[d];p[c]&&!p[f]&&(p[f]=DE(d,p[c],f,t,r,a))}for(let d=0;d<u;++d){let c=o[d],f=i[d];p[c]&&!p[f]&&(p[f]=DE(d,p[c],f,t,r,n))}return p}function mAe(e,t,r,n,a){let[s,i]=a.shape,o=!0,l=Math.max(r-D1,0),u=Math.min(r+D1+1,s);for(let p=l;p<u;++p){let h=Math.max(n-D1,0),d=Math.min(n+D1+1,i);for(let c=h;c<d;++c)if(a.get(p,c,e)>t){o=!1;break}if(!o)break}return o}function gAe(e,t){let[r,n,a]=t.shape,s=new O1(r*n*a,({score:i})=>i);for(let i=0;i<r;++i)for(let o=0;o<n;++o)for(let l=0;l<a;++l){let u=t.get(i,o,l);u<e||mAe(l,u,i,o,t)&&s.enqueue({score:u,part:{heatmapY:i,heatmapX:o,id:l}})}return s}function LE(e,{x:t,y:r},n){return e.some(({keypoints:a})=>{var i;let s=(i=a[n])==null?void 0:i.position;return s?OE(r,t,s.y,s.x)<=cAe:!1})}function yAe(e,t){return t.reduce((n,{position:a,score:s},i)=>(LE(e,a,i)||(n+=s),n),0)/t.length}function AAe(e,t,r,n,a,s){let i=[],o=gAe(s,t);for(;i.length<a&&!o.empty();){let l=o.dequeue(),u=Rb(l.part,lp,e);if(LE(i,u,l.part.id))continue;let p=fAe(l,t,e,r,n);p=p.filter(c=>c.score>s);let h=yAe(i,p),d=PE(p);h>s&&i.push({keypoints:p,box:d,score:Math.round(100*h)/100})}return i}async function Fb(e,t){let r=J(()=>{if(!Ea.inputs[0].shape)return[];let i=Te.resizeBilinear(e,[Ea.inputs[0].shape[2],Ea.inputs[0].shape[1]]),o=ce(pe(me(i,"float32"),127.5),1),u=Ea.execute(o,hAe).map(p=>nt(p,[0]));return u[1]=Er(u[1]),u}),n=await Promise.all(r.map(i=>i.buffer()));for(let i of r)ee(i);let a=await AAe(n[0],n[1],n[2],n[3],t.body.maxDetected,t.body.minConfidence);return Ea.inputs[0].shape?zE(a,[e.shape[1],e.shape[2]],[Ea.inputs[0].shape[2],Ea.inputs[0].shape[1]]):[]}async function BE(e){return!Ea||he.initial?Ea=await je(e.body.modelPath):e.debug&&se("cached model:",Ea.modelUrl),Ea}var Ha,_b=!1;async function Pb(e){return!Ha||he.initial?Ha=await je(e.segmentation.modelPath):e.debug&&se("cached model:",Ha.modelUrl),Ha}async function VE(e,t,r){var m,g;if(_b)return{data:[],canvas:null,alpha:null};_b=!0,Ha||await Pb(r);let n=await Xd(e,r),a=((m=n.tensor)==null?void 0:m.shape[2])||0,s=((g=n.tensor)==null?void 0:g.shape[1])||0;if(!n.tensor)return{data:[],canvas:null,alpha:null};let i={};i.resize=Te.resizeBilinear(n.tensor,[Ha.inputs[0].shape?Ha.inputs[0].shape[1]:0,Ha.inputs[0].shape?Ha.inputs[0].shape[2]:0],!1),ee(n.tensor),i.norm=pe(i.resize,Je.tf255),i.res=Ha.execute(i.norm),i.squeeze=nt(i.res,0),i.squeeze.shape[2]===2?(i.softmax=Ed(i.squeeze),[i.bg,i.fg]=ln(i.softmax,2),i.expand=Zt(i.fg,2),i.pad=Zt(i.expand,0),i.crop=Te.cropAndResize(i.pad,[[0,0,.5,.5]],[0],[a,s]),i.data=nt(i.crop,0)):i.data=Te.resizeBilinear(i.squeeze,[s,a]);let o=Array.from(await i.data.data());if(he.node&&!he.Canvas&&typeof ImageData=="undefined")return r.debug&&se("canvas support missing"),Object.keys(i).forEach(y=>ee(i[y])),{data:o,canvas:null,alpha:null};let l=Yr(a,s);Wn&&await Wn.toPixels(i.data,l);let u=l.getContext("2d");r.segmentation.blur&&r.segmentation.blur>0&&(u.filter=`blur(${r.segmentation.blur}px)`);let p=u.getImageData(0,0,a,s),h=Yr(a,s),d=h.getContext("2d");n.canvas&&d.drawImage(n.canvas,0,0),d.globalCompositeOperation="darken",r.segmentation.blur&&r.segmentation.blur>0&&(d.filter=`blur(${r.segmentation.blur}px)`),d.drawImage(l,0,0),d.globalCompositeOperation="source-over",d.filter="none";let c=d.getImageData(0,0,a,s);for(let y=0;y<a*s;y++)c.data[4*y+3]=p.data[4*y+0];d.putImageData(c,0,0);let f=null;if(t&&h){f=Yr(a,s);let y=await Xd(t,r);ee(y.tensor);let A=f.getContext("2d");A.drawImage(y.canvas,0,0,f.width,f.height),A.drawImage(h,0,0)}return Object.keys(i).forEach(y=>ee(i[y])),_b=!1,{data:o,canvas:h,alpha:l}}var kc=class{constructor(){fe(this,"ssrnetage",null);fe(this,"gear",null);fe(this,"blazeposedetect",null);fe(this,"blazepose",null);fe(this,"centernet",null);fe(this,"efficientpose",null);fe(this,"mobilefacenet",null);fe(this,"emotion",null);fe(this,"facedetect",null);fe(this,"faceiris",null);fe(this,"facemesh",null);fe(this,"faceres",null);fe(this,"ssrnetgender",null);fe(this,"handpose",null);fe(this,"handskeleton",null);fe(this,"handtrack",null);fe(this,"liveness",null);fe(this,"movenet",null);fe(this,"nanodet",null);fe(this,"posenet",null);fe(this,"segmentation",null);fe(this,"antispoof",null)}},zb=()=>{let e=0,t=0;for(let r of Object.values(Ga))e+=r.manifest,t+=r.weights;return{sizeManifest:e,sizeWeights:t,numModels:Object.values(Ga).length}};function L1(e){for(let t of Object.keys(e.models))e.models[t]=null}async function Ob(e){var t,r,n,a,s,i,o,l,u,p,h,d,c,f,m,g,y,A,x,b,w,I,C,E,R,F,$,S,O,z,j;he.initial&&L1(e),e.config.hand.enabled&&(!e.models.handpose&&((r=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await mb(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((a=(n=e.config.hand.detector)==null?void 0:n.modelPath)==null?void 0:a.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await mb(e.config))),e.config.body.enabled&&!e.models.blazepose&&((i=(s=e.config.body)==null?void 0:s.modelPath)==null?void 0:i.includes("blazepose"))&&(e.models.blazepose=mN(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=fN(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(o=e.config.body)==null?void 0:o.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=vN(e.config)),e.config.body.enabled&&!e.models.movenet&&((p=(u=e.config.body)==null?void 0:u.modelPath)==null?void 0:p.includes("movenet"))&&(e.models.movenet=EE(e.config)),e.config.body.enabled&&!e.models.posenet&&((d=(h=e.config.body)==null?void 0:h.modelPath)==null?void 0:d.includes("posenet"))&&(e.models.posenet=BE(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=sN(e.config)),e.config.face.enabled&&((c=e.config.face.antispoof)==null?void 0:c.enabled)&&!e.models.antispoof&&(e.models.antispoof=HT(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=kE(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=HN(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=SN(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!((A=e.config.face.attention)!=null&&A.enabled)&&!e.models.faceiris&&(e.models.faceiris=PN(e.config)),e.config.face.enabled&&((x=e.config.face.mesh)==null?void 0:x.enabled)&&!e.models.facemesh&&(e.models.facemesh=WN(e.config)),e.config.face.enabled&&((b=e.config.face.gear)==null?void 0:b.enabled)&&!e.models.gear&&(e.models.gear=FT(e.config)),e.config.face.enabled&&((w=e.config.face.ssrnet)==null?void 0:w.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=DT(e.config)),e.config.face.enabled&&((I=e.config.face.ssrnet)==null?void 0:I.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=VT(e.config)),e.config.face.enabled&&((C=e.config.face.mobilefacenet)==null?void 0:C.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=RN(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((R=(E=e.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handtrack"))&&(e.models.handtrack=AE(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&(($=(F=e.config.hand.detector)==null?void 0:F.modelPath)==null?void 0:$.includes("handtrack"))&&(e.models.handskeleton=xE(e.config)),e.config.object.enabled&&!e.models.centernet&&((O=(S=e.config.object)==null?void 0:S.modelPath)==null?void 0:O.includes("centernet"))&&(e.models.centernet=AN(e.config)),e.config.object.enabled&&!e.models.nanodet&&((j=(z=e.config.object)==null?void 0:z.modelPath)==null?void 0:j.includes("nanodet"))&&(e.models.nanodet=ME(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=Pb(e.config));for await(let K of Object.keys(e.models))e.models[K]&&typeof e.models[K]!="undefined"&&(e.models[K]=await e.models[K])}async function Db(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let r of Object.keys(e.models)){let n=e.models[r];if(!n)continue;let a=[],s=n==null?void 0:n.executor;if(s&&s.graph.nodes)for(let o of Object.values(s.graph.nodes)){let l=o.op.toLowerCase();a.includes(l)||a.push(l)}else!s&&e.config.debug&&se("model signature not determined:",r);let i=[];for(let o of a)!t.includes(o)&&!e.env.kernels.includes(o)&&!e.env.kernels.includes(o.replace("_",""))&&!e.env.kernels.includes(o.replace("native",""))&&!e.env.kernels.includes(o.replace("v2",""))&&i.push(o);e.config.debug&&i.length>0&&se("model validation failed:",r,i)}}var Rt={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function xAe(){let e=Rt.gl;!e||(Rt.extensions=e.getSupportedExtensions())}async function UE(e){var t;if(e.config.backend==="humangl"&&(Rt.name in Xt().registry&&(!Rt.gl||!Rt.gl.getParameter(Rt.gl.VERSION))&&(se("error: humangl backend invalid context"),L1(e)),!i3(Rt.name))){try{Rt.canvas=await Yr(100,100)}catch(n){se("error: cannot create canvas:",n);return}try{if(Rt.gl=(t=Rt.canvas)==null?void 0:t.getContext("webgl2",Rt.webGLattr),!Rt.gl.getParameter(Rt.gl.VERSION).includes("2.0")){se("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}Rt.canvas&&(Rt.canvas.addEventListener("webglcontextlost",async a=>{throw se("error: humangl:",a.type),se("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),Rt.canvas.addEventListener("webglcontextrestored",a=>{se("error: humangl context restored:",a)}),Rt.canvas.addEventListener("webglcontextcreationerror",a=>{se("error: humangl context create:",a)}))}catch(n){se("error: cannot get WebGL context:",n);return}try{jm(2,Rt.gl)}catch(n){se("error: cannot set WebGL context:",n);return}try{let n=new Fu(Rt.gl);Ol(Rt.name,()=>new ic(n),Rt.priority)}catch(n){se("error: cannot register WebGL backend:",n);return}try{Oa("webgl").forEach(a=>{let s={...a,backendName:Rt.name};Jn(s)})}catch(n){se("error: cannot update WebGL backend registration:",n);return}let r=Bn().getGPGPUContext?Bn().getGPGPUContext().gl:null;if(r)se(`humangl webgl version:${r.getParameter(r.VERSION)} renderer:${r.getParameter(r.RENDERER)}`);else{se("error: no current gl context:",r,Rt.gl);return}try{Ia.set("WEBGL_VERSION",2)}catch(n){se("error: cannot set WebGL backend flags:",n);return}xAe(),se("backend registered:",Rt.name)}}function bAe(){if(!he.kernels.includes("mod")){let e={kernelName:"Mod",backendName:qr(),kernelFunc:t=>J(()=>ce(t.inputs.a,L(pe(t.inputs.a,t.inputs.b),t.inputs.b)))};Jn(e),he.kernels.push("mod")}if(!he.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:qr(),kernelFunc:t=>J(()=>Ph(t.inputs.a/t.inputs.b)*t.inputs.b+Td(t.inputs.a,t.inputs.b))};Jn(e),he.kernels.push("floormod")}}async function W1(e,t=!1){if(e.state="backend",t||he.initial||e.config.backend&&e.config.backend.length>0&&qr()!==e.config.backend){let r=oe();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&se("running inside web worker"),he.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&se("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),he.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&se(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),he.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")se("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let a=await navigator.gpu.requestAdapter();if(e.config.debug&&se("enumerated webgpu adapter:",a),!a)se("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="humangl";else{let s="requestAdapterInfo"in a?await a.requestAdapterInfo():void 0;se("webgpu adapter info:",s)}}e.config.backend==="humangl"&&await UE(e);let n=Object.keys(Xt().registryFactory);if(e.config.debug&&se("available backends:",n),n.includes(e.config.backend)||(se(`error: backend ${e.config.backend} not found in registry`),e.config.backend=he.node?"tensorflow":"webgl",e.config.debug&&se(`override: setting backend ${e.config.backend}`)),e.config.debug&&se("setting backend:",e.config.backend),e.config.backend==="wasm"){try{Y().set("CANVAS2D_WILL_READ_FREQUENTLY",!0)}catch(i){}if(e.config.debug&&se("wasm path:",e.config.wasmPath),typeof(Ue==null?void 0:Ue.setWasmPaths)!="undefined")await vx(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let a=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),s=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&se(`wasm execution: ${a?"SIMD":"no SIMD"} ${s?"multithreaded":"singlethreaded"}`),e.config.debug&&!a&&se("warning: wasm simd support is not enabled")}try{await s3(e.config.backend),await Id(),PT()}catch(a){return se("error: cannot set backend:",e.config.backend,a),!1}}if(qr()==="humangl"&&(Ia.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Ia.set("WEBGL_CPU_FORWARD",!0),Ia.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Ia.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(se("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Ia.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Bn().getGPGPUContext)){let n=await Bn().getGPGPUContext().gl;e.config.debug&&se(`gl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`)}qr(),n3(),await Id(),e.performance.initBackend=Math.trunc(oe()-r),e.config.backend=qr(),await he.updateBackend(),bAe()}return!0}function E1(e,t){for(let r of e){let n={kernelName:r,backendName:t.backend,kernelFunc:()=>{t.debug&&se("kernelFunc",r,t.backend)}};Jn(n)}he.kernels=Oa(qr()).map(r=>r.kernelName.toLowerCase())}var jb={};Ts(jb,{all:()=>Ub,body:()=>dp,canvas:()=>Gb,face:()=>up,gesture:()=>cp,hand:()=>pp,object:()=>hp,options:()=>zr,person:()=>Vb});var Un=e=>{if(!e)se("draw error: invalid canvas");else if(!e.getContext)se("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)se("draw error: cannot get canvas context");else return t}return null},iu=e=>Math.round(e*180/Math.PI),bs=(e,t)=>{if(!t.useDepth||typeof e=="undefined")return t.color;let r=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${r[0]}, ${r[1]}, ${r[2]}, ${t.alpha})`};function vs(e,t,r,n,a){e.fillStyle=bs(n,a),e.beginPath(),e.arc(t,r,a.pointSize,0,2*Math.PI),e.fill()}function qa(e,t,r,n,a,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){let i=(t+t+n)/2,o=(r+r+a)/2;e.ellipse(i,o,n/2,a/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,r),e.lineTo(t+n-s.roundRect,r),e.quadraticCurveTo(t+n,r,t+n,r+s.roundRect),e.lineTo(t+n,r+a-s.roundRect),e.quadraticCurveTo(t+n,r+a,t+n-s.roundRect,r+a),e.lineTo(t+s.roundRect,r+a),e.quadraticCurveTo(t,r+a,t,r+a-s.roundRect),e.lineTo(t,r+s.roundRect),e.quadraticCurveTo(t,r,t+s.roundRect,r),e.closePath();e.stroke()}function Lb(e,t,r){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let n of t)e.strokeStyle=bs(n[2]||0,r),e.lineTo(Math.trunc(n[0]),Math.trunc(n[1]));e.stroke(),r.fillPolygons&&(e.closePath(),e.fill())}}function HE(e,t,r){if(!(t.length<2)){if(e.lineWidth=r.lineWidth,!r.useCurves||t.length<=2){Lb(e,t,r);return}e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){let a=(t[n][0]+t[n+1][0])/2,s=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],a,s)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),r.fillPolygons&&(e.closePath(),e.fill())}}function Bb(e,t,r,n=5){let a,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(r[0],r[1]),a=Math.atan2(r[1]-t[1],r[0]-t[0]),s=n*Math.cos(a)+r[0],i=n*Math.sin(a)+r[1],e.moveTo(s,i),a+=1/3*(2*Math.PI),s=n*Math.cos(a)+r[0],i=n*Math.sin(a)+r[1],e.lineTo(s,i),a+=1/3*(2*Math.PI),s=n*Math.cos(a)+r[0],i=n*Math.sin(a)+r[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}var zr={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1};var pt;function wAe(e,t){if(pt.drawLabels){let r=[];if(r.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&r.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&r.push(`age: ${e.age||""}`),e.iris&&r.push(`distance: ${e.iris}`),e.real&&r.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&r.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){let n=e.emotion.map(a=>`${Math.trunc(100*a.score)}% ${a.emotion}`);n.length>3&&(n.length=3),r.push(n.join(" "))}e.rotation&&e.rotation.angle&&e.rotation.gaze&&(e.rotation.angle.roll&&r.push(`roll: ${iu(e.rotation.angle.roll)}\xB0 yaw:${iu(e.rotation.angle.yaw)}\xB0 pitch:${iu(e.rotation.angle.pitch)}\xB0`),e.rotation.gaze.bearing&&r.push(`gaze: ${iu(e.rotation.gaze.bearing)}\xB0`)),r.length===0&&r.push("face"),t.fillStyle=pt.color;for(let n=r.length-1;n>=0;n--){let a=Math.max(e.box[0],0),s=n*pt.lineHeight+e.box[1];pt.shadowColor&&pt.shadowColor!==""&&(t.fillStyle=pt.shadowColor,t.fillText(r[n],a+5,s+16)),t.fillStyle=pt.labelColor,t.fillText(r[n],a+4,s+15)}}}function kAe(e,t){if(e.annotations&&e.annotations.leftEyeIris&&e.annotations.leftEyeIris[0]){t.strokeStyle=pt.useDepth?"rgba(255, 200, 255, 0.3)":pt.color,t.beginPath();let r=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,n=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],r,n,0,0,2*Math.PI),t.stroke(),pt.fillPolygons&&(t.fillStyle=pt.useDepth?"rgba(255, 255, 200, 0.3)":pt.color,t.fill())}if(e.annotations&&e.annotations.rightEyeIris&&e.annotations.rightEyeIris[0]){t.strokeStyle=pt.useDepth?"rgba(255, 200, 255, 0.3)":pt.color,t.beginPath();let r=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,n=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],r,n,0,0,2*Math.PI),t.stroke(),pt.fillPolygons&&(t.fillStyle=pt.useDepth?"rgba(255, 255, 200, 0.3)":pt.color,t.fill())}}function IAe(e,t){var r;if(pt.drawGaze&&((r=e.rotation)==null?void 0:r.angle)&&typeof Path2D!="undefined"){t.strokeStyle="pink";let n=e.box[0]+e.box[2]/2-e.box[3]*iu(e.rotation.angle.yaw)/90,a=e.box[1]+e.box[3]/2+e.box[2]*iu(e.rotation.angle.pitch)/90,s=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${n} ${e.box[1]},
        ${n} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),i=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${a},
        ${e.box[0]+e.box[2]} ${a},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(i),t.stroke(s)}}function SAe(e,t){var r,n,a,s;if(pt.drawGaze&&((n=(r=e.rotation)==null?void 0:r.gaze)==null?void 0:n.strength)&&((s=(a=e.rotation)==null?void 0:a.gaze)==null?void 0:s.bearing)&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";let i=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];Bb(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[i[0],i[1]],4);let o=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];Bb(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[o[0],o[1]],4)}}function CAe(e,t){if(pt.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let r=0;r<Zl.length/3;r++){let n=[Zl[r*3+0],Zl[r*3+1],Zl[r*3+2]].map(a=>e.mesh[a]);Lb(t,n,pt)}kAe(e,t)}}function TAe(e,t){if(pt.drawPoints&&e.mesh.length>=468)for(let r=0;r<e.mesh.length;r++)vs(t,e.mesh[r][0],e.mesh[r][1],e.mesh[r][2],pt),pt.drawAttention&&(Ac.includes(r)&&vs(t,e.mesh[r][0],e.mesh[r][1],e.mesh[r][2]+127,pt),Ql.includes(r)&&vs(t,e.mesh[r][0],e.mesh[r][1],e.mesh[r][2]-127,pt),eu.includes(r)&&vs(t,e.mesh[r][0],e.mesh[r][1],e.mesh[r][2]-127,pt))}function NAe(e,t){pt.drawBoxes&&qa(t,e.box[0],e.box[1],e.box[2],e.box[3],pt)}async function up(e,t,r){if(pt=jt(zr,r),!t||!e)return;let n=Un(e);if(!!n){n.font=pt.font,n.strokeStyle=pt.color,n.fillStyle=pt.color;for(let a of t)NAe(a,n),wAe(a,n),a.mesh&&a.mesh.length>0&&(TAe(a,n),CAe(a,n),IAe(a,n),SAe(a,n))}}async function dp(e,t,r){var s;let n=jt(zr,r);if(!t||!e)return;let a=Un(e);if(!!a){a.lineJoin="round";for(let i=0;i<t.length;i++){if(a.strokeStyle=n.color,a.fillStyle=n.color,a.lineWidth=n.lineWidth,a.font=n.font,n.drawBoxes&&t[i].box&&((s=t[i].box)==null?void 0:s.length)===4&&(qa(a,t[i].box[0],t[i].box[1],t[i].box[2],t[i].box[3],n),n.drawLabels&&(n.shadowColor&&n.shadowColor!==""&&(a.fillStyle=n.shadowColor,a.fillText(`body ${100*t[i].score}%`,t[i].box[0]+3,1+t[i].box[1]+n.lineHeight,t[i].box[2])),a.fillStyle=n.labelColor,a.fillText(`body ${100*t[i].score}%`,t[i].box[0]+2,0+t[i].box[1]+n.lineHeight,t[i].box[2]))),n.drawPoints&&t[i].keypoints)for(let o=0;o<t[i].keypoints.length;o++)!t[i].keypoints[o].score||t[i].keypoints[o].score===0||(a.fillStyle=bs(t[i].keypoints[o].position[2],n),vs(a,t[i].keypoints[o].position[0],t[i].keypoints[o].position[1],0,n));if(n.drawLabels&&t[i].keypoints){a.font=n.font;for(let o of t[i].keypoints)!o.score||o.score===0||(a.fillStyle=bs(o.position[2],n),a.fillText(`${o.part} ${Math.trunc(100*o.score)}%`,o.position[0]+4,o.position[1]+4))}if(n.drawPolygons&&t[i].keypoints&&t[i].annotations)for(let o of Object.values(t[i].annotations))for(let l of o)HE(a,l,n)}}}async function pp(e,t,r){let n=jt(zr,r);if(!t||!e)return;let a=Un(e);if(!!a){a.lineJoin="round",a.font=n.font;for(let s of t){if(n.drawBoxes&&(a.strokeStyle=n.color,a.fillStyle=n.color,qa(a,s.box[0],s.box[1],s.box[2],s.box[3],n),n.drawLabels&&(n.shadowColor&&n.shadowColor!==""&&(a.fillStyle=n.shadowColor,a.fillText(`hand:${Math.trunc(100*s.score)}%`,s.box[0]+3,1+s.box[1]+n.lineHeight,s.box[2])),a.fillStyle=n.labelColor,a.fillText(`hand:${Math.trunc(100*s.score)}%`,s.box[0]+2,0+s.box[1]+n.lineHeight,s.box[2])),a.stroke()),n.drawPoints&&s.keypoints&&s.keypoints.length>0)for(let i of s.keypoints)a.fillStyle=bs(i[2],n),vs(a,i[0],i[1],0,n);if(n.drawLabels&&s.annotations){let i=(o,l)=>{if(!o||o.length===0||!o[0])return;let u=o[o.length-1][2]||-256;a.fillStyle=bs(u,n),a.fillText(l,o[o.length-1][0]+4,o[o.length-1][1]+4)};a.font=n.font,i(s.annotations.index,"index"),i(s.annotations.middle,"middle"),i(s.annotations.ring,"ring"),i(s.annotations.pinky,"pinky"),i(s.annotations.thumb,"thumb"),i(s.annotations.palm,"palm")}if(n.drawPolygons&&s.annotations){let i=o=>{if(!(!o||o.length===0||!o[0]))for(let l=0;l<o.length;l++){a.beginPath();let u=o[l][2]||0;a.strokeStyle=bs(l*u,n),a.moveTo(o[l>0?l-1:0][0],o[l>0?l-1:0][1]),a.lineTo(o[l][0],o[l][1]),a.stroke()}};a.lineWidth=n.lineWidth,i(s.annotations.index),i(s.annotations.middle),i(s.annotations.ring),i(s.annotations.pinky),i(s.annotations.thumb)}}}}async function hp(e,t,r){let n=jt(zr,r);if(!t||!e)return;let a=Un(e);if(!!a){a.lineJoin="round",a.font=n.font;for(let s of t)if(n.drawBoxes){if(a.strokeStyle=n.color,a.fillStyle=n.color,qa(a,s.box[0],s.box[1],s.box[2],s.box[3],n),n.drawLabels){let i=`${s.label} ${Math.round(100*s.score)}%`;n.shadowColor&&n.shadowColor!==""&&(a.fillStyle=n.shadowColor,a.fillText(i,s.box[0]+3,1+s.box[1]+n.lineHeight,s.box[2])),a.fillStyle=n.labelColor,a.fillText(i,s.box[0]+2,0+s.box[1]+n.lineHeight,s.box[2])}a.stroke()}}}async function cp(e,t,r){let n=jt(zr,r);if(!(!t||!e)&&n.drawGestures){let a=Un(e);if(!a)return;a.font=n.font,a.fillStyle=n.color;let s=1;for(let i=0;i<t.length;i++){let o=[],l=[];if([o,l]=Object.entries(t[i]),l.length>1&&l[1].length>0){let u=o[1]>0?`#${o[1]}`:"",p=`${o[0]} ${u}: ${l[1]}`;n.shadowColor&&n.shadowColor!==""&&(a.fillStyle=n.shadowColor,a.fillText(p,8,2+s*n.lineHeight)),a.fillStyle=n.labelColor,a.fillText(p,6,0+s*n.lineHeight),s+=1}}}}var Wb=0;async function Vb(e,t,r){let n=jt(zr,r);if(!t||!e)return;let a=Un(e);if(!!a){a.lineJoin="round",a.font=n.font;for(let s=0;s<t.length;s++)if(n.drawBoxes){if(a.strokeStyle=n.color,a.fillStyle=n.color,qa(a,t[s].box[0],t[s].box[1],t[s].box[2],t[s].box[3],n),n.drawLabels){let i=`person #${s}`;n.shadowColor&&n.shadowColor!==""&&(a.fillStyle=n.shadowColor,a.fillText(i,t[s].box[0]+3,1+t[s].box[1]+n.lineHeight,t[s].box[2])),a.fillStyle=n.labelColor,a.fillText(i,t[s].box[0]+2,0+t[s].box[1]+n.lineHeight,t[s].box[2])}a.stroke()}}}async function Gb(e,t){if(!e||!t)return;let r=Un(t);!r||r.drawImage(e,0,0)}async function Ub(e,t,r){if(!t||!t.performance||!t||!e)return null;let n=oe(),a=jt(zr,r),s=Promise.all([up(e,t.face,a),dp(e,t.body,a),pp(e,t.hand,a),hp(e,t.object,a),cp(e,t.gesture,a)]);return Wb=he.perfadd?Wb+Math.round(oe()-n):Math.round(oe()-n),t.performance.draw=Wb,s}var fp=.1,Hb=.5;function EAe(e,t,r){let n=!1,a=r.length-1;for(let s=0;s<r.length;a=s++)r[s].y>t!=r[a].y>t&&e<(r[a].x-r[s].x)*(t-r[s].y)/(r[a].y-r[s].y)+r[s].x&&(n=!n);return n}async function qE(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,r=e.tensor.shape[1]||0,n=await e.tensor.buffer(),a=[];for(let i of sa.silhouette)a.push({x:(e.mesh[i][0]-e.box[0])/e.box[2],y:(e.mesh[i][1]-e.box[1])/e.box[3]});fp&&fp>0&&(a=a.map(i=>({x:i.x>.5?i.x+fp:i.x-fp,y:i.y>.5?i.y+fp:i.y-fp})));for(let i=0;i<t;i++)for(let o=0;o<r;o++)EAe(i/t,o/t,a)||(n.set(Hb*n.get(0,o,i,0),0,o,i,0),n.set(Hb*n.get(0,o,i,1),0,o,i,1),n.set(Hb*n.get(0,o,i,2),0,o,i,2));let s=n.toTensor();return ee(n),s}var $Ae=e=>{let t=(h,d)=>Math.atan2(h[1]-d[1],h[0]-d[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let r=[0,-.1],n=1,a=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),s=a?e.mesh[473]:e.mesh[468],i=a?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],o=a?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(i[0]-s[0])/o[0]-r[0],n*(s[1]-i[1])/o[1]-r[1]],u=Math.sqrt(l[0]*l[0]+l[1]*l[1]);return u=Math.min(u,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:u}},KE=(e,t)=>{let r=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},n=(m,g)=>{let y=m[0]-g[0],A=m[1]-g[1],x=m[2]-g[2];return[y,A,x]},a=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],A=m[2]*g[0]-m[0]*g[2],x=m[0]*g[1]-m[1]*g[0];return[y,A,x]},s=m=>{let[g,y,A,x,b,w,I,C,E]=m,R,F,$;return x<1?x>-1?($=Math.asin(x),F=Math.atan2(-I,g),R=Math.atan2(-w,b)):($=-Math.PI/2,F=-Math.atan2(C,E),R=0):($=Math.PI/2,F=Math.atan2(C,E),R=0),isNaN(R)&&(R=0),isNaN(F)&&(F=0),isNaN($)&&($=0),{pitch:2*-R,yaw:2*-F,roll:2*-$}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let o=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[i[10],i[152],i[234],i[454]].map(m=>[m[0]*t[0]/o,m[1]*t[1]/o,m[2]]),u=r(n(l[1],l[0])),p=r(n(l[3],l[2])),h=r(a(p,u));p=a(u,h);let d=[p[0],p[1],p[2],u[0],u[1],u[2],h[0],h[1],h[2]],c=s(d),f=i.length===478?$Ae(e):{bearing:0,strength:0};return{angle:c,matrix:d,gaze:f}};var qb=async(e,t)=>{var c,f,m,g,y,A,x,b,w,I,C,E,R,F,$,S,O,z,j,K,D,Z;let r=oe(),n,a,s,i,o,l,u,p,h=[];e.state="run:face";let d=await BN(t,e.config);if(e.performance.face=he.perfadd?(e.performance.face||0)+Math.trunc(oe()-r):Math.trunc(oe()-r),!t.shape||t.shape.length!==4)return[];if(!d)return[];for(let V=0;V<d.length;V++){if(e.analyze("Get Face"),!d[V].tensor||d[V].tensor.isDisposedInternal){se("Face object is disposed:",d[V].tensor);continue}if((c=e.config.face.detector)!=null&&c.mask){let ae=await qE(d[V]);ee(d[V].tensor),d[V].tensor=ae}let re=d[V].mesh&&d[V].mesh.length>200?KE(d[V],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?i=(f=e.config.face.emotion)!=null&&f.enabled?eb(d[V].tensor||ut([]),e.config,V,d.length):[]:(e.state="run:emotion",r=oe(),i=(m=e.config.face.emotion)!=null&&m.enabled?await eb(d[V].tensor||ut([]),e.config,V,d.length):[],e.performance.emotion=he.perfadd?(e.performance.emotion||0)+Math.trunc(oe()-r):Math.trunc(oe()-r)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=(g=e.config.face.antispoof)!=null&&g.enabled?Px(d[V].tensor||ut([]),e.config,V,d.length):0:(e.state="run:antispoof",r=oe(),l=(y=e.config.face.antispoof)!=null&&y.enabled?await Px(d[V].tensor||ut([]),e.config,V,d.length):0,e.performance.antispoof=he.perfadd?(e.performance.antispoof||0)+Math.trunc(oe()-r):Math.trunc(oe()-r)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?u=(A=e.config.face.liveness)!=null&&A.enabled?bb(d[V].tensor||ut([]),e.config,V,d.length):0:(e.state="run:liveness",r=oe(),u=(x=e.config.face.liveness)!=null&&x.enabled?await bb(d[V].tensor||ut([]),e.config,V,d.length):0,e.performance.liveness=he.perfadd?(e.performance.antispoof||0)+Math.trunc(oe()-r):Math.trunc(oe()-r)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?a=(b=e.config.face.gear)!=null&&b.enabled?Nx(d[V].tensor||ut([]),e.config,V,d.length):null:(e.state="run:gear",r=oe(),a=(w=e.config.face.gear)!=null&&w.enabled?await Nx(d[V].tensor||ut([]),e.config,V,d.length):null,e.performance.gear=Math.trunc(oe()-r)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(n=(I=e.config.face.ssrnet)!=null&&I.enabled?Rx(d[V].tensor||ut([]),e.config,V,d.length):null,s=(C=e.config.face.ssrnet)!=null&&C.enabled?Fx(d[V].tensor||ut([]),e.config,V,d.length):null):(e.state="run:ssrnet",r=oe(),n=(E=e.config.face.ssrnet)!=null&&E.enabled?await Rx(d[V].tensor||ut([]),e.config,V,d.length):null,s=(R=e.config.face.ssrnet)!=null&&R.enabled?await Fx(d[V].tensor||ut([]),e.config,V,d.length):null,e.performance.ssrnet=Math.trunc(oe()-r)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?o=(F=e.config.face.mobilefacenet)!=null&&F.enabled?rb(d[V].tensor||ut([]),e.config,V,d.length):null:(e.state="run:mobilefacenet",r=oe(),o=($=e.config.face.mobilefacenet)!=null&&$.enabled?await rb(d[V].tensor||ut([]),e.config,V,d.length):null,e.performance.mobilefacenet=Math.trunc(oe()-r)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?p=(S=e.config.face.description)!=null&&S.enabled?lb(d[V].tensor||ut([]),e.config,V,d.length):null:(e.state="run:description",r=oe(),p=(O=e.config.face.description)!=null&&O.enabled?await lb(d[V].tensor||ut([]),e.config,V,d.length):null,e.performance.description=he.perfadd?(e.performance.description||0)+Math.trunc(oe()-r):Math.trunc(oe()-r)),e.analyze("End Description:"),e.config.async&&([n,s,i,o,p,a,l,u]=await Promise.all([n,s,i,o,p,a,l,u])),e.analyze("Finish Face:"),((z=e.config.face.ssrnet)==null?void 0:z.enabled)&&n&&s&&(p={...p,age:n.age,gender:s.gender,genderScore:s.genderScore}),((j=e.config.face.gear)==null?void 0:j.enabled)&&a&&(p={...p,age:a.age,gender:a.gender,genderScore:a.genderScore,race:a.race}),((K=e.config.face.mobilefacenet)==null?void 0:K.enabled)&&o&&(p.descriptor=o),(D=e.config.face.iris)!=null&&D.enabled;let Q=d[V].annotations&&d[V].annotations.leftEyeIris&&d[V].annotations.leftEyeIris[0]&&d[V].annotations.rightEyeIris&&d[V].annotations.rightEyeIris[0]&&d[V].annotations.leftEyeIris.length>0&&d[V].annotations.rightEyeIris.length>0&&d[V].annotations.leftEyeIris[0]!==null&&d[V].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(d[V].annotations.leftEyeIris[3][0]-d[V].annotations.leftEyeIris[1][0]),Math.abs(d[V].annotations.rightEyeIris[4][1]-d[V].annotations.rightEyeIris[2][1]))/t.shape[2]:0,ie=(Z=e.config.face.detector)!=null&&Z.return?nt(d[V].tensor):null;ee(d[V].tensor),d[V].tensor&&delete d[V].tensor;let X={...d[V],id:V};p!=null&&p.age&&(X.age=p.age),p!=null&&p.gender&&(X.gender=p.gender),p!=null&&p.genderScore&&(X.genderScore=p==null?void 0:p.genderScore),p!=null&&p.descriptor&&(X.embedding=p==null?void 0:p.descriptor),p!=null&&p.race&&(X.race=p==null?void 0:p.race),i&&(X.emotion=i),l&&(X.real=l),u&&(X.live=u),Q&&Q!==0&&(X.iris=Math.trunc(500/Q/11.7)/100),re&&(X.rotation=re),ie&&(X.tensor=ie),h.push(X),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),h};var XE=e=>{if(!e)return[];let t=[];for(let r=0;r<e.length;r++){let n=e[r].keypoints.find(l=>l.part==="leftWrist"),a=e[r].keypoints.find(l=>l.part==="rightWrist"),s=e[r].keypoints.find(l=>l.part==="nose");s&&n&&a&&n.position[1]<s.position[1]&&a.position[1]<s.position[1]?t.push({body:r,gesture:"i give up"}):s&&n&&n.position[1]<s.position[1]?t.push({body:r,gesture:"raise left hand"}):s&&a&&a.position[1]<s.position[1]&&t.push({body:r,gesture:"raise right hand"});let i=e[r].keypoints.find(l=>l.part==="leftShoulder"),o=e[r].keypoints.find(l=>l.part==="rightShoulder");i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:r,gesture:`leaning ${i.position[1]>o.position[1]?"left":"right"}`})}return t},ZE=e=>{if(!e)return[];let t=[];for(let r=0;r<e.length;r++)if(e[r].mesh&&e[r].mesh.length>450){let n=(e[r].mesh[33][2]||0)-(e[r].mesh[263][2]||0),a=e[r].mesh[33][0]-e[r].mesh[263][0];Math.abs(n/a)<=.15?t.push({face:r,gesture:"facing center"}):t.push({face:r,gesture:`facing ${n<0?"left":"right"}`}),Math.abs(e[r].mesh[374][1]-e[r].mesh[386][1])/Math.abs(e[r].mesh[443][1]-e[r].mesh[450][1])<.2&&t.push({face:r,gesture:"blink left eye"}),Math.abs(e[r].mesh[145][1]-e[r].mesh[159][1])/Math.abs(e[r].mesh[223][1]-e[r].mesh[230][1])<.2&&t.push({face:r,gesture:"blink right eye"});let o=Math.min(100,500*Math.abs(e[r].mesh[13][1]-e[r].mesh[14][1])/Math.abs(e[r].mesh[10][1]-e[r].mesh[152][1]));o>10&&t.push({face:r,gesture:`mouth ${Math.trunc(o)}% open`});let l=e[r].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:r,gesture:`head ${l<0?"up":"down"}`})}return t},YE=e=>{if(!e)return[];let t=[];for(let r=0;r<e.length;r++){if(!e[r].annotations||!e[r].annotations.leftEyeIris||!e[r].annotations.leftEyeIris[0]||!e[r].annotations.rightEyeIris||!e[r].annotations.rightEyeIris[0])continue;let n=e[r].annotations.leftEyeIris[3][0]-e[r].annotations.leftEyeIris[1][0],a=e[r].annotations.leftEyeIris[4][1]-e[r].annotations.leftEyeIris[2][1],s=Math.abs(n*a),i=e[r].annotations.rightEyeIris[3][0]-e[r].annotations.rightEyeIris[1][0],o=e[r].annotations.rightEyeIris[4][1]-e[r].annotations.rightEyeIris[2][1],l=Math.abs(i*o),u=!1;Math.abs(s-l)/Math.max(s,l)<.25&&(u=!0,t.push({iris:r,gesture:"facing center"}));let h=Math.abs(e[r].mesh[263][0]-e[r].annotations.leftEyeIris[0][0])/e[r].box[2],d=Math.abs(e[r].mesh[33][0]-e[r].annotations.rightEyeIris[0][0])/e[r].box[2];(h>.06||d>.06)&&(u=!1),h>d?h>.05&&t.push({iris:r,gesture:"looking right"}):d>.05&&t.push({iris:r,gesture:"looking left"});let c=Math.abs(e[r].mesh[145][1]-e[r].annotations.rightEyeIris[0][1])/e[r].box[3],f=Math.abs(e[r].mesh[374][1]-e[r].annotations.leftEyeIris[0][1])/e[r].box[3];(f<.01||c<.01||f>.022||c>.022)&&(u=!1),(f<.01||c<.01)&&t.push({iris:r,gesture:"looking down"}),(f>.022||c>.022)&&t.push({iris:r,gesture:"looking up"}),u&&t.push({iris:r,gesture:"looking center"})}return t},JE=e=>{if(!e)return[];let t=[];for(let r=0;r<e.length;r++){let n=[];if(e[r].annotations)for(let[a,s]of Object.entries(e[r].annotations))a!=="palmBase"&&Array.isArray(s)&&s[0]&&n.push({name:a.toLowerCase(),position:s[0]});if(n&&n.length>0){let a=n.reduce((i,o)=>(i.position[2]||0)<(o.position[2]||0)?i:o);t.push({hand:r,gesture:`${a.name} forward`});let s=n.reduce((i,o)=>i.position[1]<o.position[1]?i:o);t.push({hand:r,gesture:`${s.name} up`})}if(e[r].keypoints){let a=pE(e[r].keypoints);for(let s of a)t.push({hand:r,gesture:s.name})}}return t};var Ne={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},Kb=0;function QE(e,t){var i,o,l,u,p,h,d,c,f,m,g,y,A,x,b,w,I,C,E,R,F,$,S,O,z,j,K;let r=oe();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let n=Date.now()-e.timestamp,a=n<1e3?8-Math.log(n+1):1;if(e.canvas&&(Ne.canvas=e.canvas),e.error&&(Ne.error=e.error),!Ne.body||e.body.length!==Ne.body.length)Ne.body=JSON.parse(JSON.stringify(e.body));else for(let D=0;D<e.body.length;D++){let Z=e.body[D].box.map((X,ae)=>((a-1)*Ne.body[D].box[ae]+X)/a),V=e.body[D].boxRaw.map((X,ae)=>((a-1)*Ne.body[D].boxRaw[ae]+X)/a),re=e.body[D].keypoints.map((X,ae)=>{var de,be,ve,Ee,$e,De,Ve,Xe,ot;return{score:X.score,part:X.part,position:[Ne.body[D].keypoints[ae]?((a-1)*(Ne.body[D].keypoints[ae].position[0]||0)+(X.position[0]||0))/a:X.position[0],Ne.body[D].keypoints[ae]?((a-1)*(Ne.body[D].keypoints[ae].position[1]||0)+(X.position[1]||0))/a:X.position[1],Ne.body[D].keypoints[ae]?((a-1)*(Ne.body[D].keypoints[ae].position[2]||0)+(X.position[2]||0))/a:X.position[2]],positionRaw:[Ne.body[D].keypoints[ae]?((a-1)*(Ne.body[D].keypoints[ae].positionRaw[0]||0)+(X.positionRaw[0]||0))/a:X.positionRaw[0],Ne.body[D].keypoints[ae]?((a-1)*(Ne.body[D].keypoints[ae].positionRaw[1]||0)+(X.positionRaw[1]||0))/a:X.positionRaw[1],Ne.body[D].keypoints[ae]?((a-1)*(Ne.body[D].keypoints[ae].positionRaw[2]||0)+(X.positionRaw[2]||0))/a:X.positionRaw[2]],distance:[Ne.body[D].keypoints[ae]?((a-1)*(((de=Ne.body[D].keypoints[ae].distance)==null?void 0:de[0])||0)+(((be=X.distance)==null?void 0:be[0])||0))/a:(ve=X.distance)==null?void 0:ve[0],Ne.body[D].keypoints[ae]?((a-1)*(((Ee=Ne.body[D].keypoints[ae].distance)==null?void 0:Ee[1])||0)+((($e=X.distance)==null?void 0:$e[1])||0))/a:(De=X.distance)==null?void 0:De[1],Ne.body[D].keypoints[ae]?((a-1)*(((Ve=Ne.body[D].keypoints[ae].distance)==null?void 0:Ve[2])||0)+(((Xe=X.distance)==null?void 0:Xe[2])||0))/a:(ot=X.distance)==null?void 0:ot[2]]}}),Q={},ie={connected:{}};(o=(i=t.body)==null?void 0:i.modelPath)!=null&&o.includes("efficientpose")?ie=A1:(u=(l=t.body)==null?void 0:l.modelPath)!=null&&u.includes("blazepose")?ie=c1:(h=(p=t.body)==null?void 0:p.modelPath)!=null&&h.includes("movenet")&&(ie=bc);for(let[X,ae]of Object.entries(ie.connected)){let de=[];for(let be=0;be<ae.length-1;be++){let ve=re.find($e=>$e.part===ae[be]),Ee=re.find($e=>$e.part===ae[be+1]);ve&&Ee&&de.push([ve.position,Ee.position])}Q[X]=de}Ne.body[D]={...e.body[D],box:Z,boxRaw:V,keypoints:re,annotations:Q}}if(!Ne.hand||e.hand.length!==Ne.hand.length)Ne.hand=JSON.parse(JSON.stringify(e.hand));else for(let D=0;D<e.hand.length;D++){let Z=e.hand[D].box.map((ie,X)=>((a-1)*Ne.hand[D].box[X]+ie)/a),V=e.hand[D].boxRaw.map((ie,X)=>((a-1)*Ne.hand[D].boxRaw[X]+ie)/a);Ne.hand[D].keypoints.length!==e.hand[D].keypoints.length&&(Ne.hand[D].keypoints=e.hand[D].keypoints);let re=e.hand[D].keypoints&&e.hand[D].keypoints.length>0?e.hand[D].keypoints.map((ie,X)=>ie.map((ae,de)=>((a-1)*(Ne.hand[D].keypoints[X][de]||1)+(ae||0))/a)):[],Q={};if(Object.keys(Ne.hand[D].annotations).length!==Object.keys(e.hand[D].annotations).length)Ne.hand[D].annotations=e.hand[D].annotations,Q=Ne.hand[D].annotations;else if(e.hand[D].annotations)for(let ie of Object.keys(e.hand[D].annotations))Q[ie]=e.hand[D].annotations[ie]&&e.hand[D].annotations[ie][0]?e.hand[D].annotations[ie].map((X,ae)=>X.map((de,be)=>((a-1)*Ne.hand[D].annotations[ie][ae][be]+de)/a)):null;Ne.hand[D]={...e.hand[D],box:Z,boxRaw:V,keypoints:re,annotations:Q}}if(!Ne.face||e.face.length!==Ne.face.length)Ne.face=JSON.parse(JSON.stringify(e.face));else for(let D=0;D<e.face.length;D++){let Z=e.face[D].box.map((re,Q)=>((a-1)*Ne.face[D].box[Q]+re)/a),V=e.face[D].boxRaw.map((re,Q)=>((a-1)*Ne.face[D].boxRaw[Q]+re)/a);if(e.face[D].rotation){let re={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};re.matrix=(d=e.face[D].rotation)==null?void 0:d.matrix,re.angle={roll:((a-1)*(((f=(c=Ne.face[D].rotation)==null?void 0:c.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[D].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/a,yaw:((a-1)*(((A=(y=Ne.face[D].rotation)==null?void 0:y.angle)==null?void 0:A.yaw)||0)+(((b=(x=e.face[D].rotation)==null?void 0:x.angle)==null?void 0:b.yaw)||0))/a,pitch:((a-1)*(((I=(w=Ne.face[D].rotation)==null?void 0:w.angle)==null?void 0:I.pitch)||0)+(((E=(C=e.face[D].rotation)==null?void 0:C.angle)==null?void 0:E.pitch)||0))/a},re.gaze={bearing:((a-1)*(((F=(R=Ne.face[D].rotation)==null?void 0:R.gaze)==null?void 0:F.bearing)||0)+(((S=($=e.face[D].rotation)==null?void 0:$.gaze)==null?void 0:S.bearing)||0))/a,strength:((a-1)*(((z=(O=Ne.face[D].rotation)==null?void 0:O.gaze)==null?void 0:z.strength)||0)+(((K=(j=e.face[D].rotation)==null?void 0:j.gaze)==null?void 0:K.strength)||0))/a},Ne.face[D]={...e.face[D],rotation:re,box:Z,boxRaw:V}}Ne.face[D]={...e.face[D],box:Z,boxRaw:V}}if(!Ne.object||e.object.length!==Ne.object.length)Ne.object=JSON.parse(JSON.stringify(e.object));else for(let D=0;D<e.object.length;D++){let Z=e.object[D].box.map((re,Q)=>((a-1)*Ne.object[D].box[Q]+re)/a),V=e.object[D].boxRaw.map((re,Q)=>((a-1)*Ne.object[D].boxRaw[Q]+re)/a);Ne.object[D]={...e.object[D],box:Z,boxRaw:V}}if(e.persons){let D=e.persons;if(!Ne.persons||D.length!==Ne.persons.length)Ne.persons=JSON.parse(JSON.stringify(D));else for(let Z=0;Z<D.length;Z++)Ne.persons[Z].box=D[Z].box.map((V,re)=>((a-1)*Ne.persons[Z].box[re]+V)/a)}e.gesture&&(Ne.gesture=e.gesture);let s=oe();return Kb=he.perfadd?Kb+Math.round(s-r):Math.round(s-r),e.performance&&(Ne.performance={...e.performance,interpolate:Kb}),Ne}var Yb={};Ts(Yb,{distance:()=>Ic,match:()=>Zb,similarity:()=>Xb});function Ic(e,t,r={order:2,multiplier:25}){let n=0;for(let a=0;a<e.length;a++){let s=!r.order||r.order===2?e[a]-t[a]:Math.abs(e[a]-t[a]);n+=!r.order||r.order===2?s*s:s**r.order}return(r.multiplier||20)*n}var eR=(e,t,r,n)=>{if(e===0)return 1;let a=t===2?Math.sqrt(e):e**(1/t),s=(1-a/100-r)/(n-r);return Math.max(Math.min(s,1),0)};function Xb(e,t,r={order:2,multiplier:25,min:.2,max:.8}){let n=Ic(e,t,r);return eR(n,r.order||2,r.min||0,r.max||1)}function Zb(e,t,r={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let n=Number.MAX_SAFE_INTEGER,a=-1;for(let i=0;i<t.length;i++){let o=Ic(e,t[i],r);if(o<n&&(n=o,a=i),n<(r.threshold||0))break}let s=eR(n,r.order||2,r.min||0,r.max||1);return{index:a,distance:n,similarity:s}}function tR(e,t,r,n,a){var o,l,u,p,h,d,c,f,m,g,y,A,x,b,w,I;let s=0,i=[];for(let C of e){let E={id:s++,face:C,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let z of t)C.box[0]>z.box[0]&&C.box[0]<z.box[0]+z.box[2]&&C.box[1]+C.box[3]>z.box[1]&&C.box[1]+C.box[3]<z.box[1]+z.box[3]&&(E.body=z);if(E.body)for(let z of r)z.box[0]+z.box[2]>E.body.box[0]&&z.box[0]+z.box[2]<E.body.box[0]+E.body.box[2]&&z.box[1]+z.box[3]>E.body.box[1]&&z.box[1]+z.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=z),z.box[0]<E.body.box[0]+E.body.box[2]&&z.box[0]>E.body.box[0]&&z.box[1]+z.box[3]>E.body.box[1]&&z.box[1]+z.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=z);for(let z of n)z.face!==void 0&&z.face===C.id?(o=E.gestures)==null||o.push(z):z.iris!==void 0&&z.iris===C.id?(l=E.gestures)==null||l.push(z):z.body!==void 0&&z.body===((u=E.body)==null?void 0:u.id)?(p=E.gestures)==null||p.push(z):z.hand!==void 0&&z.hand===((d=(h=E.hands)==null?void 0:h.left)==null?void 0:d.id)?(c=E.gestures)==null||c.push(z):z.hand!==void 0&&z.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(z));let R=[],F=[],$=z=>{z&&z.length===4&&(R.push(z[0],z[0]+z[2]),F.push(z[1],z[1]+z[3]))};$((y=E.face)==null?void 0:y.box),$((A=E.body)==null?void 0:A.box),$((b=(x=E.hands)==null?void 0:x.left)==null?void 0:b.box),$((I=(w=E.hands)==null?void 0:w.right)==null?void 0:I.box);let S=Math.min(...R),O=Math.min(...F);E.box=[S,O,Math.max(...R)-S,Math.max(...F)-O],a&&a[1]&&a[2]&&(E.boxRaw=[E.box[0]/a[2],E.box[1]/a[1],E.box[2]/a[2],E.box[3]/a[1]]),i.push(E)}return i}var V1=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,G1=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function OAe(e){let t=(a,s="application/octet-stream")=>fetch(`data:${s};base64,${a}`).then(i=>i.blob()),r,n;switch(e.config.warmup){case"face":r=await t(V1);break;case"body":case"full":r=await t(G1);break;default:r=null}if(r){let a=await createImageBitmap(r);n=await e.detect(a,e.config),a.close()}return n}async function DAe(e){return new Promise(t=>{let r;switch(e.config.warmup){case"face":r="data:image/jpeg;base64,"+V1;break;case"full":case"body":r="data:image/jpeg;base64,"+G1;break;default:r=null}let n;if(typeof Image!="undefined")n=new Image;else if(he.Image)n=new he.Image;else return;n.onload=async()=>{let a=Yr(n.naturalWidth,n.naturalHeight);if(!a)se("Warmup: Canvas not found"),t(void 0);else{let s=a.getContext("2d");s&&s.drawImage(n,0,0);let i=await e.image(a),o=await e.detect(i.tensor,e.config);t(o)}},r?n.src=r:t(void 0)})}async function LAe(e){let t=a=>Buffer.from(a,"base64"),r;e.config.warmup==="face"?r=t(V1):r=t(G1);let n;if("node"in Ue){let a=(void 0).decodeJpeg(r),s=a.expandDims(0);e.tf.dispose(a),n=await e.detect(s,e.config),e.tf.dispose(s)}else e.config.debug&&se("Warmup tfjs-node not loaded");return n}async function BAe(e){let t;return typeof createImageBitmap=="function"?t=await OAe(e):typeof Image!="undefined"||he.Canvas!==void 0?t=await DAe(e):t=await LAe(e),t}async function WAe(e){let t=qr(),r=Bn();if(t!=="webgl"&&t!=="humangl"||!r||!r.checkCompileCompletion)return;Y().set("ENGINE_COMPILE_ONLY",!0);let n=Xt().state.numTensors,a=[];for(let[o,l]of Object.entries(e).filter(([u,p])=>u!==null&&p!==null)){let u=l.inputs&&l.inputs[0]&&l.inputs[0].shape?[...l.inputs[0].shape]:[1,64,64,3],p=l.inputs&&l.inputs[0]&&l.inputs[0].dtype?l.inputs[0].dtype:"float32";for(let d=0;d<u.length;d++)u[d]===-1&&(u[d]=d===0?1:64);let h=Ot(u,p);try{let d=l.execute(h);a.push(o),Array.isArray(d)?d.forEach(c=>ee(c)):ee(d)}catch(d){se("compile fail model:",o)}ee(h)}let s=await r.checkCompileCompletionAsync();r.getUniformLocations(),se("compile pass models:",a),se("compile pass kernels:",s.length),Y().set("ENGINE_COMPILE_ONLY",!1);let i=Xt().state.numTensors;i-n>0&&se("tensor leak:",i-n)}async function rR(e,t){let r=oe();return e.state="warmup",t&&(e.config=jt(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:oe(),persons:[],error:null}:new Promise(async n=>{await WAe(e.models);let a=await BAe(e),s=oe();e.config.debug&&se("warmup",e.config.warmup,Math.round(s-r),"ms"),e.emit("warmup"),n(a)})}var mp,Sc,Cc,U1,Jb=class{constructor(t){fe(this,"version");fe(this,"config");fe(this,"result");fe(this,"state");fe(this,"process");fe(this,"tf");fe(this,"env");fe(this,"draw");fe(this,"models");fe(this,"events");fe(this,"faceTriangulation");fe(this,"faceUVMap");fe(this,"performance");Ep(this,mp,void 0);Ep(this,Sc,void 0);Ep(this,Cc,void 0);fe(this,"gl");fe(this,"analyze",(...t)=>{if(!Np(this,Sc))return;let r=this.tf.engine().state.numTensors,n=Np(this,mp);Rp(this,mp,r);let a=r-n;a!==0&&se(...t,a)});Ep(this,U1,t=>{if(!Np(this,Cc))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof Qe))return"input must be a tensor";try{this.tf.getBackend()}catch(r){return"backend not loaded"}return null});fe(this,"similarity",Xb);fe(this,"distance",Ic);fe(this,"match",Zb);fe(this,"emit",t=>{var r;this.events&&this.events.dispatchEvent&&((r=this.events)==null||r.dispatchEvent(new Event(t)))});fe(this,"getModelStats",()=>zb());var n;this.env=he;let r=(((n=cc)==null?void 0:n.tfjs)||f3).replace(/-(.*)/,"");Ns.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${r}/dist/`,Ns.modelBasePath=he.browser?"../models/":"file://models/",Ns.backend=he.browser?"humangl":"tensorflow",this.version=Sx,Object.defineProperty(this,"version",{value:Sx}),this.config=JSON.parse(JSON.stringify(Ns)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB!="undefined",t&&(this.config=jt(this.config,t)),RT(this.config),this.tf=Ue,this.state="idle",Rp(this,mp,0),Rp(this,Sc,!1),Rp(this,Cc,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new kc,this.draw={options:zr,canvas:(a,s)=>Gb(a,s),face:(a,s,i)=>up(a,s,i),body:(a,s,i)=>dp(a,s,i),hand:(a,s,i)=>pp(a,s,i),gesture:(a,s,i)=>cp(a,s,i),object:(a,s,i)=>hp(a,s,i),person:(a,s,i)=>Vb(a,s,i),all:(a,s,i)=>Ub(a,s,i)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=VN,this.faceUVMap=GN,this.gl=Rt,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Ns)),this.config.backend=t}validate(t){return Cg(Ns,t||this.config)}now(){return oe()}image(t,r=!0){return Xd(t,this.config,r)}async segmentation(t,r){return VE(t,r,this.config)}enhance(t){return ob(t)}compare(t,r){return ET(this.config,t,r)}async init(){await W1(this,!0),await this.tf.ready()}async load(t){this.state="load";let r=oe(),n=Object.values(this.models).filter(i=>i).length;t&&(this.config=jt(this.config,t)),this.env.initial&&(this.config.debug&&se(`version: ${this.version}`),this.config.debug&&se(`tfjs version: ${this.tf.version["tfjs-core"]}`),await W1(this)||se("error: backend check failed"),await Id(),this.env.browser&&(this.config.debug&&se("configuration:",this.config),this.config.debug&&se("environment:",this.env),this.config.debug&&se("tf flags:",this.tf.ENV.flags))),await Ob(this),this.env.initial&&this.config.debug&&se("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(i=>i).length!==n&&(await Db(this),this.emit("load"));let s=Math.trunc(oe()-r);s>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+s:s)}next(t=this.result){return QE(t,this.config)}async warmup(t){let r=oe(),n=await rR(this,t),a=oe();return this.performance.warmup=Math.trunc(a-r),n}async profile(t,r){let n=await this.tf.profile(()=>this.detect(t,r)),a={};for(let o of n.kernels)a[o.name]?a[o.name]+=o.kernelTimeMs:a[o.name]=o.kernelTimeMs;let s=[];Object.entries(a).forEach(o=>s.push({name:o[0],ms:o[1]})),s.sort((o,l)=>l.ms-o.ms),s.length=20;let i={};for(let o of s)i[o.name]=o.ms;return i}async detect(t,r){return this.state="detect",new Promise(async n=>{var g,y,A,x,b,w,I,C,E,R,F,$,S,O,z,j,K,D,Z,V,re,Q;this.state="config";let a;this.config=jt(this.config,r),this.state="check";let s=Np(this,U1).call(this,t);s&&(se(s,t),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:oe(),persons:[],error:s}));let i=oe();await W1(this),await this.load(),a=oe(),this.state="image";let o=await Xd(t,this.config);if(this.process=o,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(oe()-a):Math.trunc(oe()-a),this.analyze("Get Image:"),!o.tensor){this.config.debug&&se("could not convert input to tensor"),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:oe(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),a=oe(),this.config.skipAllowed=await NT(this.config,o.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(oe()-a):Math.trunc(oe()-a),this.analyze("Check Changed:");let l=[],u=[],p=[],h=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?qb(this,o.tensor):[],this.performance.face&&delete this.performance.face):(a=oe(),l=this.config.face.enabled?await qb(this,o.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(oe()-a):Math.trunc(oe()-a)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let d=this.config.body.maxDetected===-1?jt(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?((g=this.config.body.modelPath)!=null&&g.includes("posenet")?u=this.config.body.enabled?Fb(o.tensor,d):[]:(y=this.config.body.modelPath)!=null&&y.includes("blazepose")?u=this.config.body.enabled?jx(o.tensor,d):[]:(A=this.config.body.modelPath)!=null&&A.includes("efficientpose")?u=this.config.body.enabled?Jx(o.tensor,d):[]:(x=this.config.body.modelPath)!=null&&x.includes("movenet")&&(u=this.config.body.enabled?Cb(o.tensor,d):[]),this.performance.body&&delete this.performance.body):(a=oe(),(b=this.config.body.modelPath)!=null&&b.includes("posenet")?u=this.config.body.enabled?await Fb(o.tensor,d):[]:(w=this.config.body.modelPath)!=null&&w.includes("blazepose")?u=this.config.body.enabled?await jx(o.tensor,d):[]:(I=this.config.body.modelPath)!=null&&I.includes("efficientpose")?u=this.config.body.enabled?await Jx(o.tensor,d):[]:(C=this.config.body.modelPath)!=null&&C.includes("movenet")&&(u=this.config.body.enabled?await Cb(o.tensor,d):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(oe()-a):Math.trunc(oe()-a)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let c=this.config.hand.maxDetected===-1?jt(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?((R=(E=this.config.hand.detector)==null?void 0:E.modelPath)!=null&&R.includes("handdetect")?p=this.config.hand.enabled?fb(o.tensor,c):[]:($=(F=this.config.hand.detector)==null?void 0:F.modelPath)!=null&&$.includes("handtrack")&&(p=this.config.hand.enabled?Ab(o.tensor,c):[]),this.performance.hand&&delete this.performance.hand):(a=oe(),(O=(S=this.config.hand.detector)==null?void 0:S.modelPath)!=null&&O.includes("handdetect")?p=this.config.hand.enabled?await fb(o.tensor,c):[]:(j=(z=this.config.hand.detector)==null?void 0:z.modelPath)!=null&&j.includes("handtrack")&&(p=this.config.hand.enabled?await Ab(o.tensor,c):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(oe()-a):Math.trunc(oe()-a)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((K=this.config.object.modelPath)!=null&&K.includes("nanodet")?h=this.config.object.enabled?Nb(o.tensor,this.config):[]:(D=this.config.object.modelPath)!=null&&D.includes("centernet")&&(h=this.config.object.enabled?Kx(o.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(a=oe(),(Z=this.config.object.modelPath)!=null&&Z.includes("nanodet")?h=this.config.object.enabled?await Nb(o.tensor,this.config):[]:(V=this.config.object.modelPath)!=null&&V.includes("centernet")&&(h=this.config.object.enabled?await Kx(o.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(oe()-a):Math.trunc(oe()-a)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,u,p,h]=await Promise.all([l,u,p,h])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(a=oe(),f=[...ZE(l),...XE(u),...JE(p),...YE(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(oe()-a):Math.trunc(oe()-a)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(oe()-i):Math.trunc(oe()-i);let m=((Q=(re=this.process)==null?void 0:re.tensor)==null?void 0:Q.shape)||[];this.result={face:l,body:u,hand:p,gesture:f,object:h,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return tR(l,u,p,f,m)}},ee(o.tensor),this.emit("detect"),this.state="idle",n(this.result)})}};mp=new WeakMap,Sc=new WeakMap,Cc=new WeakMap,U1=new WeakMap;return t$(GAe);})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/** @license See the LICENSE file. */

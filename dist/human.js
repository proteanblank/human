"use strict";/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var Rf=Object.defineProperty;var aR=Object.getOwnPropertyDescriptor;var oR=Object.getOwnPropertyNames;var iR=Object.prototype.hasOwnProperty;var lR=(e,t,n)=>t in e?Rf(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var Pa=(e,t)=>{for(var n in t)Rf(e,n,{get:t[n],enumerable:!0})},uR=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of oR(t))!iR.call(e,r)&&r!==n&&Rf(e,r,{get:()=>t[r],enumerable:!(s=aR(t,r))||s.enumerable});return e};var cR=e=>uR(Rf({},"__esModule",{value:!0}),e);var ge=(e,t,n)=>(lR(e,typeof t!="symbol"?t+"":t,n),n),C4=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var Ud=(e,t,n)=>(C4(e,t,"read from private field"),n?n.call(e):t.get(e)),Gd=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},Hd=(e,t,n,s)=>(C4(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var l5e={};Pa(l5e,{Human:()=>r4,default:()=>r4,defaults:()=>Fa,draw:()=>Yb,env:()=>me,match:()=>s4,models:()=>t1});function oe(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function T4(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var ue=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function Mg(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")Mg(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&oe("invalid configuration",s),s}function Xt(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=Xt(a,o):n[r]=o}),n),{})}var Fa={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var He={};Pa(He,{Abs:()=>al,Acos:()=>lc,Acosh:()=>uc,AdadeltaOptimizer:()=>P0,AdagradOptimizer:()=>F0,AdamOptimizer:()=>O0,AdamaxOptimizer:()=>M0,Add:()=>ma,AddN:()=>ao,All:()=>cc,Any:()=>dc,ArgMax:()=>oo,ArgMin:()=>pc,Asin:()=>hc,Asinh:()=>fc,Atan:()=>mc,Atan2:()=>yc,Atanh:()=>gc,AvgPool:()=>io,AvgPool3D:()=>Ep,AvgPool3DGrad:()=>Om,AvgPoolGrad:()=>Fm,BackendWasm:()=>rC,BatchMatMul:()=>lo,BatchToSpaceND:()=>ol,Bincount:()=>Mm,BroadcastArgs:()=>zm,BroadcastTo:()=>$7,Callback:()=>z8,CallbackList:()=>Vw,Cast:()=>uo,Ceil:()=>co,ClipByValue:()=>ga,Complex:()=>Rp,ComplexAbs:()=>_p,Concat:()=>il,Conv2D:()=>po,Conv2DBackpropFilter:()=>Lm,Conv2DBackpropInput:()=>ho,Conv3D:()=>Dp,Conv3DBackpropFilterV2:()=>Bm,Conv3DBackpropInputV2:()=>Wm,Cos:()=>fo,Cosh:()=>mo,CropAndResize:()=>ul,Cumprod:()=>ll,Cumsum:()=>go,CustomCallback:()=>Gw,DataStorage:()=>Np,DenseBincount:()=>Vm,DepthToSpace:()=>cl,DepthwiseConv2dNative:()=>yo,DepthwiseConv2dNativeBackpropFilter:()=>Um,DepthwiseConv2dNativeBackpropInput:()=>Gm,Diag:()=>Hm,Dilation2D:()=>$p,Dilation2DBackpropFilter:()=>om,Dilation2DBackpropInput:()=>am,ENV:()=>Er,EarlyStopping:()=>L8,Einsum:()=>Pp,Elu:()=>xo,EluGrad:()=>jm,Environment:()=>_7,Equal:()=>dl,Erf:()=>Ac,Exp:()=>bo,ExpandDims:()=>pl,Expm1:()=>hl,FFT:()=>qm,Fill:()=>xc,FlipLeftRight:()=>fl,Floor:()=>vo,FloorDiv:()=>wo,FromPixels:()=>dp,FusedBatchNorm:()=>ko,FusedConv2D:()=>Xa,FusedDepthwiseConv2D:()=>Ka,GPGPUContext:()=>Uu,GatherNd:()=>gl,GatherV2:()=>ml,GraphModel:()=>kh,Greater:()=>yl,GreaterEqual:()=>Io,History:()=>Uw,IFFT:()=>Xm,Identity:()=>So,Imag:()=>Fp,InputSpec:()=>sn,IsFinite:()=>bc,IsInf:()=>vc,IsNan:()=>wc,KernelBackend:()=>oc,LRN:()=>Mp,LRNGrad:()=>Zm,LayerVariable:()=>Fw,LayersModel:()=>la,LeakyRelu:()=>Co,Less:()=>Al,LessEqual:()=>xl,LinSpace:()=>Km,Log:()=>To,Log1p:()=>kc,LogSoftmax:()=>P7,LogicalAnd:()=>bl,LogicalNot:()=>Ic,LogicalOr:()=>Op,LowerBound:()=>o_,MathBackendWebGL:()=>nd,Max:()=>No,MaxPool:()=>Ro,MaxPool3D:()=>zp,MaxPool3DGrad:()=>Jm,MaxPoolGrad:()=>Ym,MaxPoolWithArgmax:()=>Qm,Maximum:()=>Eo,Mean:()=>_o,Min:()=>Do,Minimum:()=>$o,MirrorPad:()=>Po,Mod:()=>Sc,MomentumOptimizer:()=>z0,Multinomial:()=>e0,Multiply:()=>Fo,Neg:()=>vl,NonMaxSuppressionV3:()=>kl,NonMaxSuppressionV4:()=>Cc,NonMaxSuppressionV5:()=>Il,NotEqual:()=>wl,OP_SCOPE_SUFFIX:()=>G7,OneHot:()=>Cl,OnesLike:()=>Sl,Optimizer:()=>xa,OptimizerConstructors:()=>Oa,Pack:()=>Tl,PadV2:()=>Oo,Pool:()=>i_,Pow:()=>Mo,Prelu:()=>zo,Prod:()=>Lo,RMSPropOptimizer:()=>L0,RNN:()=>Xr,Range:()=>Tc,Rank:()=>e3,Real:()=>Lp,RealDiv:()=>Ao,Reciprocal:()=>Nc,Reduction:()=>Xn,Relu:()=>Bo,Relu6:()=>Vo,Reshape:()=>Nl,ResizeBilinear:()=>Wo,ResizeBilinearGrad:()=>n0,ResizeNearestNeighbor:()=>Ec,ResizeNearestNeighborGrad:()=>t0,Reverse:()=>El,RotateWithOffset:()=>Ul,Round:()=>Rl,Rsqrt:()=>Uo,SGDOptimizer:()=>dh,ScatterNd:()=>_l,SearchSorted:()=>s0,Select:()=>Dl,Selu:()=>Rc,Sequential:()=>Qu,Sigmoid:()=>Ho,Sign:()=>_c,Sin:()=>Go,Sinh:()=>Pl,Slice:()=>$l,Softmax:()=>Xo,Softplus:()=>Dc,SpaceToBatchND:()=>Fl,SparseFillEmptyRows:()=>Bp,SparseReshape:()=>$c,SparseSegmentMean:()=>Wp,SparseSegmentSum:()=>Vp,SparseToDense:()=>Up,SplitV:()=>Ol,Sqrt:()=>jo,Square:()=>Pc,SquaredDifference:()=>Ko,Step:()=>Jo,StridedSlice:()=>Ml,StringNGrams:()=>Gp,StringSplit:()=>r0,StringToHashBucketFast:()=>a0,Sub:()=>Zo,Sum:()=>qo,SymbolicTensor:()=>vr,Tan:()=>zl,Tanh:()=>Yo,Tensor:()=>nt,TensorBuffer:()=>hn,Tile:()=>ya,TopK:()=>Ll,Transform:()=>Bl,Transpose:()=>Br,Unique:()=>o0,Unpack:()=>Wl,UnsortedSegmentSum:()=>Hp,UpperBound:()=>l_,Variable:()=>fp,ZerosLike:()=>Vl,_FusedMatMul:()=>qa,abs:()=>tn,acos:()=>Iy,acosh:()=>Sy,add:()=>ce,addN:()=>l0,all:()=>u0,any:()=>yp,argMax:()=>Ss,argMin:()=>Cy,asin:()=>Ty,asinh:()=>Ny,atan:()=>Ey,atan2:()=>Ry,atanh:()=>_y,avgPool:()=>Qp,avgPool3d:()=>$y,backend:()=>js,backend_util:()=>T,basicLSTMCell:()=>J$,batchNorm:()=>ji,batchNorm2d:()=>N6,batchNorm3d:()=>E6,batchNorm4d:()=>R6,batchToSpaceND:()=>eh,bincount:()=>Py,booleanMaskAsync:()=>aM,broadcastArgs:()=>_6,broadcastTo:()=>Wu,broadcast_util:()=>Hl,browser:()=>qs,buffer:()=>We,callbacks:()=>FH,cast:()=>he,ceil:()=>Fy,clipByValue:()=>ds,clone:()=>Yn,complex:()=>ua,concat:()=>It,concat1d:()=>D6,concat2d:()=>Mc,concat3d:()=>$6,concat4d:()=>P6,constraints:()=>zw,conv1d:()=>c0,conv2d:()=>ca,conv2dTranspose:()=>d0,conv3d:()=>My,conv3dTranspose:()=>O6,copyRegisteredKernels:()=>p_,cos:()=>th,cosh:()=>p0,cosineWindow:()=>dA,cumprod:()=>Ap,cumsum:()=>h0,customGrad:()=>Gr,data:()=>uk,denseBincount:()=>M6,deprecationWarn:()=>fy,depthToSpace:()=>zy,depthwiseConv2d:()=>zc,deregisterOp:()=>zH,device_util:()=>Kp,diag:()=>EP,dilation2d:()=>Ly,disableDeprecationWarnings:()=>LD,dispose:()=>ne,disposeVariables:()=>BD,div:()=>pe,divNoNan:()=>By,dot:()=>z6,dropout:()=>iw,einsum:()=>L6,elu:()=>Lc,enableDebugMode:()=>zD,enableProdMode:()=>hy,enclosingPowerOfTwo:()=>lw,engine:()=>nn,env:()=>Y,equal:()=>Cs,erf:()=>Wy,euclideanNorm:()=>Gy,exp:()=>Ts,expandDims:()=>Kt,expm1:()=>Hy,eye:()=>jy,fft:()=>uh,fill:()=>Bc,findBackend:()=>gy,findBackendFactory:()=>GD,floor:()=>Wc,floorDiv:()=>Oc,forceHalfFloat:()=>SS,fused:()=>Ya,gather:()=>Xi,gatherND:()=>ow,gather_util:()=>yy,getBackend:()=>es,getGradient:()=>Jg,getKernel:()=>im,getKernelsForBackend:()=>Vr,getThreadsCount:()=>Zfe,gpgpu_util:()=>sS,grad:()=>hF,grads:()=>fF,greater:()=>fs,greaterEqual:()=>ti,ifft:()=>Zu,imag:()=>Yp,image:()=>Se,inTopKAsync:()=>mM,initializers:()=>Lw,input:()=>r8,io:()=>Dn,irfft:()=>T0,isFinite:()=>G6,isInf:()=>H6,isNaN:()=>qy,keep:()=>xn,kernel_impls:()=>or,layers:()=>Bw,leakyRelu:()=>sh,less:()=>f0,lessEqual:()=>ni,linalg:()=>Aw,linspace:()=>j6,loadGraphModel:()=>Wj,loadGraphModelSync:()=>Vj,loadLayersModel:()=>HU,localResponseNormalization:()=>Xy,log:()=>Ns,log1p:()=>rh,logSigmoid:()=>X6,logSoftmax:()=>g0,logSumExp:()=>Ky,logicalAnd:()=>sr,logicalNot:()=>ah,logicalOr:()=>y0,logicalXor:()=>K6,losses:()=>Yz,lowerBound:()=>Z6,matMul:()=>Ye,math:()=>o6,max:()=>fn,maxPool:()=>oh,maxPool3d:()=>Yy,maxPoolWithArgmax:()=>Y6,maximum:()=>qr,mean:()=>Bt,memory:()=>cm,meshgrid:()=>DF,metrics:()=>F8,min:()=>da,minimum:()=>Vc,mirrorPad:()=>Jy,mod:()=>ql,model:()=>UU,models:()=>O8,moments:()=>A0,movingAverage:()=>iM,mul:()=>L,multiRNNCell:()=>zF,multinomial:()=>J6,neg:()=>$t,nextFrame:()=>fA,norm:()=>nh,notEqual:()=>Ki,oneHot:()=>qu,ones:()=>Is,onesLike:()=>Es,op:()=>G,outerProduct:()=>UF,pad:()=>Xs,pad1d:()=>jF,pad2d:()=>XF,pad3d:()=>ZF,pad4d:()=>JF,pool:()=>Q6,pow:()=>pa,prelu:()=>lh,print:()=>e6,prod:()=>x0,profile:()=>WD,rand:()=>oO,randomGamma:()=>cO,randomNormal:()=>ew,randomUniform:()=>Uc,range:()=>Ku,ready:()=>Fc,real:()=>Xu,reciprocal:()=>tA,registerBackend:()=>Gl,registerCallbackConstructor:()=>jU,registerGradient:()=>F7,registerKernel:()=>ar,registerOp:()=>MH,regularizers:()=>M8,relu:()=>Rr,relu6:()=>b0,removeBackend:()=>UD,reshape:()=>U,reverse:()=>Rs,reverse1d:()=>AO,reverse2d:()=>bO,reverse3d:()=>wO,reverse4d:()=>IO,rfft:()=>ch,round:()=>v0,rsqrt:()=>w0,scalar:()=>Ce,scatterND:()=>aw,scatter_util:()=>Ay,searchSorted:()=>Zy,selu:()=>k0,separableConv2d:()=>nA,sequential:()=>GU,serialization:()=>de,setBackend:()=>my,setPlatform:()=>HD,setThreadsCount:()=>Kfe,setWasmPath:()=>Xfe,setWasmPaths:()=>bx,setWebGLContext:()=>i2,setdiff1dAsync:()=>tw,sigmoid:()=>Sn,sign:()=>sA,signal:()=>Zz,sin:()=>I0,sinh:()=>S0,slice:()=>Oe,slice1d:()=>C0,slice2d:()=>rA,slice3d:()=>Xl,slice4d:()=>Zi,slice_util:()=>Ut,softmax:()=>Kl,softplus:()=>jl,spaceToBatchND:()=>ih,sparse:()=>Jd,sparseToDense:()=>cA,spectral:()=>Kz,split:()=>Zt,sqrt:()=>Cn,square:()=>bt,squaredDifference:()=>N0,squeeze:()=>Qe,stack:()=>on,step:()=>Gc,stridedSlice:()=>aA,string:()=>jf,sub:()=>fe,sum:()=>ke,sumOutType:()=>Xp,tan:()=>oA,tanh:()=>Hi,tensor:()=>gt,tensor1d:()=>Dt,tensor2d:()=>kr,tensor3d:()=>l6,tensor4d:()=>KO,tensor5d:()=>ZO,tensor6d:()=>YO,tensor_util:()=>wr,test_util:()=>w6,tidy:()=>K,tile:()=>Vs,time:()=>VD,topk:()=>iA,train:()=>Ei,transpose:()=>st,truncatedNormal:()=>E0,unique:()=>pm,unregisterGradient:()=>d_,unregisterKernel:()=>c_,unsortedSegmentSum:()=>lA,unstack:()=>Jn,upcastType:()=>$n,upperBound:()=>nw,util:()=>v,valueAndGrad:()=>mF,valueAndGrads:()=>gF,variable:()=>sw,variableGrads:()=>q6,version:()=>Fh,version_converter:()=>Gj,version_core:()=>ky,version_layers:()=>OA,version_wasm:()=>Yfe,version_webgl:()=>ane,webgl:()=>one,webgl_util:()=>TI,webgpu:()=>EC,where:()=>Pn,whereAsync:()=>uA,zeros:()=>Wt,zerosLike:()=>it});var dR=Object.create,ey=Object.defineProperty,pR=Object.getOwnPropertyDescriptor,g7=Object.getOwnPropertyNames,hR=Object.getPrototypeOf,fR=Object.prototype.hasOwnProperty,Ct=(e,t)=>function(){return t||(0,e[g7(e)[0]])((t={exports:{}}).exports,t),t.exports},Ve=(e,t)=>{for(var n in t)ey(e,n,{get:t[n],enumerable:!0})},mR=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of g7(t))!fR.call(e,r)&&r!==n&&ey(e,r,{get:()=>t[r],enumerable:!(s=pR(t,r))||s.enumerable});return e},sl=(e,t,n)=>(n=e!=null?dR(hR(e)):{},mR(t||!e||!e.__esModule?ey(n,"default",{value:e,enumerable:!0}):n,e)),gR=Ct({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(D){}function s(D,C,F){this.low=D|0,this.high=C|0,this.unsigned=!!F}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(D){return(D&&D.__isLong__)===!0}s.isLong=r;var a={},o={};function i(D,C){var F,V,j;return C?(D>>>=0,(j=0<=D&&D<256)&&(V=o[D],V)?V:(F=u(D,(D|0)<0?-1:0,!0),j&&(o[D]=F),F)):(D|=0,(j=-128<=D&&D<128)&&(V=a[D],V)?V:(F=u(D,D<0?-1:0,!1),j&&(a[D]=F),F))}s.fromInt=i;function l(D,C){if(isNaN(D))return C?b:A;if(C){if(D<0)return b;if(D>=g)return R}else{if(D<=-y)return $;if(D+1>=y)return E}return D<0?l(-D,C).neg():u(D%m|0,D/m|0,C)}s.fromNumber=l;function u(D,C,F){return new s(D,C,F)}s.fromBits=u;var c=Math.pow;function p(D,C,F){if(D.length===0)throw Error("empty string");if(D==="NaN"||D==="Infinity"||D==="+Infinity"||D==="-Infinity")return A;if(typeof C=="number"?(F=C,C=!1):C=!!C,F=F||10,F<2||36<F)throw RangeError("radix");var V;if((V=D.indexOf("-"))>0)throw Error("interior hyphen");if(V===0)return p(D.substring(1),C,F).neg();for(var j=l(c(F,8)),z=A,Z=0;Z<D.length;Z+=8){var W=Math.min(8,D.length-Z),ee=parseInt(D.substring(Z,Z+W),F);if(W<8){var Q=l(c(F,W));z=z.mul(Q).add(l(ee))}else z=z.mul(j),z=z.add(l(ee))}return z.unsigned=C,z}s.fromString=p;function d(D,C){return typeof D=="number"?l(D,C):typeof D=="string"?p(D,C):u(D.low,D.high,typeof C=="boolean"?C:D.unsigned)}s.fromValue=d;var h=1<<16,f=1<<24,m=h*h,g=m*m,y=g/2,x=i(f),A=i(0);s.ZERO=A;var b=i(0,!0);s.UZERO=b;var w=i(1);s.ONE=w;var k=i(1,!0);s.UONE=k;var S=i(-1);s.NEG_ONE=S;var E=u(-1,2147483647,!1);s.MAX_VALUE=E;var R=u(-1,-1,!0);s.MAX_UNSIGNED_VALUE=R;var $=u(0,-2147483648,!1);s.MIN_VALUE=$;var _=s.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},_.toString=function(C){if(C=C||10,C<2||36<C)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq($)){var F=l(C),V=this.div(F),j=V.mul(F).sub(this);return V.toString(C)+j.toInt().toString(C)}else return"-"+this.neg().toString(C);for(var z=l(c(C,6),this.unsigned),Z=this,W="";;){var ee=Z.div(z),Q=Z.sub(ee.mul(z)).toInt()>>>0,ie=Q.toString(C);if(Z=ee,Z.isZero())return ie+W;for(;ie.length<6;)ie="0"+ie;W=""+ie+W}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq($)?64:this.neg().getNumBitsAbs();for(var C=this.high!=0?this.high:this.low,F=31;F>0&&(C&1<<F)==0;F--);return this.high!=0?F+33:F+1},_.isZero=function(){return this.high===0&&this.low===0},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return(this.low&1)===1},_.isEven=function(){return(this.low&1)===0},_.equals=function(C){return r(C)||(C=d(C)),this.unsigned!==C.unsigned&&this.high>>>31===1&&C.high>>>31===1?!1:this.high===C.high&&this.low===C.low},_.eq=_.equals,_.notEquals=function(C){return!this.eq(C)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(C){return this.comp(C)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(C){return this.comp(C)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(C){return this.comp(C)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(C){return this.comp(C)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(C){if(r(C)||(C=d(C)),this.eq(C))return 0;var F=this.isNegative(),V=C.isNegative();return F&&!V?-1:!F&&V?1:this.unsigned?C.high>>>0>this.high>>>0||C.high===this.high&&C.low>>>0>this.low>>>0?-1:1:this.sub(C).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq($)?$:this.not().add(w)},_.neg=_.negate,_.add=function(C){r(C)||(C=d(C));var F=this.high>>>16,V=this.high&65535,j=this.low>>>16,z=this.low&65535,Z=C.high>>>16,W=C.high&65535,ee=C.low>>>16,Q=C.low&65535,ie=0,J=0,ae=0,le=0;return le+=z+Q,ae+=le>>>16,le&=65535,ae+=j+ee,J+=ae>>>16,ae&=65535,J+=V+W,ie+=J>>>16,J&=65535,ie+=F+Z,ie&=65535,u(ae<<16|le,ie<<16|J,this.unsigned)},_.subtract=function(C){return r(C)||(C=d(C)),this.add(C.neg())},_.sub=_.subtract,_.multiply=function(C){if(this.isZero())return A;if(r(C)||(C=d(C)),n){var F=n.mul(this.low,this.high,C.low,C.high);return u(F,n.get_high(),this.unsigned)}if(C.isZero())return A;if(this.eq($))return C.isOdd()?$:A;if(C.eq($))return this.isOdd()?$:A;if(this.isNegative())return C.isNegative()?this.neg().mul(C.neg()):this.neg().mul(C).neg();if(C.isNegative())return this.mul(C.neg()).neg();if(this.lt(x)&&C.lt(x))return l(this.toNumber()*C.toNumber(),this.unsigned);var V=this.high>>>16,j=this.high&65535,z=this.low>>>16,Z=this.low&65535,W=C.high>>>16,ee=C.high&65535,Q=C.low>>>16,ie=C.low&65535,J=0,ae=0,le=0,ye=0;return ye+=Z*ie,le+=ye>>>16,ye&=65535,le+=z*ie,ae+=le>>>16,le&=65535,le+=Z*Q,ae+=le>>>16,le&=65535,ae+=j*ie,J+=ae>>>16,ae&=65535,ae+=z*Q,J+=ae>>>16,ae&=65535,ae+=Z*ee,J+=ae>>>16,ae&=65535,J+=V*ie+j*Q+z*ee+Z*W,J&=65535,u(le<<16|ye,J<<16|ae,this.unsigned)},_.mul=_.multiply,_.divide=function(C){if(r(C)||(C=d(C)),C.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&C.low===-1&&C.high===-1)return this;var F=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,C.low,C.high);return u(F,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var V,j,z;if(this.unsigned){if(C.unsigned||(C=C.toUnsigned()),C.gt(this))return b;if(C.gt(this.shru(1)))return k;z=b}else{if(this.eq($)){if(C.eq(w)||C.eq(S))return $;if(C.eq($))return w;var Z=this.shr(1);return V=Z.div(C).shl(1),V.eq(A)?C.isNegative()?w:S:(j=this.sub(C.mul(V)),z=V.add(j.div(C)),z)}else if(C.eq($))return this.unsigned?b:A;if(this.isNegative())return C.isNegative()?this.neg().div(C.neg()):this.neg().div(C).neg();if(C.isNegative())return this.div(C.neg()).neg();z=A}for(j=this;j.gte(C);){V=Math.max(1,Math.floor(j.toNumber()/C.toNumber()));for(var W=Math.ceil(Math.log(V)/Math.LN2),ee=W<=48?1:c(2,W-48),Q=l(V),ie=Q.mul(C);ie.isNegative()||ie.gt(j);)V-=ee,Q=l(V,this.unsigned),ie=Q.mul(C);Q.isZero()&&(Q=w),z=z.add(Q),j=j.sub(ie)}return z},_.div=_.divide,_.modulo=function(C){if(r(C)||(C=d(C)),n){var F=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,C.low,C.high);return u(F,n.get_high(),this.unsigned)}return this.sub(this.div(C).mul(C))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return u(~this.low,~this.high,this.unsigned)},_.and=function(C){return r(C)||(C=d(C)),u(this.low&C.low,this.high&C.high,this.unsigned)},_.or=function(C){return r(C)||(C=d(C)),u(this.low|C.low,this.high|C.high,this.unsigned)},_.xor=function(C){return r(C)||(C=d(C)),u(this.low^C.low,this.high^C.high,this.unsigned)},_.shiftLeft=function(C){return r(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?u(this.low<<C,this.high<<C|this.low>>>32-C,this.unsigned):u(0,this.low<<C-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(C){return r(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?u(this.low>>>C|this.high<<32-C,this.high>>C,this.unsigned):u(this.high>>C-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(C){if(r(C)&&(C=C.toInt()),C&=63,C===0)return this;var F=this.high;if(C<32){var V=this.low;return u(V>>>C|F<<32-C,F>>>C,this.unsigned)}else return C===32?u(F,0,this.unsigned):u(F>>>C-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},_.toBytes=function(C){return C?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var C=this.high,F=this.low;return[F&255,F>>>8&255,F>>>16&255,F>>>24,C&255,C>>>8&255,C>>>16&255,C>>>24]},_.toBytesBE=function(){var C=this.high,F=this.low;return[C>>>24,C>>>16&255,C>>>8&255,C&255,F>>>24,F>>>16&255,F>>>8&255,F&255]},s.fromBytes=function(C,F,V){return V?s.fromBytesLE(C,F):s.fromBytesBE(C,F)},s.fromBytesLE=function(C,F){return new s(C[0]|C[1]<<8|C[2]<<16|C[3]<<24,C[4]|C[5]<<8|C[6]<<16|C[7]<<24,F)},s.fromBytesBE=function(C,F){return new s(C[4]<<24|C[5]<<16|C[6]<<8|C[7],C[0]<<24|C[1]<<16|C[2]<<8|C[3],F)}}}),yR=Ct({"(disabled):node_modules/.pnpm/node-fetch@2.6.7/node_modules/node-fetch/browser.js"(){}}),AR=Ct({"(disabled):util"(){}}),xR=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(u){var c=this,p=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(u),c.s0<0&&(c.s0+=1),c.s1-=p(u),c.s1<0&&(c.s1+=1),c.s2-=p(u),c.s2<0&&(c.s2+=1),p=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function i(u,c){var p=new a(u),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,p),h.state=function(){return o(p,{})}),h}function l(){var u=4022871197,c=function(p){p=p.toString();for(var d=0;d<p.length;d++){u+=p.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),bR=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),vR=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,p==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),wR=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.x,d=u.i,h,f,m;return h=p[d],h^=h>>>7,f=h^h<<24,h=p[d+1&7],f^=h^h>>>10,h=p[d+3&7],f^=h^h>>>3,h=p[d+4&7],f^=h^h<<7,h=p[d+7&7],h=h^h<<13,f^=h^h<<9,p[d]=f,u.i=d+1&7,f};function c(p,d){var h,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,h=0;h<d.length;++h)m[h&7]=m[h&7]<<15^d.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],p.x=m,p.i=0,h=256;h>0;--h)p.next()}c(u,l)}function o(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.x&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),kR=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.w,d=u.X,h=u.i,f,m;return u.w=p=p+1640531527|0,m=d[h+34&127],f=d[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[h]=m^f,u.i=h,m+(p^p>>>16)|0};function c(p,d){var h,f,m,g,y,x=[],A=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,A=Math.max(A,d.length)),m=0,g=-32;g<A;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;p.w=y,p.X=x,p.i=m}c(u,l)}function o(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.X&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),IR=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.b,h=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var p=0;p<c.length+20;p++)u.b^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),y7=Ct({"(disabled):crypto"(){}}),SR=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s){var r=this,a=256,o=6,i=52,l="random",u=s.pow(a,o),c=s.pow(2,i),p=c*2,d=a-1,h;function f(w,k,S){var E=[];k=k==!0?{entropy:!0}:k||{};var R=x(y(k.entropy?[w,b(n)]:w==null?A():w,3),E),$=new m(E),_=function(){for(var D=$.g(o),C=u,F=0;D<c;)D=(D+F)*a,C*=a,F=$.g(1);for(;D>=p;)D/=2,C/=2,F>>>=1;return(D+F)/C};return _.int32=function(){return $.g(4)|0},_.quick=function(){return $.g(4)/4294967296},_.double=_,x(b($.S),n),(k.pass||S||function(D,C,F,V){return V&&(V.S&&g(V,$),D.state=function(){return g($,{})}),F?(s[l]=D,C):D})(_,R,"global"in k?k.global:this==s,k.state)}s["seed"+l]=f;function m(w){var k,S=w.length,E=this,R=0,$=E.i=E.j=0,_=E.S=[];for(S||(w=[S++]);R<a;)_[R]=R++;for(R=0;R<a;R++)_[R]=_[$=d&$+w[R%S]+(k=_[R])],_[$]=k;(E.g=function(D){for(var C,F=0,V=E.i,j=E.j,z=E.S;D--;)C=z[V=d&V+1],F=F*a+z[d&(z[V]=z[j=d&j+C])+(z[j]=C)];return E.i=V,E.j=j,F})(a)}function g(w,k){return k.i=w.i,k.j=w.j,k.S=w.S.slice(),k}function y(w,k){var S=[],E=typeof w,R;if(k&&E=="object")for(R in w)try{S.push(y(w[R],k-1))}catch($){}return S.length?S:E=="string"?w:w+"\0"}function x(w,k){for(var S=w+"",E,R=0;R<S.length;)k[d&R]=d&(E^=k[d&R]*19)+S.charCodeAt(R++);return b(k)}function A(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch(E){var k=r.navigator,S=k&&k.plugins;return[+new Date,r,S,r.screen,b(n)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(s.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{h=y7()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return f})})([],Math)}}),A7=Ct({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=xR(),s=bR(),r=vR(),a=wR(),o=kR(),i=IR(),l=SR();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),CR=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(u){var c=this,p=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(u),c.s0<0&&(c.s0+=1),c.s1-=p(u),c.s1<0&&(c.s1+=1),c.s2-=p(u),c.s2<0&&(c.s2+=1),p=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function i(u,c){var p=new a(u),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,p),h.state=function(){return o(p,{})}),h}function l(){var u=4022871197,c=function(p){p=String(p);for(var d=0;d<p.length;d++){u+=p.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),TR=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),NR=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,p==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ER=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.x,d=u.i,h,f,m;return h=p[d],h^=h>>>7,f=h^h<<24,h=p[d+1&7],f^=h^h>>>10,h=p[d+3&7],f^=h^h>>>3,h=p[d+4&7],f^=h^h<<7,h=p[d+7&7],h=h^h<<13,f^=h^h<<9,p[d]=f,u.i=d+1&7,f};function c(p,d){var h,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,h=0;h<d.length;++h)m[h&7]=m[h&7]<<15^d.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],p.x=m,p.i=0,h=256;h>0;--h)p.next()}c(u,l)}function o(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.x&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),RR=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.w,d=u.X,h=u.i,f,m;return u.w=p=p+1640531527|0,m=d[h+34&127],f=d[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[h]=m^f,u.i=h,m+(p^p>>>16)|0};function c(p,d){var h,f,m,g,y,x=[],A=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,A=Math.max(A,d.length)),m=0,g=-32;g<A;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;p.w=y,p.X=x,p.i=m}c(u,l)}function o(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.X&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),_R=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.b,h=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var p=0;p<c.length+20;p++)u.b^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),DR=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",u=r.pow(a,o),c=r.pow(2,i),p=c*2,d=a-1,h;function f(w,k,S){var E=[];k=k==!0?{entropy:!0}:k||{};var R=x(y(k.entropy?[w,b(s)]:w==null?A():w,3),E),$=new m(E),_=function(){for(var D=$.g(o),C=u,F=0;D<c;)D=(D+F)*a,C*=a,F=$.g(1);for(;D>=p;)D/=2,C/=2,F>>>=1;return(D+F)/C};return _.int32=function(){return $.g(4)|0},_.quick=function(){return $.g(4)/4294967296},_.double=_,x(b($.S),s),(k.pass||S||function(D,C,F,V){return V&&(V.S&&g(V,$),D.state=function(){return g($,{})}),F?(r[l]=D,C):D})(_,R,"global"in k?k.global:this==r,k.state)}function m(w){var k,S=w.length,E=this,R=0,$=E.i=E.j=0,_=E.S=[];for(S||(w=[S++]);R<a;)_[R]=R++;for(R=0;R<a;R++)_[R]=_[$=d&$+w[R%S]+(k=_[R])],_[$]=k;(E.g=function(D){for(var C,F=0,V=E.i,j=E.j,z=E.S;D--;)C=z[V=d&V+1],F=F*a+z[d&(z[V]=z[j=d&j+C])+(z[j]=C)];return E.i=V,E.j=j,F})(a)}function g(w,k){return k.i=w.i,k.j=w.j,k.S=w.S.slice(),k}function y(w,k){var S=[],E=typeof w,R;if(k&&E=="object")for(R in w)try{S.push(y(w[R],k-1))}catch($){}return S.length?S:E=="string"?w:w+"\0"}function x(w,k){for(var S=w+"",E,R=0;R<S.length;)k[d&R]=d&(E^=k[d&R]*19)+S.charCodeAt(R++);return b(k)}function A(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),b(w)}catch(E){var k=n.navigator,S=k&&k.plugins;return[+new Date,n,S,n.screen,b(s)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=y7()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),x7=Ct({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=CR(),s=TR(),r=NR(),a=ER(),o=RR(),i=_R(),l=DR();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),b7=Ct({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),ty=Ct({"(disabled):fs"(){}}),nm=Ct({"(disabled):path"(){}}),$R=Ct({"(disabled):worker_threads"(){}}),PR=Ct({"(disabled):perf_hooks"(){}}),FR=Ct({"(disabled):os"(){}}),OR=Ct({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.18.0_br26fteayl44zj43fz4bazb7oq/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return $e.buffer!=Un&&pr($e.buffer),Kh}function o(){return $e.buffer!=Un&&pr($e.buffer),Zh}function i(){return $e.buffer!=Un&&pr($e.buffer),_d}function l(){return $e.buffer!=Un&&pr($e.buffer),Yh}function u(){return $e.buffer!=Un&&pr($e.buffer),Jh}function c(){return $e.buffer!=Un&&pr($e.buffer),Qh}function p(){return $e.buffer!=Un&&pr($e.buffer),ef}var d=typeof r!="undefined"?r:{},h,f;d.ready=new Promise(function(N,O){h=N,f=O});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),y=[],x="./this.program",A=(N,O)=>{throw O},b=typeof window=="object",w=typeof importScripts=="function",k=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S=d.ENVIRONMENT_IS_PTHREAD||!1,E="";function R(N){return d.locateFile?d.locateFile(N,E):E+N}var $,_,D,C;function F(N){if(N instanceof Wd)return;Q("exiting due to exception: "+N)}var V,j,z;if(k){w?E=nm().dirname(E)+"/":E=__dirname+"/",z=()=>{j||(V=ty(),j=nm())},$=function(H,te){return z(),H=j.normalize(H),V.readFileSync(H,te?void 0:"utf8")},D=O=>{var H=$(O,!0);return H.buffer||(H=new Uint8Array(H)),H},_=(O,H,te)=>{z(),O=j.normalize(O),V.readFile(O,function(Ae,be){Ae?te(Ae):H(be.buffer)})},process.argv.length>1&&(x=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(O){if(!(O instanceof Wd))throw O}),process.on("unhandledRejection",function(O){throw O}),A=(O,H)=>{if(vi())throw process.exitCode=O,H;F(H),process.exit(O)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=$R()}catch(O){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),O}global.Worker=N.Worker}else(b||w)&&(w?E=self.location.href:typeof document!="undefined"&&document.currentScript&&(E=document.currentScript.src),typeof s!="undefined"&&s&&(E=s),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",k||($=N=>{var O=new XMLHttpRequest;return O.open("GET",N,!1),O.send(null),O.responseText},w&&(D=N=>{var O=new XMLHttpRequest;return O.open("GET",N,!1),O.responseType="arraybuffer",O.send(null),new Uint8Array(O.response)}),_=(N,O,H)=>{var te=new XMLHttpRequest;te.open("GET",N,!0),te.responseType="arraybuffer",te.onload=()=>{if(te.status==200||te.status==0&&te.response){O(te.response);return}H()},te.onerror=H,te.send(null)}),C=N=>document.title=N);k&&typeof performance=="undefined"&&(global.performance=PR().performance);var Z=console.log.bind(console),W=console.warn.bind(console);k&&(z(),Z=N=>V.writeSync(1,N+`
`),W=N=>V.writeSync(2,N+`
`));var ee=d.print||Z,Q=d.printErr||W;Object.assign(d,g),g=null,d.arguments&&(y=d.arguments),d.thisProgram&&(x=d.thisProgram),d.quit&&(A=d.quit);var ie=4;function J(N){J.shown||(J.shown={}),J.shown[N]||(J.shown[N]=1,Q(N))}function ae(N,O){if(typeof WebAssembly.Function=="function"){for(var H={i:"i32",j:"i64",f:"f32",d:"f64"},te={parameters:[],results:O[0]=="v"?[]:[H[O[0]]]},Ae=1;Ae<O.length;++Ae)te.parameters.push(H[O[Ae]]);return new WebAssembly.Function(te,N)}var be=[1,0,1,96],Ne=O.slice(0,1),Me=O.slice(1),Lt={i:127,j:126,f:125,d:124};be.push(Me.length);for(var Ae=0;Ae<Me.length;++Ae)be.push(Lt[Me[Ae]]);Ne=="v"?be.push(0):be=be.concat([1,Lt[Ne]]),be[1]=be.length-2;var gr=new Uint8Array([0,97,115,109,1,0,0,0].concat(be,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),yr=new WebAssembly.Module(gr),Ef=new WebAssembly.Instance(yr,{e:{f:N}}),Vd=Ef.exports.f;return Vd}var le=[],ye;function we(){if(le.length)return le.pop();try{Ls.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return Ls.length-1}function Re(N,O){for(var H=N;H<N+O;H++){var te=vu(H);te&&ye.set(te,H)}}var _e=0,Be=N=>{_e=N},Ue=Atomics.load,ot=Atomics.store,ct=Atomics.compareExchange,dt;d.wasmBinary&&(dt=d.wasmBinary);var yt=d.noExitRuntime||!0;typeof WebAssembly!="object"&&Au("no native wasm support detected");var $e,Tt,wt=!1,Bn;function Qt(N,O){N||Au(O)}function ys(N){var O=d["_"+N];return O}function dn(N,O,H,te,Ae){var be={string:function(bs){var Nu=0;if(bs!=null&&bs!==0){var S4=(bs.length<<2)+1;Nu=Tu(S4),ta(bs,Nu,S4)}return Nu},array:function(bs){var Nu=Tu(bs.length);return na(bs,Nu),Nu}};function Ne(bs){return O==="string"?Vn(bs):O==="boolean"?Boolean(bs):bs}var Me=ys(N),Lt=[],gr=0;if(te)for(var yr=0;yr<te.length;yr++){var Ef=be[H[yr]];Ef?(gr===0&&(gr=Fg()),Lt[yr]=Ef(te[yr])):Lt[yr]=te[yr]}var Vd=Me.apply(null,Lt);function rR(bs){return gr!==0&&Sf(gr),Ne(bs)}return Vd=rR(Vd),Vd}function Wn(N,O,H,te){H=H||[];var Ae=H.every(function(Ne){return Ne==="number"}),be=O!=="string";return be&&Ae&&!te?ys(N):function(){return dn(N,O,H,arguments,te)}}var As=1;function xs(N){var O=new TextDecoder(N);this.decode=H=>(H.buffer instanceof SharedArrayBuffer&&(H=new Uint8Array(H)),O.decode.call(O,H))}var Rn=typeof TextDecoder!="undefined"?new xs("utf8"):void 0;function zs(N,O,H){for(var te=O+H,Ae=O;N[Ae]&&!(Ae>=te);)++Ae;if(Ae-O>16&&N.subarray&&Rn)return Rn.decode(N.subarray(O,Ae));for(var be="";O<Ae;){var Ne=N[O++];if(!(Ne&128)){be+=String.fromCharCode(Ne);continue}var Me=N[O++]&63;if((Ne&224)==192){be+=String.fromCharCode((Ne&31)<<6|Me);continue}var Lt=N[O++]&63;if((Ne&240)==224?Ne=(Ne&15)<<12|Me<<6|Lt:Ne=(Ne&7)<<18|Me<<12|Lt<<6|N[O++]&63,Ne<65536)be+=String.fromCharCode(Ne);else{var gr=Ne-65536;be+=String.fromCharCode(55296|gr>>10,56320|gr&1023)}}return be}function Vn(N,O){return N?zs(o(),N,O):""}function ea(N,O,H,te){if(!(te>0))return 0;for(var Ae=H,be=H+te-1,Ne=0;Ne<N.length;++Ne){var Me=N.charCodeAt(Ne);if(Me>=55296&&Me<=57343){var Lt=N.charCodeAt(++Ne);Me=65536+((Me&1023)<<10)|Lt&1023}if(Me<=127){if(H>=be)break;O[H++]=Me}else if(Me<=2047){if(H+1>=be)break;O[H++]=192|Me>>6,O[H++]=128|Me&63}else if(Me<=65535){if(H+2>=be)break;O[H++]=224|Me>>12,O[H++]=128|Me>>6&63,O[H++]=128|Me&63}else{if(H+3>=be)break;O[H++]=240|Me>>18,O[H++]=128|Me>>12&63,O[H++]=128|Me>>6&63,O[H++]=128|Me&63}}return O[H]=0,H-Ae}function ta(N,O,H){return ea(N,o(),O,H)}function mu(N){for(var O=0,H=0;H<N.length;++H){var te=N.charCodeAt(H);te>=55296&&te<=57343&&(te=65536+((te&1023)<<10)|N.charCodeAt(++H)&1023),te<=127?++O:te<=2047?O+=2:te<=65535?O+=3:O+=4}return O}var Ra=typeof TextDecoder!="undefined"?new xs("utf-16le"):void 0;function na(N,O){a().set(N,O)}function Rd(N,O,H){for(var te=0;te<N.length;++te)a()[O++>>0]=N.charCodeAt(te);H||(a()[O>>0]=0)}function gu(N,O){return N%O>0&&(N+=O-N%O),N}var Un,Kh,Zh,_d,Yh,Jh,a4,Qh,ef;S&&(Un=d.buffer);function pr(N){Un=N,d.HEAP8=Kh=new Int8Array(N),d.HEAP16=_d=new Int16Array(N),d.HEAP32=Jh=new Int32Array(N),d.HEAPU8=Zh=new Uint8Array(N),d.HEAPU16=Yh=new Uint16Array(N),d.HEAPU32=a4=new Uint32Array(N),d.HEAPF32=Qh=new Float32Array(N),d.HEAPF64=ef=new Float64Array(N)}var tf=d.INITIAL_MEMORY||16777216;if(S)$e=d.wasmMemory,Un=d.buffer;else if(d.wasmMemory)$e=d.wasmMemory;else if($e=new WebAssembly.Memory({initial:tf/65536,maximum:32768,shared:!0}),!($e.buffer instanceof SharedArrayBuffer))throw Q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),k&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$e&&(Un=$e.buffer),tf=Un.byteLength,pr(Un);var Ls,yu=[],_a=[],o1=[],nf=[],bi=!1,i1=!1,sf=0;function vi(){return yt||sf>0}function Gn(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)o4(d.preRun.shift());lf(yu)}function Dd(){bi=!0,!S&&lf(_a)}function l1(){S||(ze.terminateAllThreads(),i1=!0)}function u1(){if(!S){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)$d(d.postRun.shift());lf(nf)}}function o4(N){yu.unshift(N)}function i4(N){_a.unshift(N)}function $d(N){nf.unshift(N)}var Da=0,rf=null,hr=null;function Pd(N){Da++,d.monitorRunDependencies&&d.monitorRunDependencies(Da)}function l4(N){if(Da--,d.monitorRunDependencies&&d.monitorRunDependencies(Da),Da==0&&(rf!==null&&(clearInterval(rf),rf=null),hr)){var O=hr;hr=null,O()}}d.preloadedImages={},d.preloadedAudios={};function Au(N){S?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",Q(N),wt=!0,Bn=1,N+=". Build with -s ASSERTIONS=1 for more info.";var O=new WebAssembly.RuntimeError(N);throw f(O),O}var c1="data:application/octet-stream;base64,";function Fd(N){return N.startsWith(c1)}function af(N){return N.startsWith("file://")}var Hn;Hn="tfjs-backend-wasm-threaded-simd.wasm",Fd(Hn)||(Hn=R(Hn));function of(N){try{if(N==Hn&&dt)return new Uint8Array(dt);if(D)return D(N);throw"both async and sync fetching of the wasm failed"}catch(O){Au(O)}}function xu(){if(!dt&&(b||w)){if(typeof fetch=="function"&&!af(Hn))return fetch(Hn,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+Hn+"'";return N.arrayBuffer()}).catch(function(){return of(Hn)});if(_)return new Promise(function(N,O){_(Hn,function(H){N(new Uint8Array(H))},O)})}return Promise.resolve().then(function(){return of(Hn)})}function d1(){var N={env:bf,wasi_snapshot_preview1:bf};function O(Ne,Me){var Lt=Ne.exports;if(d.asm=Lt,A1(d.asm.emscripten_tls_init),Ls=d.asm.__indirect_function_table,i4(d.asm.__wasm_call_ctors),Tt=Me,!S){var gr=ze.unusedWorkers.length;ze.unusedWorkers.forEach(function(yr){ze.loadWasmModuleToWorker(yr,function(){--gr||l4("wasm-instantiate")})})}}S||Pd("wasm-instantiate");function H(Ne){O(Ne.instance,Ne.module)}function te(Ne){return xu().then(function(Me){return WebAssembly.instantiate(Me,N)}).then(function(Me){return Me}).then(Ne,function(Me){Q("failed to asynchronously prepare wasm: "+Me),Au(Me)})}function Ae(){return!dt&&typeof WebAssembly.instantiateStreaming=="function"&&!Fd(Hn)&&!af(Hn)&&typeof fetch=="function"?fetch(Hn,{credentials:"same-origin"}).then(function(Ne){var Me=WebAssembly.instantiateStreaming(Ne,N);return Me.then(H,function(Lt){return Q("wasm streaming compile failed: "+Lt),Q("falling back to ArrayBuffer instantiation"),te(H)})}):te(H)}if(d.instantiateWasm)try{var be=d.instantiateWasm(N,O);return be}catch(Ne){return Q("Module.instantiateWasm callback failed with error: "+Ne),!1}return Ae().catch(f),{}}var u4,c4,p1={};function lf(N){for(;N.length>0;){var O=N.shift();if(typeof O=="function"){O(d);continue}var H=O.func;typeof H=="number"?O.arg===void 0?vu(H)():vu(H)(O.arg):H(O.arg===void 0?null:O.arg)}}function bu(N){var O=Fg(),H=N();return Sf(O),H}function pE(N){return N}function d4(N){var O=/\b_Z[\w\d_]+/g;return N.replace(O,function(H){var te=H;return H===te?H:te+" ["+H+"]"})}function h1(N){u()[N>>2]=0;var O=ze.pthreads[N];delete ze.pthreads[N],O.worker.terminate(),Pg(N),ze.runningWorkers.splice(ze.runningWorkers.indexOf(O.worker),1),O.worker.pthread=void 0}function f1(N){var O=ze.pthreads[N];O.worker.postMessage({cmd:"cancel"})}function uf(N){var O=ze.pthreads[N];if(O){u()[N>>2]=0;var H=O.worker;ze.returnWorkerToPool(H)}}function cf(N){tR(N)}function m1(N){if(N instanceof Wd||N=="unwind")return Bn;A(1,N)}var ze={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){S?ze.initWorker():ze.initMainThread()},initMainThread:function(){for(var N=8,O=0;O<N;++O)ze.allocateUnusedWorker()},initWorker:function(){yt=!1},pthreads:{},setExitStatus:function(N){Bn=N},terminateAllThreads:function(){for(var N in ze.pthreads){var O=ze.pthreads[N];O&&O.worker&&ze.returnWorkerToPool(O.worker)}for(var H=0;H<ze.unusedWorkers.length;++H){var te=ze.unusedWorkers[H];te.terminate()}ze.unusedWorkers=[]},returnWorkerToPool:function(N){ze.runWithoutMainThreadQueuedCalls(function(){delete ze.pthreads[N.pthread.threadInfoStruct],ze.unusedWorkers.push(N),ze.runningWorkers.splice(ze.runningWorkers.indexOf(N),1),Pg(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){u()[I4>>2]=0;try{N()}finally{u()[I4>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in ze.tlsInitFunctions)ze.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,O){N.onmessage=H=>{var te=H.data,Ae=te.cmd;if(N.pthread&&(ze.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),te.targetThread&&te.targetThread!=If()){var be=ze.pthreads[te.targetThread];be?be.worker.postMessage(te,te.transferList):Q('Internal error! Worker sent a message "'+Ae+'" to target pthread '+te.targetThread+", but that thread no longer exists!"),ze.currentProxiedOperationCallerThread=void 0;return}Ae==="processQueuedMainThreadWork"?x4():Ae==="spawnThread"?pf(te):Ae==="cleanupThread"?uf(te.thread):Ae==="killThread"?h1(te.thread):Ae==="cancelThread"?f1(te.thread):Ae==="loaded"?(N.loaded=!0,O&&O(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):Ae==="print"?ee("Thread "+te.threadId+": "+te.text):Ae==="printErr"?Q("Thread "+te.threadId+": "+te.text):Ae==="alert"?alert("Thread "+te.threadId+": "+te.text):te.target==="setimmediate"?N.postMessage(te):Ae==="onAbort"?d.onAbort&&d.onAbort(te.arg):Q("worker sent an unknown command "+Ae),ze.currentProxiedOperationCallerThread=void 0},N.onerror=H=>{var te="worker sent an error!";throw Q(te+" "+H.filename+":"+H.lineno+": "+H.message),H},k&&(N.on("message",function(H){N.onmessage({data:H})}),N.on("error",function(H){N.onerror(H)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||s,wasmMemory:$e,wasmModule:Tt})},allocateUnusedWorker:function(){var N=R("tfjs-backend-wasm-threaded-simd.worker.js");ze.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return ze.unusedWorkers.length==0&&(ze.allocateUnusedWorker(),ze.loadWasmModuleToWorker(ze.unusedWorkers[0])),ze.unusedWorkers.pop()}};function g1(){var N=If(),O=u()[N+44>>2],H=u()[N+48>>2],te=O-H;k4(O,te),Sf(O)}d.establishStackSpace=g1;function df(N){if(S)return Ii(1,0,N);try{cf(N)}catch(O){m1(O)}}var wi=[];function vu(N){var O=wi[N];return O||(N>=wi.length&&(wi.length=N+1),wi[N]=O=Ls.get(N)),O}function y1(N,O){return vu(N)(O)}d.invokeEntryPoint=y1;function p4(){var N=new Error;if(!N.stack){try{throw new Error}catch(O){N=O}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function A1(N,O,H){ze.tlsInitFunctions.push(N)}function h4(N,O){Ls.set(N,O),wi[N]=O}var ki;k?ki=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:S?ki=()=>performance.now()-d.__performance_now_clock_drift:ki=()=>performance.now();var x1=!0;function b1(N){return u()[A4()>>2]=N,N}function v1(N,O){var H;if(N===0)H=Date.now();else if((N===1||N===4)&&x1)H=ki();else return b1(28),-1;return u()[O>>2]=H/1e3|0,u()[O+4>>2]=H%1e3*1e3*1e3|0,0}function w1(N,O){return v1(N,O)}function k1(N){b4(N,!w,1,!b),ze.threadInit()}function I1(N){S?postMessage({cmd:"cleanupThread",thread:N}):uf(N)}function pf(N){var O=ze.getNewWorker();if(!O)return 6;ze.runningWorkers.push(O);var H=ze.pthreads[N.pthread_ptr]={worker:O,threadInfoStruct:N.pthread_ptr};O.pthread=H;var te={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return O.runPthread=()=>{te.time=performance.now(),O.postMessage(te,N.transferList)},O.loaded&&(O.runPthread(),delete O.runPthread),0}function S1(N,O,H,te){if(typeof SharedArrayBuffer=="undefined")return Q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ae=[],be=0;if(S&&(Ae.length===0||be))return v4(687865856,N,O,H,te);if(be)return be;var Ne={startRoutine:H,pthread_ptr:N,arg:te,transferList:Ae};return S?(Ne.cmd="spawnThread",postMessage(Ne,Ae),0):pf(Ne)}function C1(){return 2097152}function T1(N,O){if(N==O)postMessage({cmd:"processQueuedMainThreadWork"});else if(S)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var H=ze.pthreads[N],te=H&&H.worker;if(!te)return;te.postMessage({cmd:"processThreadQueue"})}return 1}function N1(){Au("")}function E1(){k||w||J("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function hf(){return 2147483648}function R1(N,O,H){o().copyWithin(N,O,O+H)}function _1(){return k?FR().cpus().length:navigator.hardwareConcurrency}function Ii(N,O){var H=arguments.length-2,te=arguments;return bu(function(){for(var Ae=H,be=Tu(Ae*8),Ne=be>>3,Me=0;Me<H;Me++){var Lt=te[2+Me];p()[Ne+Me]=Lt}return w4(N,Ae,be,O)})}var Od=[];function D1(N,O,H){Od.length=O;for(var te=H>>3,Ae=0;Ae<O;Ae++)Od[Ae]=p()[te+Ae];var be=N<0,Ne=be?p1[-N-1]:Y1[N];return Ne.apply(null,Od)}function $1(N){try{return $e.grow(N-Un.byteLength+65535>>>16),pr($e.buffer),1}catch(O){}}function P1(N){var O=o().length;if(N=N>>>0,N<=O)return!1;var H=hf();if(N>H)return!1;for(var te=1;te<=4;te*=2){var Ae=O*(1+.2/te);Ae=Math.min(Ae,N+100663296);var be=Math.min(H,gu(Math.max(N,Ae),65536)),Ne=$1(be);if(Ne)return!0}return!1}var Ze={inEventHandler:0,removeAllEventListeners:function(){for(var N=Ze.eventHandlers.length-1;N>=0;--N)Ze._removeHandler(N);Ze.eventHandlers=[],Ze.deferredCalls=[]},registerRemoveEventListeners:function(){Ze.removeEventListenersRegistered||(o1.push(Ze.removeAllEventListeners),Ze.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,O,H){function te(Ne,Me){if(Ne.length!=Me.length)return!1;for(var Lt in Ne)if(Ne[Lt]!=Me[Lt])return!1;return!0}for(var Ae in Ze.deferredCalls){var be=Ze.deferredCalls[Ae];if(be.targetFunction==N&&te(be.argsList,H))return}Ze.deferredCalls.push({targetFunction:N,precedence:O,argsList:H}),Ze.deferredCalls.sort(function(Ne,Me){return Ne.precedence<Me.precedence})},removeDeferredCalls:function(N){for(var O=0;O<Ze.deferredCalls.length;++O)Ze.deferredCalls[O].targetFunction==N&&(Ze.deferredCalls.splice(O,1),--O)},canPerformEventHandlerRequests:function(){return Ze.inEventHandler&&Ze.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Ze.canPerformEventHandlerRequests())for(var N=0;N<Ze.deferredCalls.length;++N){var O=Ze.deferredCalls[N];Ze.deferredCalls.splice(N,1),--N,O.targetFunction.apply(null,O.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,O){for(var H=0;H<Ze.eventHandlers.length;++H)Ze.eventHandlers[H].target==N&&(!O||O==Ze.eventHandlers[H].eventTypeString)&&Ze._removeHandler(H--)},_removeHandler:function(N){var O=Ze.eventHandlers[N];O.target.removeEventListener(O.eventTypeString,O.eventListenerFunc,O.useCapture),Ze.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var O=function(Ae){++Ze.inEventHandler,Ze.currentEventHandler=N,Ze.runDeferredCalls(),N.handlerFunc(Ae),Ze.runDeferredCalls(),--Ze.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=O,N.target.addEventListener(N.eventTypeString,O,N.useCapture),Ze.eventHandlers.push(N),Ze.registerRemoveEventListeners();else for(var H=0;H<Ze.eventHandlers.length;++H)Ze.eventHandlers[H].target==N.target&&Ze.eventHandlers[H].eventTypeString==N.eventTypeString&&Ze._removeHandler(H--)},queueEventHandlerOnThread_iiii:function(N,O,H,te,Ae){bu(function(){var be=Tu(12);u()[be>>2]=H,u()[be+4>>2]=te,u()[be+8>>2]=Ae,$g(N,637534208,O,te,be)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return ze.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function F1(N){var O=mu(N)+1,H=Dg(O);return ta(N,H,O),H}function O1(N,O,H,te){bu(function(){var Ae=Tu(12),be=0;O&&(be=F1(O)),u()[Ae>>2]=be,u()[Ae+4>>2]=H,u()[Ae+8>>2]=te,$g(N,657457152,0,be,Ae)})}function M1(N,O,H,te){O=O?Vn(O):"",O1(N,O,H,te)}function z1(N){return N>2?Vn(N):N}var L1=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function B1(N){N=z1(N);var O=L1[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return O}function Md(N){return B1(N)}function ff(N,O,H){var te=Md(N);if(!te)return-4;if(te.canvasSharedPtr&&(u()[te.canvasSharedPtr>>2]=O,u()[te.canvasSharedPtr+4>>2]=H),te.offscreenCanvas||!te.controlTransferredOffscreen){te.offscreenCanvas&&(te=te.offscreenCanvas);var Ae=!1;if(te.GLctxObject&&te.GLctxObject.GLctx){var be=te.GLctxObject.GLctx.getParameter(2978);Ae=be[0]===0&&be[1]===0&&be[2]===te.width&&be[3]===te.height}te.width=O,te.height=H,Ae&&te.GLctxObject.GLctx.viewport(0,0,O,H)}else if(te.canvasSharedPtr){var Ne=u()[te.canvasSharedPtr+8>>2];return M1(Ne,N,O,H),1}else return-4;return 0}function mf(N,O,H){return S?Ii(2,1,N,O,H):ff(N,O,H)}function W1(N,O,H){var te=Md(N);return te?ff(N,O,H):mf(N,O,H)}function V1(){throw"unwind"}function U1(N){var O=N.getExtension("ANGLE_instanced_arrays");if(O)return N.vertexAttribDivisor=function(H,te){O.vertexAttribDivisorANGLE(H,te)},N.drawArraysInstanced=function(H,te,Ae,be){O.drawArraysInstancedANGLE(H,te,Ae,be)},N.drawElementsInstanced=function(H,te,Ae,be,Ne){O.drawElementsInstancedANGLE(H,te,Ae,be,Ne)},1}function G1(N){var O=N.getExtension("OES_vertex_array_object");if(O)return N.createVertexArray=function(){return O.createVertexArrayOES()},N.deleteVertexArray=function(H){O.deleteVertexArrayOES(H)},N.bindVertexArray=function(H){O.bindVertexArrayOES(H)},N.isVertexArray=function(H){return O.isVertexArrayOES(H)},1}function H1(N){var O=N.getExtension("WEBGL_draw_buffers");if(O)return N.drawBuffers=function(H,te){O.drawBuffersWEBGL(H,te)},1}function j1(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var zt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(O){zt.lastError||(zt.lastError=O)},getNewId:function(N){for(var O=zt.counter++,H=N.length;H<O;H++)N[H]=null;return O},getSource:function(N,O,H,te){for(var Ae="",be=0;be<O;++be){var Ne=te?u()[te+be*4>>2]:-1;Ae+=Vn(u()[H+be*4>>2],Ne<0?void 0:Ne)}return Ae},createContext:function(N,O){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(Ae,be){var Ne=N.getContextSafariWebGL2Fixed(Ae,be);return Ae=="webgl"==Ne instanceof WebGLRenderingContext?Ne:null});var H=N.getContext("webgl",O);if(!H)return 0;var te=zt.registerContext(H,O);return te},registerContext:function(N,O){var H=Dg(8);u()[H+4>>2]=If();var te={handle:H,attributes:O,version:O.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=te),zt.contexts[H]=te,(typeof O.enableExtensionsByDefault=="undefined"||O.enableExtensionsByDefault)&&zt.initExtensions(te),H},makeContextCurrent:function(N){return zt.currentContext=zt.contexts[N],d.ctx=xf=zt.currentContext&&zt.currentContext.GLctx,!(N&&!xf)},getContext:function(N){return zt.contexts[N]},deleteContext:function(N){zt.currentContext===zt.contexts[N]&&(zt.currentContext=null),typeof Ze=="object"&&Ze.removeAllHandlersOnTarget(zt.contexts[N].GLctx.canvas),zt.contexts[N]&&zt.contexts[N].GLctx.canvas&&(zt.contexts[N].GLctx.canvas.GLctxObject=void 0),y4(zt.contexts[N].handle),zt.contexts[N]=null},initExtensions:function(N){if(N||(N=zt.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var O=N.GLctx;U1(O),G1(O),H1(O),O.disjointTimerQueryExt=O.getExtension("EXT_disjoint_timer_query"),j1(O);var H=O.getSupportedExtensions()||[];H.forEach(function(te){!te.includes("lose_context")&&!te.includes("debug")&&O.getExtension(te)})}}},q1=["default","low-power","high-performance"];function X1(N,O){var H=O>>2,te=u()[H+6],Ae={alpha:!!u()[H+0],depth:!!u()[H+1],stencil:!!u()[H+2],antialias:!!u()[H+3],premultipliedAlpha:!!u()[H+4],preserveDrawingBuffer:!!u()[H+5],powerPreference:q1[te],failIfMajorPerformanceCaveat:!!u()[H+7],majorVersion:u()[H+8],minorVersion:u()[H+9],enableExtensionsByDefault:u()[H+10],explicitSwapControl:u()[H+11],proxyContextToMainThread:u()[H+12],renderViaOffscreenBackBuffer:u()[H+13]},be=Md(N);if(!be||Ae.explicitSwapControl)return 0;var Ne=zt.createContext(be,Ae);return Ne}function K1(N,O){return X1(N,O)}var wu={mappings:{},buffers:[null,[],[]],printChar:function(N,O){var H=wu.buffers[N];O===0||O===10?((N===1?ee:Q)(zs(H,0)),H.length=0):H.push(O)},varargs:void 0,get:function(){wu.varargs+=4;var N=u()[wu.varargs-4>>2];return N},getStr:function(N){var O=Vn(N);return O},get64:function(N,O){return N}};function gf(N){return S?Ii(3,1,N):0}function yf(N,O,H,te,Ae){if(S)return Ii(4,1,N,O,H,te,Ae)}function Af(N,O,H,te){if(S)return Ii(5,1,N,O,H,te);for(var Ae=0,be=0;be<H;be++){var Ne=u()[O>>2],Me=u()[O+4>>2];O+=8;for(var Lt=0;Lt<Me;Lt++)wu.printChar(N,o()[Ne+Lt]);Ae+=Me}return u()[te>>2]=Ae,0}function Z1(N){Be(N)}ze.init();var xf,Y1=[null,df,mf,gf,yf,Af],f4=!1,bf={__clock_gettime:w1,__emscripten_init_main_thread_js:k1,__emscripten_thread_cleanup:I1,__pthread_create_js:S1,_emscripten_default_pthread_stack_size:C1,_emscripten_notify_thread_queue:T1,abort:N1,emscripten_check_blocking_allowed:E1,emscripten_get_heap_max:hf,emscripten_get_now:ki,emscripten_memcpy_big:R1,emscripten_num_logical_cores:_1,emscripten_receive_on_main_thread_js:D1,emscripten_resize_heap:P1,emscripten_set_canvas_element_size:W1,emscripten_unwind_to_js_event_loop:V1,emscripten_webgl_create_context:K1,exit:cf,fd_close:gf,fd_seek:yf,fd_write:Af,memory:$e||d.wasmMemory,setTempRet0:Z1},m4=d1(),J1=d.___wasm_call_ctors=function(){return(J1=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},Q1=d._init=function(){return(Q1=d._init=d.asm.init).apply(null,arguments)},eg=d._init_with_threads_count=function(){return(eg=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},tg=d._get_threads_count=function(){return(tg=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},ng=d._register_tensor=function(){return(ng=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},sg=d._dispose_data=function(){return(sg=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},rg=d._dispose=function(){return(rg=d._dispose=d.asm.dispose).apply(null,arguments)},ag=d._Abs=function(){return(ag=d._Abs=d.asm.Abs).apply(null,arguments)},og=d._Add=function(){return(og=d._Add=d.asm.Add).apply(null,arguments)},ig=d._AddN=function(){return(ig=d._AddN=d.asm.AddN).apply(null,arguments)},lg=d._All=function(){return(lg=d._All=d.asm.All).apply(null,arguments)},ug=d._Any=function(){return(ug=d._Any=d.asm.Any).apply(null,arguments)},cg=d._ArgMax=function(){return(cg=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},dg=d._AvgPool=function(){return(dg=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},pg=d._BatchMatMul=function(){return(pg=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},hg=d._Ceil=function(){return(hg=d._Ceil=d.asm.Ceil).apply(null,arguments)},fg=d._ClipByValue=function(){return(fg=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},mg=d._Conv2D=function(){return(mg=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},gg=d._Conv2DBackpropInput=function(){return(gg=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},yg=d._Cos=function(){return(yg=d._Cos=d.asm.Cos).apply(null,arguments)},Ag=d._Cosh=function(){return(Ag=d._Cosh=d.asm.Cosh).apply(null,arguments)},xg=d._CropAndResize=function(){return(xg=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},bg=d._Cumprod=function(){return(bg=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},vg=d._Cumsum=function(){return(vg=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},wg=d._DepthToSpace=function(){return(wg=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},kg=d._DepthwiseConv2dNative=function(){return(kg=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},Ig=d._Elu=function(){return(Ig=d._Elu=d.asm.Elu).apply(null,arguments)},Sg=d._Equal=function(){return(Sg=d._Equal=d.asm.Equal).apply(null,arguments)},Cg=d._Exp=function(){return(Cg=d._Exp=d.asm.Exp).apply(null,arguments)},Tg=d._FlipLeftRight=function(){return(Tg=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},vf=d._Floor=function(){return(vf=d._Floor=d.asm.Floor).apply(null,arguments)},wf=d._FloorDiv=function(){return(wf=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},zd=d._FusedBatchNorm=function(){return(zd=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},Ng=d._FusedConv2D=function(){return(Ng=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},Eg=d._FusedDepthwiseConv2D=function(){return(Eg=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},ku=d._Gather=function(){return(ku=d._Gather=d.asm.Gather).apply(null,arguments)},Ld=d._GatherNd=function(){return(Ld=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},Bd=d._Greater=function(){return(Bd=d._Greater=d.asm.Greater).apply(null,arguments)},g4=d._GreaterEqual=function(){return(g4=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},Iu=d._LeakyRelu=function(){return(Iu=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},Su=d._Less=function(){return(Su=d._Less=d.asm.Less).apply(null,arguments)},Rg=d._LessEqual=function(){return(Rg=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},X=d._Log=function(){return(X=d._Log=d.asm.Log).apply(null,arguments)},se=d._LogicalAnd=function(){return(se=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},xe=d._Max=function(){return(xe=d._Max=d.asm.Max).apply(null,arguments)},De=d._MaxPool=function(){return(De=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},pt=d._Maximum=function(){return(pt=d._Maximum=d.asm.Maximum).apply(null,arguments)},mt=d._Mean=function(){return(mt=d._Mean=d.asm.Mean).apply(null,arguments)},Je=d._Min=function(){return(Je=d._Min=d.asm.Min).apply(null,arguments)},Xe=d._Minimum=function(){return(Xe=d._Minimum=d.asm.Minimum).apply(null,arguments)},en=d._MirrorPad=function(){return(en=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},fr=d._Multiply=function(){return(fr=d._Multiply=d.asm.Multiply).apply(null,arguments)},mr=d._Neg=function(){return(mr=d._Neg=d.asm.Neg).apply(null,arguments)},Cu=d._NonMaxSuppressionV3=function(){return(Cu=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},Si=d._NonMaxSuppressionV4=function(){return(Si=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},_g=d._NonMaxSuppressionV5=function(){return(_g=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},jn=d._NotEqual=function(){return(jn=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},$a=d._OneHot=function(){return($a=d._OneHot=d.asm.OneHot).apply(null,arguments)},kf=d._PadV2=function(){return(kf=d._PadV2=d.asm.PadV2).apply(null,arguments)},hE=d._Pow=function(){return(hE=d._Pow=d.asm.Pow).apply(null,arguments)},fE=d._Prelu=function(){return(fE=d._Prelu=d.asm.Prelu).apply(null,arguments)},mE=d._Prod=function(){return(mE=d._Prod=d.asm.Prod).apply(null,arguments)},gE=d._RealDiv=function(){return(gE=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},yE=d._Relu=function(){return(yE=d._Relu=d.asm.Relu).apply(null,arguments)},AE=d._Relu6=function(){return(AE=d._Relu6=d.asm.Relu6).apply(null,arguments)},xE=d._ResizeBilinear=function(){return(xE=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},bE=d._Reverse=function(){return(bE=d._Reverse=d.asm.Reverse).apply(null,arguments)},vE=d._RotateWithOffset=function(){return(vE=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},wE=d._Round=function(){return(wE=d._Round=d.asm.Round).apply(null,arguments)},kE=d._Rsqrt=function(){return(kE=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},IE=d._ScatterNd=function(){return(IE=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},SE=d._SelectV2=function(){return(SE=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},CE=d._Sigmoid=function(){return(CE=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},TE=d._Sin=function(){return(TE=d._Sin=d.asm.Sin).apply(null,arguments)},NE=d._Softmax=function(){return(NE=d._Softmax=d.asm.Softmax).apply(null,arguments)},EE=d._SparseFillEmptyRows=function(){return(EE=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},RE=d._SparseReshape=function(){return(RE=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},_E=d._SparseSegmentReduction=function(){return(_E=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},DE=d._Sqrt=function(){return(DE=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},$E=d._Square=function(){return($E=d._Square=d.asm.Square).apply(null,arguments)},PE=d._SquaredDifference=function(){return(PE=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},FE=d._Step=function(){return(FE=d._Step=d.asm.Step).apply(null,arguments)},OE=d._StridedSlice=function(){return(OE=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},ME=d._Sub=function(){return(ME=d._Sub=d.asm.Sub).apply(null,arguments)},zE=d._Sum=function(){return(zE=d._Sum=d.asm.Sum).apply(null,arguments)},LE=d._Tan=function(){return(LE=d._Tan=d.asm.Tan).apply(null,arguments)},BE=d._Tanh=function(){return(BE=d._Tanh=d.asm.Tanh).apply(null,arguments)},WE=d._Tile=function(){return(WE=d._Tile=d.asm.Tile).apply(null,arguments)},VE=d._TopK=function(){return(VE=d._TopK=d.asm.TopK).apply(null,arguments)},UE=d._Transform=function(){return(UE=d._Transform=d.asm.Transform).apply(null,arguments)},GE=d._Transpose=function(){return(GE=d._Transpose=d.asm.Transpose).apply(null,arguments)},HE=d.__FusedMatMul=function(){return(HE=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},Dg=d._malloc=function(){return(Dg=d._malloc=d.asm.malloc).apply(null,arguments)},y4=d._free=function(){return(y4=d._free=d.asm.free).apply(null,arguments)},jE=d._emscripten_tls_init=function(){return(jE=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},A4=d.___errno_location=function(){return(A4=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},If=d._pthread_self=function(){return(If=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},x4=d._emscripten_main_thread_process_queued_calls=function(){return(x4=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},qE=d.__emscripten_thread_crashed=function(){return(qE=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},b4=d.__emscripten_thread_init=function(){return(b4=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},XE=d._emscripten_current_thread_process_queued_calls=function(){return(XE=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},KE=d._emscripten_main_browser_thread_id=function(){return(KE=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},ZE=d._emscripten_sync_run_in_main_thread_2=function(){return(ZE=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},v4=d._emscripten_sync_run_in_main_thread_4=function(){return(v4=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},w4=d._emscripten_run_in_main_runtime_thread_js=function(){return(w4=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},$g=d._emscripten_dispatch_to_thread_=function(){return($g=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Pg=d.__emscripten_thread_free_data=function(){return(Pg=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},YE=d.__emscripten_thread_exit=function(){return(YE=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},JE=d._memalign=function(){return(JE=d._memalign=d.asm.memalign).apply(null,arguments)},k4=d._emscripten_stack_set_limits=function(){return(k4=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},Fg=d.stackSave=function(){return(Fg=d.stackSave=d.asm.stackSave).apply(null,arguments)},Sf=d.stackRestore=function(){return(Sf=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Tu=d.stackAlloc=function(){return(Tu=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},QE=d.dynCall_iijjiiii=function(){return(QE=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},eR=d.dynCall_jiji=function(){return(eR=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},I4=d.__emscripten_allow_main_runtime_queued_calls=21464;d.cwrap=Wn,d.keepRuntimeAlive=vi,d.PThread=ze,d.PThread=ze,d.wasmMemory=$e,d.ExitStatus=Wd;var Cf;function Wd(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}hr=function N(){Cf||Og(),Cf||(hr=N)};function Og(N){if(N=N||y,Da>0)return;if(S){h(d),Dd(),postMessage({cmd:"loaded"});return}if(Gn(),Da>0)return;function O(){Cf||(Cf=!0,d.calledRun=!0,!wt&&(Dd(),h(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),u1()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),O()},1)):O()}d.run=Og;function tR(N,O){if(Bn=N,!O&&S)throw df(N),"unwind";vi()||l1(),nR(N)}function nR(N){Bn=N,vi()||(ze.terminateAllThreads(),d.onExit&&d.onExit(N),wt=!0),A(N,new Wd(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();Og();var Tf;m&&(Tf={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var Nf;if(typeof WasmBackendModule!="undefined")Nf=WasmBackendModule;else if(typeof r!="undefined")Nf=r;else throw new Error("Could not find wasm module in post.js");if(Tf){var sR=Nf._dispose;Nf._dispose=function(){sR(),Tf.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Tf.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),MR=Ct({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.18.0_br26fteayl44zj43fz4bazb7oq/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(X,se){o=X,i=se});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},a),c=[],p="./this.program",d=(X,se)=>{throw se},h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(X){return a.locateFile?a.locateFile(X,g):g+X}var x,A,b,w;function k(X){if(X instanceof Ld)return;_("exiting due to exception: "+X)}var S,E,R;m?(f?g=nm().dirname(g)+"/":g=__dirname+"/",R=()=>{E||(S=ty(),E=nm())},x=function(se,xe){return R(),se=E.normalize(se),S.readFileSync(se,xe?void 0:"utf8")},b=X=>{var se=x(X,!0);return se.buffer||(se=new Uint8Array(se)),se},A=(X,se,xe)=>{R(),X=E.normalize(X),S.readFile(X,function(De,pt){De?xe(De):se(pt.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof Ld))throw X}),process.on("unhandledRejection",function(X){throw X}),d=(X,se)=>{if(_d())throw process.exitCode=X,se;k(se),process.exit(X)},a.inspect=function(){return"[Emscripten Module object]"}):(h||f)&&(f?g=self.location.href:typeof document!="undefined"&&document.currentScript&&(g=document.currentScript.src),s&&(g=s),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",x=X=>{var se=new XMLHttpRequest;return se.open("GET",X,!1),se.send(null),se.responseText},f&&(b=X=>{var se=new XMLHttpRequest;return se.open("GET",X,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),A=(X,se,xe)=>{var De=new XMLHttpRequest;De.open("GET",X,!0),De.responseType="arraybuffer",De.onload=()=>{if(De.status==200||De.status==0&&De.response){se(De.response);return}xe()},De.onerror=xe,De.send(null)},w=X=>document.title=X);var $=a.print||console.log.bind(console),_=a.printErr||console.warn.bind(console);Object.assign(a,u),u=null,a.arguments&&(c=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(d=a.quit);var D=4;function C(X){C.shown||(C.shown={}),C.shown[X]||(C.shown[X]=1,_(X))}function F(X,se){if(typeof WebAssembly.Function=="function"){for(var xe={i:"i32",j:"i64",f:"f32",d:"f64"},De={parameters:[],results:se[0]=="v"?[]:[xe[se[0]]]},pt=1;pt<se.length;++pt)De.parameters.push(xe[se[pt]]);return new WebAssembly.Function(De,X)}var mt=[1,0,1,96],Je=se.slice(0,1),Xe=se.slice(1),en={i:127,j:126,f:125,d:124};mt.push(Xe.length);for(var pt=0;pt<Xe.length;++pt)mt.push(en[Xe[pt]]);Je=="v"?mt.push(0):mt=mt.concat([1,en[Je]]),mt[1]=mt.length-2;var fr=new Uint8Array([0,97,115,109,1,0,0,0].concat(mt,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),mr=new WebAssembly.Module(fr),Cu=new WebAssembly.Instance(mr,{e:{f:X}}),Si=Cu.exports.f;return Si}var V=[],j;function z(){if(V.length)return V.pop();try{Ra.grow(1)}catch(X){throw X instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":X}return Ra.length-1}function Z(X,se){for(var xe=X;xe<X+se;xe++){var De=Pd(xe);De&&j.set(De,xe)}}var W=0,ee=X=>{W=X},Q;a.wasmBinary&&(Q=a.wasmBinary);var ie=a.noExitRuntime||!0;typeof WebAssembly!="object"&&bi("no native wasm support detected");var J,ae=!1,le;function ye(X,se){X||bi(se)}function we(X){var se=a["_"+X];return se}function Re(X,se,xe,De,pt){var mt={string:function(jn){var $a=0;if(jn!=null&&jn!==0){var kf=(jn.length<<2)+1;$a=zd(kf),yt(jn,$a,kf)}return $a},array:function(jn){var $a=zd(jn.length);return wt(jn,$a),$a}};function Je(jn){return se==="string"?ct(jn):se==="boolean"?Boolean(jn):jn}var Xe=we(X),en=[],fr=0;if(De)for(var mr=0;mr<De.length;mr++){var Cu=mt[xe[mr]];Cu?(fr===0&&(fr=vf()),en[mr]=Cu(De[mr])):en[mr]=De[mr]}var Si=Xe.apply(null,en);function _g(jn){return fr!==0&&wf(fr),Je(jn)}return Si=_g(Si),Si}function _e(X,se,xe,De){xe=xe||[];var pt=xe.every(function(Je){return Je==="number"}),mt=se!=="string";return mt&&pt&&!De?we(X):function(){return Re(X,se,xe,arguments,De)}}var Be=1,Ue=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ot(X,se,xe){for(var De=se+xe,pt=se;X[pt]&&!(pt>=De);)++pt;if(pt-se>16&&X.subarray&&Ue)return Ue.decode(X.subarray(se,pt));for(var mt="";se<pt;){var Je=X[se++];if(!(Je&128)){mt+=String.fromCharCode(Je);continue}var Xe=X[se++]&63;if((Je&224)==192){mt+=String.fromCharCode((Je&31)<<6|Xe);continue}var en=X[se++]&63;if((Je&240)==224?Je=(Je&15)<<12|Xe<<6|en:Je=(Je&7)<<18|Xe<<12|en<<6|X[se++]&63,Je<65536)mt+=String.fromCharCode(Je);else{var fr=Je-65536;mt+=String.fromCharCode(55296|fr>>10,56320|fr&1023)}}return mt}function ct(X,se){return X?ot(Wn,X,se):""}function dt(X,se,xe,De){if(!(De>0))return 0;for(var pt=xe,mt=xe+De-1,Je=0;Je<X.length;++Je){var Xe=X.charCodeAt(Je);if(Xe>=55296&&Xe<=57343){var en=X.charCodeAt(++Je);Xe=65536+((Xe&1023)<<10)|en&1023}if(Xe<=127){if(xe>=mt)break;se[xe++]=Xe}else if(Xe<=2047){if(xe+1>=mt)break;se[xe++]=192|Xe>>6,se[xe++]=128|Xe&63}else if(Xe<=65535){if(xe+2>=mt)break;se[xe++]=224|Xe>>12,se[xe++]=128|Xe>>6&63,se[xe++]=128|Xe&63}else{if(xe+3>=mt)break;se[xe++]=240|Xe>>18,se[xe++]=128|Xe>>12&63,se[xe++]=128|Xe>>6&63,se[xe++]=128|Xe&63}}return se[xe]=0,xe-pt}function yt(X,se,xe){return dt(X,Wn,se,xe)}function $e(X){for(var se=0,xe=0;xe<X.length;++xe){var De=X.charCodeAt(xe);De>=55296&&De<=57343&&(De=65536+((De&1023)<<10)|X.charCodeAt(++xe)&1023),De<=127?++se:De<=2047?se+=2:De<=65535?se+=3:se+=4}return se}var Tt=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):void 0;function wt(X,se){dn.set(X,se)}function Bn(X,se,xe){for(var De=0;De<X.length;++De)dn[se++>>0]=X.charCodeAt(De);xe||(dn[se>>0]=0)}function Qt(X,se){return X%se>0&&(X+=se-X%se),X}var ys,dn,Wn,As,xs,Rn,zs,Vn,ea;function ta(X){ys=X,a.HEAP8=dn=new Int8Array(X),a.HEAP16=As=new Int16Array(X),a.HEAP32=Rn=new Int32Array(X),a.HEAPU8=Wn=new Uint8Array(X),a.HEAPU16=xs=new Uint16Array(X),a.HEAPU32=zs=new Uint32Array(X),a.HEAPF32=Vn=new Float32Array(X),a.HEAPF64=ea=new Float64Array(X)}var mu=a.INITIAL_MEMORY||16777216,Ra,na=[],Rd=[],gu=[],Un=!1,Kh=!1,Zh=0;function _d(){return ie||Zh>0}function Yh(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)ef(a.preRun.shift());$d(na)}function Jh(){Un=!0,$d(Rd)}function a4(){Kh=!0}function Qh(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)tf(a.postRun.shift());$d(gu)}function ef(X){na.unshift(X)}function pr(X){Rd.unshift(X)}function tf(X){gu.unshift(X)}var Ls=0,yu=null,_a=null;function o1(X){Ls++,a.monitorRunDependencies&&a.monitorRunDependencies(Ls)}function nf(X){if(Ls--,a.monitorRunDependencies&&a.monitorRunDependencies(Ls),Ls==0&&(yu!==null&&(clearInterval(yu),yu=null),_a)){var se=_a;_a=null,se()}}a.preloadedImages={},a.preloadedAudios={};function bi(X){a.onAbort&&a.onAbort(X),X="Aborted("+X+")",_(X),ae=!0,le=1,X+=". Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(X);throw i(se),se}var i1="data:application/octet-stream;base64,";function sf(X){return X.startsWith(i1)}function vi(X){return X.startsWith("file://")}var Gn;Gn="tfjs-backend-wasm.wasm",sf(Gn)||(Gn=y(Gn));function Dd(X){try{if(X==Gn&&Q)return new Uint8Array(Q);if(b)return b(X);throw"both async and sync fetching of the wasm failed"}catch(se){bi(se)}}function l1(){if(!Q&&(h||f)){if(typeof fetch=="function"&&!vi(Gn))return fetch(Gn,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+Gn+"'";return X.arrayBuffer()}).catch(function(){return Dd(Gn)});if(A)return new Promise(function(X,se){A(Gn,function(xe){X(new Uint8Array(xe))},se)})}return Promise.resolve().then(function(){return Dd(Gn)})}function u1(){var X={env:bu,wasi_snapshot_preview1:bu};function se(Je,Xe){var en=Je.exports;a.asm=en,J=a.asm.memory,ta(J.buffer),Ra=a.asm.__indirect_function_table,pr(a.asm.__wasm_call_ctors),nf("wasm-instantiate")}o1("wasm-instantiate");function xe(Je){se(Je.instance)}function De(Je){return l1().then(function(Xe){return WebAssembly.instantiate(Xe,X)}).then(function(Xe){return Xe}).then(Je,function(Xe){_("failed to asynchronously prepare wasm: "+Xe),bi(Xe)})}function pt(){return!Q&&typeof WebAssembly.instantiateStreaming=="function"&&!sf(Gn)&&!vi(Gn)&&typeof fetch=="function"?fetch(Gn,{credentials:"same-origin"}).then(function(Je){var Xe=WebAssembly.instantiateStreaming(Je,X);return Xe.then(xe,function(en){return _("wasm streaming compile failed: "+en),_("falling back to ArrayBuffer instantiation"),De(xe)})}):De(xe)}if(a.instantiateWasm)try{var mt=a.instantiateWasm(X,se);return mt}catch(Je){return _("Module.instantiateWasm callback failed with error: "+Je),!1}return pt().catch(i),{}}var o4,i4;function $d(X){for(;X.length>0;){var se=X.shift();if(typeof se=="function"){se(a);continue}var xe=se.func;typeof xe=="number"?se.arg===void 0?Pd(xe)():Pd(xe)(se.arg):xe(se.arg===void 0?null:se.arg)}}function Da(X){return X}function rf(X){var se=/\b_Z[\w\d_]+/g;return X.replace(se,function(xe){var De=xe;return xe===De?xe:De+" ["+xe+"]"})}var hr=[];function Pd(X){var se=hr[X];return se||(X>=hr.length&&(hr.length=X+1),hr[X]=se=Ra.get(X)),se}function l4(){var X=new Error;if(!X.stack){try{throw new Error}catch(se){X=se}if(!X.stack)return"(no stack trace available)"}return X.stack.toString()}function Au(X,se){Ra.set(X,se),hr[X]=se}function c1(){bi("")}function Fd(){return 2147483648}function af(X,se,xe){Wn.copyWithin(X,se,se+xe)}function Hn(X){try{return J.grow(X-ys.byteLength+65535>>>16),ta(J.buffer),1}catch(se){}}function of(X){var se=Wn.length;X=X>>>0;var xe=Fd();if(X>xe)return!1;for(var De=1;De<=4;De*=2){var pt=se*(1+.2/De);pt=Math.min(pt,X+100663296);var mt=Math.min(xe,Qt(Math.max(X,pt),65536)),Je=Hn(mt);if(Je)return!0}return!1}var xu={mappings:{},buffers:[null,[],[]],printChar:function(X,se){var xe=xu.buffers[X];se===0||se===10?((X===1?$:_)(ot(xe,0)),xe.length=0):xe.push(se)},varargs:void 0,get:function(){xu.varargs+=4;var X=Rn[xu.varargs-4>>2];return X},getStr:function(X){var se=ct(X);return se},get64:function(X,se){return X}};function d1(X){return 0}function u4(X,se,xe,De,pt){}function c4(X,se,xe,De){for(var pt=0,mt=0;mt<xe;mt++){var Je=Rn[se>>2],Xe=Rn[se+4>>2];se+=8;for(var en=0;en<Xe;en++)xu.printChar(X,Wn[Je+en]);pt+=Xe}return Rn[De>>2]=pt,0}function p1(X){ee(X)}var lf=!1,bu={abort:c1,emscripten_get_heap_max:Fd,emscripten_memcpy_big:af,emscripten_resize_heap:of,fd_close:d1,fd_seek:u4,fd_write:c4,setTempRet0:p1},pE=u1(),d4=a.___wasm_call_ctors=function(){return(d4=a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},h1=a._init=function(){return(h1=a._init=a.asm.init).apply(null,arguments)},f1=a._init_with_threads_count=function(){return(f1=a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},uf=a._get_threads_count=function(){return(uf=a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},cf=a._register_tensor=function(){return(cf=a._register_tensor=a.asm.register_tensor).apply(null,arguments)},m1=a._dispose_data=function(){return(m1=a._dispose_data=a.asm.dispose_data).apply(null,arguments)},ze=a._dispose=function(){return(ze=a._dispose=a.asm.dispose).apply(null,arguments)},g1=a._Abs=function(){return(g1=a._Abs=a.asm.Abs).apply(null,arguments)},df=a._Add=function(){return(df=a._Add=a.asm.Add).apply(null,arguments)},wi=a._AddN=function(){return(wi=a._AddN=a.asm.AddN).apply(null,arguments)},vu=a._All=function(){return(vu=a._All=a.asm.All).apply(null,arguments)},y1=a._Any=function(){return(y1=a._Any=a.asm.Any).apply(null,arguments)},p4=a._ArgMax=function(){return(p4=a._ArgMax=a.asm.ArgMax).apply(null,arguments)},A1=a._AvgPool=function(){return(A1=a._AvgPool=a.asm.AvgPool).apply(null,arguments)},h4=a._BatchMatMul=function(){return(h4=a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},ki=a._Ceil=function(){return(ki=a._Ceil=a.asm.Ceil).apply(null,arguments)},x1=a._ClipByValue=function(){return(x1=a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},b1=a._Conv2D=function(){return(b1=a._Conv2D=a.asm.Conv2D).apply(null,arguments)},v1=a._Conv2DBackpropInput=function(){return(v1=a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},w1=a._Cos=function(){return(w1=a._Cos=a.asm.Cos).apply(null,arguments)},k1=a._Cosh=function(){return(k1=a._Cosh=a.asm.Cosh).apply(null,arguments)},I1=a._CropAndResize=function(){return(I1=a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},pf=a._Cumprod=function(){return(pf=a._Cumprod=a.asm.Cumprod).apply(null,arguments)},S1=a._Cumsum=function(){return(S1=a._Cumsum=a.asm.Cumsum).apply(null,arguments)},C1=a._DepthToSpace=function(){return(C1=a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},T1=a._DepthwiseConv2dNative=function(){return(T1=a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},N1=a._Elu=function(){return(N1=a._Elu=a.asm.Elu).apply(null,arguments)},E1=a._Equal=function(){return(E1=a._Equal=a.asm.Equal).apply(null,arguments)},hf=a._Exp=function(){return(hf=a._Exp=a.asm.Exp).apply(null,arguments)},R1=a._FlipLeftRight=function(){return(R1=a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},_1=a._Floor=function(){return(_1=a._Floor=a.asm.Floor).apply(null,arguments)},Ii=a._FloorDiv=function(){return(Ii=a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},Od=a._FusedBatchNorm=function(){return(Od=a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},D1=a._FusedConv2D=function(){return(D1=a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},$1=a._FusedDepthwiseConv2D=function(){return($1=a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},P1=a._Gather=function(){return(P1=a._Gather=a.asm.Gather).apply(null,arguments)},Ze=a._GatherNd=function(){return(Ze=a._GatherNd=a.asm.GatherNd).apply(null,arguments)},F1=a._Greater=function(){return(F1=a._Greater=a.asm.Greater).apply(null,arguments)},O1=a._GreaterEqual=function(){return(O1=a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},M1=a._LeakyRelu=function(){return(M1=a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},z1=a._Less=function(){return(z1=a._Less=a.asm.Less).apply(null,arguments)},L1=a._LessEqual=function(){return(L1=a._LessEqual=a.asm.LessEqual).apply(null,arguments)},B1=a._Log=function(){return(B1=a._Log=a.asm.Log).apply(null,arguments)},Md=a._LogicalAnd=function(){return(Md=a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},ff=a._Max=function(){return(ff=a._Max=a.asm.Max).apply(null,arguments)},mf=a._MaxPool=function(){return(mf=a._MaxPool=a.asm.MaxPool).apply(null,arguments)},W1=a._Maximum=function(){return(W1=a._Maximum=a.asm.Maximum).apply(null,arguments)},V1=a._Mean=function(){return(V1=a._Mean=a.asm.Mean).apply(null,arguments)},U1=a._Min=function(){return(U1=a._Min=a.asm.Min).apply(null,arguments)},G1=a._Minimum=function(){return(G1=a._Minimum=a.asm.Minimum).apply(null,arguments)},H1=a._MirrorPad=function(){return(H1=a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},j1=a._Multiply=function(){return(j1=a._Multiply=a.asm.Multiply).apply(null,arguments)},zt=a._Neg=function(){return(zt=a._Neg=a.asm.Neg).apply(null,arguments)},q1=a._NonMaxSuppressionV3=function(){return(q1=a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},X1=a._NonMaxSuppressionV4=function(){return(X1=a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},K1=a._NonMaxSuppressionV5=function(){return(K1=a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},wu=a._NotEqual=function(){return(wu=a._NotEqual=a.asm.NotEqual).apply(null,arguments)},gf=a._OneHot=function(){return(gf=a._OneHot=a.asm.OneHot).apply(null,arguments)},yf=a._PadV2=function(){return(yf=a._PadV2=a.asm.PadV2).apply(null,arguments)},Af=a._Pow=function(){return(Af=a._Pow=a.asm.Pow).apply(null,arguments)},Z1=a._Prelu=function(){return(Z1=a._Prelu=a.asm.Prelu).apply(null,arguments)},xf=a._Prod=function(){return(xf=a._Prod=a.asm.Prod).apply(null,arguments)},Y1=a._RealDiv=function(){return(Y1=a._RealDiv=a.asm.RealDiv).apply(null,arguments)},f4=a._Relu=function(){return(f4=a._Relu=a.asm.Relu).apply(null,arguments)},bf=a._Relu6=function(){return(bf=a._Relu6=a.asm.Relu6).apply(null,arguments)},m4=a._ResizeBilinear=function(){return(m4=a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},J1=a._Reverse=function(){return(J1=a._Reverse=a.asm.Reverse).apply(null,arguments)},Q1=a._RotateWithOffset=function(){return(Q1=a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},eg=a._Round=function(){return(eg=a._Round=a.asm.Round).apply(null,arguments)},tg=a._Rsqrt=function(){return(tg=a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},ng=a._ScatterNd=function(){return(ng=a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},sg=a._SelectV2=function(){return(sg=a._SelectV2=a.asm.SelectV2).apply(null,arguments)},rg=a._Sigmoid=function(){return(rg=a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},ag=a._Sin=function(){return(ag=a._Sin=a.asm.Sin).apply(null,arguments)},og=a._Softmax=function(){return(og=a._Softmax=a.asm.Softmax).apply(null,arguments)},ig=a._SparseFillEmptyRows=function(){return(ig=a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},lg=a._SparseReshape=function(){return(lg=a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},ug=a._SparseSegmentReduction=function(){return(ug=a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},cg=a._Sqrt=function(){return(cg=a._Sqrt=a.asm.Sqrt).apply(null,arguments)},dg=a._Square=function(){return(dg=a._Square=a.asm.Square).apply(null,arguments)},pg=a._SquaredDifference=function(){return(pg=a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},hg=a._Step=function(){return(hg=a._Step=a.asm.Step).apply(null,arguments)},fg=a._StridedSlice=function(){return(fg=a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},mg=a._Sub=function(){return(mg=a._Sub=a.asm.Sub).apply(null,arguments)},gg=a._Sum=function(){return(gg=a._Sum=a.asm.Sum).apply(null,arguments)},yg=a._Tan=function(){return(yg=a._Tan=a.asm.Tan).apply(null,arguments)},Ag=a._Tanh=function(){return(Ag=a._Tanh=a.asm.Tanh).apply(null,arguments)},xg=a._Tile=function(){return(xg=a._Tile=a.asm.Tile).apply(null,arguments)},bg=a._TopK=function(){return(bg=a._TopK=a.asm.TopK).apply(null,arguments)},vg=a._Transform=function(){return(vg=a._Transform=a.asm.Transform).apply(null,arguments)},wg=a._Transpose=function(){return(wg=a._Transpose=a.asm.Transpose).apply(null,arguments)},kg=a.__FusedMatMul=function(){return(kg=a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},Ig=a._malloc=function(){return(Ig=a._malloc=a.asm.malloc).apply(null,arguments)},Sg=a._free=function(){return(Sg=a._free=a.asm.free).apply(null,arguments)},Cg=a.___errno_location=function(){return(Cg=a.___errno_location=a.asm.__errno_location).apply(null,arguments)},Tg=a._emscripten_main_thread_process_queued_calls=function(){return(Tg=a._emscripten_main_thread_process_queued_calls=a.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},vf=a.stackSave=function(){return(vf=a.stackSave=a.asm.stackSave).apply(null,arguments)},wf=a.stackRestore=function(){return(wf=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},zd=a.stackAlloc=function(){return(zd=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},Ng=a.dynCall_iijjiiii=function(){return(Ng=a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},Eg=a.dynCall_jiji=function(){return(Eg=a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)};a.cwrap=_e;var ku;function Ld(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}_a=function X(){ku||Bd(),ku||(_a=X)};function Bd(X){if(X=X||c,Ls>0||(Yh(),Ls>0))return;function se(){ku||(ku=!0,a.calledRun=!0,!ae&&(Jh(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Qh()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),se()},1)):se()}a.run=Bd;function g4(X){le=X,_d()||(a.onExit&&a.onExit(X),ae=!0),d(X,new Ld(X))}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Bd();var Iu;l&&(Iu={uncaughtException:process.listeners("uncaughtException").filter(function(X){return!l.uncaughtException.indexOf(X)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(X){return!l.unhandledRejection.indexOf(X)>-1})});var Su;if(typeof r!="undefined")Su=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Su=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Iu){var Rg=Su._dispose;Su._dispose=function(){Rg(),Iu.uncaughtException.forEach(function(X){process.removeListener("uncaughtException",X)}),Iu.unhandledRejection.forEach(function(X){process.removeListener("unhandledRejection",X)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),zR=1e-7,LR=1e-4,Np=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},oc=class{refCount(e){return Bs("refCount")}incRef(e){return Bs("incRef")}timerAvailable(){return!0}time(e){return Bs("time")}read(e){return Bs("read")}readSync(e){return Bs("readSync")}readToGPU(e,t){return Bs("readToGPU")}numDataIds(){return Bs("numDataIds")}disposeData(e,t){return Bs("disposeData")}write(e,t,n){return Bs("write")}move(e,t,n,s,r){return Bs("move")}memory(){return Bs("memory")}floatPrecision(){return Bs("floatPrecision")}epsilon(){return this.floatPrecision()===32?zR:LR}dispose(){return Bs("dispose")}};function Bs(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function v7(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,sm(e,t,n)}function BR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,sm(e,n,s),sm(t,n,s)}function cp(e,t,n){return Math.max(e,Math.min(t,n))}function WR(e){return e%2===0?e:e+1}function sm(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function VR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function UR(e,t){let n=Math.random();return t*n+(1-n)*e}function GR(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function M(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Qn(e,t,n=""){M(ro(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function rl(e){M(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Vi(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||_n(e)&&!n)for(let s=0;s<e.length;++s)Vi(e[s],t,n);else t.push(e);return t}function Et(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function HR(e){return e.length===0}function ro(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Gu(e){return e%1===0}function jR(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function qR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function XR(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return v7(t),t}function op(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function KR(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function ZR(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function rr(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),M(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),M(e.every(s=>Gu(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function w7(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:rr(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function k7(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function I7(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function S7(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function C7(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function YR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function _n(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Yg(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function T7(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function La(e){return typeof e=="string"||e instanceof String}function N7(e){return typeof e=="boolean"}function E7(e){return typeof e=="number"}function $m(e){return Array.isArray(e)?$m(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":E7(e)?"float32":La(e)?"string":N7(e)?"bool":"float32"}function ja(e){return!!(e&&e.constructor&&e.call&&e.apply)}function rm(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ic(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function R7(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<a;l++)r[l]=R7(e+l*i,o,n,s)}return r}function zu(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return R7(0,e,t,n)}function ny(e,t){let n=Pm(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Pm(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function JR(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return zu(e,new Float32Array(n));if(t==="int32")return zu(e,new Int32Array(n));if(t==="bool")return zu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function sy(e){e.forEach(t=>{M(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function QR(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function e_(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function ry(e){return e&&e.then&&typeof e.then=="function"}var N4="tfjsflags",_7=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=t_,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ry(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);N4 in e&&e[N4].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=s_(s,r)})}};function t_(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(n_(t,s[0],s[1]),s.join("="))),t}function n_(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function s_(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return Er}var Er=null;function r_(e){Er=e}var zg;function D7(){if(zg==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");zg=e}return zg}function a_(){let e=D7();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function ay(e,t){let n=a_();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var al="Abs",lc="Acos",uc="Acosh",ma="Add",ao="AddN",cc="All",dc="Any",oo="ArgMax",pc="ArgMin",hc="Asin",fc="Asinh",mc="Atan",gc="Atanh",yc="Atan2",io="AvgPool",Fm="AvgPoolGrad",Ep="AvgPool3D",Om="AvgPool3DGrad",lo="BatchMatMul",ol="BatchToSpaceND",Mm="Bincount",$7="BroadcastTo",zm="BroadcastArgs",uo="Cast",co="Ceil",ga="ClipByValue",Rp="Complex",_p="ComplexAbs",il="Concat",po="Conv2D",Lm="Conv2DBackpropFilter",ho="Conv2DBackpropInput",Dp="Conv3D",Bm="Conv3DBackpropFilterV2",Wm="Conv3DBackpropInputV2",fo="Cos",mo="Cosh",ll="Cumprod",go="Cumsum",ul="CropAndResize",Vm="DenseBincount",cl="DepthToSpace",yo="DepthwiseConv2dNative",Um="DepthwiseConv2dNativeBackpropFilter",Gm="DepthwiseConv2dNativeBackpropInput",Hm="Diag",$p="Dilation2D",am="Dilation2DBackpropInput",om="Dilation2DBackpropFilter",Ao="RealDiv",Pp="Einsum",xo="Elu",jm="EluGrad",Ac="Erf",dl="Equal",bo="Exp",pl="ExpandDims",hl="Expm1",qm="FFT",xc="Fill",fl="FlipLeftRight",vo="Floor",wo="FloorDiv",ko="FusedBatchNorm",ml="GatherV2",gl="GatherNd",yl="Greater",Io="GreaterEqual",So="Identity",Xm="IFFT",Fp="Imag",bc="IsFinite",vc="IsInf",wc="IsNan",Co="LeakyRelu",Al="Less",xl="LessEqual",Km="LinSpace",To="Log",kc="Log1p",bl="LogicalAnd",Ic="LogicalNot",Op="LogicalOr",P7="LogSoftmax",o_="LowerBound",Mp="LRN",Zm="LRNGrad",No="Max",Eo="Maximum",Ro="MaxPool",Ym="MaxPoolGrad",zp="MaxPool3D",Jm="MaxPool3DGrad",Qm="MaxPoolWithArgmax",_o="Mean",Do="Min",$o="Minimum",Po="MirrorPad",Sc="Mod",e0="Multinomial",Fo="Multiply",vl="Neg",wl="NotEqual",kl="NonMaxSuppressionV3",Cc="NonMaxSuppressionV4",Il="NonMaxSuppressionV5",Sl="OnesLike",Cl="OneHot",Tl="Pack",Oo="PadV2",i_="Pool",Mo="Pow",zo="Prelu",Lo="Prod",Tc="Range",Lp="Real",Nc="Reciprocal",Bo="Relu",Nl="Reshape",Ec="ResizeNearestNeighbor",t0="ResizeNearestNeighborGrad",Wo="ResizeBilinear",n0="ResizeBilinearGrad",Vo="Relu6",El="Reverse",Rl="Round",Uo="Rsqrt",_l="ScatterNd",s0="SearchSorted",Dl="Select",Rc="Selu",$l="Slice",Go="Sin",Pl="Sinh",_c="Sign",Ho="Sigmoid",Dc="Softplus",jo="Sqrt",qo="Sum",Fl="SpaceToBatchND",Ol="SplitV",Xo="Softmax",Bp="SparseFillEmptyRows",$c="SparseReshape",Wp="SparseSegmentMean",Vp="SparseSegmentSum",Up="SparseToDense",Ko="SquaredDifference",Pc="Square",Ml="StridedSlice",Gp="StringNGrams",r0="StringSplit",a0="StringToHashBucketFast",Zo="Sub",zl="Tan",Yo="Tanh",ya="Tile",Ll="TopK",Bl="Transform",Br="Transpose",o0="Unique",Wl="Unpack",Hp="UnsortedSegmentSum",l_="UpperBound",Vl="ZerosLike",Jo="Step",dp="FromPixels",Ul="RotateWithOffset",qa="_FusedMatMul",Xa="FusedConv2D",Ka="FusedDepthwiseConv2D";function za(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function u_(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var Hu=ay("kernelRegistry",()=>new Map),pp=ay("gradRegistry",()=>new Map);function im(e,t){let n=oy(e,t);return Hu.get(n)}function Jg(e){return pp.get(e)}function Vr(e){let t=Hu.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function ar(e){let{kernelName:t,backendName:n}=e,s=oy(t,n);Hu.has(s)&&za(`The kernel '${t}' for backend '${n}' is already registered`),Hu.set(s,e)}function F7(e){let{kernelName:t}=e;pp.has(t)&&Y().getBool("DEBUG")&&za(`Overriding the gradient for '${t}'`),pp.set(t,e)}function c_(e,t){let n=oy(e,t);if(!Hu.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Hu.delete(n)}function d_(e){if(!pp.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);pp.delete(e)}function p_(e,t){Vr(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});ar(r)})}function oy(e,t){return`${t}_${e}`}var v={};Ve(v,{arraysEqual:()=>ro,assert:()=>M,assertNonNegativeIntegerDimensions:()=>sy,assertNonNull:()=>rl,assertShapesMatch:()=>Qn,bytesFromStringArray:()=>T7,bytesPerElement:()=>Yg,checkConversionForErrors:()=>S7,clamp:()=>cp,computeStrides:()=>ic,createScalarValue:()=>A_,createShuffledIndices:()=>XR,decodeString:()=>lm,distSquared:()=>GR,encodeString:()=>qp,fetch:()=>b_,fingerPrint64:()=>y_,flatten:()=>Vi,getArrayFromDType:()=>I7,getTypedArrayFromDType:()=>k7,hasEncodingLoss:()=>YR,hexToLong:()=>jp,indexToLoc:()=>e_,inferDtype:()=>$m,inferFromImplicitShape:()=>ZR,isBoolean:()=>N7,isFunction:()=>ja,isInt:()=>Gu,isNumber:()=>E7,isPromise:()=>ry,isScalarShape:()=>HR,isString:()=>La,isTypedArray:()=>_n,isValidDtype:()=>C7,locToIndex:()=>QR,makeOnesTypedArray:()=>ny,makeZerosNestedTypedArray:()=>JR,makeZerosTypedArray:()=>Pm,nearestDivisor:()=>rm,nearestLargerEven:()=>WR,now:()=>hp,parseAxisParam:()=>rr,randUniform:()=>UR,repeatedTry:()=>KR,rightPad:()=>op,shuffle:()=>v7,shuffleCombo:()=>BR,sizeFromShape:()=>Et,sizeToSquarishShape:()=>qR,squeezeShape:()=>w7,sum:()=>VR,swap:()=>sm,tanh:()=>jR,toNestedArray:()=>zu,toTypedArray:()=>i0});var E4=sl(gR()),_i=E4.default||E4;function jp(e){return _i.fromString(e,!0,16)}var O7=jp("c3a5c85c97cb3127"),Ni=jp("b492b66fbe98f273"),qn=jp("9ae16a3b2f90404f");function Qg(e){return e.xor(e.shru(47))}function M7(e,t,n){let s=e.slice(t,t+n);return _i.fromBytes(Array.from(s),!0,!0)}function Nt(e,t){return M7(e,t,8)}function R4(e,t){return M7(e,t,4)}function An(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Va(e,t,n=jp("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function h_(e,t,n,s,r,a){r=r.add(e),a=An(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(An(r,44)),[r.add(s),a.add(o)]}function _f(e,t,n,s){return h_(Nt(e,t),Nt(e,t+8),Nt(e,t+16),Nt(e,t+24),n,s)}function f_(e,t=e.length){if(t>=8){let n=qn.add(t*2),s=Nt(e,0).add(qn),r=Nt(e,t-8),a=An(r,37).mul(n).add(s),o=An(s,25).add(r).mul(n);return Va(a,o,n)}if(t>=4){let n=qn.add(t*2),s=R4(e,0);return Va(s.shl(3).add(t),R4(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return Qg(qn.mul(a).xor(O7.mul(o))).mul(qn)}return qn}function m_(e,t=e.length){let n=qn.add(t*2),s=Nt(e,0).mul(Ni),r=Nt(e,8),a=Nt(e,t-8).mul(n),o=Nt(e,t-16).mul(qn);return Va(An(s.add(r),43).add(An(a,30)).add(o),s.add(An(r.add(qn),18)).add(a),n)}function g_(e,t=e.length){let n=qn.add(t*2),s=Nt(e,0).mul(qn),r=Nt(e,8),a=Nt(e,t-8).mul(n),o=Nt(e,t-16).mul(qn),i=An(s.add(r),43).add(An(a,30)).add(o),l=Va(i,s.add(An(r.add(qn),18)).add(a),n),u=Nt(e,16).mul(n),c=Nt(e,24),p=i.add(Nt(e,t-32)).mul(n),d=l.add(Nt(e,t-24)).mul(n);return Va(An(u.add(c),43).add(An(p,30)).add(d),u.add(An(c.add(s),18)).add(p),n)}function y_(e,t=e.length){let n=_i.fromNumber(81,!0);if(t<=32)return t<=16?f_(e,t):m_(e,t);if(t<=64)return g_(e,t);let s=n,r=n.mul(Ni).add(113),a=Qg(r.mul(qn).add(113)).mul(qn),o=[_i.UZERO,_i.UZERO],i=[_i.UZERO,_i.UZERO];s=s.mul(qn).add(Nt(e,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do s=An(s.add(r).add(o[0]).add(Nt(e,l+8)),37).mul(Ni),r=An(r.add(o[1]).add(Nt(e,l+48)),42).mul(Ni),s=s.xor(i[1]),r=r.add(o[0]).add(Nt(e,l+40)),a=An(a.add(i[0]),33).mul(Ni),o=_f(e,l,o[1].mul(Ni),s.add(i[0])),i=_f(e,l+32,a.add(i[1]),r.add(Nt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==u);let p=Ni.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=An(s.add(r).add(o[0]).add(Nt(e,l+8)),37).mul(p),r=An(r.add(o[1]).add(Nt(e,l+48)),42).mul(p),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(Nt(e,l+40))),a=An(a.add(i[0]),33).mul(p),o=_f(e,l,o[1].mul(p),s.add(i[0])),i=_f(e,l+32,a.add(i[1]),r.add(Nt(e,l+16))),[a,s]=[s,a],Va(Va(o[0],i[0],p).add(Qg(r).mul(O7)).add(a),Va(o[1],i[1],p).add(s),p)}function A_(e,t){return t==="string"?qp(e):i0([e],t)}function x_(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function i0(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Vi(e)),Y().getBool("DEBUG")&&S7(e,t),x_(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function hp(){return Y().platform.now()}function b_(e,t){return Y().platform.fetch(e,t)}function qp(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function lm(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var v_=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new k_)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=hp();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:hp()-o})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let u=s[l];u.data().then(c=>{w_(c,u.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function w_(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var k_=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?op(`${s}ms`,9):s.error,i=op(e,25),l=t.rank,u=t.size,c=op(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let f=h.shape||t.shape,m=f.length;p+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${c}	%c${u}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function I_(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],c=u.inputs;for(let p in c){let d=c[p],h=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),h=!0,r[u.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let u=e[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(a[u.outputs[p].id]){for(let d in c)a[c[d].id]=!0,o[u.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let u=e[l];if(r[u.id]&&o[u.id]){let c={};for(let d in u.inputs){let h=u.inputs[d];s[h.id]&&(c[d]=h)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,i.push(p)}}return i}function S_(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let u=e[l.id];u!=null?o.push(u):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=n(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=a.inputs[l];if(!ro(u.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=u;else{let p=e[c.id];e[c.id]=s(p,u),p.dispose()}}}}var _4=20,jd=3,Lg=7;function C_(e,t,n,s){let r=ic(t),a=T_(e,t,n,r),o=t.length,i=Gf(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function T_(e,t,n,s){let r=Et(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?Yd(e):e;if(i>1)for(let u=0;u<r/a;u++){let c=u*a;for(let p=0;p<a;p++)o[p]=Math.max(o[p],Zd(l[c+p],0,n).length)}return o}function Zd(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(Lg))} + ${parseFloat(e[1].toFixed(Lg))}j`:La(e)?s=`'${e}'`:n==="bool"?s=z7(e):s=parseFloat(e.toFixed(Lg)).toString(),op(s,t)}function z7(e){return e===0?"false":"true"}function Gf(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=Yd(e);return[Zd(m[0],0,n)]}return n==="bool"?[z7(e[0])]:[e[0].toString()]}if(l===1){if(i>_4){let g=jd*o,y=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-jd)*o,i*o));return n==="complex64"&&(y=Yd(y),x=Yd(x)),["["+y.map((A,b)=>Zd(A,r[b],n)).join(", ")+", ..., "+x.map((A,b)=>Zd(A,r[i-jd+b],n)).join(", ")+"]"]}let m=n==="complex64"?Yd(e):Array.from(e);return["["+m.map((g,y)=>Zd(g,r[y],n)).join(", ")+"]"]}let u=t.slice(1),c=s.slice(1),p=s[0]*o,d=[];if(i>_4){for(let m=0;m<jd;m++){let g=m*p,y=g+p;d.push(...Gf(e.slice(g,y),u,n,c,r,!1))}d.push("...");for(let m=i-jd;m<i;m++){let g=m*p,y=g+p;d.push(...Gf(e.slice(g,y),u,n,c,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*p,y=g+p;d.push(...Gf(e.slice(g,y),u,n,c,r,m===i-1))}let h=l===2?",":"";d[0]="["+d[0]+h;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Yd(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var hn=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Et(e),n!=null){let s=n.length;M(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||I7(t,this.size),this.strides=ic(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ar().makeTensor(this.values,this.shape,this.dtype)}},Ar=null,Pu=null,N_=null;function E_(e){Ar=e}function R_(e){Pu=e}function __(e){N_=e}var nt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Et(e),this.strides=ic(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Pu.buffer(this.shape,this.dtype,e)}bufferSync(){return Pu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return zu(this.shape,e,this.dtype==="complex64")}arraySync(){return zu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Ar().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>lm(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ar().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ar().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>lm(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ar().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ar().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Pu.print(this,e)}clone(){return this.throwIfDisposed(),Pu.clone(this)}toString(e=!1){let t=this.dataSync();return C_(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Pu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ar().makeVariable(this,e,t,n)}};Object.defineProperty(nt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function re(){return ay("Tensor",()=>nt)}re();var fp=class extends nt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ro(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ar().disposeTensor(this),this.dataId=e.dataId,Ar().incRef(this,null)}dispose(){Ar().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(fp,Symbol.hasInstance,{value:e=>e instanceof nt&&e.assign!=null&&e.assign instanceof Function});var wr={};Ve(wr,{assertTypesMatch:()=>L7,getTensorsInContainer:()=>iy,isTensorInList:()=>$_,makeTypesMatch:()=>Gt});var e3;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(e3||(e3={}));var t3;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(t3||(t3={}));var n3;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(n3||(n3={}));var s3;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(s3||(s3={}));var r3;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(r3||(r3={}));var D_={float32:s3,int32:t3,bool:n3,complex64:r3};function $n(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return D_[e][t]}function Xp(e){return $n(e,"int32")}function Gt(e,t){if(e.dtype===t.dtype)return[e,t];let n=$n(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function L7(e,t){M(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function $_(e,t){return t.some(n=>n.id===e.id)}function iy(e){let t=[];return B7(e,t,new Set),t}function B7(e,t,n){if(e==null)return;if(e instanceof nt){t.push(e);return}if(!P_(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),B7(a,t,n))}}function P_(e){return Array.isArray(e)||typeof e=="object"}function Bg(e){return e.kernelName!=null}var D4=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},mp=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new D4}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(za(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new v_(this.backendInstance),!0}setupRegisteredKernels(){Vr(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Vr(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof oc)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,za(`Initialization of backend ${e} failed`),za(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return za(`Initialization of backend ${e} failed`),za(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return mp.nextTensorId++}nextVariableId(){return mp.nextVariableId++}clone(e){let t=B.runKernel(So,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return B.runKernel(uo,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(im(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=Bg(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Bg(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=im(h,this.backendName);M(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,x);let A=x.map(b=>b.rank!=null?b:this.makeTensorFromTensorInfo(b));if(s){let b=this.getTensorsForGradient(h,f,A);n=this.saveTensorsForBackwardMode(b)}return A}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:u,attrs:c}=e,p=Bg(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(d=this.profiler.profileKernel(l,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),s&&this.addTapeNode(l,u,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=Jg(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,u)=>a[u]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&La(e[0])&&(r=e.map(i=>qp(i)));let a=s.write(r,t,n),o=new nt(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=T7(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:s,dtype:r}=e,a=new nt(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new fp(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Yg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof fp||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Yg(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=Jg(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((u,c)=>{if(u==null){let p=n[c],d=Pm(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return u}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=iy(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(r instanceof nt,()=>"The result y returned by f() must be a tensor.");let a=I_(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?F_(r.shape):n,S_(o,a,l=>this.tidy(l),O_);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return M(ja(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof nt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),M(n.value instanceof nt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(ja(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),u=Array.isArray(l)?l:[l];M(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(u.every(p=>p instanceof nt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return u.forEach((p,d)=>{c[d]=()=>p}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=hp(),n=await this.backend.time(e);return n.wallMs=hp()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new D4;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};mp.nextTensorId=0;mp.nextVariableId=0;function F_(e){let t=ny(Et(e),"float32");return B.makeTensor(t,e,"float32")}function W7(){let e=D7();if(e._tfengine==null){let t=new _7(e);e._tfengine=new mp(t)}return r_(e._tfengine.ENV),E_(()=>e._tfengine),e._tfengine}var B=W7();function O_(e,t){let n={a:e,b:t};return B.runKernel(ma,n)}var Kp={};Ve(Kp,{isBrowser:()=>V7,isMobile:()=>L_,mockIsMobile:()=>z_});function M_(){return typeof navigator!="undefined"&&navigator!=null}var a3;function z_(e){a3=e}function L_(e){if(a3!==void 0)return a3;if(e||M_()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function V7(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var nr=Y();nr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});nr.registerFlag("IS_BROWSER",()=>V7());nr.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");nr.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));nr.registerFlag("PROD",()=>!1);nr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>nr.getBool("DEBUG"));nr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);nr.registerFlag("IS_TEST",()=>!1);nr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);nr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);nr.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Ur(e,t){let n=e;if(_n(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||_n(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&U7(e,s,[]),s}function U7(e,t,n){if(n=n||[],!Array.isArray(e)&&!_n(e)){M(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}M(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),M(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)U7(e[r],s,n.concat(r))}function $4(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function P(e,t,n,s="numeric"){if(e instanceof nt)return $4(s,e.dtype,t,n),e;let r=$m(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),$4(s,r,t,n),e==null||!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Ur(e,r);!_n(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?i0(e,r):Vi(e,[],!0);return B.makeTensor(i,a,r)}function gp(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>P(a,`${t}[${o}]`,n,s))}var G7="__op";function G(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+G7;let r=(...a)=>{B.startScope(n);try{let o=s(...a);return ry(o)&&console.error("Cannot return a Promise inside of tidy."),B.endScope(o),o}catch(o){throw B.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function B_(e,t){let n=P(e,"real","complex"),s=P(t,"imag","complex");Qn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return B.runKernel(Rp,r)}var ua=G({complex_:B_});function Qo(e,t,n,s){if(s==null&&(s=$m(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){sy(t);let r=Et(t),a=Et(n);M(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Et(t.slice(o)):!0;M(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!_n(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?i0(e,s):Vi(e,[],!0),B.makeTensor(e,t,s)}function gt(e,t,n){let s=Ur(e,n);return Qo(e,t,s,n)}var o3={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},um=4;async function W_(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let d=await l.bytes(),h=d.reduce((g,y)=>g+y.length,0)+um*d.length,f=new Uint8Array(h),m=0;for(let g=0;g<d.length;g++){let y=d[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=um,f.set(y,m),m+=y.length}p(f)});s.push(c)}else s.push(l.data());t!=null&&(u.group=t),n.push(u)}let a=await Promise.all(s);return{data:V_(a),specs:n}}function H7(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,u=Et(l),c;if("quantization"in a){let p=a.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${a.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=o3[p.dtype],h=e.slice(r,r+u*d),f=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=g*p.scale+p.min}}else if(p.dtype==="float16")s===void 0&&(s=X_()),c=s(f);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(i==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*d}else if(i==="string"){let p=Et(a.shape);c=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+um))[0];r+=um;let f=new Uint8Array(e.slice(r,r+h));c.push(f),r+=h}}else{let p=o3[i],d=e.slice(r,r+u*p);if(i==="float32")c=new Float32Array(d);else if(i==="int32")c=new Int32Array(d);else if(i==="bool")c=new Uint8Array(d);else if(i==="complex64"){c=new Float32Array(d);let h=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let y=0;y<h.length;y++)h[y]=c[y*2],f[y]=c[y*2+1];let m=gt(h,l,"float32"),g=gt(f,l,"float32");n[o]=ua(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*p}i!=="complex64"&&(n[o]=gt(c,l,i))}return n}function V_(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var ly=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function P4(e){return ly?Buffer.byteLength(e):new Blob([e]).size}function U_(e){if(ly)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function G_(e){if(ly){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function uy(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function F4(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function j7(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function cy(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Zp(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:P4(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:P4(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function H_(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function j_(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function q_(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function X_(){let e=H_(),t=j_(),n=q_();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var qt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return qt.instance==null&&(qt.instance=new qt),qt.instance}static registerSaveRouter(e){qt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){qt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return qt.getHandlers(e,"save")}static getLoadHandlers(e,t){return qt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?qt.getInstance().loadRouters:qt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},K_=e=>qt.registerSaveRouter(e),Z_=e=>qt.registerLoadRouter(e),Y_=e=>qt.getSaveHandlers(e),J_=(e,t)=>qt.getLoadHandlers(e,t),i3="tensorflowjs",l3=1,Fi="models_store",Ba="model_info_store";function q7(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function u3(e){let t=e.result;t.createObjectStore(Fi,{keyPath:"modelPath"}),t.createObjectStore(Ba,{keyPath:"modelPath"})}var Ui=class{constructor(e){if(this.indexedDB=q7(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(i3,l3);r.onupgradeneeded=()=>u3(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Fi,"readonly"),l=o.objectStore(Fi).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=Zp(t),i=a.transaction(Ba,"readwrite"),l=i.objectStore(Ba),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),c;u.onsuccess=()=>{c=a.transaction(Fi,"readwrite");let d=c.objectStore(Fi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});d.onsuccess=()=>n({modelArtifactsInfo:o}),d.onerror=h=>{l=i.objectStore(Ba);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(d.error)),f.onerror=m=>(a.close(),s(d.error))}},u.onerror=p=>(a.close(),s(u.error)),i.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};Ui.URL_SCHEME="indexeddb://";var X7=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ui.URL_SCHEME)?Q_(e.slice(Ui.URL_SCHEME.length)):null;qt.registerSaveRouter(X7);qt.registerLoadRouter(X7);function Q_(e){return new Ui(e)}function eD(e){return e.startsWith(Ui.URL_SCHEME)?e.slice(Ui.URL_SCHEME.length):e}var tD=class{constructor(){this.indexedDB=q7()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(i3,l3);n.onupgradeneeded=()=>u3(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(Ba,"readonly"),o=r.objectStore(Ba).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=eD(e),new Promise((t,n)=>{let s=this.indexedDB.open(i3,l3);s.onupgradeneeded=()=>u3(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(Ba,"readwrite"),o=a.objectStore(Ba),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=o.delete(e),c=()=>{l=r.transaction(Fi,"readwrite");let d=l.objectStore(Fi).delete(e);d.onsuccess=()=>t(i.result.modelArtifactsInfo),d.onerror=h=>n(i.error)};u.onsuccess=c,u.onerror=p=>(c(),r.close(),n(i.error))}},i.onerror=u=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},oa="/",Fu="tensorflowjs_models",K7="info",nD="model_topology",sD="weight_specs",rD="weight_data",aD="model_metadata";function Z7(e){return{info:[Fu,e,K7].join(oa),topology:[Fu,e,nD].join(oa),weightSpecs:[Fu,e,sD].join(oa),weightData:[Fu,e,rD].join(oa),modelMetadata:[Fu,e,aD].join(oa)}}function Y7(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function oD(e){let t=e.split(oa);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(oa)}function iD(e){return e.startsWith(Gi.URL_SCHEME)?e.slice(Gi.URL_SCHEME.length):e}var Gi=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Z7(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Zp(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,U_(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw Y7(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=G_(a),t}};Gi.URL_SCHEME="localstorage://";var J7=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Gi.URL_SCHEME)?lD(e.slice(Gi.URL_SCHEME.length)):null;qt.registerSaveRouter(J7);qt.registerLoadRouter(J7);function lD(e){return new Gi(e)}var uD=class{constructor(){M(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Fu+oa,n=oa+K7;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=oD(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=iD(e);let t=Z7(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Y7(t),n}},Lu="://",Ws=class{constructor(){this.managers={}}static getInstance(){return Ws.instance==null&&(Ws.instance=new Ws),Ws.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Lu)&&(e=e.slice(0,e.indexOf(Lu))),M(e.length>0,()=>"scheme must not be an empty string.");let n=Ws.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Hf(e){if(e.indexOf(Lu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ws.getSchemes().join(",")}`);return{scheme:e.split(Lu)[0],path:e.split(Lu)[1]}}async function Q7(e,t,n=!1){M(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=qt.getLoadHandlers(e);M(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),M(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=qt.getSaveHandlers(t);M(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),M(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=Hf(e).scheme,l=Hf(e).path,u=i===Hf(e).scheme,c=await r.load();n&&u&&await Ws.getManager(i).removeModel(l);let p=await o.save(c);return n&&!u&&await Ws.getManager(i).removeModel(l),p.modelArtifactsInfo}async function cD(){let e=Ws.getSchemes(),t={};for(let n of e){let s=await Ws.getManager(n).listModels();for(let r in s){let a=n+Lu+r;t[a]=s[r]}}return t}async function dD(e){let t=Hf(e);return Ws.getManager(t.scheme).removeModel(t.path)}async function pD(e,t){return Q7(e,t,!1)}async function hD(e,t){return Q7(e,t,!0)}var fD=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new fD);try{Ws.registerManager(Gi.URL_SCHEME,new uD)}catch(e){}try{Ws.registerManager(Ui.URL_SCHEME,new tD)}catch(e){}}var mD={importFetch:()=>yR()},Wg,gD=class{constructor(){this.util=AR(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(Wg==null&&(Wg=mD.importFetch()),Wg(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&!Y().get("IS_BROWSER")&&Y().setPlatform("node",new gD);function We(e,t="float32",n){return t=t||"float32",sy(e),new hn(e,t,n)}function yD(e,t){let n=P(e,"x","cast");if(!C7(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return B.runKernel(uo,s,r)}var he=G({cast_:yD});function AD(e){let n={x:P(e,"x","clone","string_or_numeric")};return B.runKernel(So,n)}var Yn=G({clone_:AD});function e6(e,t=!1){console.log(e.toString(t))}W7();var xD={buffer:We,cast:he,clone:Yn,print:e6};R_(xD);var Dn={};Ve(Dn,{browserFiles:()=>CD,browserHTTPRequest:()=>_D,concatenateArrayBuffers:()=>uy,copyModel:()=>pD,decodeWeights:()=>H7,encodeWeights:()=>W_,fromMemory:()=>$D,fromMemorySync:()=>a6,getLoadHandlers:()=>J_,getModelArtifactsForJSON:()=>cy,getModelArtifactsInfoForJSON:()=>Zp,getSaveHandlers:()=>Y_,http:()=>py,isHTTPScheme:()=>c3,listModels:()=>cD,loadWeights:()=>TD,moveModel:()=>hD,registerLoadRouter:()=>Z_,registerSaveRouter:()=>K_,removeModel:()=>dD,weightsLoaderFactory:()=>n6,withSaveHandler:()=>PD,withSaveHandlerSync:()=>FD});var bD="model",vD=".json",wD=".weights.bin";function O4(e){return new Promise(t=>setTimeout(t)).then(e)}var ju=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ju.URL_SCHEME)&&(e=e.slice(ju.URL_SCHEME.length)),(e==null||e.length===0)&&(e=bD),this.modelJsonFileName=e+vD,this.weightDataFileName=e+wD}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=j7(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await O4(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await O4(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Zp(e)}}}};ju.URL_SCHEME="downloads://";var kD=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=cy(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,uy(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>F4(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=F4(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},ID=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ju.URL_SCHEME)?SD(e.slice(ju.URL_SCHEME.length)):null;qt.registerSaveRouter(ID);function SD(e="model"){return new ju(e)}function CD(e){return new kD(e)}function M4(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(u=>{let c=n+ ++r/e.length*(s-n);return t(c),u}),l);function o(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),M(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(a))}async function t6(e,t){t==null&&(t={});let n=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,s=e.map(p=>n(p,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await M4(s,t.onProgress,r,a)).map(p=>p.arrayBuffer()),l=.5,u=1;return t.onProgress==null?await Promise.all(i):await M4(i,t.onProgress,l,u)}async function TD(e,t="",n,s){return n6(o=>t6(o,{requestInit:s}))(e,t,n)}function n6(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=o3[y]*Et(g.shape),A=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,w)=>{b===g.name&&(A(),o[w]=!0)}):A(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),u=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});let c=await e(u),p={},d=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=c[d+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let w=new Uint8Array(c[d+b]);y.set(w,x),x+=w.byteLength}a[h].forEach(b=>{let w=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),k=H7(w,[b.manifestEntry]);for(let S in k)p[S]=k[S]}),d+=f}),p}}var ND="application/octet-stream",ED="application/json",dy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=j7(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:ED}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:ND}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Zp(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return cy(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=RD(t),r=this.weightPathPrefix||n,a=[];for(let u of e)a.push(...u.weights);let o=[],i=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):o.push(r+c+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await t6(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,uy(l)]}};dy.URL_SCHEME_REGEX=/^https?:\/\//;function RD(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function c3(e){return e.match(dy.URL_SCHEME_REGEX)!=null}var s6=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>c3(s)):n=c3(e),n)return py(e,t)}return null};qt.registerSaveRouter(s6);qt.registerLoadRouter(s6);function py(e,t){return new dy(e,t)}function _D(e,t){return py(e,t)}var Vg=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},r6=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},DD=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function $D(e,t,n,s){let r=arguments;return new DD(a6(...r))}function a6(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Vg(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vg({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Vg({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function PD(e){return new r6(e)}function FD(e){return new r6(e)}var o6={};Ve(o6,{confusionMatrix:()=>YD});function OD(e,t,n=!1,s=!1){let r=P(e,"a","matMul"),a=P(t,"b","matMul");[r,a]=Gt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return B.runKernel(lo,o,i)}var Ye=G({matMul_:OD});function MD(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:P(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return B.runKernel(Cl,a,o)}var qu=G({oneHot_:MD});function hy(){Y().set("PROD",!0)}function zD(){Y().set("DEBUG",!0)}function LD(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function fy(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}__(fy);function BD(){B.disposeVariables()}function nn(){return B}function cm(){return B.memory()}function WD(e){return B.profile(e)}function K(e,t){return B.tidy(e,t)}function ne(e){iy(e).forEach(n=>n.dispose())}function xn(e){return B.keep(e)}function VD(e){return B.time(e)}function my(e){return B.setBackend(e)}function Fc(){return B.ready()}function es(){return B.backendName}function UD(e){B.removeBackend(e)}function gy(e){return B.findBackend(e)}function GD(e){return B.findBackendFactory(e)}function Gl(e,t,n=1){return B.registerBackend(e,t,n)}function js(){return B.backend}function HD(e,t){Y().setPlatform(e,t)}function jD(e){let n={input:P(e,"input","imag")};return B.runKernel(Fp,n)}var Yp=G({imag_:jD});function qD(e){let n={x:P(e,"x","neg")};return B.runKernel(vl,n)}var $t=G({neg_:qD});function XD(e){let n={input:P(e,"input","real")};return B.runKernel(Lp,n)}var Xu=G({real_:XD});function KD(e,t,n){let s=P(e,"x","transpose");if(t==null&&(t=s.shape.map((o,i)=>i).reverse()),M(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{M(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();let r={x:s},a={perm:t};return s.dtype==="complex64"?K(()=>{let o=Xu(s),i=Yp(s);return o=B.runKernel(Br,{x:o},a),i=B.runKernel(Br,{x:i},a),n&&(i=$t(i)),ua(o,i)}):B.runKernel(Br,r,a)}var st=G({transpose_:KD});function ZD(e,t,n){let s=P(e,"labels","confusionMatrix"),r=P(t,"predictions","confusionMatrix");M(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),M(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),M(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=qu(he(s,"int32"),n),o=qu(he(r,"int32"),n),i=st(a),l=Ye(i,o);return he(l,"int32")}var YD=G({confusionMatrix_:ZD}),Hl={};Ve(Hl,{assertAndGetBroadcastShape:()=>vt,getBroadcastDims:()=>i6,getReductionAxes:()=>an});function i6(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function an(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function vt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var qs={};Ve(qs,{fromPixels:()=>r$,fromPixelsAsync:()=>n$,toPixels:()=>s$});function l6(e,t,n){if(rl(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Ur(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Qo(e,t,s,n)}var Ci;function u6(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(im(dp,B.backendName)!=null){let f={pixels:e},m={numChannels:t};return B.runKernel(dp,f,m)}let[u,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],p;if(o)p=e.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)p=e.data;else if(a||r||i){if(Ci==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Ci=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Ci=document.createElement("canvas").getContext("2d");Ci.canvas.width=u,Ci.canvas.height=c,Ci.drawImage(e,0,0,u,c),p=Ci.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=u*c;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=p[m*4+g]}return l6(d,[c,u,t],"int32")}function JD(e){return e!=null&&e.data instanceof Uint8Array}function QD(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function e$(e){return e!=null&&e.width!==0&&e.height!==0}function t$(e){return QD()&&!(e instanceof ImageBitmap)&&e$(e)&&!JD(e)}async function n$(e,t=3){let n=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&t$(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return u6(n,t)}async function s$(e,t){let n=P(e,"img","toPixels");if(!(e instanceof nt)){let u=n;n=he(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){let c=[0,0,0,255];for(let d=0;d<a;d++){let h=o[u*a+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(c[0]=h*i,c[1]=h*i,c[2]=h*i):c[d]=h*i}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=s;let u=t.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return n!==e&&n.dispose(),l}var r$=G({fromPixels_:u6}),yy={};Ve(yy,{prepareAndValidate:()=>c6});function c6(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Et(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let p=0;p<r.length-1;++p)o*=r[p];let i=e.shape,l=r.slice();l.pop();let u=1;for(let p=a;p<n;++p)u*=i[p],l.push(i[p]);let c=[...ic(e.shape).map(p=>p/u),1].slice(0,a);return[l,o,u,c]}var Ay={};Ve(Ay,{calculateShapes:()=>d6,validateInput:()=>by,validateUpdateShape:()=>xy});function xy(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function by(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}xy(n,t,e)}function d6(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let p=r;p<a;++p)o*=n[p];let i=r<1?1:r,l=Et(t.shape)/i,u=[...ic(n.slice(0,r)),1],c=Et(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:u,outputSize:c}}var Ut={};Ve(Ut,{assertParamsValid:()=>o$,computeFlatOffset:()=>d$,computeOutShape:()=>l$,getNormalizedAxes:()=>u$,isSliceContinous:()=>c$,maskToAxes:()=>i$,parseSliceParams:()=>b6,sliceInfo:()=>p$,startForAxis:()=>A6,startIndicesWithElidedDims:()=>m6,stopForAxis:()=>x6,stopIndicesWithElidedDims:()=>g6,stridesForAxis:()=>y6,stridesWithElidedDims:()=>p6});var d3=-2,a$=-1;function o$(e,t,n){let s=e.shape.length;M(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),M(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)M(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function i$(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function l$(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function p6(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function h6(e,t,n){return n<=e?n:n-(t-1)}function f6(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function u$(e,t,n,s,r,a,o,i,l){let u=e.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let h=t[0],f=n+1;c=m6(o,h,f,s,e),p=g6(i,h,f,r,e),d=p6(a,h,f,e)}else for(let h=0;h<u;h++)c[h]=A6(o,s,a,e,h,l),p[h]=x6(i,r,a,e,h,l),d[h]=y6(a,h,l);return{begin:c,end:p,strides:d}}function m6(e,t,n,s,r){let a=[...r],o=f6(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=h6(t,n,i),u=s[l];e&1<<l&&(u=0),a[i]=u}return a}function g6(e,t,n,s,r){let a=[...r],o=f6(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=h6(t,n,i),u=s[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),a[i]=u}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=cp(0,a[i],r[i])}return a}function y6(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function A6(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=cp(0,o,l-1),o}function x6(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=cp(0,o,l):o=cp(-1,o,l-1),o}function c$(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function d$(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function b6(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{M(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(M(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function p$(e,t,n,s,r,a,o,i,l){let u;if(s==null?(u=new Array(t.length),u.fill(1)):u=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let A=0;A<p.dims;A++)c&&(1<<A&i)!==0&&p.numAddAxisAfterEllipsis++,1<<A&o&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};h$(p,d);let h=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(d.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let b=!!(d.shrinkAxisMask&1<<A),w=e[A];if(w===-1){g.push(b?1:-1);continue}let k=[d.beginMask&1<<A,d.endMask&1<<A],S=[d.strides[A]>0?0:-1,d.strides[A]>0?w:w-1];if(b&&d.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[A]===1;let E=!!(d.beginMask&1<<A&&d.endMask&1<<A);if(d.beginValid&&d.endValid){if(b){let D=d.begin[A]<0?w+d.begin[A]:d.begin[A];if(d.begin[A]=D,d.end[A]=d.begin[A]+1,D<0||D>=w)throw Error(`slice index ${d.begin[A]} of dimension ${A} out of bounds.`)}else d.begin[A]=z4(d.begin[A],0,d.strides[A],w,k,S),d.end[A]=z4(d.end[A],1,d.strides[A],w,k,S);let _=d.strides[A]===1&&d.begin[A]===0&&d.end[A]===w;h=h&&_,f=f&&(A===0&&d.strides[A]===1||_)}else h=h&&d.strides[A]===1&&E,f=f&&(A===0&&d.strides[A]===1||E);let R,$=!1;if(d.beginValid&&d.endValid?(R=d.end[A]-d.begin[A],$=!0):b?(R=1,$=!0):E&&w>=0&&(d.strides[A]<0?R=-w:R=w,$=!0),$){let _;R===0||R<0!=d.strides[A]<0?_=0:_=Math.trunc(R/d.strides[A])+(R%d.strides[A]!==0?1:0),g.push(_)}else g.push(-1)}for(let A=0;A<d.finalShapeGatherIndices.length;++A){let b=d.finalShapeGatherIndices[A];b>=0?y.push(g[b]):b===d3&&y.push(1)}return{finalShapeSparse:y.filter((A,b)=>d.finalShapeGatherIndices[b]!==d3),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function h$(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(d3),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(a$),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function z4(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var de={};Ve(de,{Serializable:()=>v6,SerializationMap:()=>Di,registerClass:()=>ei});var v6=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Di=class{constructor(){this.classNameMap={}}static getMap(){return Di.instance==null&&(Di.instance=new Di),Di.instance}static register(e){Di.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ei(e){M(e.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),M(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Di.register(e)}var w6={};Ve(w6,{TEST_EPSILON_FLOAT16:()=>k6,encodeStrings:()=>I6,expectArrayBuffersEqual:()=>b$,expectArraysClose:()=>m$,expectArraysEqual:()=>y$,expectNumbersClose:()=>A$,expectPromiseToFail:()=>g$,expectValuesInRange:()=>x$,testEpsilon:()=>vy});var f$=.001,k6=.1;function m$(e,t,n){return n==null&&(n=vy()),p3(e,t,(s,r)=>wy(s,r,n))}function vy(){return B.backend.floatPrecision()===32?f$:k6}function p3(e,t,n){let s=!0;if((_n(e)||_n(t))&&(s=!1),_n(e)&&_n(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Ur(e),i=Ur(t);if(!ro(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=_n(e)?e:Vi(e),a=_n(t)?t:Vi(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function g$(e,t){e().then(()=>t.fail(),()=>t())}function y$(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return La(e)||La(e[0])||La(t)||La(t[0])?p3(e,n,(s,r)=>s==r):p3(e,t,(s,r)=>wy(s,r,0))}function A$(e,t,n){if(n==null&&(n=vy()),!wy(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function wy(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function x$(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function b$(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function I6(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?I6(n):e[t]=qp(n)}return e}var ky="3.18.0";function v$(e,t){let n=P(e,"a","add"),s=P(t,"b","add");[n,s]=Gt(n,s);let r={a:n,b:s};return B.runKernel(ma,r)}var ce=G({add_:v$});function w$(e,t){let n=P(e,"a","floorDiv"),s=P(t,"b","floorDiv");[n,s]=Gt(n,s);let r={a:n,b:s};return B.runKernel(wo,r)}var Oc=G({floorDiv_:w$});function k$(e,t){let n=P(e,"a","div"),s=P(t,"b","div");if([n,s]=Gt(n,s),n.dtype==="int32"&&s.dtype==="int32")return Oc(n,s);let r={a:n,b:s},a={};return B.runKernel(Ao,r,a)}var pe=G({div_:k$});function I$(e,t){let n=P(e,"a","mul"),s=P(t,"b","mul");[n,s]=Gt(n,s);let r={a:n,b:s};return B.runKernel(Fo,r)}var L=G({mul_:I$});function S$(e){let t=P(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return B.runKernel(_p,n)}else{let n={x:t};return B.runKernel(al,n)}}var tn=G({abs_:S$});function C$(e){let n={x:P(e,"x","acos")};return B.runKernel(lc,n)}var Iy=G({acos_:C$});function T$(e){let n={x:P(e,"x","acosh")};return B.runKernel(uc,n)}var Sy=G({acosh_:T$});function N$(e){M(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),M(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>P(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!ro(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return B.runKernel(ao,s)}var l0=G({addN_:N$});function E$(e,t=null,n=!1){let r={x:P(e,"x","all","bool")},a={axis:t,keepDims:n};return B.runKernel(cc,r,a)}var u0=G({all_:E$});function R$(e,t=null,n=!1){let r={x:P(e,"x","any","bool")},a={axis:t,keepDims:n};return B.runKernel(dc,r,a)}var yp=G({any_:R$});function _$(e,t=0){let s={x:P(e,"x","argMax")},r={axis:t};return B.runKernel(oo,s,r)}var Ss=G({argMax_:_$});function D$(e,t=0){let s={x:P(e,"x","argMin")},r={axis:t};return B.runKernel(pc,s,r)}var Cy=G({argMin_:D$});function $$(e){let n={x:P(e,"x","asin")};return B.runKernel(hc,n)}var Ty=G({asin_:$$});function P$(e){let n={x:P(e,"x","asinh")};return B.runKernel(fc,n)}var Ny=G({asinh_:P$});function F$(e){let n={x:P(e,"x","atan")};return B.runKernel(mc,n)}var Ey=G({atan_:F$});function O$(e,t){let n=P(e,"a","atan2"),s=P(t,"b","atan2");[n,s]=Gt(n,s);let r={a:n,b:s};return B.runKernel(yc,r)}var Ry=G({atan2_:O$});function M$(e){let n={x:P(e,"x","atanh")};return B.runKernel(gc,n)}var _y=G({atanh_:M$});function z$(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=T6(r);return Jp(e,i,n,a,s,null,null,l)}function S6(e,t,n,s,r,a,o="channelsLast"){let[i,l]=dm(t),u;if(o==="channelsLast")u=[i,l,e[3],e[3]];else if(o==="channelsFirst")u=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Jp(e,u,n,s,r,a,!1,o)}function L$(e,t,n,s,r,a,o="NDHWC"){let[i,l,u]=h3(t),c,p;if(o==="NDHWC")p="channelsLast",c=[i,l,u,e[4],e[4]];else if(o==="NCDHW")p="channelsFirst",c=[i,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return C6(e,c,n,s,r,!1,p,a)}function Jp(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p]=e;else if(i==="channelsFirst")[l,p,u,c]=e;else throw new Error(`Unknown dataFormat ${i}`);let[d,h,,f]=t,[m,g]=dm(n),[y,x]=dm(s),A=Bu(d,y),b=Bu(h,x),{padInfo:w,outHeight:k,outWidth:S}=V$(r,u,c,m,g,A,b,a,i),E=o?f*p:f,R;return i==="channelsFirst"?R=[l,E,k,S]:i==="channelsLast"&&(R=[l,k,S,E]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:p,outHeight:k,outWidth:S,outChannels:E,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function C6(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,p,d]=e;else if(o==="channelsFirst")[l,d,u,c,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[y,x,A]=h3(n),[b,w,k]=h3(s),S=Bu(h,b),E=Bu(f,w),R=Bu(m,k),{padInfo:$,outDepth:_,outHeight:D,outWidth:C}=U$(r,u,c,p,y,x,A,S,E,R,i),F=a?g*d:g,V;return o==="channelsFirst"?V=[l,F,_,D,C]:o==="channelsLast"&&(V=[l,_,D,C,F]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:_,outHeight:D,outWidth:C,outChannels:F,padInfo:$,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:w,dilationWidth:k,inShape:e,outShape:V,filterShape:t}}function B$(e,t,n,s,r){s==null&&(s=Dy(e,t,n));let a=e[0],o=e[1],i=zi((a-t+2*s)/n+1,r),l=zi((o-t+2*s)/n+1,r);return[i,l]}function W$(e,t,n,s,r,a){r==null&&(r=Dy(e,t,s));let o=e[0],i=e[1],l=e[2],u=zi((o-t+2*r)/s+1,a),c=zi((i-t+2*r)/s+1,a),p=zi((l-t+2*r)/s+1,a);return[u,c,p,n]}function Dy(e,t,n,s=1){let r=Bu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function dm(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function h3(e){return typeof e=="number"?[e,e,e]:e}function Bu(e,t){return t<=1?e:e+(e-1)*(t-1)}function V$(e,t,n,s,r,a,o,i,l){let u,c,p;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=B$([t,n],a,s,e,i);c=h[0],p=h[1]}else if(e==="same"){c=Math.ceil(t/s),p=Math.ceil(n/r);let d=Math.max(0,(c-1)*s+a-t),h=Math.max(0,(p-1)*r+o-n),f=Math.floor(d/2),m=d-f,g=Math.floor(h/2),y=h-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),p=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];u={top:d,bottom:h,left:f,right:m,type:d===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=zi((t-a+d+h)/s+1,i),p=zi((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:c,outWidth:p}}function U$(e,t,n,s,r,a,o,i,l,u,c){let p,d,h,f;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=W$([t,n,s,1],i,1,r,e,c);d=g[0],h=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(d-1)*r+i-t,g=(h-1)*a+l-n,y=(f-1)*o+u-s,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),w=g-b,k=Math.floor(y/2),S=y-k;p={top:b,bottom:w,left:k,right:S,front:x,back:A,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}function zi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Za(e){let[t,n,s]=dm(e);return t===1&&n===1&&s===1}function jr(e,t){return Za(e)||Za(t)}function T6(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ts(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")M(Gu(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{M(Gu(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function G$(e,t){let s={x:P(e,"x","reshape","string_or_numeric")},r={shape:t};return B.runKernel(Nl,s,r)}var U=G({reshape_:G$});function H$(e,t,n,s,r){let a=P(e,"x","avgPool","float32"),o=1;M(jr(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),ts("avgPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=B.runKernel(io,u,c);return p=he(p,a.dtype),l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Qp=G({avgPool_:H$});function j$(e,t,n,s,r,a="NDHWC"){let o=P(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ts("avgPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=B.runKernel(Ep,u,c);return p=he(p,i.dtype),l?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var $y=G({avgPool3d_:j$});function q$(e,t=0){M(e.length>=1,()=>"Pass at least one tensor to concat");let n=gp(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Yn(n[0]);let s=n,r={axis:t};return B.runKernel(il,s,r)}var It=G({concat_:q$});function X$(e){let n={x:P(e,"x","sigmoid","float32")};return B.runKernel(Ho,n)}var Sn=G({sigmoid_:X$});function K$(e,t,n){let s=P(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return B.runKernel($l,r,a)}var Oe=G({slice_:K$});function Z$(e){let n={x:P(e,"x","tanh","float32")};return B.runKernel(Yo,n)}var Hi=G({tanh_:Z$});function Y$(e,t,n,s,r,a){let o=P(e,"forgetBias","basicLSTMCell"),i=P(t,"lstmKernel","basicLSTMCell"),l=P(n,"lstmBias","basicLSTMCell"),u=P(s,"data","basicLSTMCell"),c=P(r,"c","basicLSTMCell"),p=P(a,"h","basicLSTMCell"),d=It([u,p],1),h=Ye(d,i),f=ce(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=Oe(f,[0,0],y),A=Oe(f,[0,g],y),b=Oe(f,[0,g*2],y),w=Oe(f,[0,g*3],y),k=ce(L(Sn(x),Hi(A)),L(c,Sn(ce(o,b)))),S=L(Hi(k),Sn(w));return[k,S]}var J$=G({basicLSTMCell_:Y$});function Q$(e,t,n){let s=P(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);M(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),M(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),M(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return B.runKernel(ol,a,o)}var eh=G({batchToSpaceND_:Q$});function eP(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function tP(e,t,n,s,r,a){a==null&&(a=.001);let o=P(e,"x","batchNorm"),i=P(t,"mean","batchNorm"),l=P(n,"variance","batchNorm"),u;r!=null&&(u=P(r,"scale","batchNorm"));let c;s!=null&&(c=P(s,"offset","batchNorm")),M(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:eP(o),scale:u,offset:c,mean:i,variance:l},h={varianceEpsilon:a},f=B.runKernel(ko,d,h);return U(f,o.shape)}var ji=G({batchNorm_:tP});function nP(e,t,n,s,r,a){let o=P(e,"x","batchNorm"),i=P(t,"mean","batchNorm"),l=P(n,"variance","batchNorm"),u;r!=null&&(u=P(r,"scale","batchNorm"));let c;return s!=null&&(c=P(s,"offset","batchNorm")),M(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ji(o,i,l,c,u,a)}var N6=G({batchNorm2d_:nP});function sP(e,t,n,s,r,a){let o=P(e,"x","batchNorm"),i=P(t,"mean","batchNorm"),l=P(n,"variance","batchNorm"),u;r!=null&&(u=P(r,"scale","batchNorm"));let c;return s!=null&&(c=P(s,"offset","batchNorm")),M(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ji(o,i,l,c,u,a)}var E6=G({batchNorm3d_:sP});function rP(e,t,n,s,r,a){let o=P(e,"x","batchNorm"),i=P(t,"mean","batchNorm"),l=P(n,"variance","batchNorm"),u;r!=null&&(u=P(r,"scale","batchNorm"));let c;return s!=null&&(c=P(s,"offset","batchNorm")),M(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ji(o,i,l,c,u,a)}var R6=G({batchNorm4d_:rP});function aP(e,t,n){let s=P(e,"x","bincount"),r=P(t,"weights","bincount");M(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return B.runKernel(Mm,a,o)}var Py=G({bincount_:aP});function oP(e,t){let n=P(e,"s0","broadcastArgs","int32"),s=P(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return B.runKernel(zm,r)}var _6=G({broadcastArgs_:oP});function iP(e,t){let n=P(e,"broadcastTo","x"),s=n.shape;if(t.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=U(n,u)}let r=n.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])a[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Yn(n);let i={x:n},l={reps:a};return B.runKernel(ya,i,l)}var Wu=G({broadcastTo_:iP});function lP(e){let n={x:P(e,"x","ceil","float32")};return B.runKernel(co,n)}var Fy=G({ceil_:lP});function uP(e,t,n){let s=P(e,"x","clipByValue");M(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return B.runKernel(ga,r,a)}var ds=G({clipByValue_:uP});function cP(e){return It(e,0)}var D6=G({concat1d_:cP});function dP(e,t){return It(e,t)}var Mc=G({concat2d_:dP});function pP(e,t){return It(e,t)}var $6=G({concat3d_:pP});function hP(e,t){return It(e,t)}var P6=G({concat4d_:hP});function fP(e,t,n,s,r="NHWC",a=[1,1],o){let i=P(e,"x","conv2d","float32"),l=P(t,"filter","conv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ts("conv2d",s,o);let p=r==="NHWC"?u.shape[3]:u.shape[1];M(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),M(jr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let d={x:u,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=B.runKernel(po,d,h);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ca=G({conv2d_:fP});function mP(e,t,n,s,r="NWC",a=1,o){let i=P(e,"x","conv1d"),l=P(t,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1]])),M(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ts("conv1d",s,o),M(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M(jr(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),M(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=U(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=U(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=ca(d,p,[1,n],s,"NHWC",[1,a],o);return c?U(g,[g.shape[2],g.shape[3]]):U(g,[g.shape[0],g.shape[2],g.shape[3]])}var c0=G({conv1d_:mP});function gP(e,t,n,s,r,a="NHWC",o){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,u=!1;t.rank===3&&(u=!0,l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=a==="NHWC"?i[3]:i[1],p=a==="NHWC"?l.shape[3]:l.shape[1];M(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),M(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),ts("conv2dDerInput",r,o);let d={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=B.runKernel(ho,d,h);return u?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Oy=G({conv2DBackpropInput_:gP});function yP(e,t,n,s,r,a){let o=P(e,"x","conv2dTranspose"),i=P(t,"filter","conv2dTranspose");return Oy(n,o,i,s,r,"NHWC",a)}var d0=G({conv2dTranspose_:yP});function AP(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=P(e,"x","conv3d"),i=P(t,"filter","conv3d"),l=o,u=!1;o.rank===4&&(u=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M(jr(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:l,filter:i},p={strides:n,pad:s,dataFormat:r,dilations:a},d=B.runKernel(Dp,c,p);return u?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var My=G({conv3d_:AP});function xP(e,t,n,s,r){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],u=o.shape[4];M(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),M(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),M(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let c={dy:o,filter:n},p={pad:r,strides:s,inputShape:a},d=B.runKernel(Wm,c,p);return i?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var F6=G({conv3DBackpropInput_:xP});function bP(e,t,n,s,r){let a=P(e,"x","conv3dTranspose"),o=P(t,"filter","conv3dTranspose");return F6(n,a,o,s,r)}var O6=G({conv3dTranspose_:bP});function vP(e){let n={x:P(e,"x","cos","float32")};return B.runKernel(fo,n)}var th=G({cos_:vP});function wP(e){let n={x:P(e,"x","cosh","float32")};return B.runKernel(mo,n)}var p0=G({cosh_:wP});function kP(e,t=0,n=!1,s=!1){let a={x:P(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:s};return B.runKernel(ll,a,o)}var Ap=G({cumprod_:kP});function IP(e,t=0,n=!1,s=!1){let a={x:P(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return B.runKernel(go,a,o)}var h0=G({cumsum_:IP});function SP(e,t,n,s=!1){let r=P(e,"x","denseBincount"),a=P(t,"weights","denseBincount");M(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),M(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return B.runKernel(Vm,o,i)}var M6=G({denseBincount_:SP});function CP(e,t,n="NHWC"){let s=P(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];M(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),M(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),M(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),M(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return B.runKernel(cl,i,l)}var zy=G({depthToSpace_:CP});function TP(e,t,n,s,r="NHWC",a=[1,1],o){let i=P(e,"x","depthwiseConv2d","float32"),l=P(t,"filter","depthwiseConv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),ts("depthwiseConv2d",s,o);let p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},h=B.runKernel(yo,p,d);return c?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var zc=G({depthwiseConv2d_:TP});function NP(e){let n={x:P(e,"x","diag")};return B.runKernel(Hm,n)}var EP=G({diag_:NP});function RP(e,t,n,s,r=[1,1],a="NHWC"){let o=P(e,"x","dilation2d"),i=P(t,"filter","dilation2d");M(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,u=!1;o.rank===3&&(l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);let c={x:l,filter:i},p={strides:n,pad:s,dilations:r},d=B.runKernel($p,c,p);return u?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Ly=G({dilation2d_:RP});function _P(e,t){let n=P(e,"a","equal","string_or_numeric"),s=P(t,"b","equal","string_or_numeric");[n,s]=Gt(n,s),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(dl,r)}var Cs=G({equal_:_P});function DP(e,t,n){let s=P(t,"a","where"),r=P(n,"b","where"),a=P(e,"condition","where","bool"),o=vt(vt(a.shape,s.shape),r.shape),i=Wu(a,o),l=Wu(s,o),u=Wu(r,o),c={condition:i,t:l,e:u};return B.runKernel(Dl,c)}var Pn=G({where_:DP});function $P(e){let n={x:P(e,"x","zerosLike")};return B.runKernel(Vl,n)}var it=G({zerosLike_:$P});function PP(e,t){let n=P(e,"a","div"),s=P(t,"b","div");[n,s]=Gt(n,s);let r=pe(n,s),a=it(r),o=Cs(s,a);return Pn(o,a,r)}var By=G({divNoNan_:PP});function FP(e,t){let n=P(e,"t1","dot"),s=P(t,"t2","dot");M((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(M(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=U(n,[1,-1]),i=U(s,[-1,1]),l=Ye(o,i);return U(l,[])}else if(n.rank===1&&s.rank===2){let o=U(n,[1,-1]),i=U(s,[s.shape[0],s.shape[1]]),l=Ye(o,i);return U(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=U(s,[-1,1]),i=Ye(n,o);return U(i,[i.size])}else{let o=U(s,[s.shape[0],s.shape[1]]);return Ye(n,o)}}var z6=G({dot_:FP});function OP(e,...t){let n=t.map((r,a)=>P(r,`tensors${a}`,"einsum")),s={equation:e};return B.runKernel(Pp,n,s)}var L6=G({einsum_:OP});function MP(e){let n={x:P(e,"x","elu","float32")};return B.runKernel(xo,n)}var Lc=G({elu_:MP});function zP(e){let t=P(e,"x","erf");M(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=he(t,"float32"));let n={x:t};return B.runKernel(Ac,n)}var Wy=G({erf_:zP});function Vy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function B6(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function W6(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function qi(e,t){let n=t.map(s=>1);return B6(e,n,t)}function LP(e,t,n){M(Vy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function V6(e,t){if(Vy(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function Uy(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function BP(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function WP(e,t=null,n=!1){let r={x:P(e,"x","max")},a={reductionIndices:t,keepDims:n};return B.runKernel(No,r,a)}var fn=G({max_:WP});function VP(e,t=null,n=!1){let r={x:P(e,"x","min")},a={axis:t,keepDims:n};return B.runKernel(Do,r,a)}var da=G({min_:VP});function UP(e,t){let n=P(e,"base","pow"),s=P(t,"exp","pow");[n,s]=Gt(n,s);let r={a:n,b:s};return B.runKernel(Mo,r)}var pa=G({pow_:UP});function Ce(e,t){if((_n(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&_n(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Qo(e,[],[],t)}function GP(e){let n={x:P(e,"x","sqrt","float32")};return B.runKernel(jo,n)}var Cn=G({sqrt_:GP});function HP(e){let t=P(e,"x","square"),n={};return B.runKernel("Square",{x:t},n)}var bt=G({square_:HP});function jP(e,t=null,n=!1){let s=P(e,"x","sum");s.dtype==="bool"&&(s=he(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return B.runKernel(qo,r,a)}var ke=G({sum_:jP});function qP(e,t="euclidean",n=null,s=!1){e=P(e,"x","norm");let r=U6(e,t,n),a=r.shape;if(s){let o=rr(n,e.shape);a=qi(r.shape,o)}return U(r,a)}function U6(e,t,n=null){if(e.rank===0)return tn(e);if(e.rank!==1&&n===null)return U6(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ke(tn(e),n);if(t===1/0)return fn(tn(e),n);if(t===-1/0)return da(tn(e),n);if(t==="euclidean"||t===2)return Cn(ke(pa(tn(e),Ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return fn(ke(tn(e),n[0]),n[1]-1);if(t===1/0)return fn(ke(tn(e),n[1]),n[0]);if(t===-1/0)return da(ke(tn(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Cn(ke(bt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var nh=G({norm_:qP});function XP(e,t=null,n=!1){return nh(e,"euclidean",t,n)}var Gy=G({euclideanNorm_:XP});function KP(e){let n={x:P(e,"x","exp")};return B.runKernel(bo,n)}var Ts=G({exp_:KP});function ZP(e,t=0){let n=P(e,"x","expandDims","string_or_numeric");M(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return B.runKernel(pl,s,r)}var Kt=G({expandDims_:ZP});function YP(e){let n={x:P(e,"x","expm1")};return B.runKernel(hl,n)}var Hy=G({expm1_:YP});function JP(e,t){let n=P(e,"x","tile","string_or_numeric");M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return B.runKernel(ya,s,r)}var Vs=G({tile_:JP});function QP(e,t,n,s="float32"){t==null&&(t=e);let r=We([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=U(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Vs(Kt(o,0),[n[0],1,1]);if(n.length===2)return Vs(Kt(Kt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Vs(Kt(Kt(Kt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var jy=G({eye_:QP});function Bc(e,t,n){let s={shape:e,value:t,dtype:n};return B.runKernel(xc,{},s)}function eF(e){let n={x:P(e,"x","floor","float32")};return B.runKernel(vo,n)}var Wc=G({floor_:eF});function tF(e,t,n=0,s=0){let r=P(e,"x","gather"),a=P(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return B.runKernel(ml,o,i)}var Xi=G({gather_:tF});function nF(e,t){let n=P(e,"a","greater","string_or_numeric"),s=P(t,"b","greater","string_or_numeric");[n,s]=Gt(n,s),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(yl,r)}var fs=G({greater_:nF});function sF(e,t){let n=P(e,"a","greaterEqual","string_or_numeric"),s=P(t,"b","greaterEqual","string_or_numeric");[n,s]=Gt(n,s),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Io,r)}var ti=G({greaterEqual_:sF});function rF(e){let n={x:P(e,"x","isFinite")};return B.runKernel(bc,n)}var G6=G({isFinite_:rF});function aF(e){let n={x:P(e,"x","isInf")};return B.runKernel(vc,n)}var H6=G({isInf_:aF});function oF(e){let n={x:P(e,"x","isNaN")};return B.runKernel(wc,n)}var qy=G({isNaN_:oF});function iF(e,t=.2){let s={x:P(e,"x","leakyRelu")},r={alpha:t};return B.runKernel(Co,s,r)}var sh=G({leakyRelu_:iF});function lF(e,t){let n=P(e,"a","less","string_or_numeric"),s=P(t,"b","less","string_or_numeric");[n,s]=Gt(n,s),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Al,r)}var f0=G({less_:lF});function uF(e,t){let n=P(e,"a","lessEqual","string_or_numeric"),s=P(t,"b","lessEqual","string_or_numeric");[n,s]=Gt(n,s),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(xl,r)}var ni=G({lessEqual_:uF});function j6(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return B.runKernel(Km,{},s)}function cF(e,t=5,n=1,s=1,r=.5){let a=P(e,"x","localResponseNormalization");M(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),M(Gu(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},u={depthRadius:t,bias:n,alpha:s,beta:r},c=B.runKernel(Mp,l,u);return i?U(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Xy=G({localResponseNormalization_:cF});function dF(e){let n={x:P(e,"x","log","float32")};return B.runKernel(To,n)}var Ns=G({log_:dF});function pF(e){let n={x:P(e,"x","log1p")};return B.runKernel(kc,n)}var rh=G({log1p_:pF});function hF(e){return M(ja(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=P(t,"x","tf.grad","string_or_numeric"),r=n!=null?P(n,"dy","tf.grad"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(s),[s],r);return r!=null&&Qn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),m0(o),o[0]})}}function fF(e){return M(ja(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{M(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=gp(t,"args","tf.grads","string_or_numeric"),r=n!=null?P(n,"dy","tf.grads"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(...s),s,r);return r!=null&&Qn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),m0(o),o})}}function mF(e){return M(ja(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{M(t instanceof nt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(n==null||n instanceof nt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=B.gradients(()=>e(t),[t],n);return m0(s),{grad:s[0],value:r}}}function gF(e){return M(ja(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{M(Array.isArray(t)&&t.every(r=>r instanceof nt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(n==null||n instanceof nt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=B.gradients(()=>e(...t),t,n);return n!=null&&Qn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),m0(s.grads),s}}function q6(e,t){M(ja(e),()=>"The f passed in variableGrads(f) must be a function"),M(t==null||Array.isArray(t)&&t.every(u=>u instanceof fp),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in B.registeredVariables)t.push(B.registeredVariables[u])}let s=n?t.filter(u=>!u.trainable):null,r=t.length;t=t.filter(u=>u.trainable),M(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=B.gradients(e,t,null,a);M(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:o,grads:l}}function Gr(e){return B.customGrad(e)}function m0(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function yF(e){let n={x:P(e,"x","softplus")};return B.runKernel(Dc,n)}var jl=G({softplus_:yF});function AF(e){let t=P(e,"x","logSigmoid");return Gr(s=>({value:$t(jl($t(s))),gradFunc:o=>L(o,Sn($t(s)))}))(t)}var X6=G({logSigmoid_:AF});function xF(e,t){let n=P(e,"a","sub"),s=P(t,"b","sub");[n,s]=Gt(n,s);let r={a:n,b:s};return B.runKernel(Zo,r)}var fe=G({sub_:xF});function bF(e,t=-1){let n=P(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Gr((r,a)=>{let i=fn(r,t,!0),l=fe(r,i),u=fe(he(l,"float32"),Ns(ke(Ts(l),t,!0)));return a([u]),{value:u,gradFunc:(p,d)=>{let[h]=d,f=!0,m=Ts(h);return fe(p,L(ke(p,t,f),m))}}})(n)}var g0=G({logSoftmax_:bF});function vF(e,t=null,n=!1){let s=P(e,"x","logSumExp"),r=rr(t,s.shape),a=fn(s,r,!0),o=fe(s,a),i=Ts(o),l=ke(i,r),u=Ns(l),c=ce(U(a,u.shape),u);if(n){let p=qi(c.shape,r);return U(c,p)}return c}var Ky=G({logSumExp_:vF});function wF(e,t){let n=P(e,"a","logicalAnd","bool"),s=P(t,"b","logicalAnd","bool");vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(bl,r)}var sr=G({logicalAnd_:wF});function kF(e){let n={x:P(e,"x","logicalNot","bool")};return B.runKernel(Ic,n)}var ah=G({logicalNot_:kF});function IF(e,t){let n=P(e,"a","logicalOr","bool"),s=P(t,"b","logicalOr","bool");vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Op,r)}var y0=G({logicalOr_:IF});function SF(e,t){let n=P(e,"a","logicalXor","bool"),s=P(t,"b","logicalXor","bool");return vt(n.shape,s.shape),sr(y0(e,t),ah(sr(e,t)))}var K6=G({logicalXor_:SF}),Df=2147483648;function CF(e,t,n="left"){let s=P(e,"sortedSequence","searchSorted"),r=P(t,"values","searchSorted"),a=s.shape[s.shape.length-1],o=r.shape[r.shape.length-1],i=U(s,[-1,a]),l=U(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Et(l.shape)>=Df)throw new Error(`values tensor size must less than ${Df}`);if(i.shape[1]>=Df)throw new Error(`trailing dim_size must less than ${Df} for int32 output type, was ${i.shape[1]}`);let u={sortedSequence:i,values:l},c={side:n};return B.runKernel(s0,u,c)}var Zy=G({searchSorted_:CF});function Z6(e,t){return Zy(e,t,"left")}function TF(e,t,n,s,r){let a=P(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M(jr(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),ts("maxPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=B.runKernel(Ro,u,c);return l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var oh=G({maxPool_:TF});function NF(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=P(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ts("maxPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=B.runKernel(zp,u,c);return l?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Yy=G({maxPool3d_:NF});function EF(e,t,n,s,r=!1){let o={x:P(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=B.runKernel(Qm,o,i);return{result:l[0],indexes:l[1]}}var Y6=G({maxPoolWithArgmax_:EF});function RF(e,t){let n=P(e,"a","maximum"),s=P(t,"b","maximum");[n,s]=Gt(n,s),n.dtype==="bool"&&(n=he(n,"int32"),s=he(s,"int32")),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Eo,r)}var qr=G({maximum_:RF});function _F(e,t=null,n=!1){let r={x:P(e,"x","mean")},a={axis:t,keepDims:n};return B.runKernel(_o,r,a)}var Bt=G({mean_:_F});function Wt(e,t="float32"){if(t==="complex64"){let s=Wt(e,"float32"),r=Wt(e,"float32");return ua(s,r)}let n=Pm(Et(e),t);return B.makeTensor(n,e,t)}function Is(e,t="float32"){if(t==="complex64"){let s=Is(e,"float32"),r=Wt(e,"float32");return ua(s,r)}let n=ny(Et(e),t);return B.makeTensor(n,e,t)}function DF(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=P(e,"x","meshgrid",e instanceof nt?e.dtype:"float32");if(t===void 0)return[s];let r=P(t,"y","meshgrid",t instanceof nt?t.dtype:"float32"),a=Et(s.shape),o=Et(r.shape);return n==="xy"?(s=U(s,[1,-1]),r=U(r,[-1,1]),[Ye(Is([o,1],s.dtype),s),Ye(r,Is([1,a],r.dtype))]):(s=U(s,[-1,1]),r=U(r,[1,-1]),[Ye(s,Is([1,o],s.dtype)),Ye(Is([a,1],r.dtype),r)])}function $F(e,t){let n=P(e,"a","minimum"),s=P(t,"b","minimum");[n,s]=Gt(n,s),n.dtype==="bool"&&(n=he(n,"int32"),s=he(s,"int32")),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel($o,r)}var Vc=G({minimum_:$F});function PF(e,t,n){M(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=P(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)M(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return B.runKernel(Po,o,a)}var Jy=G({mirrorPad_:PF});function FF(e,t){let n=P(e,"a","mod"),s=P(t,"b","mod");[n,s]=Gt(n,s);let r={a:n,b:s};return B.runKernel(Sc,r)}var ql=G({mod_:FF});function OF(e,t=null,n=!1){e=P(e,"x","moments");let s=rr(t,e.shape),r=Bt(e,s,n),a=r.shape;n||(a=qi(r.shape,s));let o=bt(fe(he(e,"float32"),U(r,a))),i=Bt(o,s,n);return{mean:r,variance:i}}var A0=G({moments_:OF});function MF(e,t,n,s){let r=P(t,"data","multiRNNCell"),a=gp(n,"c","multiRNNCell"),o=gp(s,"h","multiRNNCell"),i=r,l=[];for(let p=0;p<e.length;p++){let d=e[p](i,a[p],o[p]);l.push(d[0]),l.push(d[1]),i=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var zF=G({multiRNNCell_:MF});function LF(e,t,n,s=!1){let r=P(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?U(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:s},c=B.runKernel(e0,l,u);return o===1?U(c,[c.size]):c}var J6=G({multinomial_:LF});function BF(e,t){let n=P(e,"a","notEqual","string_or_numeric"),s=P(t,"b","notEqual","string_or_numeric");[n,s]=Gt(n,s),vt(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(wl,r)}var Ki=G({notEqual_:BF});function WF(e){let n={x:P(e,"x","onesLike")};return B.runKernel(Sl,n)}var Es=G({onesLike_:WF});function VF(e,t){let n=P(e,"v1","outerProduct"),s=P(t,"v2","outerProduct");M(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=U(n,[-1,1]),a=U(s,[1,-1]);return Ye(r,a)}var UF=G({outerProduct_:VF});function GF(e,t,n=0){let s=P(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return B.runKernel(Oo,a,r)}var Xs=G({pad_:GF});function HF(e,t,n=0){return M(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Xs(e,[t],n)}var jF=G({pad1d_:HF});function qF(e,t,n=0){return M(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Xs(e,t,n)}var XF=G({pad2d_:qF});function KF(e,t,n=0){return M(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Xs(e,t,n)}var ZF=G({pad3d_:KF});function YF(e,t,n=0){return M(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Xs(e,t,n)}var JF=G({pad4d_:YF});function QF(e,t,n){let s=P(e,"x","spaceToBatchND");M(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),M(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),M(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return B.runKernel(Fl,r,a)}var ih=G({spaceToBatchND_:QF});function eO(e,t,n,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let i=P(e,"x","maxPool"),l=i,u=!1;i.rank===3&&(u=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(jr(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=S6(l.shape,t,a,r,s),p=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=nO([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let h=p[0]===1&&p[1]===1,[f,m]=tO([c.inHeight,c.inWidth],p,d),g=h?s:"valid",y=h?l:ih(l,p,f),A=(n==="avg"?()=>Qp(y,t,a,g,o):()=>oh(y,t,a,g,o))(),b=h?A:eh(A,p,m);return u?U(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function tO(e,t,n){let s=n.map(c=>c[0]),r=n.map(c=>c[1]),a=e.concat(s,r),o=t.map((c,p)=>(c-a[p]%c)%c),i=r.map((c,p)=>c+o[p]),l=t.map((c,p)=>[s[p],i[p]]),u=t.map((c,p)=>[0,o[p]]);return[l,u]}function nO(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var Q6=G({pool_:eO});function sO(e,t){let n=P(e,"x","prelu"),s=P(t,"alpha","prelu"),r={x:n,alpha:s};return B.runKernel(zo,r)}var lh=G({prelu_:sO});function rO(e,t=null,n=!1){let s=P(e,"x","prod");s.dtype==="bool"&&(s=he(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return B.runKernel(Lo,r,a)}var x0=G({prod_:rO});function aO(e,t,n){let s=Et(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return B.makeTensor(r,e,n)}var oO=G({rand_:aO}),Qy=sl(A7()),eA=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=Qy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},iO=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=Qy.alea(r.toString()),this.randn=new eA(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},lO=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Qy.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function uO(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new iO(t,n,s,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var cO=G({randomGamma_:uO});function dO(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new eA(t,n,s,!1,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var ew=G({randomNormal_:dO});function pO(e,t=0,n=1,s="float32",r){let a=We(e,s),o=new lO(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var Uc=G({randomUniform_:pO});function Ku(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return B.runKernel(Tc,{},r)}function hO(e){let n={x:P(e,"x","reciprocal")};return B.runKernel(Nc,n)}var tA=G({reciprocal_:hO});function fO(e){let n={x:P(e,"x","relu")};return B.runKernel(Bo,n)}var Rr=G({relu_:fO});function mO(e){let n={x:P(e,"x","relu6")};return B.runKernel(Vo,n)}var b0=G({relu6_:mO});function gO(e,t){let s={x:P(e,"x","reverse")},r={dims:t};return B.runKernel(El,s,r)}var Rs=G({reverse_:gO});function yO(e){let t=P(e,"x","reverse");return M(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Rs(t,0)}var AO=G({reverse1d_:yO});function xO(e,t){let n=P(e,"x","reverse");return M(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Rs(n,t)}var bO=G({reverse2d_:xO});function vO(e,t){let n=P(e,"x","reverse");return M(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Rs(n,t)}var wO=G({reverse3d_:vO});function kO(e,t){let n=P(e,"x","reverse");return M(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Rs(n,t)}var IO=G({reverse4d_:kO});function SO(e){let n={x:P(e,"x","round")};return B.runKernel(Rl,n)}var v0=G({round_:SO});function CO(e){let n={x:P(e,"x","rsqrt","float32")};return B.runKernel(Uo,n)}var w0=G({rsqrt_:CO});function TO(e){let n={x:P(e,"x","selu")};return B.runKernel(Rc,n)}var k0=G({selu_:TO});function NO(e,t,n,s,r,a=[1,1],o="NHWC"){let i=P(e,"x","separableConv2d"),l=P(t,"depthwiseFilter","separableConv2d"),u=P(n,"pointwiseFilter","separableConv2d"),c=i,p=!1;if(i.rank===3&&(p=!0,c=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),M(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],h=l.shape[3];M(u.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${u.shape[2]}.`);let f=zc(c,l,s,r,o,a),g=ca(f,u,1,"valid",o);return p?U(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var nA=G({separableConv2d_:NO});async function EO(e,t){let n=P(e,"x","setdiff1d"),s=P(t,"y","setdiff1d");M(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),M(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let c=0;c<r.length;c++)o.has(r[c])||i++;let l=new hn([i],n.dtype),u=new hn([i],"int32");for(let c=0,p=0;c<r.length;c++)o.has(r[c])||(l.values[p]=r[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var tw=EO;function RO(e){let n={x:P(e,"x","sign")};return B.runKernel(_c,n)}var sA=G({sign_:RO});function _O(e){let n={x:P(e,"x","sin","float32")};return B.runKernel(Go,n)}var I0=G({sin_:_O});function DO(e){let n={x:P(e,"x","sinh")};return B.runKernel(Pl,n)}var S0=G({sinh_:DO});function $O(e,t,n){let s=P(e,"x","slice1d");return M(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Oe(s,[t],[n])}var C0=G({slice1d_:$O});function PO(e,t,n){let s=P(e,"x","slice2d");return M(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Oe(s,t,n)}var rA=G({slice2d_:PO});function FO(e,t,n){let s=P(e,"x","slice3d");return M(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Oe(s,t,n)}var Xl=G({slice3d_:FO});function OO(e,t,n){let s=P(e,"x","slice4d");return M(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Oe(s,t,n)}var Zi=G({slice4d_:OO});function MO(e,t=-1){let n=P(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return B.runKernel(Xo,s,r)}var Kl=G({softmax_:MO});function zO(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(qm,t)}var uh=G({fft_:zO});function LO(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(Xm,t)}var Zu=G({ifft_:LO});function BO(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=U(e,[n,t]);s=Zu(r)}else{let r=[n,2*(t-1)],a=U(Xu(e),[n,t]),o=U(Yp(e),[n,t]),i=Rs(Oe(a,[0,1],[n,t-2]),1),l=L(Rs(Oe(o,[0,1],[n,t-2]),1),Ce(-1)),u=It([a,i],1),c=It([o,l],1),p=U(ua(u,c),[r[0],r[1]]);s=Zu(p)}if(s=Xu(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=U(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var T0=G({irfft_:BO});function WO(e,t,n=0){let r={x:P(e,"x","split")},a={numOrSizeSplits:t,axis:n};return B.runKernel(Ol,r,a)}var Zt=G({split_:WO});function VO(e,t){M(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Oe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=It([e,Wt(f)],e.shape.length-1),n=t}else r=e;let a=it(r),o=U(ua(r,a),[s,n]),i=uh(o),l=Math.floor(n/2)+1,u=Xu(i),c=Yp(i),p=Zt(u,[l,n-l],u.shape.length-1),d=Zt(c,[l,n-l],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,U(ua(p[0],d[0]),h)}var ch=G({rfft_:VO});function UO(e,t){let n=P(e,"a","squaredDifference"),s=P(t,"b","squaredDifference");[n,s]=Gt(n,s),vt(n.shape,s.shape);let r={a:n,b:s},a={};return B.runKernel(Ko,r,a)}var N0=G({squaredDifference_:UO});function GO(e,t){let n=P(e,"x","squeeze");return U(n,w7(n.shape,t).newShape)}var Qe=G({squeeze_:GO});function HO(e,t=0){let n=gp(e,"tensors","stack","string_or_numeric");M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&M(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return B.runKernel(Tl,s,r)}var on=G({stack_:HO});function jO(e,t=0){let s={x:P(e,"x","step")},r={alpha:t};return B.runKernel(Jo,s,r)}var Gc=G({step_:jO});function qO(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let c={x:P(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return B.runKernel(Ml,c,p)}var aA=G({stridedSlice_:qO});function XO(e){let n={x:P(e,"x","tan","float32")};return B.runKernel(zl,n)}var oA=G({tan_:XO});function Dt(e,t){rl(e);let n=Ur(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Qo(e,null,n,t)}function kr(e,t,n){if(rl(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Ur(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Qo(e,t,s,n)}function KO(e,t,n){if(rl(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Ur(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Qo(e,t,s,n)}function ZO(e,t,n){if(rl(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Ur(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Qo(e,t,s,n)}function YO(e,t,n){if(rl(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Ur(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Qo(e,t,s,n)}function JO(e,t=1,n=!0){let s=P(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=B.runKernel(Ll,a,o);return{values:i,indices:l}}var iA=G({topk_:JO});function QO(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new eA(t,n,s,!0,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var E0=G({truncatedNormal_:QO});function eM(e,t=0){let n=P(e,"x","unique","string_or_numeric");M(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=B.runKernel(o0,s,r);return{values:a,indices:o}}var pm=G({unique_:eM});function tM(e,t,n){let s=P(e,"x","unsortedSegmentSum"),r=P(t,"segmentIds","unsortedSegmentSum","int32");M(Gu(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return B.runKernel(Hp,a,o)}var lA=G({unsortedSegmentSum_:tM});function nM(e,t=0){let n=P(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return B.runKernel(Wl,s,r)}var Jn=G({unstack_:nM});function nw(e,t){return Zy(e,t,"right")}function sw(e,t=!0,n,s){return B.makeVariable(e,t,n,s)}function rw(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=We(e,"int32"),r=We([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function sM(e){let t=P(e,"condition","whereAsync","bool"),n=await t.data(),s=rw(t.shape,n);return e!==t&&t.dispose(),s}var uA=sM;async function rM(e,t,n){let s=P(e,"tensor","boolMask"),r=P(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;M(o>0,()=>"mask cannot be scalar"),Qn(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let u=i.slice(0,a).concat([l],i.slice(a+o)),c=U(s,u),p=U(r,[-1]),d=await uA(p),h=Qe(d,[1]),f=Xi(c,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),f}var aM=rM;function oM(e,t,n,s,r=!0){let a=P(e,"v","movingAverage"),o=P(t,"x","movingAverage"),i=P(n,"decay","movingAverage");L7(a,o),M(ro(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ce(1),u=fe(l,i),c=L(fe(o,a),u);if(r){M(s!=null,()=>"When using zeroDebias: true, step is required.");let p=P(s,"step","movingAverage");c=pe(c,fe(l,pa(i,p)))}return ce(a,c)}var iM=G({movingAverage_:oM});function lM(e,t,n){let s=P(e,"indices","scatterND","int32"),r=P(t,"updates","scatterND");by(r,s,n);let a={indices:s,updates:r},o={shape:n};return B.runKernel(_l,a,o)}var aw=G({scatterND_:lM});function uM(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function cM(e,t,n,s=0){let r=P(e,"sparseIndices","sparseToDense","int32"),a=P(t,"sparseValues","sparseToDense","string_or_numeric"),o=P(s,"defaultValue","sparseToDense",a.dtype);uM(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return B.runKernel(Up,i,l)}var cA=G({sparseToDense_:cM});function dM(e,t){let n=P(t,"indices","gatherND","int32"),r={params:P(e,"x","gatherND","string_or_numeric"),indices:n};return B.runKernel(gl,r)}var ow=G({gatherND_:dM});function pM(e,t){if(t==null)return e.shape.slice();if(ro(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function hM(e,t,n,s){let r=P(e,"x","dropout");if(M(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),M(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof nt?r.clone():r;let a=pM(r,n),o=1-t,i=pe(Wc(ce(Uc(a,0,1,"float32",s),o)),o);return L(r,i)}var iw=G({dropout_:hM});function lw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function dA(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return Dt(r,"float32")}async function fM(e,t,n=1){let s=P(e,"predictions","inTopK"),r=P(t,"targets","inTopK");M(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),M(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Qn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];M(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,u]=[o.length/a,a],c=k7("bool",l);for(let p=0;p<l;p++){let d=p*u,h=o.subarray(d,d+u),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),c[p]=0;for(let m=0;m<n;m++)if(f[m].index===i[p]){c[p]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),gt(c,r.shape,"bool")}var mM=fM,Ya={};Ve(Ya,{conv2d:()=>AM,depthwiseConv2d:()=>wM,matMul:()=>IM});function gM(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=a==="NHWC"?i.shape[3]:i.shape[1],c=a==="NHWC"?l.shape[3]:l.shape[1];M(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),M(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),ts("conv2dDerFilter",r,o);let p={x:i,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return B.runKernel(Lm,p,d)}var pA=G({conv2DBackpropFilter_:gM});function R0(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,Gc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function _0(e,t){let n=t,s=an(e.shape,t.shape);return s.length>0&&(n=ke(n,s)),U(n,e.shape)}function D0(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Rr(e);if(t==="elu")return Lc(e);if(t==="relu6")return b0(e);if(t==="prelu")return lh(e,n);if(t==="leakyrelu")return sh(e,s);if(t==="sigmoid")return Sn(e);throw new Error(`Unknown fused activation ${t}.`)}var $0=(e,t)=>!(e>0)||t==="linear";function yM({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",$0(B.state.gradientDepth,l)===!1){M(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=ca(e,t,n,s,r,a,o);return i!=null&&(k=ce(k,i)),D0(k,l,u,c)}let p=P(e,"x","conv2d","float32"),d=P(t,"filter","conv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),M(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),M(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),ts("fused conv2d",s,o);let m=r==="NHWC"?h.shape[3]:h.shape[1];M(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),M(jr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let g=Jp(h.shape,d.shape,n,a,s,o),y;i!=null&&(y=P(i,"bias","fused conv2d"),[y]=Gt(y,p),r==="NHWC"?vt(g.outShape,y.shape):(M(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),M(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){let k=u.shape;if(M(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)M(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{vt(k,g.outShape)}catch(S){let E=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}x=P(u,"prelu weights","fused conv2d")}let A=(k,S)=>{M(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[E,R,$,_]=S,D=R0(k,$,l);M(Za(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let C=Oy(R.shape,D,E,n,s),F=pA(R,D,E.shape,n,s),V=[C,F];if(_!=null){let j=_0(_,D);V.push(j)}return V},b={x:h,filter:d,bias:y,preluActivationWeights:x},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Gr((S,E,R)=>{let $=B.runKernel(Xa,b,w);return R([E,S,$]),f&&($=U($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:A}})(h,d):Gr((S,E,R,$)=>{let _=B.runKernel(Xa,b,w);return $([E,S,_,R]),f&&(_=U(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:A}})(h,d,y)}var AM=G({fusedConv2d_:yM});function xM(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:i,dy:l},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return B.runKernel(Um,u,c)}var uw=G({depthwiseConv2dNativeBackpropFilter_:xM});function bM(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:i,filter:n},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},p=B.runKernel(Gm,u,c);return l?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var cw=G({depthwiseConv2dNativeBackpropInput_:bM});function vM({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if($0(B.state.gradientDepth,l)===!1){let w=zc(e,t,n,s,r,a,o);return i!=null&&(w=ce(w,i)),D0(w,l,u,c)}let p=P(e,"x","depthwiseConv2d","float32"),d=P(t,"filter","depthwiseConv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),M(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),M(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),M(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),a==null&&(a=[1,1]),M(jr(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),ts("fused depthwiseConv2d",s,o);let m=Jp(h.shape,d.shape,n,a,s,o,!0),g;i!=null&&(g=P(i,"bias","fused conv2d"),[g]=Gt(g,p),vt(m.outShape,g.shape));let y;u!=null&&(y=P(u,"prelu weights","fused depthwiseConv2d"));let x=(w,k)=>{M(Za(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[S,E,R,$]=k,_=R0(w,R,l),D=cw(E.shape,_,S,n,s,a,o),C=uw(E,_,S.shape,n,s,a,o);if($!=null){let F=_0(g,_);return[D,C,F]}return[D,C]},A={x:h,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Gr((k,S,E)=>{let R=B.runKernel(Ka,A,b);return E([S,k,R]),f&&(R=U(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,d):Gr((k,S,E,R)=>{let $=B.runKernel(Ka,A,b);return R([S,k,$,E]),f&&($=U($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:x}})(h,d,g)}var wM=G({fusedDepthwiseConv2d_:vM});function kM({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if($0(B.state.gradientDepth,a)===!1){let _=Ye(e,t,n,s);return r!=null&&(_=ce(_,r)),D0(_,a,o,i)}let l=P(e,"a","fused matMul"),u=P(t,"b","fused matMul");[l,u]=Gt(l,u);let c=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Et(f),y=Et(m);M(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);let A=vt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,h]),b=n?U(l,[g,c,d]):U(l,[g,d,c]),w=s?U(u,[y,h,p]):U(u,[y,p,h]),k;r!=null&&(k=P(r,"bias","fused matMul"),[k]=Gt(k,l),vt(A,k.shape));let S;o!=null&&(S=P(o,"prelu weights","fused matMul"));let E=(_,D)=>{let[C,F,V,j]=D,z=R0(U(_,V.shape),V,a),Z,W;if(!n&&!s?(Z=Ye(z,F,!1,!0),W=Ye(C,z,!0,!1)):!n&&s?(Z=Ye(z,F,!1,!1),W=Ye(z,C,!0,!1)):n&&!s?(Z=Ye(F,z,!1,!0),W=Ye(C,z,!1,!1)):(Z=Ye(F,z,!0,!0),W=Ye(z,C,!0,!0)),r!=null){let ee=_0(j,z);return[Z,W,ee]}else return[Z,W]},R={a:b,b:w,bias:k,preluActivationWeights:S},$={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Gr((D,C,F)=>{let V=B.runKernel(qa,R,$);return F([D,C,V]),{value:U(V,A),gradFunc:E}})(b,w):Gr((D,C,F,V)=>{let j=B.runKernel(qa,R,$);return V([D,C,j,F]),{value:U(j,A),gradFunc:E}})(b,w,k)}var IM=G({fusedMatMul_:kM});function SM(e){return dA(e,.54,.46)}var CM=G({hammingWindow_:SM});function TM(e){return dA(e,.5,.5)}var dw=G({hannWindow_:TM});function NM(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(Oe(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=It([Oe(e,a,t-i),Bc([i],r)]);o.push(l),a+=n}return o.length===0?kr([],[0,t]):U(It(o),[o.length,t])}var pw=G({frame_:NM});function EM(e,t,n,s,r=dw){s==null&&(s=lw(t));let a=pw(e,t,n),o=L(a,r(t));return ch(o,s)}var RM=G({stft_:EM});function _M(e,t,n,s,r="bilinear",a=0){let o=P(e,"image","cropAndResize"),i=P(t,"boxes","cropAndResize","float32"),l=P(n,"boxInd","cropAndResize","int32"),u=i.shape[0];M(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),M(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),M(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),M(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),M(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:o,boxes:i,boxInd:l},p={method:r,extrapolationValue:a,cropSize:s};return B.runKernel(ul,c,p)}var DM=G({cropAndResize_:_M});function $M(e){let t=P(e,"image","flipLeftRight","float32");M(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return B.runKernel(fl,n,{})}var PM=G({flipLeftRight_:$M});function FM(e){let t=P(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];M(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),M(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Vs(t,r)}var OM=G({grayscaleToRGB_:FM});function MM(e,t,n=0,s=.5){let r=P(e,"image","rotateWithOffset","float32");M(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return B.runKernel(Ul,a,o)}var zM=G({rotateWithOffset_:MM});function Hc(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),M(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),M(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),M(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),M(t.rank===1,()=>"scores must be a 1D tensor"),M(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),M(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function LM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=P(e,"boxes","nonMaxSuppression","float32"),o=P(t,"scores","nonMaxSuppression","float32"),i=Hc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return B.runKernel(kl,{boxes:a,scores:o},l)}var BM=G({nonMaxSuppression_:LM});function WM(e,t,n){let s=VM(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function VM(e,t,n){return GM(e,t,n||UM)}function UM(e,t){return e>t?1:e<t?-1:0}function GM(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function hw(e,t,n,s,r){return hA(e,t,n,s,r,0)}function fw(e,t,n,s,r,a){return hA(e,t,n,s,r,0,!1,a,!0)}function mw(e,t,n,s,r,a){return hA(e,t,n,s,r,a,!0)}function hA(e,t,n,s,r,a,o=!1,i=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(L4);let c=a>0?-.5/a:0,p=[],d=[];for(;p.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<r)break;let b=!1;for(let w=p.length-1;w>=A;--w){let k=HM(e,x,p[w]);if(k>=s){b=!0;break}if(g.score=g.score*jM(s,c,k),g.score<=r)break}g.suppressBeginIndex=p.length,b||(g.score===y?(p.push(x),d.push(g.score)):g.score>r&&WM(u,g,L4))}let h=p.length,f=n-h;i&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return o&&(m.selectedScores=d),l&&(m.validOutputs=h),m}function HM(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(p-u)*(d-c);if(h<=0||f<=0)return 0;let m=Math.max(a,u),g=Math.max(o,c),y=Math.min(i,p),x=Math.min(l,d),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(h+f-A)}function jM(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function L4(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function qM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=P(e,"boxes","nonMaxSuppressionAsync"),o=P(t,"scores","nonMaxSuppressionAsync"),i=Hc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:p}=hw(u,c,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),Dt(p,"int32")}var XM=qM;function KM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=P(e,"boxes","nonMaxSuppression"),i=P(t,"scores","nonMaxSuppression"),l=Hc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u={boxes:o,scores:i},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},p=B.runKernel(Il,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var ZM=G({nonMaxSuppressionWithScore_:KM});async function YM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=P(e,"boxes","nonMaxSuppressionAsync"),i=P(t,"scores","nonMaxSuppressionAsync"),l=Hc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u=await Promise.all([o.data(),i.data()]),c=u[0],p=u[1],{selectedIndices:d,selectedScores:h}=mw(c,p,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Dt(d,"int32"),selectedScores:Dt(h)}}var JM=YM;function QM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=P(e,"boxes","nonMaxSuppression"),i=P(t,"scores","nonMaxSuppression"),l=Hc(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:o,scores:i},h={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:a},f=B.runKernel(Cc,d,h);return{selectedIndices:f[0],validOutputs:f[1]}}var ez=G({nonMaxSuppressionPadded_:QM});async function tz(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=P(e,"boxes","nonMaxSuppressionAsync"),i=P(t,"scores","nonMaxSuppressionAsync"),l=Hc(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[d,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=fw(d,h,u,c,p,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Dt(f,"int32"),validOutputs:Ce(m,"int32")}}var nz=tz;function sz(e,t,n=!1,s=!1){let r=P(e,"images","resizeBilinear");M(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),M(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=B.runKernel(Wo,i,l);return o?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var gw=G({resizeBilinear_:sz});function rz(e,t,n=!1,s=!1){let r=P(e,"images","resizeNearestNeighbor");M(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),M(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=B.runKernel(Ec,i,l);return o?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var yw=G({resizeNearestNeighbor_:rz});function az(e,t="binary",n=!1,s=.5){let r=P(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],u=L(Dt([s]),255),c,p,d,h;if(M(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),M(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),M(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),M(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,p,d]=Zt(r,[1,1,1],-1);let g=L(c,a),y=L(p,o),x=L(d,i);h=ce(ce(g,y),x)}else h=e;if(t==="otsu"){let g=Py(he(v0(h),"int32"),gt([]),256);u=oz(g,l)}let f=n?ni(h,u):fs(h,u);return he(L(f,255),"int32")}function oz(e,t){let n=Dt([-1]),s=Dt([0]),r=Dt([0]),a,o,i,l,u,c;for(let p=0;p<e.size-1;p++){a=Oe(e,0,p+1),o=Oe(e,p+1),u=pe(ke(a),t),c=pe(ke(o),t);let d=ke(L(a,Ku(0,a.size)));i=pe(d,ke(a));let h=Bc(o.shape,a.size),f=ce(Ku(0,o.size),h),m=L(o,f);l=pe(ke(m),ke(o));let g=fe(i,l),y=fe(i,l),x=L(u,c);r=L(L(x,g),y);let A=fs(r,s);s=Pn(A,r,s),n=Pn(A,Dt([p]),n)}return n}var iz=G({threshold_:az});function lz(e,t,n="nearest",s="constant",r=0,a){let o=P(e,"image","transform","float32"),i=P(t,"transforms","transform","float32");M(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return B.runKernel(Bl,l,u)}var uz=G({transform_:lz});function cz(e,t,n){M(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),M(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=P(e,"a","bandPart");M(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=U(Ku(0,a,1,"int32"),[-1,1]),l=Ku(0,o,1,"int32"),u=fe(i,l),c=sr(ni(u,Ce(+t,"int32")),ti(u,Ce(-n,"int32"))),p=Wt([a,o],s.dtype);return U(on(Jn(U(s,[-1,a,o])).map(d=>Pn(c,d,p))),r)}var dz=G({bandPart_:cz});function pz(e){let t;if(Array.isArray(e)){t=!1,M(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)M(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Zt(e,e.shape[0],0).map(r=>Qe(r,[0]));M(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(B.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=L(ke(L(n[o],a)),n[o]);a=fe(a,i)}return pe(a,nh(a,"euclidean"))}));return t?on(n,0):n}var hz=G({gramSchmidt_:pz});function fz(e,t=!1){if(M(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return B4(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),s=Jn(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[u,c]=B4(l,t);r.push(u),a.push(c)});let o=U(on(r,0),e.shape),i=U(on(a,0),e.shape);return[o,i]}}function B4(e,t=!1){return B.tidy(()=>{M(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=jy(n),a=Yn(e),o=kr([[1]],[1,1]),i=Yn(o),l=n>=s?s:n;for(let u=0;u<l;++u){let c=a,p=i,d=r;[i,a,r]=B.tidy(()=>{let h=Oe(a,[u,u],[n-u,1]),f=nh(h),m=Oe(a,[u,u],[1,1]),g=Pn(fs(m,0),kr([[-1]]),kr([[1]])),y=fe(m,L(g,f)),x=pe(h,y);x.shape[0]===1?i=Yn(o):i=It([o,Oe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=$t(pe(Ye(g,y),f)),b=Oe(a,[u,0],[n-u,s]),w=L(A,i),k=st(i);if(u===0)a=fe(b,Ye(w,Ye(k,b)));else{let R=fe(b,Ye(w,Ye(k,b)));a=It([Oe(a,[0,0],[u,s]),R],0)}let S=st(w),E=Oe(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=fe(E,Ye(Ye(E,i),S));else{let R=fe(E,Ye(Ye(E,i),S));r=It([Oe(r,[0,0],[n,u]),R],1)}return[i,a,r]}),ne([c,p,d])}return!t&&n>s&&(r=Oe(r,[0,0],[n,s]),a=Oe(a,[0,0],[s,s])),[r,a]})}var mz=G({qr_:fz}),Xn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Xn||(Xn={}));function gz(e,t,n=Xn.SUM_BY_NONZERO_WEIGHTS){let s=P(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=P(t,"weights","computeWeightedLoss"));let a=r==null?s:L(s,r);if(n===Xn.NONE)return a;if(n===Xn.SUM)return ke(a);if(n===Xn.MEAN){if(r==null)return Bt(a);{let o=s.size/r.size,i=pe(ke(a),ke(r));return o>1?pe(i,Ce(o)):i}}if(n===Xn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return pe(ke(a),Ce(s.size));{let o=L(r,Is(s.shape)),i=he(ke(Ki(o,Ce(0))),"float32");return pe(ke(a),i)}}throw Error(`Unknown reduction: ${n}`)}var Aa=G({computeWeightedLoss_:gz});function yz(e,t,n,s=Xn.SUM_BY_NONZERO_WEIGHTS){let r=P(e,"labels","absoluteDifference"),a=P(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=P(n,"weights","absoluteDifference")),Qn(r.shape,a.shape,"Error in absoluteDifference: ");let i=tn(fe(r,a));return Aa(i,o,s)}var Az=G({absoluteDifference_:yz});function xz(e,t,n,s,r=Xn.SUM_BY_NONZERO_WEIGHTS){let a=P(e,"labels","cosineDistance"),o=P(t,"predictions","cosineDistance"),i=null;s!=null&&(i=P(s,"weights","cosineDistance")),Qn(a.shape,o.shape,"Error in cosineDistance: ");let l=Ce(1),u=fe(l,ke(L(a,o),n,!0));return Aa(u,i,r)}var bz=G({cosineDistance_:xz});function vz(e,t,n,s=Xn.SUM_BY_NONZERO_WEIGHTS){let r=P(e,"labels","hingeLoss"),a=P(t,"predictions","hingeLoss"),o=null;n!=null&&(o=P(n,"weights","hingeLoss")),Qn(r.shape,a.shape,"Error in hingeLoss: ");let i=Ce(1);r=fe(L(Ce(2),r),i);let l=Rr(fe(i,L(r,a)));return Aa(l,o,s)}var wz=G({hingeLoss_:vz});function kz(e,t,n,s=1,r=Xn.SUM_BY_NONZERO_WEIGHTS){let a=P(e,"labels","huberLoss"),o=P(t,"predictions","huberLoss"),i=null;n!=null&&(i=P(n,"weights","huberLoss")),Qn(a.shape,o.shape,"Error in huberLoss: ");let l=Ce(s),u=tn(fe(o,a)),c=Vc(u,l),p=fe(u,c),d=ce(L(Ce(.5),bt(c)),L(l,p));return Aa(d,i,r)}var Iz=G({huberLoss_:kz});function Sz(e,t,n,s=1e-7,r=Xn.SUM_BY_NONZERO_WEIGHTS){let a=P(e,"labels","logLoss"),o=P(t,"predictions","logLoss"),i=null;n!=null&&(i=P(n,"weights","logLoss")),Qn(a.shape,o.shape,"Error in logLoss: ");let l=Ce(1),u=Ce(s),c=$t(L(a,Ns(ce(o,u)))),p=L(fe(l,a),Ns(ce(fe(l,o),u))),d=fe(c,p);return Aa(d,i,r)}var Cz=G({logLoss_:Sz});function Tz(e,t,n,s=Xn.SUM_BY_NONZERO_WEIGHTS){let r=P(e,"labels","meanSquaredError"),a=P(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=P(n,"weights","meanSquaredError")),Qn(r.shape,a.shape,"Error in meanSquaredError: ");let i=N0(r,a);return Aa(i,o,s)}var Nz=G({meanSquaredError_:Tz});function Ez(e,t){let n=P(e,"labels","sigmoidCrossEntropyWithLogits"),s=P(t,"logits","sigmoidCrossEntropyWithLogits");Qn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Rr(s),a=L(s,n),o=rh(Ts($t(tn(s))));return ce(fe(r,a),o)}function Rz(e,t,n,s=0,r=Xn.SUM_BY_NONZERO_WEIGHTS){let a=P(e,"multiClassLabels","sigmoidCrossEntropy"),o=P(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=P(n,"weights","sigmoidCrossEntropy")),Qn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let u=Ce(s),c=Ce(1),p=Ce(.5);a=ce(L(a,fe(c,u)),L(p,u))}let l=Ez(a,o);return Aa(l,i,r)}var _z=G({sigmoidCrossEntropy_:Rz});function Dz(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Gr((r,a,o)=>{let l=Ky(a,[n],!0),u=fe(he(a,"float32"),l);o([r,u]);let c=$t(L(u,r));return{value:ke(c,[n]),gradFunc:(h,f)=>{let[m,g]=f,y=qi(h.shape,[n]);return[L(U(h,y),fe(he(m,"float32"),Ts(g))),L(U(h,y),fe(Ts(g),he(m,"float32")))]}}})(e,t)}function $z(e,t,n,s=0,r=Xn.SUM_BY_NONZERO_WEIGHTS){let a=P(e,"onehotLabels","softmaxCrossEntropy"),o=P(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=P(n,"weights","softmaxCrossEntropy")),Qn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let u=Ce(s),c=Ce(1),p=Ce(a.shape[1]);a=ce(L(a,fe(c,u)),pe(u,p))}let l=Dz(a,o);return Aa(l,i,r)}var Pz=G({softmaxCrossEntropy_:$z});function Fz(e,t,n,s){let r=P(e,"indices","sparseFillEmptyRows","int32"),a=P(t,"values","sparseFillEmptyRows"),o=P(n,"denseShape","sparseFillEmptyRows","int32"),i=P(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},u=B.runKernel(Bp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var Oz=G({sparseFillEmptyRows_:Fz});function Mz(e,t,n){let s=P(e,"inputIndices","sparseReshape","int32"),r=P(t,"inputShape","sparseReshape","int32"),a=P(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=B.runKernel($c,o);return{outputIndices:i[0],outputShape:i[1]}}var zz=G({sparseReshape_:Mz});function Lz(e,t,n){let s=P(e,"data","sparseSegmentMean"),r=P(t,"indices","sparseSegmentMean","int32"),a=P(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return B.runKernel(Wp,o)}var Bz=G({sparseSegmentMean_:Lz});function Wz(e,t,n){let s=P(e,"data","sparseSegmentSum"),r=P(t,"indices","sparseSegmentSum","int32"),a=P(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return B.runKernel(Vp,o)}var Vz=G({sparseSegmentSum_:Wz});function Uz(e,t,n,s,r,a,o,i){let l=P(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=P(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},p={data:l,dataSplits:u},d=B.runKernel(Gp,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var Gz=G({stringNGrams_:Uz});function Hz(e,t,n=!0){let s=P(e,"input","stringSplit","string"),r=P(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=B.runKernel(r0,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var jz=G({stringSplit_:Hz});function qz(e,t){let n=P(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return B.runKernel(a0,r,s)}var Xz=G({stringToHashBucketFast_:qz}),Kz={fft:uh,ifft:Zu,rfft:ch,irfft:T0},Zz={hammingWindow:CM,hannWindow:dw,frame:pw,stft:RM},Se={flipLeftRight:PM,grayscaleToRGB:OM,resizeNearestNeighbor:yw,resizeBilinear:gw,rotateWithOffset:zM,cropAndResize:DM,nonMaxSuppression:BM,nonMaxSuppressionAsync:XM,nonMaxSuppressionWithScore:ZM,nonMaxSuppressionWithScoreAsync:JM,nonMaxSuppressionPadded:ez,nonMaxSuppressionPaddedAsync:nz,threshold:iz,transform:uz},Aw={bandPart:dz,gramSchmidt:hz,qr:mz},Yz={absoluteDifference:Az,computeWeightedLoss:Aa,cosineDistance:bz,hingeLoss:wz,huberLoss:Iz,logLoss:Cz,meanSquaredError:Nz,sigmoidCrossEntropy:_z,softmaxCrossEntropy:Pz},Jd={sparseFillEmptyRows:Oz,sparseReshape:zz,sparseSegmentMean:Bz,sparseSegmentSum:Vz},jf={stringNGrams:Gz,stringSplit:jz,stringToHashBucketFast:Xz},xa=class extends v6{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return ne(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return q6(e,t)}dispose(){this.iterations_!=null&&ne(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(xa,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var P0=class extends xa{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:K(()=>it(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:K(()=>it(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;K(()=>{let u=ce(L(i,this.rho),L(bt(o),1-this.rho)),c=L(pe(Cn(ce(l,this.epsilon)),Cn(ce(i,this.epsilon))),o),p=ce(L(l,this.rho),L(bt(c),1-this.rho));i.assign(u),l.assign(p);let d=ce(L(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ne(this.accumulatedGrads.map(e=>e.variable)),ne(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};P0.className="Adadelta";ei(P0);var F0=class extends xa{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:K(()=>Bc(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;K(()=>{let i=ce(o,bt(a));o.assign(i);let l=ce(L(pe(a,Cn(ce(i,B.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ne(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};F0.className="Adagrad";ei(F0);var O0=class extends xa{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],K(()=>{this.accBeta1=Ce(t).variable(),this.accBeta2=Ce(n).variable()}),s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=fe(1,this.accBeta1),s=fe(1,this.accBeta2);t.forEach((r,a)=>{let o=B.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:K(()=>it(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:K(()=>it(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,p=ce(L(u,this.beta1),L(l,1-this.beta1)),d=ce(L(c,this.beta2),L(bt(l),1-this.beta2)),h=pe(p,n),f=pe(d,s);u.assign(p),c.assign(d);let m=ce(L(pe(h,ce(Cn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ne(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),K(()=>{this.accBeta1.assign(pa(this.beta1,this.iterations_+1)),this.accBeta2.assign(pa(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};O0.className="Adam";ei(O0);var M0=class extends xa{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],K(()=>{this.iteration=Ce(0).variable(),this.accBeta1=Ce(t).variable()}),s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=fe(1,this.accBeta1),s=pe(-this.learningRate,ce(L(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=B.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:it(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:it(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,p=ce(L(u,this.beta1),L(l,1-this.beta1)),d=L(c,this.beta2),h=tn(l),f=qr(d,h);u.assign(p),c.assign(f);let m=ce(L(pe(s,n),pe(p,ce(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ce(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ne(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};M0.className="Adamax";ei(M0);var dh=class extends xa{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=B.registeredVariables[n];K(()=>{let o=ce(L(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=xn(Ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};dh.className="SGD";ei(dh);var z0=class extends dh{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:K(()=>it(r).variable(!1))});let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&K(()=>{let i,l=ce(L(this.m,a),o);this.useNesterov?i=ce(L(this.c,ce(o,L(l,this.m))),r):i=ce(L(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ne(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};z0.className="Momentum";ei(z0);var L0=class extends xa{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=B.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:K(()=>it(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:K(()=>it(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:K(()=>it(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;K(()=>{let u=ce(L(i,this.decay),L(bt(o),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,p=ce(L(c,this.decay),L(o,1-this.decay)),d=pe(L(o,this.learningRate),Cn(fe(u,ce(bt(p),this.epsilon)))),h=ce(L(l,this.momentum),d);i.assign(u),c.assign(p),l.assign(h);let f=fe(r,h);r.assign(f)}else{let c=ce(L(i,this.decay),L(bt(o),1-this.decay)),p=ce(L(l,this.momentum),pe(L(o,this.learningRate),Cn(ce(c,this.epsilon))));i.assign(c),l.assign(p);let d=fe(r,p);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ne(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ne(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ne(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};L0.className="RMSProp";ei(L0);var Oa=class{static sgd(e){return new dh(e)}static momentum(e,t,n=!1){return new z0(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new L0(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new O0(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new P0(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new M0(e,t,n,s,r)}static adagrad(e,t=.1){return new F0(e,t)}},Ei={sgd:Oa.sgd,momentum:Oa.momentum,adadelta:Oa.adadelta,adagrad:Oa.adagrad,rmsprop:Oa.rmsprop,adamax:Oa.adamax,adam:Oa.adam},Jz=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function fA(){return new Promise(e=>Jz(()=>e()))}var T={};Ve(T,{ERF_A1:()=>uL,ERF_A2:()=>cL,ERF_A3:()=>dL,ERF_A4:()=>pL,ERF_A5:()=>hL,ERF_P:()=>lL,PARALLELIZE_THRESHOLD:()=>mA,SELU_SCALE:()=>bw,SELU_SCALEALPHA:()=>xw,applyActivation:()=>D0,assertAndGetBroadcastShape:()=>vt,assertAxesAreInnerMostDims:()=>LP,assertParamsConsistent:()=>Qz,assignToTypedArray:()=>xL,axesAreInnerMostDims:()=>Vy,calculateShapes:()=>d6,checkEinsumDimSizes:()=>SL,checkPadOnDimRoundingMode:()=>ts,combineLocations:()=>B6,complexWithEvenIndex:()=>gL,complexWithOddIndex:()=>yL,computeConv2DInfo:()=>Jp,computeConv3DInfo:()=>C6,computeDefaultPad:()=>Dy,computeDilation2DInfo:()=>z$,computeOptimalWindowSize:()=>tL,computeOutAndReduceShapes:()=>W6,computeOutShape:()=>eL,computePool2DInfo:()=>S6,computePool3DInfo:()=>L$,convertConv2DDataFormat:()=>T6,decodeEinsumEquation:()=>kL,eitherStridesOrDilationsAreOne:()=>jr,expandShapeToKeepDim:()=>qi,exponent:()=>vL,exponents:()=>bL,fromStringArrayToUint8:()=>jL,fromUint8ToStringArray:()=>HL,getAxesPermutation:()=>V6,getBroadcastDims:()=>i6,getComplexWithIndex:()=>AL,getEinsumComputePath:()=>CL,getEinsumPermutation:()=>IL,getFusedBiasGradient:()=>_0,getFusedDyActivation:()=>R0,getImageCenter:()=>nL,getInnerMostAxes:()=>BP,getPermuted:()=>rL,getReductionAxes:()=>an,getReshaped:()=>sL,getReshapedPermuted:()=>aL,getSliceBeginCoords:()=>oL,getSliceSize:()=>iL,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>RL,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>_L,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>DL,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>FL,getSparseReshapeInputOutputMismatchErrorMessage:()=>ML,getSparseReshapeInputOutputMultipleErrorMessage:()=>OL,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>$L,getSparseReshapeNegativeOutputDimErrorMessage:()=>PL,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>WL,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>zL,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>LL,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>BL,getUndoAxesPermutation:()=>Uy,isIdentityPermutation:()=>TL,log:()=>u_,mergeRealAndImagArrays:()=>fL,prepareAndValidate:()=>c6,prepareSplitSize:()=>EL,segment_util:()=>vw,shouldFuse:()=>$0,slice_util:()=>Ut,splitRealAndImagArrays:()=>mL,tupleValuesAreOne:()=>Za,upcastType:()=>$n,validateInput:()=>by,validateUpdateShape:()=>xy,warn:()=>za});function Qz(e,t){let n=e[0].length;e.forEach((r,a)=>{M(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),M(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)M(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function eL(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var mA=30;function tL(e){return e<=mA?e:rm(e,Math.floor(Math.sqrt(e)))}function nL(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function sL(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function rL(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function aL(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function oL(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function iL(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var xw=1.7580993408473768,bw=1.0507009873554805,lL=.3275911,uL=.254829592,cL=-.284496736,dL=1.421413741,pL=-1.453152027,hL=1.061405429;function fL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function mL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function gL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function yL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function AL(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function xL(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function bL(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function vL(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Ug="->",wL=/->/g,W4=",",V4="...";function kL(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(wL,"").length)/Ug.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Ug}").`);let[s,r]=e.split(Ug);M(s.indexOf(V4)===-1,()=>`The ellipsis notation ("${V4}") is not supported yet.`);let a=s.split(W4),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let d=0;d<r.length;++d){let h=r[d];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let d=0;d<s.length;++d){let h=s[d];i.indexOf(h)===-1&&h!==W4&&i.push(h)}let l=new Array(a.length);for(let d=0;d<o;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let h=0;h<a[d].length;++h)l[d].push(i.indexOf(a[d][h]))}let u=i.length,c=r.length,p=[];for(let d=c;d<u;++d)p.push(d);return{allDims:i,summedDims:p,idDims:l}}function IL(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function SL(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:M(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function CL(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=NL(t,i);for(let u of l)a.indexOf(u)===-1&&(s[o].push(u),a.push(u))}return{path:n,steps:s}}function TL(e){return e.every((t,n)=>t===n)}function NL(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function EL(e,t,n=0){let s=[];if(typeof t=="number")M(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);M(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}M(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function RL(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function _L(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function DL(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function $L(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function PL(e,t){return`size ${e} must be non-negative, not ${t}`}function FL(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function OL(e,t){let n=Et(e),s=Et(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function ML(e,t){let n=Et(e),s=Et(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function zL(){return"segment ids must be >= 0"}function LL(){return"segment ids are not increasing"}function BL(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function WL(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var vw={};Ve(vw,{collectGatherOpShapeInfo:()=>GL,computeOutShape:()=>UL,segOpComputeOptimalWindowSize:()=>VL});function VL(e,t){let n=!1,s;for(e<=mA?(s=e,n=!0):s=rm(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=rm(e,s+1);return s}function UL(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function GL(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let p=0;p<s;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let o=e.shape[n],i=[],l=1,u=1,c=1;for(let p=0;p<s;++p)i.push(e.shape[p]),l*=e.shape[p];for(let p=s;p<n;p++)i.push(e.shape[p]),u*=e.shape[p];for(let p=s;p<r;p++)i.push(t.shape[p]);for(let p=n+1;p<a;p++)i.push(e.shape[p]),c*=e.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function HL(e){try{return e.map(t=>lm(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function jL(e){return e.map(t=>qp(t))}var or={};Ve(or,{nonMaxSuppressionV3Impl:()=>hw,nonMaxSuppressionV4Impl:()=>fw,nonMaxSuppressionV5Impl:()=>mw,whereImpl:()=>rw});var ww={kernelName:al,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Gc(he(n,"float32"),-1))}}},qL={kernelName:lc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=bt(he(n,"float32")),r=Cn(fe(Ce(1),s));return $t(pe(e,r))}}}},XL={kernelName:uc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Cn(fe(bt(he(n,"float32")),1));return pe(e,s)}}}},KL={kernelName:ma,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=vt(n.shape,s.shape);return{a:()=>{let i=e,l=an(n.shape,r);return l.length>0&&(i=ke(i,l)),U(i,n.shape)},b:()=>{let i=e,l=an(s.shape,r);return l.length>0&&(i=ke(i,l)),U(i,s.shape)}}}},ZL={kernelName:ao,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},YL={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>it(n)}}},JL={kernelName:pc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>it(n)}}},QL={kernelName:hc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,Cn(fe(Ce(1),bt(he(n,"float32")))))}}},eB={kernelName:fc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Cn(ce(Ce(1),bt(he(n,"float32"))));return pe(e,s)}}}},tB={kernelName:yc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=vt(n.shape,s.shape);return{a:()=>{let i=ce(bt(n),bt(s)),l=L(e,pe(s,i)),u=an(n.shape,r);return u.length>0&&(l=ke(l,u)),U(l,n.shape)},b:()=>{let i=ce(bt(n),bt(s)),l=$t(L(e,pe(n,i))),u=an(s.shape,r);return u.length>0&&(l=ke(l,u)),U(l,s.shape)}}}},nB={kernelName:mc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,ce(bt(he(n,"float32")),1))}}},sB={kernelName:gc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,fe(Ce(1),bt(he(n,"float32"))))}}};function rB(e,t,n,s,r,a){let o=P(e,"dy","avgPool3dGrad"),i=P(t,"input","avgPool3dGrad"),l=o,u=i,c=!1;i.rank===4&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),ts("avgPool3dGrad",r,a);let p={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=B.runKernel(Om,p,d);return c?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var aB=G({avgPool3dGrad_:rB}),oB={kernelName:Ep,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>aB(e,s,r,a,o,i)}}};function iB(e,t,n,s,r){let a=P(e,"dy","avgPoolGrad"),o=P(t,"input","avgPoolGrad");M(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,u=!1;o.rank===3&&(u=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},p={filterSize:n,strides:s,pad:r},d=B.runKernel(Fm,c,p);return u?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var lB=G({avgPoolGrad_:iB}),uB={kernelName:io,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>lB(e,s,r,a,o)}}},cB={kernelName:lo,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>Ye(e,r,!1,!0),b:()=>Ye(s,e,!0,!1)}:!a&&o?{a:()=>Ye(e,r,!1,!1),b:()=>Ye(e,s,!0,!1)}:a&&!o?{a:()=>Ye(r,e,!1,!0),b:()=>Ye(s,e,!1,!1)}:{a:()=>Ye(r,e,!0,!0),b:()=>Ye(e,s,!0,!0)}}},dB={kernelName:ol,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>ih(e,s,r)}}},pB={kernelName:$7,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>ke(e,i,!0)}}},hB={kernelName:uo,gradFunc:e=>({x:()=>e.clone()})},fB={kernelName:co,gradFunc:e=>({x:()=>it(e)})},mB={kernelName:ga,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Pn(sr(ti(s,r),ni(s,a)),e,it(e))}}},gB={kernelName:_p,inputsToSave:["x"],gradFunc:ww.gradFunc},yB={kernelName:il,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=rr(r,t[0].shape)[0],o=s.map(l=>l[a]);return Zt(e,o,a).map(l=>()=>l)}},AB={kernelName:po,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return M(Za(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Oy(s.shape,e,r,o,i,l),filter:()=>pA(s,e,r.shape,o,i,l)}}},xB={kernelName:ho,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>ca(e,r,a,o,i,1,l),filter:()=>pA(e,s,r.shape,a,o,i,l)}}};function bB(e,t,n,s,r){let a=e;e.rank===4&&(a=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),M(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),M(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),M(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return B.runKernel(Bm,i,l)}var vB=G({conv3DBackpropFilter_:bB}),wB={kernelName:Dp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;M(Za(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>F6(o.shape,e,i,r,a),filter:()=>vB(o,e,i.shape,r,a)}}},kB={kernelName:fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L($t(I0(he(n,"float32"))),e)}}},IB={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(S0(he(n,"float32")),e)}}},SB={kernelName:go,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=V6([r],s.rank),l=h0(e,r,a,!o);return i!=null&&(l=st(l,i)),l}}}},CB={kernelName:yo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;M(Za(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=t;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),M(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),M(jr(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),ts("depthwiseConv2d",a,o),{x:()=>cw(l.shape,e,u,r,a,i,o),filter:()=>uw(l,e,u.shape,r,a,i,o)}}},TB={kernelName:$p,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>B.runKernel(am,a,n),filter:()=>B.runKernel(om,o,n)}}},NB={kernelName:xo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>B.runKernel(jm,s)}}},EB={kernelName:Ac,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(Ts($t(bt(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,s)}}},RB={kernelName:bo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},_B={kernelName:pl,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},DB={kernelName:hl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Ts(n))}}},$B={kernelName:vo,gradFunc:e=>({x:()=>it(e)})},PB={kernelName:wo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=vt(n.shape,s.shape);return{a:()=>{let i=pe(e,he(s,"float32")),l=an(n.shape,r);return l.length>0?U(ke(i,l),n.shape):i},b:()=>{let i=L(e,he(n,"float32")),l=an(s.shape,r);l.length>0&&(i=U(ke(i,l),s.shape));let u=bt(s);return $t(pe(i,he(u,"float32")))}}}},FB={kernelName:ko,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Ce(1):i,u=an(a.shape,r.shape),c=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)c.push(r.shape[b]);c.push(1)}let p=fe(r,a),d=L(e,l),h=w0(ce(o,Ce(s))),f=L(L(L(h,h),h),Ce(-.5));return{x:()=>a.rank===1?U(L(L(e,Vs(U(h,[1,1,1,a.shape[0]]),c)),l),r.shape):U(L(L(e,h),l),r.shape),mean:()=>{let b=L(L(h,Ce(-1)),d);return a.rank===1&&(b=ke(b,u)),U(b,a.shape)},variance:()=>{let b=L(L(f,p),d);return a.rank===1&&(b=ke(b,u)),U(b,a.shape)},scale:()=>{let b=L(p,h),w=L(e,b);return a.rank===1&&(w=ke(w,u)),U(w,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=ke(b,u)),U(b,a.shape)}}}},OB={kernelName:ml,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=rr(a,s.shape)[0];return{x:()=>{let l=s.shape,u=r.size,c=l.slice(0,o),p=c.length,d=l.slice(a,l.length).slice(1),h=d.length,f=U4(0,p),m=U4(p+1,p+1+h),g=G4([c,[u],d]),y=U(e,g),x=U(r,[u]),A=G4([[p],f,m]),b=st(y,A),w=lA(b,x,s.shape[o]),k=Uy(A);return w=st(w,k),w},indices:()=>r}}};function U4(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function G4(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var MB={kernelName:Io,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>it(n),b:()=>it(s)}}},zB={kernelName:So,gradFunc:e=>({x:()=>he(e,"float32")})},LB={kernelName:bc,gradFunc:e=>({x:()=>it(e)})},BB={kernelName:vc,gradFunc:e=>({x:()=>it(e)})},WB={kernelName:wc,gradFunc:e=>({x:()=>it(e)})},VB={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=fs(s,0);return{x:()=>Pn(a,e,L(e,r))}}},UB={kernelName:kc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,ce(n,1))}}},GB={kernelName:To,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,he(n,"float32"))}}},HB={kernelName:P7,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let o=Ts(s);return fe(e,L(ke(e,r,!0),o))}}}};function jB(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return B.runKernel(Zm,i,l)}var qB=G({localResponseNormalizationBackprop_:jB}),XB={kernelName:Mp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>qB(s,r,e,a,o,i,l)}}};function kw(e,t,n,s){return t.rank<n.rank&&(t=U(t,qi(t.shape,s))),e.rank<n.rank&&(e=U(e,qi(e.shape,s))),{x:()=>L(e,he(Cs(n,t),e.dtype))}}var H4={kernelName:No,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=rr(r,a.shape),l=kw(e,o,a,i);return{x:()=>l.x()}}},KB={kernelName:Eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,he(ti(n,s),"float32")),b:()=>L(e,he(f0(n,s),"float32"))}}};function ZB(e,t,n,s,r,a,o){let i=P(e,"dy","maxPool3dGrad"),l=P(t,"input","maxPool3dGrad"),u=P(n,"output","maxPool3dGrad"),c=i,p=l,d=u,h=!1;l.rank===4&&(h=!0,c=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=U(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=U(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),M(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),M(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),ts("maxPool3dGrad",a,o);let f={dy:c,input:p,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=B.runKernel(Jm,f,m);return h?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var YB=G({maxPool3dGrad_:ZB}),JB={kernelName:zp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>YB(e,s,r,a,o,i,l)}}};function QB(e,t,n,s,r,a,o){let i=P(e,"dy","maxPoolGrad"),l=P(t,"input","maxPoolGrad"),u=P(n,"output","maxPoolGrad");M(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ts("maxPoolGrad",a,o);let c={dy:i,input:l,output:u},p={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return B.runKernel(Ym,c,p)}var eW=G({maxPoolGrad_:QB}),tW={kernelName:Ro,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>eW(e,s,r,a,o,i)}}},nW={kernelName:_o,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=rr(r,s.shape),i=W6(s.shape,a)[1],l=Et(i);return{x:()=>{let c=s.shape.slice();a.forEach(h=>{c[h]=1});let p=U(e,c);return pe(L(p,Is(s.shape,"float32")),l)}}}},sW={kernelName:Do,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=rr(r,a.shape),l=kw(e,o,a,i);return{x:()=>l.x()}}},rW={kernelName:$o,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,he(ni(n,s),"float32")),b:()=>L(e,he(fs(n,s),"float32"))}}},aW={kernelName:Po,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Oe(e,a,s.shape)}}},oW={kernelName:Sc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=vt(n.shape,s.shape);return{a:()=>{let i=an(n.shape,r);return i.length>0?U(ke(e,i),n.shape):e},b:()=>{let i=L(e,$t(Wc(pe(n,s)))),l=an(s.shape,r);return l.length>0?U(ke(i,l),s.shape):i}}}},iW={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=vt(n.shape,s.shape);return{a:()=>{let i=L(e,he(s,"float32")),l=an(n.shape,r);return l.length>0?U(ke(i,l),n.shape):i},b:()=>{let i=L(e,he(n,"float32")),l=an(s.shape,r);return l.length>0?U(ke(i,l),s.shape):i}}}},lW={kernelName:vl,gradFunc:e=>({x:()=>$t(e)})},uW={kernelName:Cl,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Wt(n.shape,"float32")}}},cW={kernelName:Sl,gradFunc:e=>({x:()=>it(e)})},dW={kernelName:Tl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return Jn(e,s).map(a=>()=>a)}},j4={kernelName:Oo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Oe(e,a,s.shape)}}},pW={kernelName:Mo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=vt(a.shape,o.shape);return{a:()=>{let c=he(o,"float32"),p=L(e,L(c,pa(a,fe(c,Ce(1))))),d=an(a.shape,i);return d.length>0&&(p=ke(p,d)),U(p,a.shape)},b:()=>{let c=fs(a,0),p=Pn(c,Ns(a),it(a)),d=L(e,L(r,p)),h=an(o.shape,i);return h.length>0&&(d=ke(d,h)),U(d,o.shape)}}}},hW={kernelName:zo,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=fs(n,0);return{x:()=>Pn(r,e,L(e,s)),alpha:()=>{let a=Pn(r,it(e),L(e,n)),o=an(s.shape,e.shape);return o.length>0&&(a=ke(a,o)),U(a,s.shape)}}}};function fW(e,t,n){let s=e.shape.slice();s[n]=1;let r=U(t,s),a=Ap(e,n,!0,!1),o=Ap(e,n,!0,!0),i=L(a,o);return L(r,i)}function mW(e,t,n){let s=e.shape.length,r=s-n.length,a=T.getAxesPermutation(n,s),o=e;a!=null&&(o=st(e,a));let i=o.shape.slice(),u=i.splice(s-n.length,n.length).reduce((d,h)=>d*h,1);i.push(u);let c=o.reshape(i),p=fW(c,t,r);if(p=p.reshape(o.shape),a!=null){let d=T.getUndoAxesPermutation(a);p=st(p,d)}return p}var gW={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=[];return r==null?a=s.shape.map((o,i)=>i):typeof r=="number"?a=[r]:a=r,{x:()=>mW(s,e,a)}}},yW={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=vt(n.shape,s.shape);return{a:()=>{let i=pe(e,he(s,"float32")),l=an(n.shape,r);return l.length>0?U(ke(i,l),n.shape):i},b:()=>{let i=L(e,he(n,"float32")),l=an(s.shape,r);l.length>0&&(i=U(ke(i,l),s.shape));let u=bt(s);return $t(pe(i,he(u,"float32")))}}}},AW={kernelName:Nc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,$t(bt(n)))}}},xW={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(ni(n,6),Gc(n));return{x:()=>L(e,he(s,"float32"))}}},bW={kernelName:Bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,he(Gc(n),"float32"))}}},vW={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},wW={kernelName:Wo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>B.runKernel(n0,r,n)}}},kW={kernelName:Ec,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>B.runKernel(t0,r,n)}}},IW={kernelName:El,gradFunc:(e,t,n)=>{let{dims:s}=n,r=rr(s,e.shape);return{x:()=>Rs(e,r)}}},SW={kernelName:Rl,gradFunc:e=>({x:()=>it(e)})},CW={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>$t(pe(e,L(pa(n,1.5),2)))}}},TW={kernelName:Dl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>he(it(n),"float32"),t:()=>L(e,he(n,e.dtype)),e:()=>L(e,he(ah(n),e.dtype))}}},NW={kernelName:Rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=fs(n,Ce(0)),r=Ce(xw),a=Ce(bw),o=L(e,a),i=L(L(e,r),Ts(he(n,"float32")));return Pn(s,o,i)}}}},EW={kernelName:Ho,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,fe(Ce(1),n)))}}},RW={kernelName:_c,gradFunc:e=>({x:()=>it(e)})},_W={kernelName:Go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(th(he(n,"float32")),e)}}},DW={kernelName:Pl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(p0(he(n,"float32")),e)}}},$W={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=b6(s,r,a),u=[];for(let c=0;c<e.rank;c++)u.push([i[c],o[c]-i[c]-l[c]]);return{x:()=>Xs(e,u)}}},PW={kernelName:Xo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=L(e,s);return{logits:()=>fe(o,L(ke(o,[r],a),s))}}},FW={kernelName:Dc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Sn(n))}}},q4={kernelName:Fl,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>eh(e,s,r)}}},X4={kernelName:Ol,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>It(e,s)}}},OW={kernelName:jo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,L(Cn(he(n,"float32")),2))}}},MW={kernelName:Pc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(he(n,"float32"),2))}}},zW={kernelName:Ko,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ce(2);return{a:()=>L(e,L(r,fe(n,s))),b:()=>L(e,L(r,fe(s,n)))}}},LW={kernelName:Jo,gradFunc:e=>({x:()=>it(e)})},BW={kernelName:Zo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=vt(n.shape,s.shape);return{a:()=>{let i=e,l=an(n.shape,r);return l.length>0&&(i=ke(i,l)),U(i,n.shape)},b:()=>{let i=e,l=an(s.shape,r);return l.length>0&&(i=ke(i,l)),U($t(i),s.shape)}}}},WW={kernelName:qo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;rr(a,s.shape).forEach(u=>{r[u]=1});let i=U(e,r),l=L(i,Is(s.shape,"float32"));return{x:()=>l}}},VW={kernelName:zl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pe(e,bt(th(n)))}}},UW={kernelName:Yo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(fe(Ce(1),bt(n)),e)}}},GW={kernelName:ya,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=it(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=ce(o,Oe(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=ce(o,Oe(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)o=ce(o,Oe(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)o=ce(o,Oe(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},HW={kernelName:Br,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=Uy(r);return{x:()=>st(e,a)}}},jW={kernelName:Wl,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>on(e,r)}}},qW={kernelName:Hp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>XW(e,n)}}};function XW(e,t){let n=qr(t,it(t)),s=Xi(e,n),r=ti(t,Ce(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Kt(r,i+1);r=sr(r,Is(s.shape,"bool"));let o=it(s);return Pn(r,s,o)}var KW={kernelName:Vl,gradFunc:e=>({x:()=>it(e)})},ZW=[ww,qL,XL,KL,ZL,YL,JL,QL,eB,tB,nB,sB,oB,uB,cB,dB,pB,hB,fB,mB,gB,yB,xB,AB,wB,kB,IB,SB,CB,TB,yW,NB,EB,RB,_B,DB,PB,$B,FB,OB,MB,zB,LB,BB,WB,VB,UB,GB,HB,XB,H4,H4,KB,JB,tW,nW,sW,rW,aW,oW,iW,lW,uW,cW,dW,j4,j4,pW,hW,gW,AW,xW,bW,vW,wW,kW,IW,SW,CW,TW,NW,EW,RW,_W,DW,$W,PW,FW,q4,q4,X4,X4,OW,zW,MW,LW,BW,WW,VW,UW,GW,HW,jW,qW,KW];for(let e of ZW)F7(e);re().prototype.abs=function(){return this.throwIfDisposed(),tn(this)};re().prototype.acos=function(){return this.throwIfDisposed(),Iy(this)};re().prototype.acosh=function(){return this.throwIfDisposed(),Sy(this)};re().prototype.add=function(e){return this.throwIfDisposed(),ce(this,e)};re().prototype.all=function(e,t){return this.throwIfDisposed(),u0(this,e,t)};re().prototype.any=function(e,t){return this.throwIfDisposed(),yp(this,e,t)};re().prototype.argMax=function(e){return this.throwIfDisposed(),Ss(this,e)};re().prototype.argMin=function(e){return this.throwIfDisposed(),Cy(this,e)};re().prototype.asScalar=function(){return this.throwIfDisposed(),M(this.size===1,()=>"The array must have only 1 element."),U(this,[])};re().prototype.asType=function(e){return this.throwIfDisposed(),he(this,e)};re().prototype.as1D=function(){return this.throwIfDisposed(),U(this,[this.size])};re().prototype.as2D=function(e,t){return this.throwIfDisposed(),U(this,[e,t])};re().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),U(this,[e,t,n])};re().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),U(this,[e,t,n,s])};re().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),U(this,[e,t,n,s,r])};re().prototype.asin=function(){return this.throwIfDisposed(),Ty(this)};re().prototype.asinh=function(){return this.throwIfDisposed(),Ny(this)};re().prototype.atan=function(){return this.throwIfDisposed(),Ey(this)};re().prototype.atan2=function(e){return this.throwIfDisposed(),Ry(this,e)};re().prototype.atanh=function(){return this.throwIfDisposed(),_y(this)};re().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Qp(this,e,t,n,s)};re().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),eh(this,e,t)};re().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),ji(this,e,t,n,s,r)};re().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Wu(this,e)};re().prototype.cast=function(e){return this.throwIfDisposed(),he(this,e)};re().prototype.ceil=function(){return this.throwIfDisposed(),Fy(this)};re().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ds(this,e,t)};re().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof nt&&(e=[e]),It([this,...e],t)};re().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),c0(this,e,t,n,s,r,a)};re().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),d0(this,e,t,n,s,r)};re().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ca(this,e,t,n,s,r,a)};re().prototype.cos=function(){return this.throwIfDisposed(),th(this)};re().prototype.cosh=function(){return this.throwIfDisposed(),p0(this)};re().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Ap(this,e,t,n)};re().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),h0(this,e,t,n)};re().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),zy(this,e,t)};re().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),zc(this,e,t,n,s,r,a)};re().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),Ly(this,e,t,n,s,r)};re().prototype.divNoNan=function(e){return this.throwIfDisposed(),By(this,e)};re().prototype.div=function(e){return this.throwIfDisposed(),pe(this,e)};re().prototype.dot=function(e){return this.throwIfDisposed(),z6(this,e)};re().prototype.elu=function(){return this.throwIfDisposed(),Lc(this)};re().prototype.equal=function(e){return this.throwIfDisposed(),Cs(this,e)};re().prototype.erf=function(){return this.throwIfDisposed(),Wy(this)};re().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Gy(this,e,t)};re().prototype.exp=function(){return this.throwIfDisposed(),Ts(this)};re().prototype.expandDims=function(e){return this.throwIfDisposed(),Kt(this,e)};re().prototype.expm1=function(){return this.throwIfDisposed(),Hy(this)};re().prototype.fft=function(){return this.throwIfDisposed(),uh(this)};re().prototype.flatten=function(){return this.throwIfDisposed(),U(this,[this.size])};re().prototype.floor=function(){return this.throwIfDisposed(),Wc(this)};re().prototype.floorDiv=function(e){return this.throwIfDisposed(),Oc(this,e)};re().prototype.gather=function(e,t){return this.throwIfDisposed(),Xi(this,e,t)};re().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ti(this,e)};re().prototype.greater=function(e){return this.throwIfDisposed(),fs(this,e)};re().prototype.ifft=function(){return this.throwIfDisposed(),Zu(this)};re().prototype.irfft=function(){return this.throwIfDisposed(),T0(this)};re().prototype.isFinite=function(){return this.throwIfDisposed(),G6(this)};re().prototype.isInf=function(){return this.throwIfDisposed(),H6(this)};re().prototype.isNaN=function(){return this.throwIfDisposed(),qy(this)};re().prototype.leakyRelu=function(e){return this.throwIfDisposed(),sh(this,e)};re().prototype.lessEqual=function(e){return this.throwIfDisposed(),ni(this,e)};re().prototype.less=function(e){return this.throwIfDisposed(),f0(this,e)};re().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Xy(this,e,t,n,s)};re().prototype.logSigmoid=function(){return this.throwIfDisposed(),X6(this)};re().prototype.logSoftmax=function(e){return this.throwIfDisposed(),g0(this,e)};re().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ky(this,e,t)};re().prototype.log=function(){return this.throwIfDisposed(),Ns(this)};re().prototype.log1p=function(){return this.throwIfDisposed(),rh(this)};re().prototype.logicalAnd=function(e){return this.throwIfDisposed(),sr(this,e)};re().prototype.logicalNot=function(){return this.throwIfDisposed(),ah(this)};re().prototype.logicalOr=function(e){return this.throwIfDisposed(),y0(this,e)};re().prototype.logicalXor=function(e){return this.throwIfDisposed(),K6(this,e)};re().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ye(this,e,t,n)};re().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),oh(this,e,t,n,s)};re().prototype.max=function(e,t){return this.throwIfDisposed(),fn(this,e,t)};re().prototype.maximum=function(e){return this.throwIfDisposed(),qr(this,e)};re().prototype.mean=function(e,t){return this.throwIfDisposed(),Bt(this,e,t)};re().prototype.min=function(e,t){return this.throwIfDisposed(),da(this,e,t)};re().prototype.minimum=function(e){return this.throwIfDisposed(),Vc(this,e)};re().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Jy(this,e,t)};re().prototype.mod=function(e){return this.throwIfDisposed(),ql(this,e)};re().prototype.mul=function(e){return this.throwIfDisposed(),L(this,e)};re().prototype.neg=function(){return this.throwIfDisposed(),$t(this)};re().prototype.norm=function(e,t,n){return this.throwIfDisposed(),nh(this,e,t,n)};re().prototype.notEqual=function(e){return this.throwIfDisposed(),Ki(this,e)};re().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),qu(this,e,t,n)};re().prototype.onesLike=function(){return this.throwIfDisposed(),Es(this)};re().prototype.pad=function(e,t){return this.throwIfDisposed(),Xs(this,e,t)};re().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),Q6(this,e,t,n,s,r,a)};re().prototype.pow=function(e){return this.throwIfDisposed(),pa(this,e)};re().prototype.prelu=function(e){return this.throwIfDisposed(),lh(this,e)};re().prototype.prod=function(e,t){return this.throwIfDisposed(),x0(this,e,t)};re().prototype.reciprocal=function(){return this.throwIfDisposed(),tA(this)};re().prototype.relu=function(){return this.throwIfDisposed(),Rr(this)};re().prototype.relu6=function(){return this.throwIfDisposed(),b0(this)};re().prototype.reshapeAs=function(e){return this.throwIfDisposed(),U(this,e.shape)};re().prototype.reshape=function(e){return this.throwIfDisposed(),U(this,e)};re().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),gw(this,e,t,n)};re().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),yw(this,e,t,n)};re().prototype.reverse=function(e){return this.throwIfDisposed(),Rs(this,e)};re().prototype.rfft=function(){return this.throwIfDisposed(),ch(this)};re().prototype.round=function(){return this.throwIfDisposed(),v0(this)};re().prototype.rsqrt=function(){return this.throwIfDisposed(),w0(this)};re().prototype.selu=function(){return this.throwIfDisposed(),k0(this)};re().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),nA(this,e,t,n,s,r,a)};re().prototype.sigmoid=function(){return this.throwIfDisposed(),Sn(this)};re().prototype.sign=function(){return this.throwIfDisposed(),sA(this)};re().prototype.sin=function(){return this.throwIfDisposed(),I0(this)};re().prototype.sinh=function(){return this.throwIfDisposed(),S0(this)};re().prototype.slice=function(e,t){return this.throwIfDisposed(),Oe(this,e,t)};re().prototype.softmax=function(e){return this.throwIfDisposed(),Kl(this,e)};re().prototype.softplus=function(){return this.throwIfDisposed(),jl(this)};re().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ih(this,e,t)};re().prototype.split=function(e,t){return this.throwIfDisposed(),Zt(this,e,t)};re().prototype.sqrt=function(){return this.throwIfDisposed(),Cn(this)};re().prototype.square=function(){return this.throwIfDisposed(),bt(this)};re().prototype.squaredDifference=function(e){return this.throwIfDisposed(),N0(this,e)};re().prototype.squeeze=function(e){return this.throwIfDisposed(),Qe(this,e)};re().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof nt?[this,e]:[this,...e];return on(n,t)};re().prototype.step=function(e){return this.throwIfDisposed(),Gc(this,e)};re().prototype.stridedSlice=function(e,t,n,s,r,a,o,i){return this.throwIfDisposed(),aA(this,e,t,n,s,r,a,o,i)};re().prototype.sub=function(e){return this.throwIfDisposed(),fe(this,e)};re().prototype.sum=function(e,t){return this.throwIfDisposed(),ke(this,e,t)};re().prototype.tan=function(){return this.throwIfDisposed(),oA(this)};re().prototype.tanh=function(){return this.throwIfDisposed(),Hi(this)};re().prototype.tile=function(e){return this.throwIfDisposed(),Vs(this,e)};re().prototype.toBool=function(){return this.throwIfDisposed(),he(this,"bool")};re().prototype.toFloat=function(){return this.throwIfDisposed(),he(this,"float32")};re().prototype.toInt=function(){return this.throwIfDisposed(),he(this,"int32")};re().prototype.topk=function(e,t){return this.throwIfDisposed(),iA(this,e,t)};re().prototype.transpose=function(e){return this.throwIfDisposed(),st(this,e)};re().prototype.unique=function(e){return this.throwIfDisposed(),pm(this,e)};re().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),lA(this,e,t)};re().prototype.unstack=function(e){return this.throwIfDisposed(),Jn(this,e)};re().prototype.where=function(e,t){return this.throwIfDisposed(),Pn(e,this,t)};re().prototype.zerosLike=function(){return this.throwIfDisposed(),it(this)};var sa=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sa.prototype)}},br=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,br.prototype)}},q=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,q.prototype)}},Ge=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ge.prototype)}},Iw=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Iw.prototype)}},Sw=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Yi(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Mr(e,t){if(!e)throw new Iw(t)}function K4(e,t){let n=0;for(let s of e)s===t&&n++;return n}function us(e){return e.length===1?e[0]:e}function _t(e){return Array.isArray(e)?e:[e]}function ra(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function $i(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Js={};function gA(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function f3(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>f3(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:f3(s))}}}function ph(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in Js)o=Js[a];else if(o=t[a],o==null)throw new q(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new q(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in Js?[i,l]=Js.className:o in t&&([i,l]=t[o]),i==null)throw new q(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let h of Object.keys(Js))u[h]=Js[h];for(let h of Object.keys(n))u[h]=n[h];let c=a.config;c.customObjects=u;let p=Object.assign({},Js);for(let h of Object.keys(n))Js[h]=n[h];f3(a.config);let d=l(i,a.config,n,r);return Js=Object.assign({},p),d}else{let u=Object.assign({},Js);for(let p of Object.keys(n))Js[p]=n[p];let c=new i(a.config);return Js=Object.assign({},u),c}}}function YW(e,t){return e<t?-1:e>t?1:0}function $f(e,t){return-1*YW(e,t)}function Ua(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function JW(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Zl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new q(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function yA(e,t,n=0,s=1/0){return Mr(n>=0),Mr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function bn(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>bn(n,`element ${s+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Cw(e)}.`)}function Cw(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Cw(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function QW(e,t,n){let s=n!=null?n():v.now(),r;return(...o)=>{let i=n!=null?n():v.now();return i-s<t||(s=i,r=e(...o)),r}}function Tw(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var eV=0;function Nw(){return eV++}var Pf={};function B0(e=""){return e in Pf||(Pf[e]=0),Pf[e]+=1,e+Pf[e].toString()}var tV=["channelsFirst","channelsLast"],nV=["nearest","bilinear"],sV=["valid","same","causal"],rV=["max","avg"],aV=["sum","mul","concat","ave"],Eu=new Map;function Yt(e){Zl(tV,"DataFormat",e)}function oV(e){Zl(nV,"InterpolationFormat",e)}function Ks(e){Zl(sV,"PaddingMode",e)}function Ew(e){Zl(rV,"PoolMode",e)}var ip=[],Z4="/";function Li(e,t){ip.push(e);try{let n=t();return ip.pop(),n}catch(n){throw ip.pop(),n}}function iV(){return ip.length===0?"":ip.join(Z4)+Z4}function Rw(e){if(!Dw(e))throw new Error("Not a valid tensor name: '"+e+"'");return iV()+e}function _w(e){if(!Dw(e))throw new Error("Not a valid tensor name: '"+e+"'");Eu.has(e)||Eu.set(e,0);let t=Eu.get(e);if(Eu.set(e,Eu.get(e)+1),t>0){let n=`${e}_${t}`;return Eu.set(n,1),n}else return e}var lV=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Dw(e){return!!e.match(lV)}function uV(e){return e===parseInt(e.toString(),10)}function Ga(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Yu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Ja(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function Cr(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}var Gg;function pn(){return Gg==null&&(Gg=js().epsilon()),Gg}function Tr(){return"channelsLast"}function W0(e,t){return he(e,t)}function hh(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),U(e,n)}function cV(e,t){return K(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=hh(e,1);return m3(n,[1,t,1])})}function dV(e){let t=[Ga(e.shape)];return U(e,t)}function pV(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Ga(e.shape,1)];return U(e,t)}function Bi(e,t,n){return K(()=>{switch(e.rank){case 1:return C0(e,t,n);case 2:return rA(e,[t,0],[n,e.shape[1]]);case 3:return Xl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Zi(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Oe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Oe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Hg(e,t,n){return K(()=>{switch(e.rank){case 1:return C0(e,t,n);case 2:return rA(e,[0,t],[e.shape[0],n]);case 3:return Xl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Zi(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ff(e,t,n,s){return K(()=>{switch(e.rank){case 1:return C0(e,t,n);case 2:switch(s){case 1:return Bi(e,t,n);case 2:return Hg(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Bi(e,t,n);case 2:return Xl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Hg(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Bi(e,t,n);case 2:return Zi(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Zi(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Hg(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function AA(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),It(e,t)}function Y4(e,t){switch(e.rank){case 1:return D6([e,t]);case 2:return Mc([e,t],0);case 3:return $6([e,t],0);case 4:return P6([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function m3(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Vs(e,t)}function V0(e,t=0,n=1,s,r){return ew(e,t,n,s,r)}function Wr(e,t,n,s){if(e.rank<2||t.rank<2)throw new Ge(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Ge(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Ya.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?g3(e.rank,s,Tr()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=U(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=U(st(t,c),[l,-1]);let p=[...r,...u],d=!1,h=!1;return U(Ya.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:s?g3(e.rank,s,Tr()):null,activation:n}),p)}}function $w(e,t,n){return K(()=>(Array.isArray(t)?t=Dt(t,"int32"):t=he(t,"int32"),Xi(e,t,n)))}function fh(e){return L(e,e)}function g3(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1,1]):U(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1]):U(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1]):U(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,s[0]]):U(t,[1].concat(s))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function _r(e,t,n){return K(()=>(n==null&&(n=Tr()),Yt(n),ce(e,g3(e.rank,t,n))))}function hV(e,t=1){if(t!==1)throw new Ge(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Lc(e)}function fV(e){return K(()=>pe(e,ce(tn(e),1)))}function Pw(e,t,n,s){return K(()=>iw(e,t,n,s))}function mV(e){return K(()=>{let t=ce(.5,L(.2,e));return ds(t,0,1)})}function mh(e,t,n=!1){return n?e():t()}var gV=["fanIn","fanOut","fanAvg"],yV=["normal","uniform","truncatedNormal"];function AV(e){Zl(gV,"FanMode",e)}function xV(e){Zl(yV,"Distribution",e)}var ir=class extends de.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},xA=class extends ir{apply(e,t){return Wt(e,t)}};xA.className="Zeros";de.registerClass(xA);var U0=class extends ir{apply(e,t){return Is(e,t)}};U0.className="Ones";de.registerClass(U0);var bA=class extends ir{constructor(e){if(super(),typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return K(()=>L(Ce(this.value),Is(e,t)))}getConfig(){return{value:this.value}}};bA.className="Constant";de.registerClass(bA);var vA=class extends ir{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Uc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};vA.className="RandomUniform";de.registerClass(vA);var wA=class extends ir{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`randomNormal does not support dType ${t}.`);return V0(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};wA.className="RandomNormal";de.registerClass(wA);var kA=class extends ir{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`truncatedNormal does not support dType ${t}.`);return E0(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};kA.className="TruncatedNormal";de.registerClass(kA);var IA=class extends ir{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return K(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,jy(e[0]))})}getConfig(){return{gain:this.gain}}};IA.className="Identity";de.registerClass(IA);function bV(e,t="channelsLast"){let n,s;if(Yt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Ga(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Ga(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Ga(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var ps=class extends ir{constructor(e){if(super(),e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,AV(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,xV(this.distribution),this.seed=e.seed}apply(e,t){let n=bV(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`${this.getClassName()} does not support dType ${t}.`);return E0(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return Uc(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};ps.className="VarianceScaling";de.registerClass(ps);var G0=class extends ps{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ps.className}};G0.className="GlorotUniform";de.registerClass(G0);var H0=class extends ps{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ps.className}};H0.className="GlorotNormal";de.registerClass(H0);var j0=class extends ps{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ps.className}};j0.className="HeNormal";de.registerClass(j0);var q0=class extends ps{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ps.className}};q0.className="HeUniform";de.registerClass(q0);var X0=class extends ps{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ps.className}};X0.className="LeCunNormal";de.registerClass(X0);var K0=class extends ps{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ps.className}};K0.className="LeCunNormal";de.registerClass(K0);var SA=class extends ir{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ge("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return K(()=>{if(e.length<2)throw new Ge("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=V0(n,0,1,"float32"),r=Aw.gramSchmidt(s);return e[0]>e[1]&&(r=st(r)),L(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};SA.className="Orthogonal";de.registerClass(SA);var J4={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Q4(e,t={}){return ph(e,de.SerializationMap.getMap().classNameMap,t,"initializer")}function Vt(e){return gA(e)}function Ot(e){if(typeof e=="string"){let t=e in J4?J4[e]:e;if(t==="GlorotNormal")return new H0;if(t==="GlorotUniform")return new G0;if(t==="HeNormal")return new j0;if(t==="HeUniform")return new q0;if(t==="LeCunNormal")return new X0;if(t==="LeCunUniform")return new K0;{let n={};return n.className=t,n.config={},Q4(n)}}else return e instanceof ir?e:Q4(e)}function y3(e){return Array.isArray(e)&&Array.isArray(e[0])}function hm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function qe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function At(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function fm(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var ev="Variable",Fw=class{constructor(e,t="float32",n=ev,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Nw(),n=n==null?ev:n,this.originalName=Rw(n),this.name=_w(this.originalName),this.trainable_=s,this.constraint=r,this.val=sw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),vV(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function vV(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function A3(e){return e.map(t=>t.read())}function CA(e){e.forEach(t=>{t[0].write(t[1])})}var sn=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},vr=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=Nw(),a!=null&&(this.originalName=Rw(a),this.name=_w(this.originalName)),this.rank=t.length}},wV=0,Z0=class{constructor(e,t){this.callArgs=t,this.id=wV++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},kV=0,lt=class extends de.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=kV++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ra(n)+"_"+B0(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new br(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return us(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return us(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new sa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new sa(`Layer ${this.name} is not connected, no input to return.`);return us(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new sa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new sa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return us(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=_t(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=_t(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new q(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),u=r.axes[i],c=l>=0?o[l]:o[o.length+l];if(u!=null&&[u,null].indexOf(c)===-1)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=_t(e),s=!0;for(let a of n)if(!(a instanceof vr)){s=!1;break}let r=!0;for(let a of n)if(a instanceof vr){r=!1;break}if(s===r)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return Li(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of _t(e))a.push(o.shape);this.build(us(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=_t(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=us(i),this.activityRegularizer!=null)throw new Ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=IV(e),o=this.computeOutputShape(a),i,l=SV(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((u,c)=>new vr(l,u,this,_t(e),t,this.name,c)):i=new vr(l,o,this,_t(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new sa(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new sa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new br(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return A3(e?this.trainableWeights:this.weights)}setWeights(e){K(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=A3(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!v.arraysEqual(a.shape,i.shape))throw new q(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}CA(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():Ot("zeros"));let l=s.apply(t,n),u=new Fw(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=_t(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=_t(e);t=_t(t),n=_t(n),s=_t(s),r=hm(r),a=hm(a);let l=[],u=[],c=[];for(let p of i)l.push(p.sourceLayer),u.push(p.nodeIndex),c.push(p.tensorIndex);new Z0({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function IV(e){e=_t(e);let t=[];for(let n of e)t.push(n.shape);return us(t)}function SV(e){return"float32"}function Ow(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],u=Ow(o,i,l);for(let c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}var jc=class extends lt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:B0("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new vr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Z0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};jc.className="InputLayer";de.registerClass(jc);function Mw(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new jc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function CV(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return he(t,e.dtype)}catch(n){throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Oi=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Oi)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=CV(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof vr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof vr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ne(this.id2Mask)}},mm=new Sw,gm=new Sw;function TV(e){mm!=null&&mm.setMaxEntries(e),gm!=null&&gm.setMaxEntries(e)}function Qd(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],u=t.names();for(let f of i)u.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let c=i.join(",")+"|"+t.names().sort().join(","),p=mm.get(c),d;if(p==null){let f=NV(o,t);p=f.sorted,d=f.recipientCounts,mm.put(c,p),gm.put(c,d)}d={},r||Object.assign(d,gm.get(c));let h=new Oi(t);for(let f=0;f<p.length;++f){if(s!=null){let R=cm().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=p[f],g=m.sourceLayer;if(g instanceof jc)continue;let y=[],x=[],A=[],b=!1;for(let R of m.inputs){let $=h.getValue(R),_=h.getMask(R);y.push($),x.push(_),_!=null&&(b=!0),r||(d[R.name]--,d[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!$.isDisposed&&R.sourceLayer.stateful!==!0&&A.push($))}b&&(n=n||{},n.mask=x[0]);let w=_t(g.apply(y,n)),k=null;g.supportsMasking&&(k=g.computeMask(y,x));let S=RV(m),E=Array.isArray(S)?S:[S];for(let R=0;R<E.length;++R){h.hasKey(E[R])||h.add(E[R],w[R],Array.isArray(k)?k[0]:k);let $=i.indexOf(E[R].name);$!==-1&&(l[$]=w[R])}r||ne(A)}return h.disposeMasks(),a?l:l[0]}function NV(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=tv(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=tv(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:EV(s)}}function EV(e){let t={};for(let n in e)t[n]=e[n].size;return t}function tv(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let u of i.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(i.name),!n.has(u.name)&&a.push(u)}}return{sorted:s,recipientMap:r}}function RV(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var _V=Y();_V.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,TV);var zw={};Ve(zw,{maxNorm:()=>DV,minMaxNorm:()=>FV,nonNeg:()=>PV,unitNorm:()=>$V});function TA(e,t){return K(()=>Cn(ke(L(e,e),t,!0)))}var gh=class extends de.Serializable{getConfig(){return{}}},NA=class extends gh{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=TA(e,this.axis),n=ds(t,0,this.maxValue);return L(e,pe(n,ce(pn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};NA.className="MaxNorm";de.registerClass(NA);var EA=class extends gh{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>pe(e,ce(pn(),TA(e,this.axis))))}getConfig(){return{axis:this.axis}}};EA.className="UnitNorm";de.registerClass(EA);var RA=class extends gh{apply(e){return Rr(e)}};RA.className="NonNeg";de.registerClass(RA);var _A=class extends gh{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=TA(e,this.axis),n=ce(L(this.rate,ds(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,pe(n,ce(pn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};_A.className="MinMaxNorm";de.registerClass(_A);var nv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function mn(e){return gA(e)}function sv(e,t={}){return ph(e,de.SerializationMap.getMap().classNameMap,t,"constraint")}function gn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in nv?nv[e]:e,config:{}};return sv(n)}else return e instanceof gh?e:sv(e)}function DV(e){return new NA(e)}function $V(e){return new EA(e)}function PV(){return new RA}function FV(e){return new _A(e)}var Lw={};Ve(Lw,{constant:()=>zV,glorotNormal:()=>HV,glorotUniform:()=>GV,heNormal:()=>jV,heUniform:()=>qV,identity:()=>VV,leCunNormal:()=>XV,leCunUniform:()=>KV,ones:()=>MV,orthogonal:()=>ZV,randomNormal:()=>BV,randomUniform:()=>LV,truncatedNormal:()=>WV,varianceScaling:()=>UV,zeros:()=>OV});function OV(){return new xA}function MV(){return new U0}function zV(e){return new bA(e)}function LV(e){return new vA(e)}function BV(e){return new wA(e)}function WV(e){return new kA(e)}function VV(e){return new IA(e)}function UV(e){return new ps(e)}function GV(e){return new G0(e)}function HV(e){return new H0(e)}function jV(e){return new j0(e)}function qV(e){return new q0(e)}function XV(e){return new X0(e)}function KV(e){return new K0(e)}function ZV(e){return new SA(e)}var Bw={};Ve(Bw,{Layer:()=>lt,RNN:()=>Xr,RNNCell:()=>vh,activation:()=>wG,add:()=>_G,alphaDropout:()=>fH,average:()=>DG,averagePooling1d:()=>z5,averagePooling2d:()=>L5,averagePooling3d:()=>B5,avgPool1d:()=>WG,avgPool2d:()=>UG,avgPool3d:()=>HG,avgPooling1d:()=>VG,avgPooling2d:()=>GG,avgPooling3d:()=>jG,batchNormalization:()=>zG,bidirectional:()=>oH,concatenate:()=>$G,conv1d:()=>hG,conv2d:()=>fG,conv2dTranspose:()=>mG,conv3d:()=>gG,conv3dTranspose:()=>yG,convLstm2d:()=>nH,convLstm2dCell:()=>sH,cropping2D:()=>xG,dense:()=>kG,depthwiseConv2d:()=>vG,dot:()=>MG,dropout:()=>IG,elu:()=>iG,embedding:()=>RG,flatten:()=>CG,gaussianDropout:()=>hH,gaussianNoise:()=>pH,globalAveragePooling1d:()=>qG,globalAveragePooling2d:()=>XG,globalMaxPool1d:()=>lH,globalMaxPool2d:()=>uH,globalMaxPooling1d:()=>_8,globalMaxPooling2d:()=>D8,gru:()=>ZG,gruCell:()=>YG,input:()=>r8,inputLayer:()=>oG,layerNormalization:()=>LG,leakyReLU:()=>uG,lstm:()=>JG,lstmCell:()=>QG,masking:()=>mH,maxPool1d:()=>cH,maxPool2d:()=>dH,maxPooling1d:()=>$8,maxPooling2d:()=>P8,maxPooling3d:()=>KG,maximum:()=>PG,minimum:()=>FG,multiply:()=>OG,permute:()=>EG,prelu:()=>cG,reLU:()=>lG,repeatVector:()=>TG,reshape:()=>NG,rnn:()=>rH,separableConv2d:()=>AG,simpleRNN:()=>eH,simpleRNNCell:()=>tH,softmax:()=>dG,spatialDropout1d:()=>SG,stackedRNNCells:()=>aH,thresholdedReLU:()=>pG,timeDistributed:()=>iH,upSampling2d:()=>bG,zeroPadding2d:()=>BG});async function Ma(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];ne(s)}}function Ww(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var rv;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(rv||(rv={}));var YV=125,Ju=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Vw=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},JV=class extends Ju{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=K(()=>ce(this.totals[s],L(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:K(()=>{let s=L(pe(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),xn(t[n])}))}},Uw=class extends Ju{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},Gw=class extends Ju{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||fA,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=YV),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=QW(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Ma(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ma(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ma(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ma(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ma(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ma(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ma(e),await this.trainEnd(e))}};function Hw(e,t){return e==null&&(e={}),e instanceof Ju?[e]:Array.isArray(e)&&e[0]instanceof Ju?e:_t(e).map(s=>new Gw(s,t))}var er=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),er.checkForDuplicate(t),er.constructors[e]==null&&(er.constructors[e]=[]),er.constructors[e].push(t)}static checkForDuplicate(e){for(let t in er.constructors)er.constructors[+t].forEach(s=>{if(s===e)throw new q("Duplicate callback constructor.")})}static clear(){er.constructors={}}static createCallbacks(e){let t=[];for(let n in er.constructors){let s=+n;e>=s&&t.push(...er.constructors[s])}return t.map(n=>new n)}};er.constructors={};function jw(e,t,n,s,r,a,o,i,l){let u=new Uw,c=[new JV,...er.createCallbacks(t)];e!=null&&c.push(...e),c.push(u);let p=new Vw(c);return p.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:p,history:u}}function Ir(e,t={},n=!1){return ph(e,de.SerializationMap.getMap().classNameMap,t,"layer",n)}function ym(e,t){return K(()=>{e.dtype!=="float32"&&(e=he(e,"float32"));let n=ke(fh(e),t,!0),s=Bc(n.shape,pn()),r=Cn(qr(n,s));return pe(e,r)})}function Yl(e,t){return K(()=>Bt(fh(fe(t,e)),-1))}function Y0(e,t){return K(()=>Bt(tn(fe(t,e)),-1))}function qc(e,t){return K(()=>{let n=fe(e,t),s=ds(tn(e),pn(),Number.MAX_VALUE),r=tn(pe(n,s));return L(100,Bt(r,-1))})}function QV(e,t){return K(()=>{let n=ds(t,pn(),Number.MAX_VALUE),s=Ns(ce(1,n)),r=ds(e,pn(),Number.MAX_VALUE),a=Ns(ce(1,r));return Bt(fh(fe(s,a)),-1)})}function eU(e,t){return K(()=>{let n=qr(0,fe(1,L(e,t)));return Bt(fh(n),-1)})}function tU(e,t){return K(()=>{let n=qr(0,fe(1,L(e,t)));return Bt(n,-1)})}function nU(e,t){return K(()=>{let n=ke(L(e,t),-1),s=fn(L(fe(1,e),t),-1);return qr(0,ce(1,fe(s,n)))})}function sU(e,t){return K(()=>{let n=Math.log(2),s=fe(t,e),r=fe(ce(s,jl(L(-2,s))),n);return Bt(r,-1)})}function xp(e,t,n=!1){return K(()=>{if(n)t=Kl(t);else{let s=ke(t,t.shape.length-1,!0);t=pe(t,s)}return t=ds(t,pn(),1-pn()),$t(ke(L(he(e,"float32"),Ns(t)),t.shape.length-1))})}function Am(e,t,n=!1){return K(()=>{let s=he(Wc(dV(e)),"int32");t=ds(t,pn(),1-pn());let r=t.shape,a=U(qu(s,r[r.length-1]),r);return xp(a,t,n)})}function rU(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return K(()=>{let n=Rr(t),s=$t(tn(t));return ce(fe(n,L(t,e)),rh(Ts(s)))})}function J0(e,t){return K(()=>{let n;return n=ds(t,pn(),1-pn()),n=Ns(pe(n,fe(1,n))),Bt(rU(e,n),-1)})}function aU(e,t){return K(()=>{let n=ds(e,pn(),1),s=ds(t,pn(),1);return ke(L(e,Ns(pe(n,s))),-1)})}function oU(e,t){return K(()=>{let n=Ns(ce(pn(),t));return Bt(fe(t,L(e,n)),-1)})}function DA(e,t){return K(()=>{let n=ym(e,-1),s=ym(t,-1),r=L(n,s);return $t(ke(r,-1))})}var xm={meanSquaredError:Yl,meanAbsoluteError:Y0,meanAbsolutePercentageError:qc,meanSquaredLogarithmicError:QV,squaredHinge:eU,hinge:tU,categoricalHinge:nU,logcosh:sU,categoricalCrossentropy:xp,sparseCategoricalCrossentropy:Am,binaryCrossentropy:J0,kullbackLeiblerDivergence:aU,poisson:oU,cosineProximity:DA};function jg(e){if(typeof e=="string"){if(e in xm)return xm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function $A(e,t){return K(()=>{let n=L(.5,Es(t)),s=W0(fs(t,n),e.dtype);return Bt(Cs(e,s),-1)})}function PA(e,t){return K(()=>W0(Cs(Ss(e,-1),Ss(t,-1)),"float32"))}function qw(e,t){return K(()=>he(ke(sr(Cs(e,1),Cs(t,1))),"float32"))}function iU(e,t){return K(()=>he(ke(sr(Cs(e,1),Cs(t,0))),"float32"))}function lU(e,t){return K(()=>he(ke(sr(Cs(e,0),Cs(t,1))),"float32"))}function Xw(e,t){return K(()=>{let n=qw(e,t),s=lU(e,t),r=ce(n,s);return he(Pn(fs(r,0),pe(n,r),0),"float32")})}function uU(e,t){return K(()=>{let n=qw(e,t),s=iU(e,t),r=ce(n,s);return he(Pn(fs(r,0),pe(n,r),0),"float32")})}function Kw(e,t){return J0(e,t)}function Zw(e,t){return e.rank===t.rank&&(e=Qe(e,[e.rank-1])),t=Ss(t,-1),t.dtype!==e.dtype&&(t=he(t,e.dtype)),he(Cs(e,t),"float32")}var cU=Yl,dU=Yl,pU=Y0,hU=Y0,fU=qc,mU=qc,FA=xp,gU=DA,Yw=Am,bm={binaryAccuracy:$A,categoricalAccuracy:PA,precision:Xw,categoricalCrossentropy:FA,sparseCategoricalCrossentropy:Yw,mse:cU,MSE:dU,mae:pU,MAE:hU,mape:fU,MAPE:mU,cosine:gU};function yU(e){if(typeof e=="string"&&e in bm)return bm[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function Of(e){if(Mr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(xm))if(xm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(bm))if(bm[n]===e){t=n;break}return t!==void 0?t:e.name}}function AU(e){let t={Adagrad:()=>Ei.adagrad(.01),Adadelta:()=>Ei.adadelta(1,.95,pn()),Adam:()=>Ei.adam(.001,.9,.999,pn()),Adamax:()=>Ei.adamax(.002,.9,.999,pn(),0),RMSProp:()=>Ei.rmsprop(.001,.9,0,pn()),SGD:()=>Ei.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var av=1*1024*1024;function ov(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!x3(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>av&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${av}.`)}}function x3(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!x3(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!x3(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function xU(e,t,n,s=console.log){let r=vU(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let o;if(!r){a.push("Receives inputs"),o=[];for(let c in e.nodesByDepth)o.push(...e.nodesByDepth[c])}s("_".repeat(t)),vm(a,n,s),s("=".repeat(t));let i=e.layers;for(let c=0;c<i.length;++c)r?wU(i[c],n,s):kU(i[c],n,o,s),s((c===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=bU(e),u=fm(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function bU(e){let t;return e.collectedTrainableWeights!=null?t=fm(e.collectedTrainableWeights):t=fm(e.trainableWeights),t}function vU(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function vm(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function wU(e,t,n){let s,r;try{r=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch(l){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(l){s="multiple"}let a=e.name,o=e.getClassName(),i=[`${a} (${o})`,r,s,e.countParams().toString()];vm(i,t,n)}function kU(e,t,n,s){let r,a;try{a=e.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch(p){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(p){r="multiple"}let o=[];for(let p of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(p)===-1))for(let d=0;d<p.inboundLayers.length;++d){let h=p.inboundLayers[d].name,f=p.nodeIndices[d],m=p.tensorIndices[d];o.push(`${h}[${f}][${m}]`)}let i=e.name,l=e.getClassName(),u=o.length===0?"":o[0],c=[`${i} (${l})`,a,r,e.countParams().toString(),u];vm(c,t,s);for(let p=1;p<o.length;++p)vm(["","","","",o[p]],t,s)}function Jw(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function bp(e,t){if(e===null)return null;if(typeof e=="string")return $i(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];Jw(t,r,a)?n.push(a):n.push(bp(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=$i(s);n[a]=bp(r,a)}}return n}}function b3(e,t){if(e==null)return null;if(typeof e=="string")return ra(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];Jw(t,r,a)?n.push(a):n.push(b3(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=ra(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=b3(r,s)}return n}}var OA="3.18.0",Or=class extends lt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=B0(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ua(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Ua(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;Mr(A===0,"input layer has >1 nodes"),Mr(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let x=this.inputLayers[y];if(!(x instanceof jc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},s={},r={},a={},o=[],i=(y,x,A,b,w,k)=>{(b==null||w==null||k==null)&&(b=y.sourceLayer,w=y.nodeIndex,k=y.tensorIndex);let S=b.inboundNodes[w];if(A.indexOf(S)!==-1)throw new br(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(S)!==-1)return;this.containerNodes.add(Or.nodeKey(b,w)),b.id in a||(a[b.id]=Object.keys(a).length),A.indexOf(S)===-1&&A.push(S);let E=S.inboundLayers.length;for(let R=0;R<E;R++){let $=S.inputTensors[R],_=S.inboundLayers[R],D=S.nodeIndices[R],C=S.tensorIndices[R];i($,x,A,_,D,C)}for(x.push(S);A.indexOf(S)>=0;)A.splice(A.indexOf(S),1);o.push(S)},l=[],u=[];for(let y of this.outputs)i(y,l,u);let c=o.slice().reverse();for(let y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let x=t[y.id],A=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];x=Math.max(x,A),s[y.outboundLayer.id]=x,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=x;for(let b=0;b<y.inboundLayers.length;b++){let w=y.inboundLayers[b],k=y.nodeIndices[b],S=w.inboundNodes[k],E=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(x+1,E),n[S.id]=S}}let p={};for(let y in t){let x=t[y];x in p||(p[x]=[]),p[x].push(n[y])}let d={};for(let y in s){let x=s[y];x in d||(d[x]=[]),d[x].push(r[y])}let h=Object.keys(d).map(y=>parseInt(y,10)).sort($f);this.layers=[];for(let y of h){let x=d[y];x.sort((A,b)=>{let w=a[A.id],k=a[b.id];return w<k?-1:w>k?1:0});for(let A of x)A instanceof Or&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=d,h=Object.keys(p).map(y=>parseInt(y,10)).sort($f);let f=this.inputs.slice(),m=[];for(let y of h)for(let x of p[y]){let A=x.outboundLayer;if(A!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new br(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${A.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(A.name)}}this.nodesByDepth=p;let g=this.layers.map(y=>y.name);for(let y of g){let x=g.filter(A=>A===y).length;if(x!==1)throw new br(`The name "${y}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Z0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new q(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new q(`${a.length} of ${s} weights are not set: ${a}`)}CA(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${OA}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=b3(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return K(()=>{e=_t(e);let n=new Oi;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return Qd(this.outputs,n,t)})}computeMask(e,t){return K(()=>{e=_t(e);let n;return t==null?n=Yi(null,e.length):n=_t(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=hm(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],u=i.name+"_0_0";n[u]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort($f);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let u=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let c=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],x=`${m.name}_${g}_${y}`,A=n[x];c.push(A)}let p=u.computeOutputShape(us(c)),d=hm(p),h=u.inboundNodes.indexOf(l);for(let f=0;f<d.length;f++){let m=`${u.name}_${h}_${f}`;n[m]=d[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],c=`${i.name}_${l}_${u}`;a.push(c)}for(let o=0;o<a.length;o++){let i=a[o];Mr(i in n),r.push(n[i])}return us(r)}runInternalGraph(e,t){t==null&&(t=Yi(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],u=e[i],c=t[i];n[l.id]=[u,c]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort($f);for(let i of s){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer,p=u.inputTensors,d=u.outputTensors,h=new Array;for(let f of p)f.id in n&&h.push(n[f.id]);if(h.length===p.length){let f={},m,g,y,x;if(u.callArgs!=null&&(f=u.callArgs),h.length===1){let[A,b]=h[0];f.mask==null&&(f.mask=b),y=_t(c.call(A,f)),x=_t(c.computeMask(A,b)),m=[A],g=[b]}else m=h.map(A=>A[0]),g=h.map(A=>A[1]),f.mask==null&&(f.mask=g),y=_t(c.call(m,f)),x=_t(c.computeMask(m,g));if(c.activityRegularizer)throw new Ge("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<d.length;++A){let b=d[A],w=y[A],k=x[A];n[b.id]=[w,k]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Mr(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,u]=n[i.id];o.push(l.shape),r.push(l),a.push(u)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Or?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Or.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new q(`No such layer: ${e}`)}calculateLosses(){return K(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Or.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let c=0;c<a.inboundNodes.length;c++){let p=a.inboundNodes[c],d=Or.nodeKey(a,c),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let f=[];for(let m=0;m<p.inboundLayers.length;m++){let g=p.inboundLayers[m],y=p.nodeIndices[m],x=p.tensorIndices[m],A=Or.nodeKey(g,y),b=t[A];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let u={};u.name=a.name,u.className=o,u.config=i,u.inboundNodes=l,n.push(u)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Or.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.inputLayersTensorIndices[a];s.push([o.name,u,c])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Or.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.outputLayersTensorIndices[a];r.push([o.name,u,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],x;for(let A of g){let b=A[0],w=A[1],k=A[2];if(x=A[3]==null?{}:A[3],!(b in r)){o(m,g);return}let S=r[b];if(S.inboundNodes.length<=w){o(m,g);return}let E=S.inboundNodes[w];y.push(E.outputTensors[k])}y.length>0&&m.apply(us(y),x)}function l(m){let g=m.name,y=Ir(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),r[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${A}`);o(y,A)})}let u=t.name,c=t.layers;for(let m of c)l(m);for(;!JW(a);)for(let m of c){let g=r[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let x of y)i(g,x)}}let p=[],d=[],h=t.inputLayers;for(let m of h){let g=m[0],y=m[1],x=m[2];Mr(g in r);let b=r[g].inboundNodes[y].outputTensors;p.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],x=m[2];Mr(g in r);let b=r[g].inboundNodes[y].outputTensors;d.push(b[x])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){K(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function IU(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Qw(e,t){return IU(e,t,"classWeight")}async function e8(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=K(()=>{if(e.shape.length===1)return Yn(e);if(e.shape.length===2){if(e.shape[1]>1)return Ss(e,1);if(e.shape[1]===1)return U(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());ne(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),Dt(o,"float32")}else return null}function SU(e,t){return L(e,t)}var CU=32;function t8(e,t){let n,s,r=t;n=r.xs,s=r.ys,v.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=iv("input",e.inputNames,n),o=iv("output",e.outputNames,s),i=a[0].shape[0];v.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)v.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)v.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function iv(e,t,n){if(n instanceof nt)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function TU(e){if(e.length===3)throw new Ge("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function NU(e,t,n){let s=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(lv(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=TU(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=Hw(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=jw(c,p,n.epochs,null,null,EU(t,n),null,r,u);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let y=0,x=0;for(s||(m=await t.iterator());!s||y<n.batchesPerEpoch;){let A=await m.next();if(s&&A.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(A.value!=null){let{xs:b,ys:w}=t8(e,A.value),k={};k.batch=x,k.size=b[0].shape[0],await d.onBatchBegin(x,k);let S=[];if(n.classWeight!=null){let $=Qw(n.classWeight,e.outputNames);for(let _=0;_<$.length;++_)S.push(await e8(w[_],null,$[_]))}let E=b.concat(w).concat(S),R=i(E);ne(E);for(let $=0;$<l.length;++$){let _=l[$],D=R[$];k[_]=D,xn(D)}await d.onBatchEnd(x,k),Ww(k),x++,y++}if(s?y>=n.batchesPerEpoch:A.done){if(r){let b;lv(n.validationData)?b=_t(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=_t(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?CU:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function EU(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function lv(e){return typeof e.iterator=="function"}function RU(e){return typeof e.next=="function"}async function _U(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Ge("Verbose mode is not implemented yet.");v.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=RU(t)?t:await t.iterator(),i=0,l=0;for(;!s||l<n.batches;){let u=await o.next();if(a=K(()=>{if(u.value){let{xs:c,ys:p}=t8(e,u.value),d=c.concat(p),h=K(()=>r(d));if(ne(d),l===0)for(let m=0;m<h.length;++m)a.push(Ce(0));let f=d[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],y=a[m];a[m]=K(()=>ce(a[m],L(f,g))),l>0&&ne(y)}ne(h),i+=f,++l}return a}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){let c=a[u];a[u]=pe(a[u],i),ne(c)}return us(a)}function v3(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function ep(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>Bi(s,t,n-t)):Bi(e,t,n-t)}function MA(e,t){return K(()=>e==null?null:Array.isArray(e)?e.map(n=>MA(n,t)):$w(e,t.dtype==="int32"?t:he(t,"int32")))}function w3(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function DU(e,t,n,s,r,a,o,i,l,u,c,p,d,h,f){r==null&&(r=32),a==null&&(a=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=Cr(0,g)),o==null&&(o=1);let{callbackList:x,history:A}=jw(i,o,a,d,g,h,r,m,p);x.setModel(e),e.history=A,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=d;b<a;++b){await x.onEpochBegin(b);let w={};if(h!=null)throw new Ge("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Ge("batch shuffling is not implemneted yet");c&&v.shuffle(y);let k=Dt(y),S=w3(g,r);for(let E=0;E<S.length;++E){let R={};if(await x.onBatchBegin(E,R),K(()=>{let $=S[E][0],_=S[E][1],D=Bi(k,$,_-$);R.batch=E,R.size=_-$;let C=MA(n,D),F=t(C);for(let V=0;V<s.length;++V){let j=s[V],z=F[V];R[j]=z,xn(z)}if(E===S.length-1&&m){let V=e.testLoop(l,u,r);for(let j=0;j<s.length;++j){let z=s[j],Z=V[j];xn(Z),w["val_"+z]=Z}}}),await x.onBatchEnd(E,R),Ww(R),e.stopTraining_)break}k.dispose()}if(await x.onEpochEnd(b,w),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function $U(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,u,c,p,d;try{let h=s.batchSize==null?32:s.batchSize;v3(h);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,h);r=m[0],a=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new Ge("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let R=!0,$=await e.standardizeUserData(l,u,null,null,R,h);c=$[0],p=$[1],y=c.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),$=r[0].shape[0];c=ep(r,R,$),o=r,r=ep(r,0,R),p=ep(a,R,$),i=a,a=ep(a,0,R),y=c.concat(p)}else s.validationSteps!=null&&(g=!0);let x=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),w,k;g?(e.makeTestFunction(),w=e.testFunction,k=b.slice().concat(b.map(R=>"val_"+R))):(w=null,y=[],k=b.slice());let S=Hw(s.callbacks,s.yieldEvery);return await DU(e,A,x,b,h,s.epochs,s.verbose,S,w,y,s.shuffle,k,s.initialEpoch,null,null)}finally{e.isTraining=!1,xr(r,t),xr(a,n),xr(o,t),xr(i,n),xr(c,l),xr(p,u),d!=null&&ne(d)}}function n8(e){let t=[];e instanceof nt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(hh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function xr(e,t){if(e==null)return;let n=[];if(t instanceof nt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof nt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function PU(e){return e instanceof nt}function k3(e){return Array.isArray(e)}function uv(e){return!PU(e)&&!k3(e)}function cv(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(k3(e)&&e.length>0)o=!0;else if(uv(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new q(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(uv(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new q(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(k3(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new q(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=n8(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c>=0&&u!==c)throw new q(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function FU(e,t,n){let s=Ua(e.map(a=>a.shape[0]));s.sort();let r=Ua(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!v.arraysEqual(s,r))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function OU(e,t,n){let s=[Yl,J0,xp];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===xp&&a.shape[a.shape.length-1]===1)throw new q(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let p=l[c],d=u[c];if(d!=null&&p!==d)throw new q(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function dv(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c!==u)throw new q(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function MU(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var zU="layers-model",la=class extends Or{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");xU(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=AU(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof xa))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new q(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(jg(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>jg(o))}else{let a=jg(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Li("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=MU(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};Li("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let u="",c,p,d;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===J0?["accuracy","acc"].indexOf(h)!==-1?p=$A:["crossentropy","ce"].indexOf(h)!==-1&&(p=Kw):this.lossFunctions[a]===Am?["accuracy","acc"].indexOf(h)!==-1?p=Zw:["crossentropy","ce"].indexOf(h)!==-1&&(p=Yw):["accuracy","acc"].indexOf(h)!==-1?p=PA:["crossentropy","ce"].indexOf(h)!==-1&&(p=FA);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),d=p,c=u+g}else d=yU(h),c=u+Of(h);let f;Li(c,()=>{f=d}),r(a,c,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;v3(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return us(l)}finally{xr(a[0],e),xr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),_U(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new q(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Oi;if(e instanceof nt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new q(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=Qd(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=Yi(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return K(()=>{let s=this.checkNumSamples(e);if(n)throw new Ge("Verbose predictLoop() is not implemented yet.");let r=w3(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)K(()=>{let l=r[o][0],u=r[o][1],c=ep(e,l,u),p=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)p.push({key:this.inputs[h],value:c[h]});else p.push({key:this.inputs[0],value:c});let d=new Oi(p);return Qd(this.outputs,d)}).forEach((l,u)=>a[u].push(l));return us(a.map(o=>It(o,0)))})}predict(e,t={}){let n=n8(e);dv(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return v3(s),this.predictLoop(n,s)}finally{xr(n,e)}}predictOnBatch(e){dv(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new br("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===Am?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=cv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=cv(t,this.feedOutputNames,r,!1,"target"),FU(e,t,null),OU(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let u=Qw(s,this.outputNames);l=[];for(let c=0;c<u.length;++c)l.push(await e8(i[c],null,u[c]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return K(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Ge("Verbose mode is not implemented yet.");if(r!=null)throw new Ge("steps mode in testLoop() is not implemented yet");{let i=w3(a,n),l=Dt(Cr(0,a));for(let u=0;u<i.length;++u){let c=i[u][0],p=i[u][1],d=Bi(l,c,p-c),h=MA(t,d),f=e(h);if(u===0)for(let m=0;m<f.length;++m)o.push(Ce(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ce(o[m],L(p-c,g))}}for(let u=0;u<o.length;++u)o[u]=pe(o[u],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;K4(e,s)>1&&(r+=`_${K4(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:n[f]});let p=new Oi(c),d=Qd(this.outputs,p,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let m=this.lossFunctions[f],g=m(s[f],d[f]);r[f]!=null&&(g=SU(g,r[f]));let y=Bt(g);t.push(y),f===0?h=g:h=ce(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Bt(g(s[y],d[y]))}xn(m),a.push(m)}return h=Bt(h),this.calculateLosses().forEach(f=>{h=ce(h,f)}),h},i=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>K(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new Oi(a),i=Qd(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],c=Bt(u(r[l],i[l]));l===0?n=c:n=ce(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],c=this.metricsTensors[l][1],p=Bt(u(r[c],i[c]));t.push(p)}return t})}async fit(e,t,n={}){return $U(this,e,t,n)}async fitDataset(e,t){return NU(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let u=await l.data();i.push(u[0])}return ne(o),xr(n[0],e),xr(n[1],t),us(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=cm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-cm().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ra(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ra(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=ra(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ra(Of(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ra(Of(e)));{let e={};for(let t in this.metrics)e[t]=ra(Of(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=bp(e.optimizer_config),n=Ir(t),s;if(typeof e.loss=="string")s=$i(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>$i(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=$i(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>$i(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=$i(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Dn.getSaveHandlers(e);if(l.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new q(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Dn.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:zU,generatedBy:`TensorFlow.js tfjs-layers v${OA}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:u,specs:c}=await Dn.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...c),n.data=Dn.concatenateArrayBuffers([n.data,u])}return this.userDefinedMetadata!=null&&(ov(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){ov(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};la.className="Model";de.registerClass(la);var s8=class extends la{};s8.className="Functional";de.registerClass(s8);async function LU(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=bp(n),r=Ir(s,t);if(e.weightsManifest!=null){let a=await Dn.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),ne(a)}return r}async function BU(e,t){if(t==null&&(t={}),typeof e=="string"){let n=Dn.getLoadHandlers(e,t);if(n.length===0)n.push(Dn.browserHTTPRequest(e,t));else if(n.length>1)throw new q(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return WU(e,void 0,t)}async function WU(e,t,n){if(n==null&&(n={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=Ir(bp(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=VU(s.weightData,s.weightSpecs);i.loadWeights(u,a),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),ne(u),ne(c.map(p=>p.tensor))}return i}function VU(e,t){let n=Dn.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var Qu=class extends la{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:B0("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Qu||e instanceof la,n;if(t){if(n=e,n.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=Mw({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ow(this.outputs[0])}this.inboundNodes=[],new Z0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Yi(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(At(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new la({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");r=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof Qu))throw new Ge(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let u=Ir(i,void 0,s);s&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Qu.className="Sequential";de.registerClass(Qu);function UU(e){return new la(e)}function GU(e){return new Qu(e)}function HU(e,t){return t==null&&(t={}),BU(e,t)}function r8(e){return Mw(e)}function jU(e,t){er.registerCallbackConstructor(e,t)}var ms=class extends de.Serializable{getConfig(){return{}}},a8=class extends ms{apply(e,t=1){return hV(e,t)}};a8.className="elu";de.registerClass(a8);var o8=class extends ms{apply(e){return k0(e)}};o8.className="selu";de.registerClass(o8);var i8=class extends ms{apply(e){return Rr(e)}};i8.className="relu";de.registerClass(i8);var l8=class extends ms{apply(e){return K(()=>Vc(6,Rr(e)))}};l8.className="relu6";de.registerClass(l8);var u8=class extends ms{apply(e){return e}};u8.className="linear";de.registerClass(u8);var c8=class extends ms{apply(e){return Sn(e)}};c8.className="sigmoid";de.registerClass(c8);var d8=class extends ms{apply(e){return mV(e)}};d8.className="hardSigmoid";de.registerClass(d8);var p8=class extends ms{apply(e){return jl(e)}};p8.className="softplus";de.registerClass(p8);var h8=class extends ms{apply(e){return fV(e)}};h8.className="softsign";de.registerClass(h8);var f8=class extends ms{apply(e){return Hi(e)}};f8.className="tanh";de.registerClass(f8);var zA=class extends ms{apply(e,t=-1){return Kl(e,t)}};zA.className="softmax";de.registerClass(zA);var m8=class extends ms{apply(e,t=-1){return g0(e,t)}};m8.className="logSoftmax";de.registerClass(m8);var g8=class extends ms{apply(e,t=1){return K(()=>L(Sn(L(e,t)),e))}};g8.className="swish";de.registerClass(g8);var y8=class extends ms{apply(e){return K(()=>L(e,Hi(jl(e))))}};y8.className="mish";de.registerClass(y8);function Qa(e){return e.getClassName()}function qg(e,t={}){return ph(e,de.SerializationMap.getMap().classNameMap,t,"activation")}function eo(e){if(e==null){let t={};return t.className="linear",t.config={},qg(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},qg(t)}else return e instanceof ms?e:qg(e)}function LA(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var A8=class extends de.Serializable{},yh=class extends A8{constructor(e){super(),LA(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return K(()=>{let t=Wt([1]);return this.hasL1&&(t=ce(t,ke(L(this.l1,tn(e))))),this.hasL2&&(t=ce(t,ke(L(this.l2,fh(e))))),U(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};yh.className="L1L2";de.registerClass(yh);function qU(e){return LA(e),new yh({l1:e!=null?e.l1:null,l2:0})}function XU(e){return LA(e),new yh({l2:e!=null?e.l2:null,l1:0})}var pv={l1l2:"L1L2"};function kt(e){return gA(e)}function hv(e,t={}){return ph(e,de.SerializationMap.getMap().classNameMap,t,"regularizer")}function Mt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in pv?pv[e]:e,config:{}};return hv(n)}else return e instanceof A8?e:hv(e)}var BA=class extends lt{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=qe(e);let n=Rr(e);return this.maxValue!=null&&(n=ds(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};BA.className="ReLU";de.registerClass(BA);var WA=class extends lt{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=qe(e);return sh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};WA.className="LeakyReLU";de.registerClass(WA);var VA=class extends lt{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ot(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Mt(e.alphaRegularizer),this.alphaConstraint=gn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=At(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new sn({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=qe(e),lh(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Vt(this.alphaInitializer),alphaRegularizer:kt(this.alphaRegularizer),alphaConstraint:mn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};VA.className="PReLU";de.registerClass(VA);var UA=class extends lt{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ge(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=qe(e);return Lc(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};UA.className="ELU";de.registerClass(UA);var GA=class extends lt{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=qe(e);return L(n,he(fs(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};GA.className="ThresholdedReLU";de.registerClass(GA);var HA=class extends lt{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new zA().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=qe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};HA.className="Softmax";de.registerClass(HA);function Vu(e,t,n){if(typeof e=="number")return Yi(e,t);if(e.length!==t)throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!uV(r))throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Sr(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function zr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Ja([n-t,0]);else if(s==="same")e=e*t;else throw new q(`Unsupport padding mode: ${s}.`);return e}function jA(e,t){return K(()=>(Yt(t),t==="channelsFirst"?st(e,[0,2,3,1]):e))}function x8(e,t){return K(()=>(Yt(t),t==="channelsFirst"?st(e,[0,2,3,4,1]):e))}function KU(e,t,n,s=1,r="valid",a,o=1){return K(()=>{if(a==null&&(a=Tr()),Yt(a),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=st(e,[0,2,1])),r==="causal")throw new Ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=c0(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=_r(i,n)),i})}function fv(e,t,n,s=[1,1],r="valid",a,o,i=null){return K(()=>{if(a==null&&(a=Tr()),Yt(a),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=jA(e,a);if(r==="causal")throw new Ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ya.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=st(l,[0,3,1,2])),l})}function ZU(e,t,n,s=[1,1,1],r="valid",a,o){return K(()=>{if(a==null&&(a=Tr()),Yt(a),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=x8(e,a);if(r==="causal")throw new Ge("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=My(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=_r(i,n)),a==="channelsFirst"&&(i=st(i,[0,4,1,2,3])),i})}var qA=class extends lt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",qA.verifyArgs(t),this.rank=e,bn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ge(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Vu(t.kernelSize,e,"kernelSize"),this.strides=Vu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Ks(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Yt(this.dataFormat),this.activation=eo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Ot(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gn(t.biasConstraint),this.biasRegularizer=Mt(t.biasRegularizer),this.activityRegularizer=Mt(t.activityRegularizer),this.dilationRate=Vu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Mr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!yA(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Qa(this.activation),useBias:this.useBias,biasInitializer:Vt(this.biasInitializer),biasRegularizer:kt(this.biasRegularizer),activityRegularizer:kt(this.activityRegularizer),biasConstraint:mn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Ah=class extends qA{constructor(e,t){super(e,t),this.kernel=null,Ah.verifyArgs(t),this.filters=t.filters,bn(this.filters,"filters"),this.kernelInitializer=Ot(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gn(t.kernelConstraint),this.kernelRegularizer=Mt(t.kernelRegularizer)}build(e){e=At(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return K(()=>{e=qe(e);let n,s=this.bias==null?null:this.bias.read(),r=Tw(this.activation.getClassName());if(r!=null&&this.rank===2)n=fv(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=KU(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=fv(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=ZU(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ge("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=At(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=Sr(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Vt(this.kernelInitializer),kernelRegularizer:kt(this.kernelRegularizer),kernelConstraint:mn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},xh=class extends Ah{constructor(e){super(2,e),xh.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!yA(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};xh.className="Conv2D";de.registerClass(xh);var bh=class extends Ah{constructor(e){super(3,e),bh.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};bh.className="Conv3D";de.registerClass(bh);var XA=class extends xh{constructor(e){if(super(e),this.inputSpec=[new sn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=At(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sn({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=qe(e);if(n.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],u=this.kernelSize[0],c=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=zr(i,p,u,this.padding),f=zr(l,d,c,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=st(n,[0,2,3,1]));let g=d0(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=st(g,[0,3,1,2])),this.bias!=null&&(g=_r(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=At(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=zr(t[s],i,a,this.padding),t[r]=zr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};XA.className="Conv2DTranspose";de.registerClass(XA);var KA=class extends bh{constructor(e){if(super(e),this.inputSpec=[new sn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=At(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new sn({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=qe(e);if(n.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],u=s[a],c=s[o],p=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=zr(l,f,p,this.padding),x=zr(u,m,d,this.padding),A=zr(c,g,h,this.padding),b=[r,y,x,A,this.filters];this.dataFormat!=="channelsLast"&&(n=st(n,[0,2,3,4,1]));let w=O6(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=st(w,[0,4,1,2,3])),this.bias!==null&&(w=_r(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=At(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[s]=zr(t[s],u,o,this.padding),t[r]=zr(t[r],c,i,this.padding),t[a]=zr(t[a],p,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};KA.className="Conv3DTranspose";de.registerClass(KA);var b8=class extends Ah{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ot(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Mt(t.depthwiseRegularizer),this.depthwiseConstraint=gn(t.depthwiseConstraint),this.pointwiseInitializer=Ot(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Mt(t.pointwiseRegularizer),this.pointwiseConstraint=gn(t.pointwiseConstraint)}build(e){if(e=At(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new sn({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{e=qe(e);let n;if(this.rank===1)throw new Ge("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=st(e,[0,2,3,1])),n=nA(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=_r(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=st(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Vt(this.depthwiseInitializer),e.pointwiseInitializer=Vt(this.pointwiseInitializer),e.depthwiseRegularizer=kt(this.depthwiseRegularizer),e.pointwiseRegularizer=kt(this.pointwiseRegularizer),e.depthwiseConstraint=mn(this.depthwiseConstraint),e.pointwiseConstraint=mn(this.pointwiseConstraint),e}};b8.className="SeparableConv";var ZA=class extends b8{constructor(e){super(2,e)}};ZA.className="SeparableConv2D";de.registerClass(ZA);var Q0=class extends Ah{constructor(e){super(1,e),Q0.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!yA(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Q0.className="Conv1D";de.registerClass(Q0);var YA=class extends lt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return K(()=>{if(e=qe(e),this.dataFormat==="channelsLast"){let n=Ff(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ff(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Ff(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ff(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};YA.className="Cropping2D";de.registerClass(YA);var JA=class extends lt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Yt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,oV(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return K(()=>{let n=qe(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=st(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a]);return st(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};JA.className="UpSampling2D";de.registerClass(JA);function YU(e,t,n=[1,1],s="valid",r,a){return K(()=>{r==null&&(r=Tr()),Yt(r);let o=jA(e,r);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=zc(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=st(o,[0,3,1,2])),o})}var QA=class extends qA{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ot(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gn(e.depthwiseConstraint),this.depthwiseRegularizer=Mt(e.depthwiseRegularizer)}build(e){if(e=At(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{e=qe(e);let n=YU(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=_r(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Sr(t,this.kernelSize[0],this.padding,this.strides[0]),a=Sr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Vt(this.depthwiseInitializer),e.depthwiseRegularizer=kt(this.depthwiseRegularizer),e.depthwiseConstraint=mn(this.depthwiseRegularizer),e}};QA.className="DepthwiseConv2D";de.registerClass(QA);function v8(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function w8(e,t,n,s=!1,r,a,o=!1,i=!1){return K(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Cr(2,l));if(t=st(t,u),a!=null)throw new Ge("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=he(he(r,"bool"),"float32"),r.rank===l-1&&(r=Kt(r,-1)),r=st(r,u)),s&&(t=Rs(t,0),r!=null&&(r=Rs(r,0)));let c=[],p,d=n,h=t.shape[0],f=Jn(t),m;r!=null&&(m=Jn(r));for(let y=0;y<h;++y){let x=f[y],A=K(()=>e(x,d));if(r==null)p=A[0],d=A[1];else{let b=K(()=>{let w=m[y],k=fe(Es(w),w),S=ce(L(A[0],w),L(d[0],k)),E=d.map((R,$)=>ce(L(A[1][$],w),L(R,k)));return{output:S,newStates:E}});p=b.output,d=b.newStates}i&&c.push(p)}let g;return i&&(g=on(c,1)),[p,g,d]})}var Xr=class extends lt{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new n2({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new sn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Cr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){y3(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return K(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ge("Constants support is not implemented in RNN yet.");y3(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new sn({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new sn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new sa("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Wt([n,s])):this.states_=[Wt([n,this.cell.stateSize])];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Wt([n,s])):this.states_[0]=Wt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!v.arraysEqual(r.shape,o))throw new q(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>xn(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=v8(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new sn({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof vr){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=qe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new q(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=w8((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=l[0],c=l[1],p=l[2];this.stateful&&this.resetStates(p,s);let d=this.returnSequences?c:u;return this.returnState?[d].concat(p):d})}getInitialState(e){return K(()=>{let t=Wt(e.shape);return t=ke(t,[1,2]),t=hh(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?m3(t,[1,n]):t):this.cell.stateSize>1?[m3(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Xr.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let s=t.cell,r=Ir(s,n);return new e(Object.assign(t,{cell:r}))}};Xr.className="RNN";de.registerClass(Xr);var vh=class extends lt{},e2=class extends vh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bn(this.units,"units"),this.activation=eo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ot(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=gn(e.kernelConstraint),this.recurrentConstraint=gn(e.recurrentConstraint),this.biasConstraint=gn(e.biasConstraint),this.dropout=Yu([1,Ja([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Yu([1,Ja([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=At(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>Es(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>Es(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=Wr(L(e,a),this.kernel.read()):r=Wr(e,this.kernel.read()),this.bias!=null&&(r=_r(r,this.bias.read())),o!=null&&(n=L(n,o));let i=ce(r,Wr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Qa(this.activation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),recurrentInitializer:Vt(this.recurrentInitializer),biasInitializer:Vt(this.biasInitializer),kernelRegularizer:kt(this.kernelRegularizer),recurrentRegularizer:kt(this.recurrentRegularizer),biasRegularizer:kt(this.biasRegularizer),activityRegularizer:kt(this.activityRegularizer),kernelConstraint:mn(this.kernelConstraint),recurrentConstraint:mn(this.recurrentConstraint),biasConstraint:mn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};e2.className="SimpleRNNCell";de.registerClass(e2);var e5=class extends Xr{constructor(e){e.cell=new e2(e),super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};e5.className="SimpleRNN";de.registerClass(e5);var t2=class extends vh{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,bn(this.units,"units"),this.activation=eo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=eo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ot(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=gn(e.kernelConstraint),this.recurrentConstraint=gn(e.recurrentConstraint),this.biasConstraint=gn(e.biasConstraint),this.dropout=Yu([1,Ja([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Yu([1,Ja([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=At(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>Es(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>Es(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=L(e,r[0]));let u=Wr(e,this.kernel.read());this.useBias&&(u=_r(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,a[0]));let c=this.recurrentKernel.read(),[p,d]=Zt(c,[2*this.units,this.units],c.rank-1),h=Wr(s,p),[f,m,g]=Zt(u,3,u.rank-1),[y,x]=Zt(h,2,h.rank-1);o=this.recurrentActivation.apply(ce(f,y)),i=this.recurrentActivation.apply(ce(m,x));let A=Wr(L(i,s),d);l=this.activation.apply(ce(g,A));let b=ce(L(o,s),L(ce(1,$t(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Qa(this.activation),recurrentActivation:Qa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),recurrentInitializer:Vt(this.recurrentInitializer),biasInitializer:Vt(this.biasInitializer),kernelRegularizer:kt(this.kernelRegularizer),recurrentRegularizer:kt(this.recurrentRegularizer),biasRegularizer:kt(this.biasRegularizer),activityRegularizer:kt(this.activityRegularizer),kernelConstraint:mn(this.kernelConstraint),recurrentConstraint:mn(this.recurrentConstraint),biasConstraint:mn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};t2.className="GRUCell";de.registerClass(t2);var t5=class extends Xr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new t2(e),super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};t5.className="GRU";de.registerClass(t5);var wh=class extends vh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bn(this.units,"units"),this.activation=eo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=eo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ot(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=gn(e.kernelConstraint),this.recurrentConstraint=gn(e.recurrentConstraint),this.biasConstraint=gn(e.biasConstraint),this.dropout=Yu([1,Ja([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Yu([1,Ja([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=At(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends ir{apply(i,l){let u=r.apply([a]),c=new U0().apply([a]),p=r.apply([a*2]);return Y4(Y4(u,c),p)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>Es(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>Es(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,u,c;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let p=Wr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,o[0])),p=ce(p,Wr(s,this.recurrentKernel.read())),this.useBias&&(p=_r(p,this.bias.read()));let[d,h,f,m]=Zt(p,4,p.rank-1);i=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(h),u=ce(L(l,r),L(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);let g=L(c,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Qa(this.activation),recurrentActivation:Qa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),recurrentInitializer:Vt(this.recurrentInitializer),biasInitializer:Vt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:kt(this.kernelRegularizer),recurrentRegularizer:kt(this.recurrentRegularizer),biasRegularizer:kt(this.biasRegularizer),activityRegularizer:kt(this.activityRegularizer),kernelConstraint:mn(this.kernelConstraint),recurrentConstraint:mn(this.recurrentConstraint),biasConstraint:mn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};wh.className="LSTMCell";de.registerClass(wh);var n5=class extends Xr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wh(e),super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};n5.className="LSTM";de.registerClass(n5);var n2=class extends vh{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return K(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){y3(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{Li(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return Object.assign({},e,s)}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(Ir(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return A3(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}CA(t)}};n2.className="StackedRNNCells";de.registerClass(n2);function to(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):Pw(t(),n),i=()=>mh(o,t,s);return!r||r<=1?xn(i().clone()):Array(r).fill(void 0).map(i).map(u=>xn(u.clone()))}var JU=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]]);return n},k8=class extends Xr{constructor(e){if(e.unroll)throw new Ge("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ge("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new sn({ndim:5})]}call(e,t){return K(()=>{if(this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return K(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Wt(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new sa("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Wt(r)):this.states_=[Wt(r)];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Wt(r)):this.states_[0]=Wt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!v.arraysEqual(i.shape,l))throw new q(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>xn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],u=e[i?4:3],c=Sr(l,s[0],r,a[0],o[0]),p=Sr(u,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,p]:[c,p,n]]}};k8.className="ConvRNN2D";var s2=class extends wh{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t})),this.filters=t,bn(this.filters,"filters"),this.kernelSize=Vu(n,2,"kernelSize"),this.kernelSize.forEach(i=>bn(i,"kernelSize")),this.strides=Vu(s||1,2,"strides"),this.strides.forEach(i=>bn(i,"strides")),this.padding=r||"valid",Ks(this.padding),this.dataFormat=a||"channelsLast",Yt(this.dataFormat),this.dilationRate=Vu(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>bn(i,"dilationRate"))}build(e){var t;e=At(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;i=new(t=class extends ir{apply(p,d){let h=l.apply([u]),f=Is([u]),m=l.apply([u*2]);return AA([h,f,m])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return K(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>Es(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(W,ee,Q)=>!ee||!ee[Q]?W:L(ee[Q],W),u=l(s,i,0),c=l(s,i,1),p=l(s,i,2),d=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>Es(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),y=l(r,h,3),x=3,[A,b,w,k]=Zt(this.kernel.read(),o,x),[S,E,R,$]=this.useBias?Zt(this.bias.read(),o):[null,null,null,null];u=this.inputConv(u,A,S,this.padding),c=this.inputConv(c,b,E,this.padding),p=this.inputConv(p,w,R,this.padding),d=this.inputConv(d,k,$,this.padding);let[_,D,C,F]=Zt(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,_),m=this.recurrentConv(m,D),g=this.recurrentConv(g,C),y=this.recurrentConv(y,F);let V=this.recurrentActivation.apply(ce(u,f)),j=this.recurrentActivation.apply(ce(c,m)),z=ce(L(j,a),L(V,this.activation.apply(ce(p,g)))),Z=L(this.recurrentActivation.apply(ce(d,y)),this.activation.apply(z));return[Z,Z,z]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=JU(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){let r=ca(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?_r(r,n,this.dataFormat):r}recurrentConv(e,t){return ca(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};s2.className="ConvLSTM2DCell";de.registerClass(s2);var s5=class extends k8{constructor(e){let t=new s2(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};s5.className="ConvLSTM2D";de.registerClass(s5);var r2=class extends lt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return mh(()=>Pw(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};r2.className="Dropout";de.registerClass(r2);var r5=class extends r2{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};r5.className="SpatialDropout1D";de.registerClass(r5);var a5=class extends lt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,bn(this.units,"units"),this.activation=eo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gn(e.kernelConstraint),this.biasConstraint=gn(e.biasConstraint),this.kernelRegularizer=Mt(e.kernelRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=At(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=At(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e),s=Tw(this.activation.getClassName()),r;return s!=null?r=Wr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Wr(n,this.kernel.read()),this.bias!=null&&(r=_r(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Qa(this.activation),useBias:this.useBias,kernelInitializer:Vt(this.kernelInitializer),biasInitializer:Vt(this.biasInitializer),kernelRegularizer:kt(this.kernelRegularizer),biasRegularizer:kt(this.biasRegularizer),activityRegularizer:kt(this.activityRegularizer),kernelConstraint:mn(this.kernelConstraint),biasConstraint:mn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};a5.className="Dense";de.registerClass(a5);var o5=class extends lt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=At(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ga(e,1)]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=st(n,s)}return pV(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};o5.className="Flatten";de.registerClass(o5);var i5=class extends lt{constructor(e){super(e),this.supportsMasking=!0,this.activation=eo(e.activation)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Qa(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};i5.className="Activation";de.registerClass(i5);var l5=class extends lt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return K(()=>(e=qe(e),cV(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};l5.className="RepeatVector";de.registerClass(l5);var u5=class extends lt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new q("Can only specifiy one unknown dimension.");else r*=l}let o=Ga(e);if(a!==null){if(r===0||o%r!==0)throw new q(n);s[a]=o/r}else if(o!==r)throw new q(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return U(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};u5.className="Reshape";de.registerClass(u5);var c5=class extends lt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Cr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new sn({ndim:this.dims.length+1})]}computeOutputShape(e){e=At(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return st(qe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};c5.className="Permute";de.registerClass(c5);var d5=class extends lt{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=qe(e),s=-1;return yp(Ki(n,this.maskValue),s)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e),s=-1,r=!0,a=yp(Ki(n,this.maskValue),s,r);return L(n,he(a,n.dtype))})}};d5.className="Masking";de.registerClass(d5);var p5=class extends lt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(_t(e.inputLength))}this.inputDim=e.inputDim,bn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,bn(this.outputDim,"outputDim"),this.embeddingsInitializer=Ot(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Mt(e.embeddingsRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.embeddingsConstraint=gn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return K(()=>this.maskZero?(e=qe(e),Ki(e,it(e))):null)}computeOutputShape(e){if(e=At(e),this.inputLength==null)return[...e,this.outputDim];let t=_t(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e);n.dtype!=="int32"&&(n=W0(n,"int32"));let s=$w(this.embeddings.read(),U(n,[n.size]));return U(s,At(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Vt(this.embeddingsInitializer),embeddingsRegularizer:kt(this.embeddingsRegularizer),activityRegularizer:kt(this.activityRegularizer),embeddingsConstraint:mn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};p5.className="Embedding";de.registerClass(p5);var Jl=class extends lt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ge}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[At(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Ua(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Ua(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return K(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Ja(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=hh(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let u=i.shape,c=u[0],p=u.slice(1).concat([c]),d=U(i,[c].concat(Ga(u.slice(1))));d=st(d,[1,0]),d=U(d,p),n.push(d),r=!0}else if(l>1){let u=Cr(1,l).concat([0]);n.push(st(i,u)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,u=i[l-1],c=[u].concat(i.slice(0,i.length-1));a=U(st(U(a,[-1,u]),[1,0]),c)}else if(o>1){let i=[o-1].concat(Cr(0,o-1));a=st(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Ua(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return K(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Kt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=sr(n,t[s]);return n})}},h5=class extends Jl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ce(t,e[n]);return t})}};h5.className="Add";de.registerClass(h5);var f5=class extends Jl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};f5.className="Multiply";de.registerClass(f5);var m5=class extends Jl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ce(t,e[n]);return L(1/e.length,t)})}};m5.className="Average";de.registerClass(m5);var g5=class extends Jl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qr(t,e[n]);return t})}};g5.className="Maximum";de.registerClass(g5);var y5=class extends Jl{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Vc(t,e[n]);return t})}};y5.className="Minimum";de.registerClass(y5);var A5=class extends Jl{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(v.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return K(()=>AA(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return K(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(he(Es(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Kt(t[a],-1)):s.push(t[a]);let r=It(s,this.axis);return u0(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};A5.className="Concatenate";de.registerClass(A5);function qd(e,t){for(;e<0;)e+=t;return e}function QU(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Ge("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Ge("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return K(()=>{let o;if(s>r){o=s-r;let l=[];for(let u=0;u<o;++u)l.push(1);t=U(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let u=0;u<o;++u)l.push(1);e=U(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=ke(L(e,t),a[0]):i=ke(L(st(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,u=a[1]===t.shape.length-1;i=Ye(e,t,l,u)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let u=[];for(let c=l;c<l+o;++c)u.push(c);i=Qe(i,u)}return i.shape.length===1&&(i=Kt(i,1)),i})}var x5=class extends Jl{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ge("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new q(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>qd(r,e[a].shape.length)):s=[qd(this.axes,t.shape.length),qd(this.axes,n.shape.length)],this.normalize&&(t=ym(t,s[0]),n=ym(n,s[1])),QU(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[qd(this.axes,e.length),qd(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ge("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};x5.className="Dot";de.registerClass(x5);var b5=class extends lt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e);return mh(()=>ce(V0(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};b5.className="GaussianNoise";de.registerClass(b5);var v5=class extends lt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=qe(e);return this.rate>0&&this.rate<1?mh(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return L(n,V0(n.shape,1,r))},()=>n,t.training||!1):n})}};v5.className="GaussianDropout";de.registerClass(v5);var w5=class extends lt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||qe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return mh(()=>{let r=qe(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=ti(Uc(n),this.rate);l=W0(l,"float32");let u=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-u*i*this.rate,p=ce(L(r,l),L(ce(l,-1),i));return ce(L(p,u),c)},()=>qe(e),t.training||!1)}return e})}};w5.className="AlphaDropout";de.registerClass(w5);function vp(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=N6(e,t,n,s,r,a);else if(e.rank===3)o=E6(e,t,n,s,r,a);else if(e.rank===4)o=R6(e,t,n,s,r,a);else throw new Ge(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function eG(e,t,n,s,r=.001){return K(()=>{let a=A0(e,s),o=a.mean,i=a.variance;return[vp(e,o,i,n,t,r),o,i]})}function tG(e,t,n,s,r=.001){return K(()=>{let a=A0(e,s),o=a.mean,i=a.variance,l=[];for(let f of Cr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let u=U(o,l),c=U(i,l),p=t==null?null:U(t,l),d=n==null?null:U(n,l);return[vp(e,u,c,d,p,r),o,i]})}function nG(e,t,n,s,r=.001){return v.arraysEqual(s.slice().sort(),Cr(0,e.rank-1))?eG(e,t,n,s,r):tG(e,t,n,s,r)}var k5=class extends lt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ot(e.betaInitializer||"zeros"),this.gammaInitializer=Ot(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ot(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ot(e.movingVarianceInitializer||"ones"),this.betaConstraint=gn(e.betaConstraint),this.gammaConstraint=gn(e.gammaConstraint),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer)}build(e){e=At(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new sn({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training,s=qe(e),r=s.shape,a=r.length,o=Cr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=Yi(1,a);l[i]=r[i];let u=o.slice();u.sort();let c=!v.arraysEqual(u,Cr(0,a).slice(0,a-1)),p=()=>{if(c){let y=U(this.movingMean.read(),l),x=U(this.movingVariance.read(),l),A=this.center?U(this.beta.read(),l):null,b=this.scale?U(this.gamma.read(),l):null;return vp(s,y,x,A,b,this.epsilon)}else return vp(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,f]=nG(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,x,A)=>{K(()=>{let b=1-A,w=y.read(),k=L(fe(w,x),b);y.write(fe(w,k))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Vt(this.betaInitializer),gammaInitializer:Vt(this.gammaInitializer),movingMeanInitializer:Vt(this.movingMeanInitializer),movingVarianceInitializer:Vt(this.movingVarianceInitializer),betaRegularizer:kt(this.betaRegularizer),gammaRegularizer:kt(this.gammaRegularizer),betaConstraint:mn(this.betaConstraint),gammaConstraint:mn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};k5.className="BatchNormalization";de.registerClass(k5);var I5=class extends lt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ot(e.betaInitializer||"zeros"),this.gammaInitializer=Ot(e.gammaInitializer||"ones"),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=At(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Ua(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=qe(e),s=n.shape,r=s.length;return K(()=>{let{mean:o,variance:i}=A0(n,this.axis,!0),l=Yi(1,r);for(let f of this.axis)l[f]=s[f];let u=f=>f!=null&&f.shape.length!==r?U(f,l):f,c=this.scale?u(this.gamma.read()):null,p=this.center?u(this.beta.read()):null,d=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(d.push(s[f]),h.push(1)):(d.push(1),h.push(s[f]));return o=Vs(o,d),i=Vs(i,d),c!=null&&(c=Vs(c,h)),p!=null&&(p=Vs(p,h)),vp(n,o,i,p,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Vt(this.betaInitializer),gammaInitializer:Vt(this.gammaInitializer),betaRegularizer:kt(this.betaRegularizer),gammaRegularizer:kt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};I5.className="LayerNormalization";de.registerClass(I5);function sG(e,t,n){return K(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Tr()),n!=="channelsLast"&&n!=="channelsFirst")throw new q(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Xs(e,s)})}var S5=class extends lt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Tr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new sn({ndim:4})]}computeOutputShape(e){e=At(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return K(()=>sG(qe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};S5.className="ZeroPadding2D";de.registerClass(S5);function a2(e,t,n,s,r,a){return K(()=>{Yt(r),Ew(a),Ks(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Tr()),a==null&&(a="max"),e=jA(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=oh(e,t,n,i):o=Qp(e,t,n,i),r==="channelsFirst"&&(o=st(o,[0,3,1,2])),o})}function I8(e,t,n,s,r,a){return K(()=>{Yt(r),Ew(a),Ks(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Tr()),a==null&&(a="max"),e=x8(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=Yy(e,t,n,i):o=$y(e,t,n,i),r==="channelsFirst"&&(o=st(o,[0,4,1,2,3])),o})}var S8=class extends lt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(bn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Ks(this.padding),this.inputSpec=[new sn({ndim:3})]}computeOutputShape(e){e=At(e);let t=Sr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return K(()=>{this.invokeCallHook(e,t),e=hh(qe(e),2);let n=this.poolingFunction(qe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Qe(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},C5=class extends S8{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Yt(r),Ks(s),a2(e,t,n,s,r,"max")}};C5.className="MaxPooling1D";de.registerClass(C5);var T5=class extends S8{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Yt(r),Ks(s),a2(e,t,n,s,r,"avg")}};T5.className="AveragePooling1D";de.registerClass(T5);var C8=class extends lt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];bn(this.poolSize,"poolSize"),bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Yt(this.dataFormat),Ks(this.padding),this.inputSpec=[new sn({ndim:4})]}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Sr(t,this.poolSize[0],this.padding,this.strides[0]),n=Sr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(qe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},N5=class extends C8{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Yt(r),Ks(s),a2(e,t,n,s,r,"max")}};N5.className="MaxPooling2D";de.registerClass(N5);var E5=class extends C8{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Yt(r),Ks(s),a2(e,t,n,s,r,"avg")}};E5.className="AveragePooling2D";de.registerClass(E5);var T8=class extends lt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];bn(this.poolSize,"poolSize"),bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Yt(this.dataFormat),Ks(this.padding),this.inputSpec=[new sn({ndim:5})]}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Sr(t,this.poolSize[0],this.padding,this.strides[0]),n=Sr(n,this.poolSize[1],this.padding,this.strides[1]),s=Sr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(qe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},R5=class extends T8{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Yt(r),Ks(s),I8(e,t,n,s,r,"max")}};R5.className="MaxPooling3D";de.registerClass(R5);var _5=class extends T8{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Yt(r),Ks(s),I8(e,t,n,s,r,"avg")}};_5.className="AveragePooling3D";de.registerClass(_5);var N8=class extends lt{constructor(e){super(e),this.inputSpec=[new sn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ge}},D5=class extends N8{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=qe(e);return Bt(n,1)})}};D5.className="GlobalAveragePooling1D";de.registerClass(D5);var $5=class extends N8{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=qe(e);return fn(n,1)})}};$5.className="GlobalMaxPooling1D";de.registerClass($5);var E8=class extends lt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Yt(this.dataFormat),this.inputSpec=[new sn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ge}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},P5=class extends E8{call(e,t){return K(()=>{let n=qe(e);return this.dataFormat==="channelsLast"?Bt(n,[1,2]):Bt(n,[2,3])})}};P5.className="GlobalAveragePooling2D";de.registerClass(P5);var F5=class extends E8{call(e,t){return K(()=>{let n=qe(e);return this.dataFormat==="channelsLast"?fn(n,[1,2]):fn(n,[2,3])})}};F5.className="GlobalMaxPooling2D";de.registerClass(F5);var R8=class extends lt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=Ir(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},O5=class extends R8{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=At(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=At(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return K(()=>(e=qe(e),w8((a,o)=>[qe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};O5.className="TimeDistributed";de.registerClass(O5);function rG(e){Zl(aV,"BidirectionalMergeMode",e)}var aG="concat",M5=class extends R8{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ir(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Ir(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?aG:e.mergeMode,rG(this.mergeMode),e.weights)throw new Ge("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):us(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=v8(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let u=n.map(c=>new sn({shape:c.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),o.push(...u)}if(s!=null)throw new Ge("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof vr;for(let l of a)if(l instanceof vr!==i)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Rs(r,1));let o;return this.mergeMode==="concat"?o=AA([s,r]):this.mergeMode==="sum"?o=ce(s,r):this.mergeMode==="ave"?o=L(.5,ce(s,r)):this.mergeMode==="mul"?o=L(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Li(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Li(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Ir(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ge("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};M5.className="Bidirectional";de.registerClass(M5);function oG(e){return new jc(e)}function iG(e){return new UA(e)}function lG(e){return new BA(e)}function uG(e){return new WA(e)}function cG(e){return new VA(e)}function dG(e){return new HA(e)}function pG(e){return new GA(e)}function hG(e){return new Q0(e)}function fG(e){return new xh(e)}function mG(e){return new XA(e)}function gG(e){return new bh(e)}function yG(e){return new KA(e)}function AG(e){return new ZA(e)}function xG(e){return new YA(e)}function bG(e){return new JA(e)}function vG(e){return new QA(e)}function wG(e){return new i5(e)}function kG(e){return new a5(e)}function IG(e){return new r2(e)}function SG(e){return new r5(e)}function CG(e){return new o5(e)}function TG(e){return new l5(e)}function NG(e){return new u5(e)}function EG(e){return new c5(e)}function RG(e){return new p5(e)}function _G(e){return new h5(e)}function DG(e){return new m5(e)}function $G(e){return new A5(e)}function PG(e){return new g5(e)}function FG(e){return new y5(e)}function OG(e){return new f5(e)}function MG(e){return new x5(e)}function zG(e){return new k5(e)}function LG(e){return new I5(e)}function BG(e){return new S5(e)}function z5(e){return new T5(e)}function WG(e){return z5(e)}function VG(e){return z5(e)}function L5(e){return new E5(e)}function UG(e){return L5(e)}function GG(e){return L5(e)}function B5(e){return new _5(e)}function HG(e){return B5(e)}function jG(e){return B5(e)}function qG(e){return new D5(e)}function XG(e){return new P5(e)}function _8(e){return new $5(e)}function D8(e){return new F5(e)}function $8(e){return new C5(e)}function P8(e){return new N5(e)}function KG(e){return new R5(e)}function ZG(e){return new t5(e)}function YG(e){return new t2(e)}function JG(e){return new n5(e)}function QG(e){return new wh(e)}function eH(e){return new e5(e)}function tH(e){return new e2(e)}function nH(e){return new s5(e)}function sH(e){return new s2(e)}function rH(e){return new Xr(e)}function aH(e){return new n2(e)}function oH(e){return new M5(e)}function iH(e){return new O5(e)}var lH=_8,uH=D8,cH=$8,dH=P8;function pH(e){return new b5(e)}function hH(e){return new v5(e)}function fH(e){return new w5(e)}function mH(e){return new d5(e)}var F8={};Ve(F8,{MAPE:()=>CH,MSE:()=>EH,binaryAccuracy:()=>gH,binaryCrossentropy:()=>yH,categoricalAccuracy:()=>xH,categoricalCrossentropy:()=>bH,cosineProximity:()=>kH,mape:()=>TH,meanAbsoluteError:()=>IH,meanAbsolutePercentageError:()=>SH,meanSquaredError:()=>NH,mse:()=>RH,precision:()=>vH,recall:()=>wH,sparseCategoricalAccuracy:()=>AH});function gH(e,t){return $A(e,t)}function yH(e,t){return Kw(e,t)}function AH(e,t){return Zw(e,t)}function xH(e,t){return PA(e,t)}function bH(e,t){return FA(e,t)}function vH(e,t){return Xw(e,t)}function wH(e,t){return uU(e,t)}function kH(e,t){return DA(e,t)}function IH(e,t){return Y0(e,t)}function SH(e,t){return qc(e,t)}function CH(e,t){return qc(e,t)}function TH(e,t){return qc(e,t)}function NH(e,t){return Yl(e,t)}function EH(e,t){return Yl(e,t)}function RH(e,t){return Yl(e,t)}var O8={};Ve(O8,{modelFromJSON:()=>LU});var M8={};Ve(M8,{l1:()=>DH,l1l2:()=>_H,l2:()=>$H});function _H(e){return new yh(e)}function DH(e){return qU(e)}function $H(e){return XU(e)}var z8=class extends Ju{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof la))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Mf(e,t){return e<t}function mv(e,t){return e>t}var L8=class extends z8{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Ge("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Mf:this.mode==="max"?this.monitorFunc=mv:this.monitor.indexOf("acc")!==-1?this.monitorFunc=mv:this.monitorFunc=Mf,this.monitorFunc===Mf&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Mf?1/0:-1/0}async onEpochEnd(e,t){await Ma(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function PH(e){return new L8(e)}var FH={earlyStopping:PH},OH=Y();OH.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Qs;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Qs||(Qs={}));var gv;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(gv||(gv={}));var W5={};function MH(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};W5[e]=n}function B8(e){return W5[e]}function zH(e){delete W5[e]}function I(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Kn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(d=>Kn(d,n,s,r));let u=Kn(t.inputNames.slice(i)[0],n,s,r),c=u.dataSync();return a.type==="number"?c[0]:v.toNestedArray(u.shape,c)}let o=t.attrParams[e];return o&&o.value}function Kn(e,t,n,s){let[r,a]=ws(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[wm(r,i)]);return o!==void 0?t[wm(r,o)][a]:void 0}function LH(e,t,n){return t[wm(e,n.currentContextId)]}function Lr(e,t){let[n,s,r]=ws(e);return[wm(n,t&&t.currentContextId),s,r]}function wm(e,t){return t?`${e}-${t}`:e}function ws(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function qf(e,t,n){let s=I("pad",e,t,n);if(s==="explicit"){s=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function aa(e){return e.kept?e:Yn(e)}var W8={};Ve(W8,{json:()=>BH});var BH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V8={};Ve(V8,{json:()=>WH});var WH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U8={};Ve(U8,{json:()=>VH});var VH=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],G8={};Ve(G8,{json:()=>UH});var UH=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],H8={};Ve(H8,{json:()=>GH});var GH=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],j8={};Ve(j8,{json:()=>HH});var HH=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],q8={};Ve(q8,{json:()=>jH});var jH=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],X8={};Ve(X8,{json:()=>qH});var qH=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],K8={};Ve(K8,{json:()=>XH});var XH=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Z8={};Ve(Z8,{json:()=>KH});var KH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Y8={};Ve(Y8,{json:()=>ZH});var ZH=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],J8={};Ve(J8,{json:()=>YH});var YH=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Q8={};Ve(Q8,{json:()=>JH});var JH=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],ek={};Ve(ek,{json:()=>QH});var QH=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tk={};Ve(tk,{json:()=>ej});var ej=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],nk={};Ve(nk,{json:()=>tj});var tj=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],sk={};Ve(sk,{json:()=>nj});var nj=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],rk={};Ve(rk,{json:()=>sj});var sj=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ak={};Ve(ak,{json:()=>rj});var rj=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],yv=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[W8,V8,U8,G8,H8,j8,q8,X8,K8,Z8,Y8,J8,Q8,ek,tk,nk,sk,rk,ak],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],u={},c={};t!=null&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let p=Object.keys(o);p.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[x,,A]=Lr(g),b=o[x];if(b.outputs!=null){let w=b.outputs.indexOf(A);if(w!==-1){let k=`${x}:${w}`;m.inputNames[y]=k}}m.inputs.push(b),b.children.push(m)})}),Object.keys(c).length===0?p.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(c).forEach(f=>{let[m]=Lr(f),g=o[m];g!=null&&(g.signatureKey=c[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=Lr(f),g=o[m];g&&(g.signatureKey=u[f],i.push(g))}):i=s;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=B8(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=I3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=I3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=_3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=_3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=C3(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=C3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=R3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=R3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=S3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=S3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=$3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=$3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=E3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=E3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=D3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=D3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=T3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=T3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=N3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=N3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=Av(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Av(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((c,p)=>(c[p.name]=this.mapNode(p),p.op==="Const"&&s.push(c[p.name]),c),{}));let a=[],o=[];e.signature.inputArg.forEach(c=>{let[p]=Lr(c.name),d={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:V5(c.type),type:"dtype"}},children:[]};d.signatureKey=c.name,a.push(d),r[p]=d}),Object.keys(r).forEach(c=>{let p=r[c];p.inputNames.forEach((d,h)=>{let[f,,m]=Lr(d),g=r[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let x=`${f}:${y}`;p.inputNames[h]=x}}p.inputs.push(g),g.children.push(p)})});let l=e.ret;e.signature.outputArg.forEach(c=>{let[p,d]=Lr(l[c.name]),h=r[p];h!=null&&(h.defaultOutput=d,o.push(h))});let u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function aj(e){let t=Y().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function ok(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):aj(e);return t?n:n.toLowerCase()}function I3(e,t,n,s=!1){let r=e[t];return r!=null?ok(r.s,s):n}function S3(e,t,n){let s=e[t];return s?s.b:n}function C3(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function V5(e){switch(typeof e=="string"&&(e=Qs[e]),e){case Qs.DT_FLOAT:case Qs.DT_HALF:return"float32";case Qs.DT_INT32:case Qs.DT_INT64:case Qs.DT_INT8:case Qs.DT_UINT8:return"int32";case Qs.DT_BOOL:return"bool";case Qs.DT_DOUBLE:return"float32";case Qs.DT_STRING:return"string";default:return null}}function Av(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function T3(e,t,n){let s=e[t];return s&&s.type?V5(s.type):n}function N3(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>V5(r)):n}function ik(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function E3(e,t,n){let s=e[t];return s&&s.shape?ik(s.shape):n}function R3(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function _3(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>ok(a,s)):n}function D3(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>ik(r)):n}function $3(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var oj=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Kn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Kn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return C3(this.node.rawAttrs,e,t);if(n.s!=null)return I3(this.node.rawAttrs,e,t);if(n.b!=null)return S3(this.node.rawAttrs,e,t);if(n.shape!=null)return E3(this.node.rawAttrs,e,t);if(n.type!=null)return T3(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return R3(this.node.rawAttrs,e,t);if(n.list.s!=null)return _3(this.node.rawAttrs,e,t);if(n.list.shape!=null)return D3(this.node.rawAttrs,e,t);if(n.list.b!=null)return $3(this.node.rawAttrs,e,t);if(n.list.type!=null)return N3(this.node.rawAttrs,e,t)}return t}},ij=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ce(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[l0(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[ql(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[L(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[pe(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[By(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[Oc(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[fe(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[Vc(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[qr(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[pa(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[N0(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},lj=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[tn(I("x",e,t,n))];case"Acos":return[Iy(I("x",e,t,n))];case"Acosh":return[Sy(I("x",e,t,n))];case"Asin":return[Ty(I("x",e,t,n))];case"Asinh":return[Ny(I("x",e,t,n))];case"Atan":return[Ey(I("x",e,t,n))];case"Atan2":return[Ry(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[_y(I("x",e,t,n))];case"Ceil":return[Fy(I("x",e,t,n))];case"Complex":return[ua(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[th(I("x",e,t,n))];case"Cosh":return[p0(I("x",e,t,n))];case"Elu":return[Lc(I("x",e,t,n))];case"Erf":return[Wy(I("x",e,t,n))];case"Exp":return[Ts(I("x",e,t,n))];case"Expm1":return[Hy(I("x",e,t,n))];case"Floor":return[Wc(I("x",e,t,n))];case"Log":return[Ns(I("x",e,t,n))];case"Log1p":return[rh(I("x",e,t,n))];case"Imag":return[Yp(I("x",e,t,n))];case"Neg":return[$t(I("x",e,t,n))];case"Reciprocal":return[tA(I("x",e,t,n))];case"Real":return[Xu(I("x",e,t,n))];case"Relu":return[Rr(I("x",e,t,n))];case"Round":return[v0(I("x",e,t,n))];case"Selu":return[k0(I("x",e,t,n))];case"Sigmoid":return[Sn(I("x",e,t,n))];case"Sin":return[I0(I("x",e,t,n))];case"Sign":return[sA(I("x",e,t,n))];case"Sinh":return[S0(I("x",e,t,n))];case"Softplus":return[jl(I("x",e,t,n))];case"Sqrt":return[Cn(I("x",e,t,n))];case"Square":return[bt(I("x",e,t,n))];case"Tanh":return[Hi(I("x",e,t,n))];case"Tan":return[oA(I("x",e,t,n))];case"ClipByValue":return[ds(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[b0(I("x",e,t,n))];case"Rsqrt":return[w0(Kn(e.inputNames[0],t,n))];case"Prod":return[x0(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[sh(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[lh(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[qy(Kn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function tr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];v.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function xv(e){return!(typeof e=="number"||e.some(t=>t<0))}function Xd(e,t,n){let s=P3(e,n),r=!xv(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=P3(a.shape,s)}),!xv(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function P3(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var uj=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ce(0),xn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),tr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,xn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return gt([],[0].concat(this.elementShape));let n=this.readMany(e);return tr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),on(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return gt([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return tr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),It(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Jn(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];K(()=>{t=U(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],u=[0,l,0],c=[1,e[i],r];a[i]=U(Oe(t,u,c),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},ec=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);tr(t,r.shape,"TensorList shape mismatch: "),xn(r)}),this.idTensor=Ce(0),this.maxNumElements=s,xn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ec([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);tr(e,this.elementShape,"TensorList shape mismatch: ");let s=Xd(this.elementShape,this.tensors,e);return K(()=>{let r=this.tensors.map(a=>U(a,s));return on(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Xd(this.elementShape,this.tensors,e),s=this.tensors.pop();return tr(s.shape,e,"TensorList shape mismatch: "),U(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(tr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");xn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new ec([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);tr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=Xd(this.elementShape,this.tensors,t);return U(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);tr(this.elementShape,t.shape,"TensorList shape mismatch: "),xn(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);tr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=Xd(this.elementShape,this.tensors,n);return e.length===0?gt([],[0].concat(s)):K(()=>{let r=e.map(a=>U(this.tensors[a],s));return on(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);tr(this.elementShape,t,"TensorList shape mismatch: ");let n=Xd(this.elementShape,this.tensors,t);return this.size()===0?gt([],[0].concat(n)):K(()=>{let s=this.tensors.map(r=>U(r,n));return It(s,0)})}};function cj(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);tr(r,t,"TensorList shape mismatch: ");let a=Jn(e);return new ec(a,t,s)}function dj(e,t,n){return new ec([],e,t,n)}function pj(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new ec([],n,e.dtype,s),o=Jn(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function hj(e,t,n){let s=0,r=t.map(c=>(s+=c,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=P3(a,n),i=s===0?0:e.size/s,l=K(()=>{let c=[];e=U(e,[1,s,i]);for(let p=0;p<t.length;++p){let d=p===0?0:r[p-1],h=[0,d,0],f=[1,t[p],i];c[p]=U(Oe(e,h,f),o)}return e.dispose(),c}),u=new ec([],n,e.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var fj=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),a=I("cond",e,t,n),o=I("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=I("body",e,t,n),r=I("cond",e,t,n),a=I("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(c=>c.id),l=await o[0].data();o.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=a;for(;l[0];){let c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let p=u.map(h=>h.id);c.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return u}case"LoopCond":{let s=I("pred",e,t,n);return[aa(s)]}case"Switch":{let s=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=aa(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Kn(r,t,n)!==void 0);if(s){let r=Kn(s,t,n);return[aa(r)]}return}case"Enter":{let s=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(s),[aa(r)]}case"Exit":{let s=I("tensor",e,t,n);return n.exitFrame(),[aa(s)]}case"NextIteration":{let s=I("tensor",e,t,n);return n.nextIteration(),[aa(s)]}case"TensorArrayV3":{let s=I("size",e,t,n),r=I("dtype",e,t,n),a=I("elementShape",e,t,n),o=I("dynamicSize",e,t,n),i=I("clearAfterRead",e,t,n),l=I("identicalElementShapes",e,t,n),u=I("name",e,t,n),c=new uj(u,r,s,a,l,o,i);return n.addTensorArray(c),[c.idTensor,Ce(1)]}case"TensorArrayWriteV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=I("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),a=I("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ce(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=I("indices",e,t,n),r=I("tensor",e,t,n),a=I("elementShape",e,t,n),o=I("numElements",e,t,n),i=pj(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=I("elementShape",e,t,n),r=I("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=I(a,e,t,n),i=dj(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=I("tensorListId",e,t,n),r=I("indices",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=I("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=cj(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let s=I("tensorListId",e,t,n),r=n.getTensorList(s.id),a=I("dtype",e,t,n),o=I("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=I("tensorListId",e,t,n),r=I("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("lengths",e,t,n),o=hj(s,a,r);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{let s=I("tensorListId",e,t,n),r=n.getTensorList(s.id);return[Ce(r.size(),"int32")]}case"TensorListResize":{let s=I("tensorListId",e,t,n),r=I("size",e,t,n),o=n.getTensorList(s.id).resize(r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function bv(e,t,n){let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",u=I("numArgs",e,t,n);if(a){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=I("strides",e,t,n),p=qf(e,t,n),d=I("dataFormat",e,t,n).toUpperCase(),h=I("dilations",e,t,n),[f,m]=I("args",e,t,n);o&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,n);return{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var mj=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=I("stride",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilation",e,t,n);return[c0(I("x",e,t,n),I("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=I("strides",e,t,n),r=qf(e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[ca(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=bv(e,t,n);return[Ya.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=bv(e,t,n);return[Ya.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=I("outputShape",e,t,n),r=I("strides",e,t,n),a=qf(e,t,n);return[d0(I("x",e,t,n),I("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=I("strides",e,t,n),r=qf(e,t,n),a=I("dilations",e,t,n),o=I("dataFormat",e,t,n).toUpperCase();return[zc(I("input",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[My(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Qp(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[oh(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n),o=I("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Y6(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[$y(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Yy(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dilations",e,t,n),o=s[1],i=s[2],l=a[1],u=a[2];return[Ly(I("x",e,t,n),I("filter",e,t,n),[o,i],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},gj=(e,t,n)=>{switch(e.op){case"Fill":{let s=I("shape",e,t,n),r=I("dtype",e,t,n),a=I("value",e,t,n);return[Bc(s,a,r)]}case"LinSpace":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("num",e,t,n);return[j6(s,r,a)]}case"Multinomial":{let s=I("logits",e,t,n),r=I("numSamples",e,t,n),a=I("seed",e,t,n);return[J6(s,r,a)]}case"OneHot":{let s=I("indices",e,t,n),r=I("depth",e,t,n),a=I("onValue",e,t,n),o=I("offValue",e,t,n);return[qu(s,r,a,o)]}case"Ones":return[Is(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[Es(I("x",e,t,n))];case"RandomUniform":return[Uc(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("step",e,t,n);return[Ku(s,r,a,I("dtype",e,t,n))]}case"TruncatedNormal":{let s=I("shape",e,t,n),r=I("mean",e,t,n),a=I("stdDev",e,t,n),o=I("seed",e,t,n);return[E0(s,r,a,I("dtype",e,t,n),o)]}case"Zeros":return[Wt(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[it(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Xg(e,t,n){let s=I("boxes",e,t,n),r=I("scores",e,t,n),a=I("maxOutputSize",e,t,n),o=I("iouThreshold",e,t,n),i=I("scoreThreshold",e,t,n),l=I("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var yj=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=Xg(e,t,n),u=await Se.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=Xg(e,t,n),l=I("padToMaxOutputSize",e,t,n),u=await Se.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=Xg(e,t,n);return[await Se.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=he(I("condition",e,t,n),"bool"),r=[await uA(s)];return s.dispose(),r}case"ListDiff":return tw(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},Aj=(e,t,n)=>{switch(e.op){case"LowerBound":{let s=I("sortedSequence",e,t,n),r=I("values",e,t,n);return[Z6(s,r)]}case"TopKV2":{let s=I("x",e,t,n),r=I("k",e,t,n),a=I("sorted",e,t,n),o=iA(s,r,a);return[o.values,o.indices]}case"UpperBound":{let s=I("sortedSequence",e,t,n),r=I("values",e,t,n);return[nw(s,r)]}case"Unique":{let s=I("x",e,t,n),r=pm(s);return[r.values,r.indices]}case"UniqueV2":{let s=I("x",e,t,n),r=I("axis",e,t,n),a=pm(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},xj=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=I("default",e,t,n);return[Kn(e.name,t,n)||s];case"Placeholder":return[Kn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=I("x",e,t,n);return[aa(u)]}case"IdentityN":return I("x",e,t,n).map(u=>aa(u));case"Snapshot":let r=I("x",e,t,n);return[aa(r)];case"Shape":return[Dt(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(u=>Dt(u.shape));case"Size":return[Ce(I("x",e,t,n).size,"int32")];case"Rank":return[Ce(I("x",e,t,n).rank,"int32")];case"NoOp":return[Ce(1)];case"Print":let a=I("x",e,t,n),o=I("data",e,t,n),i=I("message",e,t,n),l=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},bj=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ce(0),this.tensorMap=new Map,xn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),K(()=>{let s=Jn(t),r=n.length,a=s.length;v.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];xn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return K(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return on(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},vj=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=I("keyDType",e,t,n),a=I("valueDType",e,t,n),o=new bj(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=I("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wj=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[Se.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[Se.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=I("image",e,t,n),r=I("boxes",e,t,n),a=I("boxInd",e,t,n),o=I("cropSize",e,t,n),i=I("method",e,t,n),l=I("extrapolationValue",e,t,n);return[Se.cropAndResize(s,r,a,o,i,l)]}case"ImageProjectiveTransformV3":{let s=I("images",e,t,n),r=I("transforms",e,t,n),a=I("outputShape",e,t,n),o=I("fillValue",e,t,n),i=I("interpolation",e,t,n),l=I("fillMode",e,t,n);return[Se.transform(s,r,i.toLowerCase(),l.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},kj=(e,t,n)=>{switch(e.op){case"Equal":return[Cs(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[Ki(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[fs(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[ti(I("a",e,t,n),I("b",e,t,n))];case"Less":return[f0(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[ni(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[sr(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[ah(I("a",e,t,n))];case"LogicalOr":return[y0(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[Pn(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Ij=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ye(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[L6(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[st(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=I("numArgs",e,t,n),l=I("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,c]=I("args",e,t,n);return[Ya.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Sj=(e,t,n)=>{switch(e.op){case"EuclideanNorm":return[Gy(I("x",e,t,n),I("axis",e,t,n),I("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[ji(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[ji(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[Xy(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[Kl(I("x",e,t,n))];case"LogSoftmax":return[g0(I("x",e,t,n))];case"SparseToDense":return[cA(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Cj=(e,t,n)=>{switch(e.op){case"Max":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[fn(I("x",e,t,n),o,i)]}case"Mean":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Bt(I("x",e,t,n),o,i)]}case"Min":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[da(I("x",e,t,n),o,i)]}case"Sum":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[ke(I("x",e,t,n),o,i)]}case"All":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[u0(I("x",e,t,n),o,i)]}case"Any":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[yp(I("x",e,t,n),o,i)]}case"ArgMax":{let o=I("axis",e,t,n);return[Ss(I("x",e,t,n),o)]}case"ArgMin":{let o=I("axis",e,t,n);return[Cy(I("x",e,t,n),o)]}case"Prod":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[x0(I("x",e,t,n),o,i)]}case"Cumprod":{let o=I("axis",e,t,n),i=I("exclusive",e,t,n),l=I("reverse",e,t,n);return[Ap(I("x",e,t,n),o,i,l)]}case"Cumsum":{let o=I("axis",e,t,n),i=I("exclusive",e,t,n),l=I("reverse",e,t,n);return[h0(I("x",e,t,n),o,i,l)]}case"Bincount":let s=I("x",e,t,n),r=I("weights",e,t,n),a=I("size",e,t,n);return[Py(s,r,a)];case"DenseBincount":{let o=I("x",e,t,n),i=I("weights",e,t,n),l=I("size",e,t,n),u=I("binaryOutput",e,t,n);return[M6(o,i,l,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Tj=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=I("n",e,t,n),r=I("axis",e,t,n),a=I("tensors",e,t,n);return a=a.slice(0,s),[It(a,r)]}case"Gather":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[Xi(s,he(r,"int32"),0)]}case"GatherV2":{let s=I("axis",e,t,n),r=I("batchDims",e,t,n),a=I("x",e,t,n),o=I("indices",e,t,n);return[Xi(a,he(o,"int32"),s,r)]}case"Reverse":{let s=I("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=I("x",e,t,n);return[Rs(a,r)]}case"ReverseV2":{let s=I("axis",e,t,n),r=I("x",e,t,n);return[Rs(r,s)]}case"Slice":{let s=I("begin",e,t,n),r=I("size",e,t,n);return[Oe(I("x",e,t,n),s,r)]}case"StridedSlice":{let s=I("begin",e,t,n),r=I("end",e,t,n),a=I("strides",e,t,n),o=I("beginMask",e,t,n),i=I("endMask",e,t,n),l=I("ellipsisMask",e,t,n),u=I("newAxisMask",e,t,n),c=I("shrinkAxisMask",e,t,n),p=I("x",e,t,n);return[aA(p,s,r,a,o,i,l,u,c)]}case"Pack":return K(()=>{let s=I("axis",e,t,n),r=I("tensors",e,t,n),a=r[0].shape,o=Qe(r[0]).shape,i=r.map(l=>{let u=v.arraysEqual(l.shape,a);if(!u&&!v.arraysEqual(Qe(l).shape,o))throw new Error("the input tensors shape does not match");return u?l:U(l,a)});return[on(i,s)]});case"Unpack":{let s=I("axis",e,t,n),r=I("tensor",e,t,n);return Jn(r,s)}case"Tile":{let s=I("reps",e,t,n);return[Vs(I("x",e,t,n),s)]}case"Split":case"SplitV":{let s=I("axis",e,t,n),r=I("numOrSizeSplits",e,t,n),a=I("x",e,t,n);return Zt(a,r,s)}case"ScatterNd":{let s=I("indices",e,t,n),r=I("values",e,t,n),a=I("shape",e,t,n);return[aw(s,r,a)]}case"GatherNd":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[ow(s,r)]}case"SparseToDense":{let s=I("sparseIndices",e,t,n),r=I("outputShape",e,t,n),a=I("sparseValues",e,t,n),o=I("defaultValue",e,t,n);return[cA(s,a,r,a.dtype===o.dtype?o:he(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Nj=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=Jd.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=Jd.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Jd.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[Jd.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Ej=(e,t,n)=>{switch(e.op){case"FFT":return[uh(I("x",e,t,n))];case"IFFT":return[Zu(I("x",e,t,n))];case"RFFT":return[ch(I("x",e,t,n))];case"IRFFT":return[T0(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Rj=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=jf.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=jf.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[jf.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_j=(e,t,n)=>{switch(e.op){case"Cast":return[he(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let s=I("axis",e,t,n);return[Kt(I("x",e,t,n),s)]}case"Squeeze":{let s=I("axis",e,t,n);return[Qe(I("x",e,t,n),s)]}case"Reshape":return[U(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[Jy(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[Xs(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let s=I("blockShape",e,t,n),r=I("paddings",e,t,n);return[ih(I("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=I("blockShape",e,t,n),r=I("crops",e,t,n);return[eh(I("x",e,t,n),s,r)]}case"DepthToSpace":{let s=I("blockSize",e,t,n),r=I("dataFormat",e,t,n).toUpperCase();return[zy(I("x",e,t,n),s,r)]}case"BroadcastTo":return[Wu(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[_6(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function vv(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return K(()=>ij(a,o,i));case"basic_math":return K(()=>lj(a,o,i));case"control":return fj(a,o,i);case"convolution":return K(()=>mj(a,o,i));case"creation":return K(()=>gj(a,o,i));case"dynamic":return yj(a,o,i);case"evaluation":return K(()=>Aj(a,o,i));case"image":return K(()=>wj(a,o,i));case"graph":return K(()=>xj(a,o,i));case"logical":return K(()=>kj(a,o,i));case"matrices":return K(()=>Ij(a,o,i));case"normalization":return K(()=>Sj(a,o,i));case"reduction":return K(()=>Cj(a,o,i));case"slice_join":return K(()=>Tj(a,o,i));case"sparse":return K(()=>Nj(a,o,i));case"spectral":return K(()=>Ej(a,o,i));case"string":return K(()=>Rj(a,o,i));case"transformation":return K(()=>_j(a,o,i));case"hash_table":return vj(a,o,i,s);case"custom":let l=B8(a.op);if(l&&l.customExecutor)return l.customExecutor(new oj(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var wv=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function kv(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,u=Object.keys(e).map(d=>ws(d)[0]),c=[];s!=null&&(c=s.map(d=>ws(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((lk(d)||Oj(d)||Mj(d))&&o==null&&(o=d,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&u.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){a.push(d.name);continue}d.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function Dj(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(c=>ws(c)[0]).map(c=>e.nodes[c]),i=e.initNodes;o.forEach(c=>{s.has(c.name)&&a.push(c)}),e.weights.forEach(c=>{s.has(c.name)&&a.push(c)}),i!=null&&i.forEach(c=>{s.has(c.name)&&a.push(c)});let l=new Set,u=[];for(;a.length>0;){let c=a.pop();l.add(c.name),t[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&s.has(p.name)&&p.inputs.every(d=>l.has(d.name))&&a.push(p)})}return u}var $j=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Pj=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Fj=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function lk(e){return $j.indexOf(e.op)>=0}function Oj(e){return Pj.indexOf(e.op)>=0}function Mj(e){return Fj.indexOf(e.op)>=0}var F3=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new F3(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=kv(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return Dj(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(c=>this.graph.nodes[ws(c)[0]]),r=t.map(c=>ws(c)[0]),a=r.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},u={};return K(()=>{let c=new wv(this.weightMap,l,u,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=ws(f),y=[];y[g]=e[f],p[m]=y});let d=this.getFrozenTensorIds(p),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!p[m.name]){let g=vv(m,p,c,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);p[m.name]=g,this.checkTensorForDisposal(m.name,m,p,c,d,r,h)}}return this.parent==null&&c.dispose(d),t.map(f=>Kn(f,p,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=LH(i.name,n,s);l!=null&&l.forEach(u=>{if(u&&!u.kept&&!r.has(u.id)){let c=o[u.id];if(c===1){if(!this.keepTensorForDebug)u.dispose();else{let[p,d]=Lr(t.name,s);this.intermediateTensors[p]?this.intermediateTensors[p][d]=u:(this.intermediateTensors[p]=[],this.intermediateTensors[p][d]=u)}delete o[u.id]}else c!=null&&o[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let a=new wv(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(u=>Kn(u,this.tensorsMap,a)),i=o.map(u=>u.id),l=Object.keys(e).map(u=>e[u].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[ws(x)[0]]),o=n.map(x=>ws(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:p}=kv(e,i,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(x=>{let[A,b]=ws(x),w=[];w[b]=e[x],h[A]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let x=this.processStack(a,d,t,h,g,m,o,f,l);await Promise.all(x)}c==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(x=>!lk(x)&&!Kn(x.name,h,t)).map(x=>x.name);if(y.length>0){let x="";throw c!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${x}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let u=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let p="";if(c.node.op==="Enter"&&I("isConstant",c.node,s,n)&&([p]=Lr(c.node.name,n)),s[c.node.name]==null){let d=vv(c.node,s,n,this._resourceManager);p||([p]=Lr(c.node.name,n));let h=n.currentContext;v.isPromise(d)?u.push(d.then(f=>(s[p]=f,n.currentContext=h,this.checkTensorForDisposal(p,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l),f))):(s[p]=d,this.checkTensorForDisposal(p,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l))}else this.processChildNodes(c.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=Lr(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Kn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Kn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=ws(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);v.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=ws(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=ws(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},zj=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},Lj="?tfjs-format=file",Bj="model.json",kh=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new zj}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Dn.browserHTTPRequest(e,this.loadOptions);else{let t=Dn.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Dn.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=Dn.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new F3(yv.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=yv.Instance.transformGraph(e.modelInitializer);this.initializer=new F3(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Dn.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof nt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Wj(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=Uj(e));let n=new kh(e,t);return await n.load(),n}function Vj(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);let t=new kh(e);return t.load(),t}function Uj(e){return e.endsWith("/")||(e=e+"/"),`${e}${Bj}${Lj}`}var Gj="3.18.0",uk={};Ve(uk,{CSVDataset:()=>Ak,Dataset:()=>Xc,FileDataSource:()=>Sk,TextLineDataset:()=>yk,URLDataSource:()=>Ck,array:()=>hq,csv:()=>Iq,func:()=>Sq,generator:()=>Cq,microphone:()=>Nq,version_data:()=>Eq,webcam:()=>Tq,zip:()=>fq});var Hj=sl(x7()),jj=sl(x7());function qj(e,t){return km(e,t)}function km(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(tc(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=km(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function Xj(e,t=dk){return ck(e,t)}function ck(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(tc(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(u=>u[o]),l=ck(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function dk(e){return e===null?null:tc(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function pk(e,t){let n=new Map;km(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let o=await a;n.set(r,o)}}return km(e,t,n)}function tc(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=b7();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof nt)&&!(e instanceof Promise)&&!t)}function Kj(e){return e==null||Zj(e)||Array.isArray(e)||typeof e=="object"&&e instanceof nt||v.isTypedArray(e)}function Zj(e){return e===null||typeof e!="object"&&typeof e!="function"}function Yj(e){return qj(e,Jj)}function Jj(e){return e instanceof nt?{value:e.clone(),recurse:!1}:tc(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var hk=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},U5=class extends hk{constructor(){super(U5.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};U5.INITIAL_CAPACITY=32;function fk(e){return new tq(e)}function G5(e){return new nq(e)}function Qj(e,t){return new mk(e,t)}function eq(e,t=Wa.FAIL){return new dq(e,t)}var wn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new uq(this,e)}filter(e){return new iq(this,e)}map(e){return new lq(this,e)}mapAsync(e){return new Iv(this,e)}serialMapAsync(e){return new Iv(this,e).serial()}flatmap(e){return new cq(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new oq(this,e,t)}columnMajorBatch(e,t=!0,n=dk){return this.rowMajorBatch(e,t).map(r=>Xj(r,n))}concatenate(e,t){return new mk(fk([this,e]),t)}take(e){return e<0||e==null?this:new aq(this,e)}skip(e){return e<0||e==null?this:new rq(this,e)}prefetch(e){return new gk(this,e)}shuffle(e,t){return new pq(this,e,t)}serial(){return new sq(this)}},tq=class extends wn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:Yj(e),done:!1}}},nq=class extends wn{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},sq=class extends wn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},rq=class extends wn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ne(e.value)}return this.upstream.next()}},aq=class extends wn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},oq=class extends wn{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},iq=class extends wn{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ne(e.value)}}},lq=class extends wn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=wr.getTensorsInContainer(e.value),n=this.transform(e.value),s=wr.getTensorsInContainer(n);for(let r of t)wr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},uq=class extends wn{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Iv=class extends wn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=wr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=wr.getTensorsInContainer(n);for(let r of t)wr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},H5=class extends wn{constructor(){super(),this.outputQueue=new U5,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},cq=class extends H5{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=wr.getTensorsInContainer(e.value),n=this.transform(e.value),s=wr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)wr.isTensorInList(r,s)||r.dispose();return!0}},mk=class extends wn{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Wa;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Wa||(Wa={}));var dq=class extends wn{constructor(e,t=Wa.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof wn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await pk(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Wa.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Wa.SHORTEST:return{value:null,done:!0};case Wa.LONGEST:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},gk=class extends wn{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new hk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},pq=class extends gk{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=jj.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Xc=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),vs(async()=>(await n.iterator()).columnMajorBatch(e,t,mq),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,vs(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,vs(async()=>(await t.iterator()).filter(s=>K(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return vs(async()=>(await t.iterator()).map(n=>K(()=>e(n))),this.size)}mapAsync(e){let t=this;return vs(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return vs(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,vs(async()=>{let s=G5(async()=>({value:await t.iterator(),done:!1}));return Qj(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,vs(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=Hj.alea(t||v.now().toString());return vs(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,vs(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Xc.MAX_BUFFER_SIZE=1e4;function vs(e,t=null){return new class extends Xc{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function hq(e){return vs(async()=>fk(e),e.length)}function fq(e){if(!tc(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return vs(async()=>{let n=await pk(e,s=>{if(s instanceof Xc)return{value:s.iterator(),recurse:!1};if(tc(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return eq(n,Wa.SHORTEST)},t)}function mq(e){if(e===null)return null;let t=e[0];return Kj(t)?{value:gq(e),recurse:!1}:{value:null,recurse:!0}}function gq(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof nt?on(e):gt(e)}var yk=class extends Xc{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},zf='"',Kd=Symbol("out"),Sv=Symbol("field"),Lf=Symbol("quote"),Kg=Symbol("quoteafterquote"),Cv=Symbol("quoteinquote"),Ak=class extends Xc{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new yk(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let u=Number(i);if(isNaN(u))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=u;else switch(o.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(i);break;default:l=u}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=Kd;for(let o=0;o<r;o++)switch(a){case Kd:switch(e.charAt(o)){case zf:s=o+1,a=Lf;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Kd;break;default:a=Sv,s=o;break}break;case Sv:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=Kd,s=o+1;break;default:}break;case Lf:switch(e.charAt(o)){case zf:a=Kg;break;default:}break;case Kg:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=Kd,s=o+1;break;case zf:a=Lf;break;default:a=Cv;break}break;case Cv:switch(e.charAt(o)){case zf:a=Lf;break;default:}break;default:}if(a===Kg?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},xk=class extends wn{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Y().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new xk(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),gt(n,t)}},bk=class extends wn{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Dt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=kr([a,r,i,o],[1,4])}else this.cropBox=kr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Y().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new bk(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=qs.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return K(()=>{let t=Kt(he(e,"float32"),0),n;n=Se.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return U(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},vk=class{},wk=class extends wn{split(e){return new yq(this,e)}},yq=class extends wk{constructor(e,t){super(),this.upstream=e,this.impl=new Aq(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Aq=class extends H5{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},xq=class extends wn{decodeUTF8(){return new bq(this)}},bq=class extends wk{constructor(e){super(),this.upstream=e,this.impl=new vq(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},vq=class extends H5{constructor(e){if(super(),this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=b7();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Y().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},kk=class extends xq{constructor(e,t={}){super(),this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function wq(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=kq(e));let a=await(n||v.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new kk(o,t)}else throw new Error(a.statusText)}var kq=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function Ik(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var Sk=class extends vk{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(Ik(this.input)&&Y().get("IS_NODE")){let e=ty();this.input=e.readFileSync(this.input.slice(7))}return new kk(this.input,this.options)}},Ck=class extends vk{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return Ik(this.url)?new Sk(this.url,this.fileOptions).iterator():wq(this.url,this.fileOptions)}};function Iq(e,t={}){return new Ak(new Ck(e),t)}function Sq(e){let t=G5(e);return vs(async()=>t)}function Cq(e){return vs(async()=>{let t=await e();return G5(()=>t.next())})}async function Tq(e,t){return bk.create(e,t)}async function Nq(e){return xk.create(e)}var Eq="3.18.0";function Te(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Rq=or.whereImpl,j5=class extends oc{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Np(this,nn())}nextDataId(){return j5.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return We(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}makeOutput(e,t,n){return nn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Te([e],"where");let t=this.readSync(e.dataId);return Rq(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};j5.nextDataId=0;var q5={};Ve(q5,{addImpl:()=>Nk,bincountImpl:()=>K5,bincountReduceImpl:()=>Ek,ceilImpl:()=>Rk,concatImpl:()=>Z5,equalImpl:()=>_k,expImpl:()=>$k,expm1Impl:()=>Fk,floorImpl:()=>Ok,gatherNdImpl:()=>Mk,gatherV2Impl:()=>zk,greaterEqualImpl:()=>Bk,greaterImpl:()=>Lk,lessEqualImpl:()=>Vk,lessImpl:()=>Wk,linSpaceImpl:()=>Uk,logImpl:()=>Gk,maxImpl:()=>Hk,maximumImpl:()=>jk,minimumImpl:()=>qk,multiplyImpl:()=>Y5,negImpl:()=>Xk,notEqualImpl:()=>Kk,prodImpl:()=>Zk,rangeImpl:()=>Q5,rsqrtImpl:()=>Yk,scatterImpl:()=>Mu,sigmoidImpl:()=>AX,simpleAbsImpl:()=>Tk,sliceImpl:()=>Sm,sparseFillEmptyRowsImpl:()=>Qk,sparseReshapeImpl:()=>eI,sparseSegmentReductionImpl:()=>ex,sqrtImpl:()=>vX,squaredDifferenceImpl:()=>tI,stridedSliceImpl:()=>nI,stringNGramsImpl:()=>sI,stringSplitImpl:()=>rI,stringToHashBucketFastImpl:()=>aI,subImpl:()=>oI,tileImpl:()=>iI,topKImpl:()=>uI,transposeImpl:()=>J5,uniqueImpl:()=>cI});function Tk(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var _q=e=>{let{x:t}=e.inputs,n=e.backend;Te(t,"abs");let s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=Tk(r),n.makeOutput(s,t.shape,t.dtype)},Dq={kernelName:al,backendName:"cpu",kernelFunc:_q};function ln(e){return(t,n,s,r,a)=>{let o=T.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),u=v.sizeFromShape(o),c=v.getTypedArrayFromDType(a,u),p=t.length,d=n.length,h=v.computeStrides(t),f=v.computeStrides(n),m=T.getBroadcastDims(t,o),g=T.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){let x=v.indexToLoc(y,i,l),A=x.slice(-p);m.forEach(S=>A[S]=0);let b=v.locToIndex(A,p,h),w=x.slice(-d);g.forEach(S=>w[S]=0);let k=v.locToIndex(w,d,f);c[y]=e(s[b],r[k])}return[c,o]}}function ks(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var $q={kernelName:Rp,backendName:"cpu",kernelFunc:ks};function Im(e,t,n="float32"){if(n==="complex64"){let r=Im(e,t,"float32"),a=Im(e,t,"float32");return ks({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Hr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var Pq={kernelName:So,backendName:"cpu",kernelFunc:Hr};function Ji(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var Fq={kernelName:Lp,backendName:"cpu",kernelFunc:Ji};function no(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Hr({inputs:{x:r},backend:n});let o=Im(n,r.shape,r.dtype),i=no({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=ks({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Ji({inputs:{input:r},backend:n}),i=no({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Hr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=v.toTypedArray([0],r.dtype),[l,u]=ln((c,p)=>c!==p?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Oq={kernelName:uo,backendName:"cpu",kernelFunc:no};function kn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Te([o,i],e);let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,p=o.dtype==="string"?T.fromUint8ToStringArray(u):u,d=o.dtype==="string"?T.fromUint8ToStringArray(c):c,h=s||o.dtype,[f,m]=t(o.shape,i.shape,p,d,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let u=no({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=l.data.get(p.dataId).values,f=l.data.get(d.dataId).values,m=no({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[w,k,S]=n(o.shape,i.shape,h,f,A,b),E=l.makeTensorInfo(S,"float32",w),R=l.makeTensorInfo(S,"float32",k),$=ks({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),$}else{let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,p=s||o.dtype,[d,h]=t(o.shape,i.shape,u,c,p);return l.makeTensorInfo(h,p,d)}}}function X5(e){return(t,n,s,r,a,o)=>{let i=T.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),u=i.length,c=v.computeStrides(i),p=v.getTypedArrayFromDType("float32",l),d=v.getTypedArrayFromDType("float32",l),h=T.getBroadcastDims(t,i),f=T.getBroadcastDims(n,i),m=T.mergeRealAndImagArrays(s,r),g=T.mergeRealAndImagArrays(a,o),y=t.length,x=v.computeStrides(t),A=n.length,b=v.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<p.length;w++){let k=w%m.length,S=w%g.length,E=e(m[k*2],m[k*2+1],g[S*2],g[S*2+1]);p[w]=E.real,d[w]=E.imag}else for(let w=0;w<p.length;w++){let k=v.indexToLoc(w,u,c),S=k.slice(-y);h.forEach(D=>S[D]=0);let E=v.locToIndex(S,y,x),R=k.slice(-A);f.forEach(D=>R[D]=0);let $=v.locToIndex(R,A,b),_=e(m[E*2],m[E*2+1],g[$*2],g[$*2+1]);p[w]=_.real,d[w]=_.imag}return[p,d,i]}}var Nk=ln((e,t)=>e+t),Mq=X5((e,t,n,s)=>({real:e+n,imag:t+s})),nc=kn(ma,Nk,Mq),zq={kernelName:ma,backendName:"cpu",kernelFunc:nc};function K5(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function Ek(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=We([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let u=e.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?o.set(1,i,u):t.size>0?o.set(o.get(i,u)+t.get(i,l),i,u):o.set(o.get(i,u)+1,i,u))}return o}function si(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function xt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Te(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=v.sizeFromShape(o.shape),c=n||o.dtype,p=v.getArrayFromDType(c,u);for(let d=0;d<u;++d)p[d]=t(l[d],r);return i.makeTensorInfo(o.shape,c,p)}}function Kc(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Te(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=n||o.dtype,c=t(l,u,r);return i.makeTensorInfo(o.shape,u,c)}}var Rk=si(e=>Math.ceil(e)),Lq=Kc(co,Rk),Bq={kernelName:co,backendName:"cpu",kernelFunc:Lq};function Z5(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?T.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let u=0;u<o.shape[0];++u){let c=u*t[1]+a;for(let p=0;p<o.shape[1];++p)r[c+p]=i[l++]}a+=o.shape[1]})}return r}var _k=ln((e,t)=>e===t?1:0),Dk=kn(dl,_k,null,"bool"),Wq={kernelName:dl,backendName:"cpu",kernelFunc:Dk},$k=si(e=>Math.exp(e)),Pk=Kc(bo,$k,"float32"),Vq={kernelName:bo,backendName:"cpu",kernelFunc:Pk},Fk=si(e=>Math.expm1(e)),Uq=Kc(hl,Fk),Gq={kernelName:hl,backendName:"cpu",kernelFunc:Uq},Ok=si(e=>Math.floor(e)),Hq=Kc(vo,Ok),jq={kernelName:vo,backendName:"cpu",kernelFunc:Hq};function Mk(e,t,n,s,r,a,o,i,l){let u=We([s,a],n);for(let c=0;c<s;c++){let p=[],d=0;for(let h=0;h<r;h++){let f=e[c*r+h];d+=f*o[h],p.push(f)}if(d<0||d>=l/a)throw new Error(`Invalid indices: ${p} does not index into ${i}`);for(let h=0;h<a;h++)u.values[c*a+h]=t.get(...t.indexToLoc(d*a+h))}return u}function zk(e,t,n){let s=We(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],u=t.locToIndex([i,l]);o[2]=t.values[u];let c=e.locToIndex(o);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}var Lk=ln((e,t)=>e>t?1:0),qq=kn(yl,Lk,null,"bool"),Xq={kernelName:yl,backendName:"cpu",kernelFunc:qq},Bk=ln((e,t)=>e>=t?1:0),Kq=kn(Io,Bk,null,"bool"),Zq={kernelName:Io,backendName:"cpu",kernelFunc:Kq},Wk=ln((e,t)=>e<t?1:0),Yq=kn(Al,Wk,null,"bool"),Jq={kernelName:Al,backendName:"cpu",kernelFunc:Yq},Vk=ln((e,t)=>e<=t?1:0),Qq=kn(xl,Vk,null,"bool"),eX={kernelName:xl,backendName:"cpu",kernelFunc:Qq};function Uk(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var Gk=si(e=>Math.log(e)),tX=Kc(To,Gk),nX={kernelName:To,backendName:"cpu",kernelFunc:tX};function Hk(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let u=e[o+l];(Number.isNaN(u)||u>i)&&(i=u)}r[a]=i}return r}var jk=ln((e,t)=>Math.max(e,t)),sX=kn(Eo,jk),rX={kernelName:Eo,backendName:"cpu",kernelFunc:sX},qk=ln((e,t)=>Math.min(e,t)),aX=kn($o,qk),oX={kernelName:$o,backendName:"cpu",kernelFunc:aX},Y5=ln((e,t)=>e*t),iX=X5((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),o2=kn(Fo,Y5,iX),lX={kernelName:Fo,backendName:"cpu",kernelFunc:o2};function Xk(e,t,n){let s=v.createScalarValue(-1,n);return Y5([],t,s,e,n)}function uX(e){let{inputs:t,backend:n}=e,{x:s}=t;Te(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=Xk(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var cX={kernelName:vl,backendName:"cpu",kernelFunc:uX},Kk=ln((e,t)=>e!==t?1:0),dX=kn(wl,Kk,null,"bool"),pX={kernelName:wl,backendName:"cpu",kernelFunc:dX};function J5(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),u=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let c=0;c<o;++c){let p=v.indexToLoc(c,a,i),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[s[f]];let h=v.locToIndex(d,a,l);u[h]=e[c]}return u}function hs(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Te(r,"transpose");let o=r.shape.length,i=new Array(o);for(let p=0;p<i.length;p++)i[p]=r.shape[a[p]];let l=s.data.get(r.dataId).values,u=J5(l,r.shape,r.dtype,a,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}var hX={kernelName:Br,backendName:"cpu",kernelFunc:hs};function Zk(e,t,n,s){let[r,a]=T.computeOutAndReduceShapes(e,s),o=$n(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let u=0;u<i.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=n[c+d];i[u]=p}return{outVals:i,outShape:r,outDtype:o}}function fX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"prod");let i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=T.getAxesPermutation(l,i),c=l,p=r,d=[];u!=null&&(p=hs({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(p),c=T.getInnerMostAxes(c.length,i));let h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=Zk(p.shape,p.dtype,h,c),y=m;return o&&(y=T.expandShapeToKeepDim(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,f)}var mX={kernelName:Lo,backendName:"cpu",kernelFunc:fX};function Q5(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var Yk=si(e=>1/Math.sqrt(e)),gX=Kc(Uo,Yk),yX={kernelName:Uo,backendName:"cpu",kernelFunc:gX};function Mu(e,t,n,s,r,a,o,i,l,u){let c=[s/r,r],p=e.values,d=t.values;if(s===0)return We(n,t.dtype);let h=We(c,t.dtype);typeof l=="string"||typeof l=="number"?h.values.fill(l):typeof l=="boolean"&&h.values.fill(+l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let x=p[f*o+y];m.push(x),g+=x*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)u?h.values[g*r+y]+=d[f*r+y]:h.values[g*r+y]=t.rank===0?d[0]:d[f*r+y]}return h}var AX=si(e=>1/(1+Math.exp(-e))),Jk=xt(Ho,e=>1/(1+Math.exp(-e))),xX={kernelName:Ho,backendName:"cpu",kernelFunc:Jk};function Sm(e,t,n,s,r){let a=Ut.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let p=Ut.computeFlatOffset(t,i);return r==="string"?e.slice(p,p+o):e.subarray(p,p+o)}let l=r==="string"?T.fromUint8ToStringArray(e):e,u=We(s,r,l),c=We(n,r);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),h=d.map((f,m)=>f+t[m]);c.set(u.get(...h),...d)}return r==="string"?T.fromStringArrayToUint8(c.values):c.values}function Qi(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Te(r,"slice");let[i,l]=Ut.parseSliceParams(r,a,o);Ut.assertParamsValid(r,i,l);let u=n.data.get(r.dataId).values,c=Sm(u,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}var bX={kernelName:$l,backendName:"cpu",kernelFunc:Qi};function Qk(e,t,n,s,r,a,o){let i=t[0],l=a[0],u=new Array(l),c=new Array(i),p=t[1];if(l===0){if(i!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(r,0);return[g,[0,p],y,u,c]}let d=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*p];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],d=d&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,y=s;for(let x=0;x<i;++x)c[x]=x;return[g,[i,p],y,u,c]}else{let g=f[l-1],y=v.getArrayFromDType(n,g*p),x=v.getArrayFromDType(r,g),A=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*p],k=A[w],S=(w===0?0:f[w-1])+k;A[w]++;for(let E=0;E<p;++E)y[S*p+E]=e[b*p+E];x[S]=s[b],c[b]=S}for(let b=0;b<l;++b)if(A[b]===0){let k=b===0?0:f[b-1];y[k*p+0]=b;for(let S=1;S<p;++S)y[k*p+S]=0;x[k]=o}return[y,[g,p],x,u,c]}}function eI(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],u=1,c=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(c!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/u);if(u*g!==a)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[c]=g}if(v.sizeFromShape(l)!==a)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(s,l));let d=s.length,h=[];if(d>0){h[d-1]=1;for(let g=d-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let x=0;x<d;++x)y+=e[g*d+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[o,i],l]}function ex(e,t,n,s,r,a=!1,o=0){let i=s.length,l=[t[0],e.length/t[0]],u=l[1],p=i>0?r[i-1]+1:0;if(p<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let h=d.reduce((A,b)=>A*b,1),f=v.getArrayFromDType(n,h);if(i===0)return p>0&&f.fill(o),[f,d];if(p<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=r[m];for(;;){let A=0;if(g<i){if(A=r[g],x===A){++g;continue}if(x>=A)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=p)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,p));x>y&&f.fill(o,y*u,x*u);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,s[b],l[0]));for(let k=0;k<u;k++)f[x*u+k]+=e[w*u+k]}if(a)for(let b=0;b<u;b++)f[x*u+b]/=g-m;if(m=g,++g,y=x+1,x=A,g>i)break}return y<p&&f.fill(o,y*u,p*u),[f,d]}var vX=si(e=>Math.sqrt(e)),wX=xt(jo,e=>Math.sqrt(e)),kX={kernelName:jo,backendName:"cpu",kernelFunc:wX},tI=ln((e,t)=>{let n=e-t;return n*n}),IX=kn(Ko,tI),SX={kernelName:Ko,backendName:"cpu",kernelFunc:IX};function nI(e,t,n,s){let r=We(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var CX=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),u=Math.max(0,i-(r-(o+1))),c=a-(l+u),p=t+(l>0?0:o-i),d=0;d+=l*this.leftPad.length;for(let y=0;y<c;++y)d+=e[p+y].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+o]=new Uint8Array(d);let f=n[s+o],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<c-1;++y)g(e[p+y]),g(this.separator);if(c>0){g(e[p+c-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let u=t[l]>=i;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],u=0;this.nGramWidths.forEach(c=>{u+=this.getNumNGrams(l,c)}),this.preserveShort&&l>0&&u===0&&(u=1),a[i]=a[i-1]+u}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],u=a[i];if(this.nGramWidths.forEach(c=>{let p=t[i+1]-t[i],d=this.getNumNGrams(p,c);this.createNGrams(e,l,o,u,d,c),u+=d}),this.preserveShort&&u===a[i]){let c=t[i+1]-t[i];if(c===0)continue;let p=c+2*this.padWidth,d=1;this.createNGrams(e,l,o,u,d,p)}}return[o,a]}};function sI(e,t,n,s,r,a,o,i){return new CX(n,s,r,a,o,i).compute(e,t)}function TX(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function rI(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let d=0;d<s;++d){let h=r.length;TX(e[d],t,n,r);let f=r.length-h;i[d]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),u=new Array(a),c=[s,o],p=0;for(let d=0;d<s;++d)for(let h=0;h<i[d];++h)l[p*2]=d,l[p*2+1]=h,u[p]=r[p],++p;return[l,u,c]}function aI(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var oI=ln((e,t)=>e-t),NX=X5((e,t,n,s)=>({real:e-n,imag:t-s})),tx=kn(Zo,oI,NX),EX={kernelName:Zo,backendName:"cpu",kernelFunc:tx};function iI(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=We(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var tp=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function lI(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,u=Math.log(i),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(i-c)/i)*Math.sign(l-i/2),d=Math.max(n,Math.floor(t-l*c/i+p)),h=Math.min(s,Math.floor(t+(i-l)*c/i+p));lI(e,t,d,h)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),tp(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;tp(e[a],r)<0;)a=a+1;for(;tp(e[o],r)>0;)o=o-1}tp(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function uI(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),u=v.getTypedArrayFromDType("int32",o*s);for(let p=0;p<o;p++){let d=p*i,h=e.subarray(d,d+i),f=new Array(h.length);h.forEach((x,A)=>f[A]={value:x,index:A}),s<f.length&&(lI(f,s),f=f.slice(0,s)),r&&f.sort(tp);let m=p*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}let c=t.slice();return c[c.length-1]=s,[We(c,n,l),We(c,"int32",u)]}function cI(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new hn(a,s,e),u=[],c=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let x=0;x<a[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,u.push(f)}}let p=a.slice();p[1]=Object.keys(o).length;let d=new hn(p,s);u.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)d.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:i}}Gl("cpu",()=>new j5,1);var dI=xt(xo,e=>e>=0?e:Math.exp(e)-1),RX={kernelName:xo,backendName:"cpu",kernelFunc:dI};function pI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Te([r],"leakyRelu");let o=v.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",o);for(let u=0;u<i.length;u++)l[u]=i[u]<0?a*i[u]:i[u];return n.makeTensorInfo(r.shape,"float32",l)}var _X={kernelName:Co,backendName:"cpu",kernelFunc:pI},DX=ln((e,t)=>e<0?t*e:e);function hI(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Te([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=DX(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var $X={kernelName:zo,backendName:"cpu",kernelFunc:hI},fI=xt(Bo,e=>Math.max(0,e)),PX={kernelName:Bo,backendName:"cpu",kernelFunc:fI},mI=xt(Vo,e=>Math.min(Math.max(0,e),6)),FX={kernelName:Vo,backendName:"cpu",kernelFunc:mI};function Cm(e,t,n,s,r){if(n==="linear")return Hr({inputs:{x:t},backend:e});if(n==="relu")return fI({inputs:{x:t},backend:e});if(n==="elu")return dI({inputs:{x:t},backend:e});if(n==="relu6")return mI({inputs:{x:t},backend:e});if(n==="prelu")return hI({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return pI({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return Jk({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Rt(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,o),l=v.sizeFromShape(i);v.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=i,p.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var OX={kernelName:Nl,backendName:"cpu",kernelFunc:Rt};function gI(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Te([r,a],"matMul");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],p=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=Hl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);v.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],w=i?[y,h,p]:[y,p,h],k=Rt({inputs:{x:r},backend:n,attrs:{shape:b}}),S=Rt({inputs:{x:a},backend:n,attrs:{shape:w}}),E=o?k.shape[1]:k.shape[2],R=o?k.shape[2]:k.shape[1],$=i?S.shape[1]:S.shape[2],_=Math.max(g,y),D=n.data.get(k.dataId).values,C=n.data.get(S.dataId).values,F=v.computeStrides(k.shape),V=v.computeStrides(S.shape),[j,z,Z]=o?[F[0],1,F[1]]:[F[0],F[1],1],[W,ee,Q]=i?[1,V[1],V[0]]:[V[1],1,V[0]],ie=R*$,J=We([_,R,$],k.dtype),ae=J.values,le=n.blockSize;for(let ye=0;ye<_;ye++)for(let we=0;we<R;we+=le)for(let Re=0;Re<$;Re+=le)for(let _e=0;_e<E;_e+=le){let Be=Math.min(we+le,R),Ue=Math.min(Re+le,$),ot=Math.min(_e+le,E);for(let ct=we;ct<Be;ct++)for(let dt=Re;dt<Ue;dt++){let yt=0;for(let $e=_e;$e<ot;$e++){let Tt=Math.min(ye,g-1)*j,wt=Math.min(ye,y-1)*Q,Bn=D[Tt+ct*z+$e*Z],Qt=C[$e*W+dt*ee+wt];yt+=Bn*Qt}ae[ye*ie+(ct*$+dt)]+=yt}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(A,J.dtype,J.values)}var MX={kernelName:lo,backendName:"cpu",kernelFunc:gI};function zX(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s,d,h,f,m=[];d=gI({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(h=nc({inputs:{a:d,b:o},backend:n}),m.push(d),d=h),c&&(f=Cm(n,d,c,i,p),m.push(d),d=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return d}var LX={kernelName:qa,backendName:"cpu",kernelFunc:zX},BX=xt(lc,e=>Math.acos(e)),WX={kernelName:lc,backendName:"cpu",kernelFunc:BX},VX=xt(uc,e=>Math.acosh(e)),UX={kernelName:uc,backendName:"cpu",kernelFunc:VX};function GX(e){let{inputs:t,backend:n}=e,s=t;Te(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=We(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let u=0;u<o.length;u++)o[u]+=l[u]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var HX={kernelName:ao,backendName:"cpu",kernelFunc:GX};function jX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"all");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=hs({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A&&w}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=Rt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var qX={kernelName:cc,backendName:"cpu",kernelFunc:jX};function XX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"any");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=hs({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A||w}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=Rt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var KX={kernelName:dc,backendName:"cpu",kernelFunc:XX};function ZX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Te(r,"argMax");let o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=hs({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,o),d=v.sizeFromShape(c),h=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w>x&&(x=w,A=b)}h[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var YX={kernelName:oo,backendName:"cpu",kernelFunc:ZX};function JX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Te(r,"argMin");let o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=hs({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,o),d=v.sizeFromShape(c),h=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w<x&&(x=w,A=b)}h[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var QX={kernelName:pc,backendName:"cpu",kernelFunc:JX},eK=xt(hc,e=>Math.asin(e)),tK={kernelName:hc,backendName:"cpu",kernelFunc:eK},nK=xt(fc,e=>Math.asinh(e)),sK={kernelName:fc,backendName:"cpu",kernelFunc:nK},rK=xt(mc,e=>Math.atan(e)),aK={kernelName:mc,backendName:"cpu",kernelFunc:rK},oK=ln((e,t)=>Math.atan2(e,t)),iK=kn(yc,oK),lK={kernelName:yc,backendName:"cpu",kernelFunc:iK},uK=xt(gc,e=>Math.atanh(e)),cK={kernelName:gc,backendName:"cpu",kernelFunc:uK};function nx(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=We(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*y,k=b*s[0];for(let S=0;S<r.inChannels;++S)for(let E=0;E<r.outHeight;++E){let R=E*o-d,$=Math.max(0,R),_=Math.min(r.inHeight,c+R),D=w+E*x;for(let C=0;C<r.outWidth;++C){let F=C*i-h,V=Math.max(0,F),j=Math.min(r.inWidth,p+F),z=f,Z=0,W=0;for(let Q=$;Q<_;Q+=l){let ie=k+Q*s[1];for(let J=V;J<j;J+=u){let ae=ie+J*s[2],le=e[ae+S];a==="max"&&le>z?z=le:a==="avg"&&(Z+=le,W++)}if(isNaN(z))break}let ee=D+C*A+S;g[ee]=a==="avg"?Z/W:z}}}return m}function yI(e,t,n,s,r=!1,a=!1){let o=We(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=We(t,n,e);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){let A=x*i-h,b=A;for(;b<0;)b+=u;let w=Math.min(s.inHeight,p+A);for(let k=0;k<s.outWidth;++k){let S=k*l-f,E=S;for(;E<0;)E+=c;let R=Math.min(s.inWidth,d+S),$=Number.NEGATIVE_INFINITY,_=-1;for(let D=b;D<w;D+=u){let C=D-A;for(let F=E;F<R;F+=c){let V=F-S,j=m.get(g,D,F,y);j>$&&($=j,r?_=a?((g*s.inHeight+D)*s.inWidth+F)*s.inChannels+y:(D*s.inWidth+F)*s.inChannels+y:_=C*d+V)}}o.set(_,g,x,k,y)}}return o}function AI(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=We(r.outShape,n),b=A.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){let $=R*w,_=R*s[0];for(let D=0;D<r.inChannels;++D)for(let C=0;C<r.outDepth;++C){let F=C*o-m,V=F;for(;V<0;)V+=u;let j=Math.min(r.inDepth,d+F),z=$+C*k;for(let Z=0;Z<r.outHeight;++Z){let W=Z*i-g,ee=W;for(;ee<0;)ee+=c;let Q=Math.min(r.inHeight,h+W),ie=z+Z*S;for(let J=0;J<r.outWidth;++J){let ae=J*l-y,le=ae;for(;le<0;)le+=p;let ye=Math.min(r.inWidth,f+ae),we=ie+J*E,Re=x,_e=0,Be=0;for(let ot=V;ot<j;ot+=u){let ct=_+ot*s[1];for(let dt=ee;dt<Q;dt+=c){let yt=ct+dt*s[2];for(let $e=le;$e<ye;$e+=p){let Tt=yt+$e*s[3],wt=e[Tt+D];if(a==="max"&&wt>Re?Re=wt:a==="avg"&&(_e+=wt,Be++),isNaN(Re))break}if(isNaN(Re))break}if(isNaN(Re))break}let Ue=we+D;b[Ue]=a==="avg"?_e/Be:Re}}}}return A}function dK(e,t){let n=We(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*s-d,A=x;for(;A<0;)A+=o;let b=Math.min(t.inDepth,u+x);for(let w=0;w<t.outHeight;++w){let k=w*r-h,S=k;for(;S<0;)S+=i;let E=Math.min(t.inHeight,c+k);for(let R=0;R<t.outWidth;++R){let $=R*a-f,_=$;for(;_<0;)_+=l;let D=Math.min(t.inWidth,p+$),C=Number.NEGATIVE_INFINITY,F=-1;for(let V=A;V<b;V+=o){let j=V-x;for(let z=S;z<E;z+=i){let Z=z-k;for(let W=_;W<D;W+=l){let ee=W-$,Q=e.get(m,V,z,W,g);Q>=C&&(C=Q,F=j*c*p+Z*c+ee)}}}n.set(F,m,y,w,R,g)}}}return n}function pK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Te(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))p=Hr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=nx(d,r.shape,r.dtype,h,c,"avg");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var hK={kernelName:io,backendName:"cpu",kernelFunc:pK};function fK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Te(r,"avgPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),p=n.data.get(r.dataId).values,d=AI(p,r.shape,r.dtype,v.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var mK={kernelName:Ep,backendName:"cpu",kernelFunc:fK};function gK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Te([r,a],"avgPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,A=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,S=b-1-c.padInfo.front,E=k-1-c.padInfo.left,R=w-1-c.padInfo.top,$=We(a.shape,"float32"),_=1/(f*m*g),D=n.bufferSync(r);for(let C=0;C<c.batchSize;++C)for(let F=0;F<c.inChannels;++F)for(let V=0;V<c.inDepth;++V)for(let j=0;j<c.inHeight;++j)for(let z=0;z<c.inWidth;++z){let Z=V-S,W=j-R,ee=z-E,Q=0;for(let ie=0;ie<b;ie+=y){let J=(Z+ie)/p;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let ae=0;ae<w;ae+=x){let le=(W+ae)/d;if(!(le<0||le>=c.outHeight||Math.floor(le)!==le))for(let ye=0;ye<k;ye+=A){let we=(ee+ye)/h;if(we<0||we>=c.outWidth||Math.floor(we)!==we)continue;Q+=D.get(C,J,le,we,F)}}}$.set(Q*_,C,V,j,z,F)}return n.makeTensorInfo($.shape,$.dtype,$.values)}var yK={kernelName:Om,backendName:"cpu",kernelFunc:gK};function AK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Te([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,A=x-1-c.padInfo.left,b=y-1-c.padInfo.top,w=We(o.shape,"float32"),k=1/(h*f),S=n.data.get(r.dataId).values,E=We(r.shape,"float32",S);for(let R=0;R<c.batchSize;++R)for(let $=0;$<c.inChannels;++$)for(let _=0;_<c.inHeight;++_)for(let D=0;D<c.inWidth;++D){let C=_-b,F=D-A,V=0;for(let j=0;j<y;j+=m){let z=(C+j)/p;if(!(z<0||z>=c.outHeight||Math.floor(z)!==z))for(let Z=0;Z<x;Z+=g){let W=(F+Z)/d;if(W<0||W>=c.outWidth||Math.floor(W)!==W)continue;V+=E.get(R,z,W,$)}}w.set(V*k,R,_,D,$)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var xK={kernelName:Fm,backendName:"cpu",kernelFunc:AK};function bK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;v.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Te([r,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);let c=n.data.get(r.dataId).values,p=n.data.get(i.dataId).values,d=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,x=d.length,A=p.length,b=0,w=0,k=0,S=0;for(let E=0;E<c.length;++E)m[E]=f[b++]+(c[E]-p[w++])*h[k++]/Math.sqrt(d[S++]+u),b>=g&&(b=0),w>=A&&(w=0),k>=y&&(k=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var vK={kernelName:ko,backendName:"cpu",kernelFunc:bK};function wK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Te([r],"batchToSpaceND");let i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=Rt({inputs:{x:r},backend:n,attrs:{shape:l}}),f=hs({inputs:{x:h},backend:n,attrs:{perm:u}}),m=Rt({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Qi({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var kK={kernelName:ol,backendName:"cpu",kernelFunc:wK};function IK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=K5(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var SK={kernelName:Mm,backendName:"cpu",kernelFunc:IK};function CK(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var TK={kernelName:zm,backendName:"cpu",kernelFunc:CK},NK=xt(ga,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),EK={kernelName:ga,backendName:"cpu",kernelFunc:NK},RK=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],p=l[u];s[u]=Math.hypot(c,p)}return n.makeOutput(s,t.shape,"float32")},_K={kernelName:_p,backendName:"cpu",kernelFunc:RK};function sc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var DK={kernelName:Fp,backendName:"cpu",kernelFunc:sc};function rc(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(m=>m.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>v.sizeFromShape(m.shape)>0);if(i.length===1)return Hr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(T.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>Ji({inputs:{input:b},backend:n})),g=i.map(b=>sc({inputs:{input:b},backend:n})),y=rc({inputs:m,backend:n,attrs:{axis:a}}),x=rc({inputs:g,backend:n,attrs:{axis:a}}),A=ks({inputs:{real:y,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),A}let u=i.map(m=>{let g=v.sizeFromShape(m.shape.slice(a));return Rt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(u.map(m=>m.shape),1);let p=u[0].shape[0]===1,d=Z5(c,o,t[0].dtype,p),h=T.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var $K={kernelName:il,backendName:"cpu",kernelFunc:rc};function xI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Te([r,a],"conv2d");let p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,A=d.dataFormat==="channelsLast",b=new hn(d.outShape,r.dtype),w=v.computeStrides(r.shape),k=v.computeStrides(a.shape),S=w[0],E=A?w[1]:w[2],R=A?w[2]:1,$=A?1:w[1],_=b.strides[0],D=A?b.strides[1]:b.strides[2],C=A?b.strides[2]:1,F=A?1:b.strides[1],V=n.data.get(r.dataId).values,j=n.data.get(a.dataId).values,z=b.values;for(let Z=0;Z<d.batchSize;++Z){let W=Z*S,ee=Z*_;for(let Q=0;Q<d.outHeight;++Q){let ie=ee+Q*D,J=Q*d.strideHeight-x;for(let ae=0;ae<h;++ae){let le=J+ae*m;if(le<0||le>=d.inHeight)continue;let ye=ae*k[0],we=W+le*E;for(let Re=0;Re<d.outWidth;++Re){let _e=ie+Re*C,Be=Re*d.strideWidth-y;for(let Ue=0;Ue<f;++Ue){let ot=Be+Ue*g;if(ot<0||ot>=d.inWidth)continue;let ct=ye+Ue*k[1],dt=we+ot*R,yt=ct;for(let $e=0;$e<d.inChannels;++$e){let Tt=V[dt+$e*$];for(let wt=0;wt<d.outChannels;++wt)z[_e+wt*F]+=Tt*j[yt+wt];yt+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var PK={kernelName:po,backendName:"cpu",kernelFunc:xI};function FK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Te([r,a],"conv2dBackpropFilter");let p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",x=new hn(d.filterShape,"float32"),A=d.padInfo.left,b=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,S=new hn(r.shape,r.dtype,w),E=new hn(a.shape,a.dtype,k);for(let R=0;R<m;++R){let $=Math.max(0,Math.ceil((b-R)/h)),_=Math.min(d.outHeight,(d.inHeight+b-R)/h);for(let D=0;D<g;++D){let C=Math.max(0,Math.ceil((A-D)/f)),F=Math.min(d.outWidth,(d.inWidth+A-D)/f);for(let V=0;V<d.inChannels;++V)for(let j=0;j<d.outChannels;++j){let z=0;for(let Z=0;Z<d.batchSize;++Z)for(let W=$;W<_;++W){let ee=R+W*h-b;for(let Q=C;Q<F;++Q){let ie=D+Q*f-A;y?z+=S.get(Z,ee,ie,V)*E.get(Z,W,Q,j):z+=S.get(Z,V,ee,ie)*E.get(Z,j,W,Q)}}x.set(z,R,D,V,j)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var OK={kernelName:Lm,backendName:"cpu",kernelFunc:FK};function MK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;Te([r,a],"conv2dBackpropInput");let p=v.computeStrides(a.shape),d=v.computeStrides(r.shape),h=T.convertConv2DDataFormat(u),f=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,h),m=new hn(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[A,b,w]=p,{batchSize:k,filterHeight:S,filterWidth:E,inChannels:R,inHeight:$,inWidth:_,outChannels:D,outHeight:C,outWidth:F,strideHeight:V,strideWidth:j}=f;h=f.dataFormat;let z=S-1-f.padInfo.top,Z=E-1-f.padInfo.left,W=h==="channelsLast",ee=m.strides[0],Q=W?m.strides[1]:m.strides[2],ie=W?m.strides[2]:1,J=W?1:m.strides[1],ae=d[0],le=W?d[1]:d[2],ye=W?d[2]:1,we=W?1:d[1];for(let Re=0;Re<k;++Re)for(let _e=0;_e<R;++_e)for(let Be=0;Be<$;++Be){let Ue=Be-z,ot=Math.max(0,Math.ceil(Ue/V)),ct=Math.min(C,(S+Ue)/V);for(let dt=0;dt<_;++dt){let yt=dt-Z,$e=Math.max(0,Math.ceil(yt/j)),Tt=Math.min(F,(E+yt)/j),wt=0;for(let Qt=ot;Qt<ct;++Qt){let ys=Qt*V-Ue;for(let dn=$e;dn<Tt;++dn){let Wn=dn*j-yt,As=ae*Re+le*Qt+ye*dn,xs=A*(S-1-ys)+b*(E-1-Wn)+w*_e;for(let Rn=0;Rn<D;++Rn){let zs=y[As+we*Rn],Vn=x[xs+Rn];wt+=zs*Vn}}}let Bn=ee*Re+Q*Be+ie*dt+J*_e;g[Bn]=wt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var zK={kernelName:ho,backendName:"cpu",kernelFunc:MK};function LK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Te([r,a],"conv3d");let u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,A=g.top,b=new hn(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,S=b.values,E=v.computeStrides(r.shape),R=v.computeStrides(a.shape);for(let $=0;$<u.batchSize;++$){let _=$*E[0],D=$*b.strides[0];for(let C=0;C<u.outDepth;++C){let F=D+C*b.strides[1],V=C*u.strideDepth-y;for(let j=0;j<c;++j){let z=V+j*h;if(z<0||z>=u.inDepth)continue;let Z=j*R[0],W=_+z*E[1];for(let ee=0;ee<u.outHeight;++ee){let Q=F+ee*b.strides[2],ie=ee*u.strideHeight-A;for(let J=0;J<p;++J){let ae=ie+J*f;if(ae<0||ae>=u.inHeight)continue;let le=Z+J*R[1],ye=W+ae*E[2];for(let we=0;we<u.outWidth;++we){let Re=Q+we*u.outChannels,_e=we*u.strideWidth-x;for(let Be=0;Be<d;++Be){let Ue=_e+Be*m;if(Ue<0||Ue>=u.inWidth)continue;let ot=le+Be*R[2],ct=ye+Ue*u.inChannels,dt=ot;for(let yt=0;yt<u.inChannels;++yt){let $e=w[ct+yt];for(let Tt=0;Tt<u.outChannels;++Tt)S[Re+Tt]+=$e*k[dt+Tt];dt+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var BK={kernelName:Dp,backendName:"cpu",kernelFunc:LK};function WK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Te([r,a],"conv3dBackpropFilterV2");let u=v.computeStrides(r.shape),c=v.computeStrides(a.shape),p=T.computeConv3DInfo(r.shape,l,o,1,i),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=new hn(p.filterShape,"float32"),A=x.values,[b,w,k,S]=x.strides,E=n.data.get(a.dataId).values,[R,$,_,D]=c,C=n.data.get(r.dataId).values,[F,V,j,z]=u,Z=p.padInfo.front,W=p.padInfo.left,ee=p.padInfo.top;for(let Q=0;Q<m;++Q){let ie=Math.max(0,Math.ceil((Z-Q)/d)),J=Math.min(p.outDepth,(p.inDepth+Z-Q)/d),ae=Q*b;for(let le=0;le<g;++le){let ye=Math.max(0,Math.ceil((ee-le)/h)),we=Math.min(p.outHeight,(p.inHeight+ee-le)/h),Re=le*w+ae;for(let _e=0;_e<y;++_e){let Be=Math.max(0,Math.ceil((W-_e)/f)),Ue=Math.min(p.outWidth,(p.inWidth+W-_e)/f),ot=_e*k+Re;for(let ct=0;ct<p.inChannels;++ct){let dt=ct*S+ot;for(let yt=0;yt<p.outChannels;++yt){let $e=0;for(let Tt=0;Tt<p.batchSize;++Tt){let wt=Tt*F,Bn=Tt*R;for(let Qt=ie;Qt<J;++Qt){let dn=(Q+Qt*d-Z)*V+wt,Wn=Qt*$+Bn;for(let As=ye;As<we;++As){let Rn=(le+As*h-ee)*j+dn,zs=As*_+Wn;for(let Vn=Be;Vn<Ue;++Vn){let ta=(_e+Vn*f-W)*z+Rn,mu=Vn*D+zs;$e+=C[ta+ct]*E[mu+yt]}}}}A[dt+yt]=$e}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var VK={kernelName:Bm,backendName:"cpu",kernelFunc:WK};function UK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Te([r],"conv3dBackpropInputV2");let u=v.computeStrides(r.shape),c=v.computeStrides(a.shape),p=T.computeConv3DInfo(l,a.shape,i,1,o),d=new hn(p.inShape,"float32"),h=d.values,[f,m,g,y]=d.strides,x=n.data.get(r.dataId).values,[A,b,w,k]=u,S=n.data.get(a.dataId).values,[E,R,$,_]=c,{batchSize:D,filterDepth:C,filterHeight:F,filterWidth:V,inChannels:j,inDepth:z,inHeight:Z,inWidth:W,outChannels:ee,outDepth:Q,outHeight:ie,outWidth:J,strideDepth:ae,strideHeight:le,strideWidth:ye}=p,we=C-1-p.padInfo.front,Re=F-1-p.padInfo.top,_e=V-1-p.padInfo.left;for(let Be=0;Be<D;++Be)for(let Ue=0;Ue<j;++Ue)for(let ot=0;ot<z;++ot){let ct=ot-we,dt=Math.max(0,Math.ceil(ct/ae)),yt=Math.min(Q,(C+ct)/ae);for(let $e=0;$e<Z;++$e){let Tt=$e-Re,wt=Math.max(0,Math.ceil(Tt/le)),Bn=Math.min(ie,(F+Tt)/le);for(let Qt=0;Qt<W;++Qt){let ys=Qt-_e,dn=Math.max(0,Math.ceil(ys/ye)),Wn=Math.min(J,(V+ys)/ye),As=0;for(let xs=dt;xs<yt;++xs){let Rn=xs*ae-ct;for(let zs=wt;zs<Bn;++zs){let Vn=zs*le-Tt;for(let ea=dn;ea<Wn;++ea){let ta=ea*ye-ys,mu=A*Be+b*xs+w*zs+k*ea,Ra=E*(C-1-Rn)+R*(F-1-Vn)+$*(V-1-ta)+_*Ue;for(let na=0;na<ee;++na){let Rd=x[mu+na],gu=S[Ra+na];As+=Rd*gu}}}}h[f*Be+m*ot+g*$e+y*Qt+Ue]=As}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var GK={kernelName:Wm,backendName:"cpu",kernelFunc:UK},HK=xt(fo,e=>Math.cos(e)),jK={kernelName:fo,backendName:"cpu",kernelFunc:HK},qK=xt(mo,e=>Math.cosh(e)),XK={kernelName:mo,backendName:"cpu",kernelFunc:qK};function KK(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,[c,p,d,h]=r.shape,f=a.shape[0],[m,g]=i,y=We([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,A=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,w=v.computeStrides(r.shape),k=v.computeStrides(y.shape);for(let S=0;S<f;S++){let E=S*4,R=x[E],$=x[E+1],_=x[E+2],D=x[E+3],C=A[S];if(C>=c)continue;let F=m>1?(_-R)*(p-1)/(m-1):0,V=g>1?(D-$)*(d-1)/(g-1):0;for(let j=0;j<m;j++){let z=m>1?R*(p-1)+j*F:.5*(R+_)*(p-1);if(z<0||z>p-1){for(let Z=0;Z<g;Z++)for(let W=0;W<h;W++){let ee=W+Z*k[2]+j*k[1]+S*k[0];y.values[ee]=u}continue}if(l==="bilinear"){let Z=Math.floor(z),W=Math.ceil(z),ee=z-Z;for(let Q=0;Q<g;Q++){let ie=g>1?$*(d-1)+Q*V:.5*($+D)*(d-1);if(ie<0||ie>d-1){for(let ye=0;ye<h;ye++){let we=ye+Q*k[2]+j*k[1]+S*k[0];y.values[we]=u}continue}let J=Math.floor(ie),ae=Math.ceil(ie),le=ie-J;for(let ye=0;ye<h;ye++){let we=ye+J*w[2]+Z*w[1]+C*w[0],Re=b[we];we=ye+ae*w[2]+Z*w[1]+C*w[0];let _e=b[we];we=ye+J*w[2]+W*w[1]+C*w[0];let Be=b[we];we=ye+ae*w[2]+W*w[1]+C*w[0];let Ue=b[we],ot=Re+(_e-Re)*le,ct=Be+(Ue-Be)*le;we=ye+Q*k[2]+j*k[1]+S*k[0],y.values[we]=ot+(ct-ot)*ee}}}else for(let Z=0;Z<g;++Z){let W=g>1?$*(d-1)+Z*V:.5*($+D)*(d-1);if(W<0||W>d-1){for(let ie=0;ie<h;ie++){let J=ie+Z*k[2]+j*k[1]+S*k[0];y.values[J]=u}continue}let ee=Math.round(W),Q=Math.round(z);for(let ie=0;ie<h;ie++){let J=ie+ee*w[2]+Q*w[1]+C*w[0],ae=ie+Z*k[2]+j*k[1]+S*k[0];y.values[ae]=b[J]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var ZK={kernelName:ul,backendName:"cpu",kernelFunc:KK};function YK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Te(r,"cumprod");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=hs({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=$n(u.dtype,"int32"),d=v.makeOnesTypedArray(v.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?1:h[A];else{let b=m(y,x-1);d[A]=o?h[b]*d[b]:h[A]*d[b]}}let g=n.makeTensorInfo(u.shape,p,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=hs({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var JK={kernelName:ll,backendName:"cpu",kernelFunc:YK};function QK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Te(r,"cumsum");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=hs({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=$n(u.dtype,"int32"),d=v.makeZerosTypedArray(v.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?0:h[A];else{let b=m(y,x-1);d[A]=o?h[b]+d[b]:h[A]+d[b]}}let g=n.makeTensorInfo(u.shape,p,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=hs({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var eZ={kernelName:go,backendName:"cpu",kernelFunc:QK};function tZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=K5(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=Ek(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var nZ={kernelName:Vm,backendName:"cpu",kernelFunc:tZ};function sZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;v.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],p=l*a,d=u*a,h=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*p*d*h),g=0;for(let y=0;y<i;++y)for(let x=0;x<p;++x){let A=Math.floor(x/a),b=x%a;for(let w=0;w<d;++w){let k=Math.floor(w/a),S=w%a,E=(b*a+S)*h;for(let R=0;R<h;++R){let _=R+E+c*(k+u*(A+l*y));m[g++]=f[_]}}}return n.makeTensorInfo([i,p,d,h],r.dtype,m)}var rZ={kernelName:cl,backendName:"cpu",kernelFunc:sZ};function bI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;Te([r,a],"depthwiseConv2DNative");let c=v.computeStrides(r.shape),p=v.computeStrides(a.shape),d=l;d==null&&(d=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);let h=T.computeConv2DInfo(r.shape,a.shape,o,d,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,A=x.left,b=x.top,w=h.outChannels/h.inChannels,k=new hn(h.outShape,r.dtype),S=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,R=k.values;for(let $=0;$<h.batchSize;++$){let _=$*c[0],D=$*k.strides[0];for(let C=0;C<h.outHeight;++C){let F=D+C*k.strides[1],V=C*h.strideHeight-b;for(let j=0;j<f;++j){let z=V+j*g;if(z<0||z>=h.inHeight)continue;let Z=j*p[0],W=_+z*c[1];for(let ee=0;ee<h.outWidth;++ee){let Q=F+ee*k.strides[2],ie=ee*h.strideWidth-A;for(let J=0;J<m;++J){let ae=ie+J*y;if(ae<0||ae>=h.inWidth)continue;let le=Z+J*p[1],ye=W+ae*h.inChannels,we=Q,Re=le;for(let _e=0;_e<h.inChannels;++_e){let Be=S[ye+_e];for(let Ue=0;Ue<w;++Ue)R[we+Ue]+=Be*E[Re+Ue];we+=w,Re+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var aZ={kernelName:yo,backendName:"cpu",kernelFunc:bI};function oZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;Te([r,a],"depthwiseConv2dNativeBackpropFilter");let p=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new hn(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,A=p.outChannels/p.inChannels,b=n.data.get(r.dataId).values,w=new hn(r.shape,r.dtype,b),k=n.data.get(a.dataId).values,S=new hn(a.shape,a.dtype,k);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((x-E)/d)),$=Math.min(p.outHeight,(p.inHeight+x-E)/d);for(let _=0;_<m;++_){let D=Math.max(0,Math.ceil((y-_)/h)),C=Math.min(p.outWidth,(p.inWidth+y-_)/h);for(let F=0;F<p.outChannels;++F){let V=Math.trunc(F/A),j=F%A,z=0;for(let Z=0;Z<p.batchSize;++Z)for(let W=R;W<$;++W){let ee=E+W*d-x;for(let Q=D;Q<C;++Q){let ie=_+Q*h-y;z+=w.get(Z,ee,ie,V)*S.get(Z,W,Q,F)}}g.set(z,E,_,V,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var iZ={kernelName:Um,backendName:"cpu",kernelFunc:oZ};function lZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;Te([r,a],"depthwiseConv2DNativeBackpropInput");let p=v.computeStrides(r.shape),d=v.computeStrides(a.shape),h=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),f=new hn(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(r.dataId).values,[b,w,k]=p,S=n.data.get(a.dataId).values,[E,R,$]=d,{batchSize:_,filterHeight:D,filterWidth:C,inChannels:F,inHeight:V,inWidth:j,outChannels:z,outHeight:Z,outWidth:W,strideHeight:ee,strideWidth:Q}=h,ie=D-1-h.padInfo.top,J=C-1-h.padInfo.left,ae=z/F;for(let le=0;le<_;++le)for(let ye=0;ye<F;++ye)for(let we=0;we<V;++we){let Re=we-ie,_e=Math.max(0,Math.ceil(Re/ee)),Be=Math.min(Z,(D+Re)/ee);for(let Ue=0;Ue<j;++Ue){let ot=Ue-J,ct=Math.max(0,Math.ceil(ot/Q)),dt=Math.min(W,(C+ot)/Q),yt=0;for(let $e=_e;$e<Be;++$e){let Tt=$e*ee-Re;for(let wt=ct;wt<dt;++wt){let Bn=wt*Q-ot,Qt=b*le+w*$e+k*wt,ys=E*(D-1-Tt)+R*(C-1-Bn)+$*ye;for(let dn=0;dn<ae;++dn){let Wn=ye*ae+dn,As=A[Qt+Wn],xs=S[ys+dn];yt+=As*xs}}}m[g*le+y*we+x*Ue+ye]=yt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var uZ={kernelName:Gm,backendName:"cpu",kernelFunc:lZ};function cZ(e){let{inputs:t,backend:n}=e,{x:s}=t,r=v.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=We([r,r],s.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*r+u]=a[u];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var dZ={kernelName:Hm,backendName:"cpu",kernelFunc:cZ},pZ={kernelName:$p,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,p=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:E,dilationWidth:R,outShape:$}=T.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),_=v.sizeFromShape($),D=$.length,C=v.getArrayFromDType(s.dtype,_);for(let V=0;V<h;++V)for(let j=0;j<y;++j){let z=j*b-A.top;for(let Z=0;Z<x;++Z){let W=Z*w-A.left;for(let ee=0;ee<g;++ee){let Q=Number.MIN_SAFE_INTEGER;for(let J=0;J<k;++J){let ae=z+J*E;if(ae>=0&&ae<f)for(let le=0;le<S;++le){let ye=W+le*R;if(ye>=0&&ye<m){let we=v.locToIndex([V,ae,ye,ee],c,v.computeStrides(s.shape)),Re=v.locToIndex([J,le,ee],d,v.computeStrides(r.shape)),_e=u[we]+p[Re];_e>Q&&(Q=_e)}}}let ie=v.locToIndex([V,j,Z,ee],D,v.computeStrides($));C[ie]=Q}}}return{dataId:l.write(v.toTypedArray(C,s.dtype),$,s.dtype),shape:$,dtype:s.dtype}}},hZ={kernelName:om,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=v.toNestedArray(s.shape,u.data.get(s.dataId).values),p=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${om}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let $=v.toNestedArray(R,u.data.get(a.dataId).values),_=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let C=0;C<d;++C)for(let F=0;F<g;++F){let V=F*A-x.top;for(let j=0;j<y;++j){let z=j*b-x.left;for(let Z=0;Z<m;++Z){let W=Number.MIN_SAFE_INTEGER,ee=0,Q=0;for(let ie=0;ie<w;++ie){let J=V+ie*S;if(J>=0&&J<h)for(let ae=0;ae<k;++ae){let le=z+ae*E;if(le>=0&&le<f){let ye=c[C][J][le][Z]+p[ie][ae][Z];ye>W&&(W=ye,ee=ie,Q=ae)}}}_[ee][Q][Z]+=$[C][F][j][Z]}}}return{dataId:u.write(v.toTypedArray(_,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},fZ={kernelName:am,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=v.toNestedArray(s.shape,u.data.get(s.dataId).values),p=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${am}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let $=v.toNestedArray(R,u.data.get(a.dataId).values),_=v.makeZerosNestedTypedArray(s.shape,s.dtype);for(let C=0;C<d;++C)for(let F=0;F<g;++F){let V=F*A-x.top;for(let j=0;j<y;++j){let z=j*b-x.left;for(let Z=0;Z<m;++Z){let W=Number.MIN_SAFE_INTEGER,ee=V<0?0:V,Q=z<0?0:z;for(let ie=0;ie<w;++ie){let J=V+ie*S;if(J>=0&&J<h)for(let ae=0;ae<k;++ae){let le=z+ae*E;if(le>=0&&le<f){let ye=c[C][J][le][Z]+p[ie][ae][Z];ye>W&&(W=ye,ee=J,Q=le)}}}_[C][ee][Q][Z]+=$[C][F][j][Z]}}}return{dataId:u.write(v.toTypedArray(_,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Ih(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"sum");let i;r.dtype==="bool"?i=no({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Hr({inputs:{x:r},backend:n});let l=i.shape.length,u=v.parseAxisParam(a,i.shape),c=T.getAxesPermutation(u,l),p=u,d=i;c!=null&&(d=hs({inputs:{x:i},backend:n,attrs:{perm:c}}),p=T.getInnerMostAxes(p.length,l)),T.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,f]=T.computeOutAndReduceShapes(d.shape,p),m=T.upcastType(d.dtype,"int32"),g=Im(n,h,m),y=v.sizeFromShape(f),x=n.data.get(g.dataId).values,A=n.data.get(d.dataId).values;for(let b=0;b<x.length;++b){let w=b*y,k=0;for(let S=0;S<y;++S)k+=A[w+S];x[b]=k}if(o){let b=T.expandShapeToKeepDim(g.shape,u),w=g;g=Rt({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),c!=null&&n.disposeIntermediateTensorInfo(d),g}var mZ={kernelName:qo,backendName:"cpu",kernelFunc:Ih};function gZ(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=hs({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=Rt({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=o2({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=Ih({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var yZ={kernelName:Pp,backendName:"cpu",kernelFunc:gZ};function AZ(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Te([s,r],"eluGrad");let a=new Float32Array(v.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let u=o[l];u>=1?a[l]=i[l]:a[l]=i[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",a)}var xZ={kernelName:jm,backendName:"cpu",kernelFunc:AZ},bZ=T.ERF_P,vZ=T.ERF_A1,wZ=T.ERF_A2,kZ=T.ERF_A3,IZ=T.ERF_A4,SZ=T.ERF_A5,CZ=xt(Ac,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+bZ*n);return t*(1-((((SZ*s+IZ)*s+kZ)*s+wZ)*s+vZ)*s*Math.exp(-n*n))}),TZ={kernelName:Ac,backendName:"cpu",kernelFunc:CZ};function Tm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Rt({inputs:{x:r},backend:n,attrs:{shape:i}})}var NZ={kernelName:pl,backendName:"cpu",kernelFunc:Tm},EZ=ln((e,t)=>e/t),sx=kn(Ao,EZ),O3={kernelName:Ao,backendName:"cpu",kernelFunc:sx};function vI(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,a],c=v.sizeFromShape(u),p=v.getTypedArrayFromDType("float32",c),d=v.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let y=Qi({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=Qi({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=ks({inputs:{real:y,imag:x},backend:n}),{real:b,imag:w}=RZ(A,t,n),k=T.mergeRealAndImagArrays(b,w);for(let S=0;S<a;S++){let E=T.getComplexWithIndex(k,S);p[g*a+S]=E.real,d[g*a+S]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(A)}let h=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=ks({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function RZ(e,t,n){let s=v.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(_Z(s)){let i=M3(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",i.real),c=n.makeTensorInfo(l,"float32",i.imag),p=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),d=Hr({inputs:{x:p},backend:n}),h=O3.kernelFunc({inputs:{a:u,b:p},backend:n}),f=O3.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=T.mergeRealAndImagArrays(a,o),l=DZ(i,s,t);return T.splitRealAndImagArrays(l)}}function _Z(e){return(e&e-1)===0}function M3(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=T.mergeRealAndImagArrays(e,t),o=n/2,i=T.complexWithEvenIndex(a),l=i.real,u=i.imag,c=[l.length],p=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),h=ks({inputs:{real:p,imag:d},backend:r}),f=T.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=ks({inputs:{real:x,imag:A},backend:r}),w=M3(l,u,o,s,r),k=w.real,S=w.imag,E=[k.length],R=r.makeTensorInfo(E,"float32",k),$=r.makeTensorInfo(E,"float32",S),_=ks({inputs:{real:R,imag:$},backend:r}),D=M3(m,g,o,s,r),C=D.real,F=D.imag,V=[C.length],j=r.makeTensorInfo(V,"float32",C),z=r.makeTensorInfo(V,"float32",F),Z=ks({inputs:{real:j,imag:z},backend:r}),W=T.exponents(n,s),ee=[W.real.length],Q=r.makeTensorInfo(ee,"float32",W.real),ie=r.makeTensorInfo(ee,"float32",W.imag),J=ks({inputs:{real:Q,imag:ie},backend:r}),ae=o2({inputs:{a:J,b:Z},backend:r}),le=nc({inputs:{a:_,b:ae},backend:r}),ye=tx({inputs:{a:_,b:ae},backend:r}),we=Ji({inputs:{input:le},backend:r}),Re=Ji({inputs:{input:ye},backend:r}),_e=sc({inputs:{input:le},backend:r}),Be=sc({inputs:{input:ye},backend:r}),Ue=rc({inputs:[we,Re],backend:r,attrs:{axis:0}}),ot=rc({inputs:[_e,Be],backend:r,attrs:{axis:0}}),ct=r.data.get(Ue.dataId).values,dt=r.data.get(ot.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(ye),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(_e),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Be),r.disposeIntermediateTensorInfo(Ue),r.disposeIntermediateTensorInfo(ot),{real:ct,imag:dt}}function DZ(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=T.exponent(r*i,t,n),u=T.getComplexWithIndex(e,i);a+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(a/=t,o/=t),T.assignToTypedArray(s,a,o,r)}return s}function $Z(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Rt({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=vI(i,!1,n),u=Rt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var PZ={kernelName:qm,backendName:"cpu",kernelFunc:$Z};function rx(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||v.inferDtype(r),i=v.getArrayFromDType(o,v.sizeFromShape(s));return OZ(i,r,o),t.makeTensorInfo(s,o,i)}var FZ={kernelName:xc,backendName:"cpu",kernelFunc:rx};function OZ(e,t,n){e.fill(t)}var MZ={kernelName:fl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[o,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<o;d++){let h=d*l*i*u;for(let f=0;f<i;f++){let m=f*(l*u);for(let g=0;g<l;g++){let y=g*u;for(let x=0;x<u;x++){let A=Math.round(l-g-1),b=h+m+y+x,w=c[b];if(A>=0&&A<l){let k=A*u,S=h+m+k+x;w=c[S]}a[b]=w}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},zZ=ln((e,t)=>Math.floor(e/t)),LZ=kn(wo,zZ,null,"int32"),BZ={kernelName:wo,backendName:"cpu",kernelFunc:LZ};function WZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=xI({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){let g=m;if(c==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){let y=Rt({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=nc({inputs:{a:m,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else m=nc({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(g)}if(h){let g=m;if(c==="NCHW"&&h==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let y=Rt({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Cm(n,m,h,y,f),n.disposeIntermediateTensorInfo(y)}else m=Cm(n,m,h,i,f);n.disposeIntermediateTensorInfo(g)}return m}var VZ={kernelName:Xa,backendName:"cpu",kernelFunc:WZ};function UZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=bI({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){let g=m;m=nc({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=Cm(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var GZ={kernelName:Ka,backendName:"cpu",kernelFunc:UZ};function HZ(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=v.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,u,c,p]=T.prepareAndValidate(s,r);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);let d=n.data.get(r.dataId).values,h=n.bufferSync(s),f=Mk(d,h,s.dtype,u,i,c,p,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var jZ={kernelName:gl,backendName:"cpu",kernelFunc:HZ};function qZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Te([r,a],"gatherV2");let l=v.parseAxisParam(o,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let b=0;b<u.length;++b){let w=u[b];v.assert(w<=c-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${c-1}]`)}let p=i;i==null&&(p=0);let d=v.sizeFromShape(a.shape),h=T.segment_util.collectGatherOpShapeInfo(r,a,l,p),f=Rt({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Rt({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),A=zk(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}var XZ={kernelName:ml,backendName:"cpu",kernelFunc:qZ};function KZ(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Rt({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=vI(i,!0,n),u=Rt({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var ZZ={kernelName:Xm,backendName:"cpu",kernelFunc:KZ},YZ=xt(bc,e=>Number.isFinite(e)?1:0,"bool"),JZ={kernelName:bc,backendName:"cpu",kernelFunc:YZ},QZ=xt(vc,e=>Math.abs(e)===1/0?1:0,"bool"),eY={kernelName:vc,backendName:"cpu",kernelFunc:QZ},tY=xt(wc,e=>Number.isNaN(e)?1:0,"bool"),nY={kernelName:wc,backendName:"cpu",kernelFunc:tY};function sY(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=Uk(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var rY={kernelName:Km,backendName:"cpu",kernelFunc:sY},aY=xt(kc,e=>Math.log1p(e)),oY={kernelName:kc,backendName:"cpu",kernelFunc:aY},iY=ln((e,t)=>e&&t),lY=kn(bl,iY,null,"bool"),uY={kernelName:bl,backendName:"cpu",kernelFunc:lY},cY=xt(Ic,e=>e?0:1,"bool"),dY={kernelName:Ic,backendName:"cpu",kernelFunc:cY},pY=ln((e,t)=>e||t),hY=kn(Op,pY,null,"bool"),fY={kernelName:Op,backendName:"cpu",kernelFunc:hY};function mY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Te(r,"LRN");let u=r.shape[3],c=u-1,p=n.data.get(r.dataId).values,d=v.sizeFromShape(r.shape),h=new Float32Array(d);function f(m){let g=m%u,y=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,c),A=0;for(;y<=x;y++){let b=p[y];A+=b*b}return A}for(let m=0;m<d;m++){let g=f(m),y=p[m]*Math.pow(o+i*g,-l);h[m]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var gY={kernelName:Mp,backendName:"cpu",kernelFunc:mY};function yY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;Te(o,"LRNGrad");let p=v.sizeFromShape(o.shape),d=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),y=p;for(let x=0;x<y;x++){let A=x%d,b=x-A+Math.max(0,A-i),w=x-A+Math.min(d,A+i+1),k=0;for(let S=b;S<w;S++)k+=Math.pow(f[S],2);k=u*k+l;for(let S=b;S<w;S++){let E=-2*u*c*f[S]*m[x]/k;x===S&&(E+=Math.pow(k,-c)),E*=h[x],g[S]+=E}}return n.makeTensorInfo(o.shape,r.dtype,g)}var AY={kernelName:Zm,backendName:"cpu",kernelFunc:yY};function wI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,u=l.length,c=v.parseAxisParam(a,l),p=c,d=T.getAxesPermutation(p,u),h=i.data.get(r.dataId).values;if(d!=null){let b=new Array(u);for(let w=0;w<b.length;w++)b[w]=l[d[w]];h=J5(h,l,r.dtype,d,b),p=T.getInnerMostAxes(p.length,u),l=b}Te(r,"max"),T.assertAxesAreInnerMostDims("max",p,u);let[f,m]=T.computeOutAndReduceShapes(l,p),g=v.sizeFromShape(m),y=Hk(h,g,f,r.dtype),x=i.write(y,f,r.dtype),A=f;return o&&(A=T.expandShapeToKeepDim(f,c)),{dataId:x,shape:A,dtype:r.dtype}}var xY={kernelName:No,backendName:"cpu",kernelFunc:wI};function bY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Te(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))p=Hr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=nx(d,r.shape,r.dtype,h,c,"max");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var vY={kernelName:Ro,backendName:"cpu",kernelFunc:bY};function wY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Te(r,"maxPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),p=n.data.get(r.dataId).values,d=AI(p,r.shape,r.dtype,v.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var kY={kernelName:zp,backendName:"cpu",kernelFunc:wY};function IY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Te([r,a],"maxPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),p=n.bufferSync(a),d=dK(p,c),h=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,A=c.effectiveFilterDepth,b=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=A-1-c.padInfo.front,S=w-1-c.padInfo.left,E=b-1-c.padInfo.top,R=We(a.shape,"float32"),$=n.bufferSync(r);for(let _=0;_<c.batchSize;++_)for(let D=0;D<c.inChannels;++D)for(let C=0;C<c.inDepth;++C)for(let F=0;F<c.inHeight;++F)for(let V=0;V<c.inWidth;++V){let j=C-k,z=F-E,Z=V-S,W=0;for(let ee=0;ee<A;ee+=g){let Q=(j+ee)/h;if(!(Q<0||Q>=c.outDepth||Math.floor(Q)!==Q))for(let ie=0;ie<b;ie+=y){let J=(z+ie)/f;if(!(J<0||J>=c.outHeight||Math.floor(J)!==J))for(let ae=0;ae<w;ae+=x){let le=(Z+ae)/m;if(le<0||le>=c.outWidth||Math.floor(le)!==le)continue;let ye=A*b*w-1-d.get(_,Q,J,le,D),we=ee*b*w+ie*w+ae,Re=ye===we?1:0;if(Re===0)continue;W+=$.get(_,Q,J,le,D)*Re}}}R.set(W,_,C,F,V,D)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var SY={kernelName:Jm,backendName:"cpu",kernelFunc:IY};function CY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Te([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,p),h=n.data.get(i.dataId).values,f=We(d.outShape,i.dtype,yI(h,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,A=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,k=A-1-d.padInfo.top,S=We(i.shape,"float32"),E=n.data.get(r.dataId).values,R=We(r.shape,"float32",E);for(let $=0;$<d.batchSize;++$)for(let _=0;_<d.inChannels;++_)for(let D=0;D<d.inHeight;++D)for(let C=0;C<d.inWidth;++C){let F=D-k,V=C-w,j=0;for(let z=0;z<A;z+=y){let Z=(F+z)/m;if(!(Z<0||Z>=d.outHeight||Math.floor(Z)!==Z))for(let W=0;W<b;W+=x){let ee=(V+W)/g;if(ee<0||ee>=d.outWidth||Math.floor(ee)!==ee)continue;let Q=A*b-1-f.get($,Z,ee,_),ie=z*b+W,J=Q===ie?1:0;if(J===0)continue;j+=R.get($,Z,ee,_)*J}}S.set(j,$,D,C,_)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var TY={kernelName:Ym,backendName:"cpu",kernelFunc:CY};function NY(e,t,n,s,r){let a=v.computeStrides(t),o=nx(e,t,n,a,r,"max"),i=yI(e,t,n,r,!0,s);return[o.values,i.values]}var EY={kernelName:Qm,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Te(s,"MaxPoolWithArgmax");let u=l.data.get(s.dataId).values,c=T.computePool2DInfo(s.shape,r,a,[1,1],o),[p,d]=NY(u,s.shape,s.dtype,i,c),h=l.write(p,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:h,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function RY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=v.parseAxisParam(a,r.shape),u=T.computeOutAndReduceShapes(r.shape,i)[1],c=v.sizeFromShape(u),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));p.push(d);let h=no({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});p.push(h);let f=sx({inputs:{a:h,b:d},backend:n});p.push(f);let m=Ih({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var _Y={kernelName:_o,backendName:"cpu",kernelFunc:RY};function DY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Te(r,"min");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=hs({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];(Number.isNaN(w)||w<A)&&(A=w)}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=Rt({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var $Y={kernelName:Do,backendName:"cpu",kernelFunc:DY};function PY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Te(r,"mirrorPad");let i=a.map((A,b)=>A[0]+r.shape[b]+A[1]),l=a.map(A=>A[0]),u=a.map((A,b)=>A[0]+r.shape[b]),c=o==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(i),m=i.length,g=v.computeStrides(i),y=v.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let b=v.indexToLoc(A,m,g);for(let k=0;k<m;k++)b[k]<l[k]?b[k]=l[k]*2-b[k]-c:b[k]>=u[k]&&(b[k]=(u[k]-1)*2-b[k]+c);b=b.map((k,S)=>k-l[S]);let w=v.locToIndex(b,d,h);y[A]=p[w]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}var FY={kernelName:Po,backendName:"cpu",kernelFunc:PY},OY=ln((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),MY=kn(Sc,OY),zY={kernelName:Sc,backendName:"cpu",kernelFunc:MY},LY=sl(A7());function kI(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=v.parseAxisParam([i],r.shape),u=wI({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=T.expandShapeToKeepDim(u.shape,l),p=Rt({inputs:{x:u},backend:n,attrs:{shape:c}}),d=tx({inputs:{a:r,b:p},backend:n}),h=Pk({inputs:{x:d},backend:n}),f=Ih({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=Rt({inputs:{x:f},backend:n,attrs:{shape:c}}),g=sx({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var BY={kernelName:Xo,backendName:"cpu",kernelFunc:kI};function WY(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Te(r,"multinomial");let l=i?r:kI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=n.data.get(l.dataId).values,d=[u,a],h=v.makeZerosTypedArray(v.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let m=f*c,g=new Float32Array(c-1);g[0]=p[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+p[m+A];let y=LY.alea(o.toString()),x=f*a;for(let A=0;A<a;++A){let b=y();h[x+A]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[x+A]=w;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",h)}var VY={kernelName:e0,backendName:"cpu",kernelFunc:WY},UY=or.nonMaxSuppressionV3Impl;function GY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Te(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:p}=UY(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var HY={kernelName:kl,backendName:"cpu",kernelFunc:GY},jY=or.nonMaxSuppressionV4Impl;function qY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;Te(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:h}=jY(c,p,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var XY={kernelName:Cc,backendName:"cpu",kernelFunc:qY},KY=or.nonMaxSuppressionV5Impl;function ZY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;Te(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=KY(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var YY={kernelName:Il,backendName:"cpu",kernelFunc:ZY};function JY(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Te(r,"oneHot");let l=v.sizeFromShape(r.shape),u=new Float32Array(l*a);u.fill(i);let c=n.data.get(r.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<a&&(u[p*a+c[p]]=o);return n.makeTensorInfo([...r.shape,a],"int32",u)}var QY={kernelName:Cl,backendName:"cpu",kernelFunc:JY};function Nm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Ji({inputs:{input:s},backend:n}),a=Nm({inputs:{x:r},backend:n}),o=sc({inputs:{input:s},backend:n}),i=Nm({inputs:{x:o},backend:n}),l=ks({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return rx({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var eJ={kernelName:Vl,backendName:"cpu",kernelFunc:Nm};function II(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Ji({inputs:{input:s},backend:n}),a=II({inputs:{x:r},backend:n}),o=sc({inputs:{input:s},backend:n}),i=Nm({inputs:{x:o},backend:n}),l=ks({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return rx({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var tJ={kernelName:Sl,backendName:"cpu",kernelFunc:II};function SI(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Tm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=Tm({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=rc({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var nJ={kernelName:Tl,backendName:"cpu",kernelFunc:SI};function sJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Te(r,"pad");let i=a.map((x,A)=>x[0]+r.shape[A]+x[1]),l=a.map(x=>x[0]),u=n.data.get(r.dataId).values,c=v.sizeFromShape(r.shape),p=r.shape.length,d=v.computeStrides(r.shape),h=v.sizeFromShape(i),f=i.length,m=v.computeStrides(i),g=v.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let x=0;x<c;x++){let b=v.indexToLoc(x,p,d).map((k,S)=>k+l[S]),w=v.locToIndex(b,f,m);g[w]=u[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var CI={kernelName:Oo,backendName:"cpu",kernelFunc:sJ},rJ=ln((e,t)=>Math.pow(e,t)),aJ=kn(Mo,rJ),oJ={kernelName:Mo,backendName:"cpu",kernelFunc:aJ};function iJ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=Q5(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var lJ={kernelName:Tc,backendName:"cpu",kernelFunc:iJ},uJ=xt(Nc,e=>1/e),cJ={kernelName:Nc,backendName:"cpu",kernelFunc:uJ};function dJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Te(r,"resizeBilinear");let l=v.computeStrides(r.shape),[u,c]=i,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([p,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?h-1:h],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=0,b=y[0]/x[0],w=y[1]/x[1];for(let k=0;k<p;k++)for(let S=0;S<u;S++){let E;o?E=b*(S+.5)-.5:E=b*S;let R=Math.max(0,Math.floor(E)),$=E-R,_=Math.min(d-1,Math.ceil(E)),D=k*l[0]+R*l[1],C=k*l[0]+_*l[1];for(let F=0;F<c;F++){let V;o?V=w*(F+.5)-.5:V=w*F;let j=Math.max(0,Math.floor(V)),z=V-j,Z=Math.min(h-1,Math.ceil(V)),W=D+j*l[2],ee=C+j*l[2],Q=D+Z*l[2],ie=C+Z*l[2];for(let J=0;J<f;J++){let ae=m[W+J],le=m[ee+J],ye=m[Q+J],we=m[ie+J],Re=ae+(ye-ae)*z,_e=le+(we-le)*z,Be=Re+(_e-Re)*$;g[A++]=Be}}}return n.makeTensorInfo([p,u,c,f],"float32",g)}var pJ={kernelName:Wo,backendName:"cpu",kernelFunc:dJ};function hJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Te([a,r],"resizeBilinearGrad");let i=v.computeStrides(r.shape),[l,u,c,p]=r.shape,[,d,h]=a.shape,f=new Float32Array(l*u*c*p),m=[o&&d>1?u-1:u,o&&h>1?c-1:c],g=[o&&d>1?d-1:d,o&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(a.dataId).values,b=0;for(let w=0;w<l;w++){let k=w*i[0];for(let S=0;S<d;S++){let E=S*y,R=Math.floor(E),$=Math.min(Math.ceil(E),u-1),_=k+R*i[1],D=k+$*i[1],C=E-R,F=1-C;for(let V=0;V<h;V++){let j=V*x,z=Math.floor(j),Z=Math.min(Math.ceil(j),c-1),W=j-z,ee=1-W,Q=_+z*i[2],ie=_+Z*i[2],J=D+z*i[2],ae=D+Z*i[2],le=F*ee,ye=F*W,we=C*ee,Re=C*W;for(let _e=0;_e<p;_e++){let Be=A[b++];f[Q+_e]+=Be*le,f[ie+_e]+=Be*ye,f[J+_e]+=Be*we,f[ae+_e]+=Be*Re}}}}return n.makeTensorInfo([l,c,u,p],"float32",f)}var fJ={kernelName:n0,backendName:"cpu",kernelFunc:hJ};function mJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Te(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[u,c]=i,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?h-1:h],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=y[0]/x[0],b=y[1]/x[1],w=0;for(let k=0;k<p;k++){let S=k*l[0];for(let E=0;E<u;E++){let R=o?A*(E+.5):A*E,$=Math.min(d-1,a?Math.round(R):Math.floor(R));o&&($=Math.max(0,$));let _=S+$*l[1];for(let D=0;D<c;D++){let C=o?b*(D+.5):b*D,F=Math.min(h-1,a?Math.round(C):Math.floor(C));o&&(F=Math.max(0,F));let V=_+F*l[2];for(let j=0;j<f;j++){let z=m[V+j];g[w++]=z}}}}return n.makeTensorInfo([p,u,c,f],r.dtype,g)}var gJ={kernelName:Ec,backendName:"cpu",kernelFunc:mJ};function yJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Te([a,r],"resizeNearestNeighborGrad");let i=v.computeStrides(r.shape),l=v.computeStrides(a.shape),[u,c,p,d]=r.shape,[,h,f]=a.shape,m=new Float32Array(u*c*p*d),g=n.data.get(a.dataId).values,y=[o&&h>1?c-1:c,o&&f>1?p-1:p],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],w=1/A,k=1/b,S=Math.ceil(w)*2+2,E=Math.ceil(k)*2+2;for(let R=0;R<u;R++){let $=R*i[0];for(let _=0;_<c;_++){let D=$+_*i[1],C=Math.floor(_*w),F=Math.floor(C-S/2);for(let V=0;V<p;V++){let j=D+V*i[2],z=Math.floor(V*k),Z=Math.floor(z-E/2);for(let W=0;W<d;W++){let ee=0;for(let Q=0;Q<S;Q++){let ie=Q+F;if(ie<0||ie>=h)continue;let J=$+ie*l[1],ae=ie*A,le=Math.min(c-1,o?Math.round(ae):Math.floor(ae));if(_===le)for(let ye=0;ye<E;ye++){let we=ye+Z;if(we<0||we>=f)continue;let Re=J+we*l[2],_e=we*b,Be=Math.min(p-1,o?Math.round(_e):Math.floor(_e));V===Be&&(ee+=g[Re+W])}}m[j+W]=ee}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var AJ={kernelName:t0,backendName:"cpu",kernelFunc:yJ};function xJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Te(r,"reverse");let o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Hr({inputs:{x:r},backend:n});let l=new hn(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),d=p.slice();i.forEach(h=>d[h]=r.shape[h]-1-d[h]),l.set(u.get(...d),...p)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var bJ={kernelName:El,backendName:"cpu",kernelFunc:xJ},vJ={kernelName:Ul,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[u,c,p,d]=s.shape,[h,f]=T.getImageCenter(o,c,p),m=255,g=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<u;b++){let w=b*p*c*d;for(let k=0;k<c;k++){let S=k*(p*d);for(let E=0;E<p;E++){let R=E*d;for(let $=0;$<d;$++){let _=[u,k,E,$],D=_[2],C=_[1],F=(D-h)*y-(C-f)*g,V=(D-h)*g+(C-f)*y;F=Math.round(F+h),V=Math.round(V+f);let j=a;if(typeof a!="number"&&($===3?j=m:j=a[$]),F>=0&&F<p&&V>=0&&V<c){let Z=V*(p*d),W=F*d,ee=w+Z+W+$;j=x[ee]}let z=w+S+R+$;l[z]=j}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},wJ=xt(Rl,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),kJ={kernelName:Rl,backendName:"cpu",kernelFunc:wJ};function IJ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=Mu(h,f,o,p,u,l,i,c,0,d);return n.makeTensorInfo(o,m.dtype,m.values)}var SJ={kernelName:_l,backendName:"cpu",kernelFunc:IJ};function CJ(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function TJ(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function NJ(e,t,n,s,r,a){let o=v.getArrayFromDType("int32",n*r);for(let i=0;i<n;++i){let l=e.slice(i*s,(i+1)*s),u=i*r;for(let c=0;c<r;++c)o[u+c]=a==="left"?CJ(l,t[c+u]):TJ(l,t[c+u])}return o}function EJ(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=NJ(i,l,r.shape[0],r.shape[1],a.shape[1],o);return n.makeTensorInfo(a.shape,"int32",u)}var RJ={kernelName:s0,backendName:"cpu",kernelFunc:EJ};function _J(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Te([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=$n(r.dtype,a.dtype),p=v.makeZerosTypedArray(v.sizeFromShape(r.shape),c),d=0,h=o===0||o>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?p[d++]=l[f]:p[d++]=u[f];return n.makeTensorInfo(r.shape,c,p)}var DJ={kernelName:Dl,backendName:"cpu",kernelFunc:_J},$J=T.SELU_SCALEALPHA,PJ=T.SELU_SCALE,FJ=xt(Rc,e=>e>=0?PJ*e:$J*(Math.exp(e)-1)),OJ={kernelName:Rc,backendName:"cpu",kernelFunc:FJ},MJ=xt(_c,e=>e<0?-1:e>0?1:0),zJ={kernelName:_c,backendName:"cpu",kernelFunc:MJ},LJ=xt(Go,e=>Math.sin(e)),BJ={kernelName:Go,backendName:"cpu",kernelFunc:LJ},WJ=xt(Pl,e=>Math.sinh(e)),VJ={kernelName:Pl,backendName:"cpu",kernelFunc:WJ},UJ=11920928955078125e-23,Tv=Math.log(UJ)+2,GJ=xt(Dc,e=>{let t=e>-Tv,n=e<Tv,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),HJ={kernelName:Dc,backendName:"cpu",kernelFunc:GJ};function jJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Te([r],"spaceToBatchND");let i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let u=CI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),p=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=Rt({inputs:{x:u},backend:n,attrs:{shape:c}}),x=hs({inputs:{x:m},backend:n,attrs:{perm:p}}),w=Rt({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),w}var qJ={kernelName:Fl,backendName:"cpu",kernelFunc:jJ};function XJ(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[p,d,h,f,m]=Qk(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var KJ={kernelName:Bp,backendName:"cpu",kernelFunc:XJ};function ZJ(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,p]=eI(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var YJ={kernelName:$c,backendName:"cpu",kernelFunc:ZJ};function JJ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=ex(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var QJ={kernelName:Wp,backendName:"cpu",kernelFunc:JJ};function eQ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=ex(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var tQ={kernelName:Vp,backendName:"cpu",kernelFunc:eQ};function nQ(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=T.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m;switch(a.dtype){case"bool":{let g=n.bufferSync(a),y=Boolean(n.data.get(o.dataId).values[0]);m=Mu(f,g,i,d,c,u,l,p,y,h);break}case"float32":{let g=n.bufferSync(a),y=n.data.get(o.dataId).values[0];m=Mu(f,g,i,d,c,u,l,p,y,h);break}case"int32":{let g=n.bufferSync(a),y=n.data.get(o.dataId).values[0];m=Mu(f,g,i,d,c,u,l,p,y,h);break}case"string":{let g=n.bufferSync(a),y=v.decodeString(n.data.get(o.dataId).values[0]);m=Mu(f,g,i,d,c,u,l,p,y,h);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}var sQ={kernelName:Up,backendName:"cpu",kernelFunc:nQ};function rQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[i]=p;let h=Qi({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[i]+=p,h})}var aQ={kernelName:Ol,backendName:"cpu",kernelFunc:rQ},oQ={kernelName:Pc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Te(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},iQ=xt(Jo,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),lQ={kernelName:Jo,backendName:"cpu",kernelFunc:iQ};function uQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s;Te(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=Rt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ut.computeOutShape(x,A,b),S=Qi({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});w=Rt({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(S)}else{let k=n.bufferSync(r),S=nI(h,k,b,x);w=n.makeTensorInfo(f,S.dtype,S.values)}return w}var cQ={kernelName:Ml,backendName:"cpu",kernelFunc:uQ};function dQ(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.data.get(c.dataId).values,h=n.data.get(p.dataId).values,[f,m]=sI(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var pQ={kernelName:Gp,backendName:"cpu",kernelFunc:dQ};function hQ(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[u,c,p]=rI(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var fQ={kernelName:r0,backendName:"cpu",kernelFunc:hQ};function mQ(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=aI(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var gQ={kernelName:a0,backendName:"cpu",kernelFunc:mQ},yQ=xt(zl,e=>Math.tan(e)),AQ={kernelName:zl,backendName:"cpu",kernelFunc:yQ},xQ=xt(Yo,e=>Math.tanh(e)),bQ={kernelName:Yo,backendName:"cpu",kernelFunc:xQ};function vQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Te(r,"tile");let o=iI(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var wQ={kernelName:ya,backendName:"cpu",kernelFunc:vQ};function kQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Te(r,"topk");let i=n.data.get(r.dataId).values,[l,u]=uI(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var IQ={kernelName:Ll,backendName:"cpu",kernelFunc:kQ};function SQ(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=n,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=v.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],w=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));w.fill(l);let k=s.data.get(r.dataId).values,S=s.data.get(a.dataId).values;for(let R=0;R<c;++R){let $=a.shape[0]===1?S:S.subarray(R*8,R*8+8);for(let _=0;_<f;++_)for(let D=0;D<m;++D)for(let C=0;C<h;++C){let F,V=$[6]*D+$[7]*_+1;if(V===0)continue;let j=($[0]*D+$[1]*_+$[2])/V,z=($[3]*D+$[4]*_+$[5])/V,Z=Nv(j,d,i),W=Nv(z,p,i);switch(o){case"nearest":F=_Q(k,p,d,x,A,b,R,W,Z,C,l);break;case"bilinear":F=DQ(k,p,d,x,A,b,R,W,Z,C,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let ee=R*x+_*A+D*b+C;w[ee]=F}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}var CQ={kernelName:Bl,backendName:"cpu",kernelFunc:SQ};function Nv(e,t,n){switch(n){case"reflect":return TQ(e,t);case"wrap":return NQ(e,t);case"nearest":return RQ(e,t);case"constant":default:return EQ(e,t)}}function TQ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return v.clamp(0,n,t-1)}function NQ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return v.clamp(0,n,t-1)}function EQ(e,t){return e}function RQ(e,t){return v.clamp(0,e,t-1)}function np(e,t,n,s,r,a,o,i,l,u,c){let p=o*s+i*r+l*a+u;return 0<=i&&i<t&&0<=l&&l<n?e[p]:c}function _Q(e,t,n,s,r,a,o,i,l,u,c){let p=Math.round(i),d=Math.round(l);return np(e,t,n,s,r,a,o,p,d,u,c)}function DQ(e,t,n,s,r,a,o,i,l,u,c){let p=Math.floor(i),d=Math.floor(l),h=p+1,f=d+1,m=(f-l)*np(e,t,n,s,r,a,o,p,d,u,c)+(l-d)*np(e,t,n,s,r,a,o,p,f,u,c),g=(f-l)*np(e,t,n,s,r,a,o,h,d,u,c)+(l-d)*np(e,t,n,s,r,a,o,h,f,u,c);return(h-i)*m+(i-p)*g}function $Q(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Te(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=cI(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var PQ={kernelName:o0,backendName:"cpu",kernelFunc:$Q};function FQ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),u=0;for(let h=0;h<o;h++)h!==a&&(l[u++]=r.shape[h]);let c=new Array(o).fill(0),p=r.shape.slice();p[a]=1;let d=new Array(i);for(let h=0;h<d.length;h++){c[a]=h;let f=Qi({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[h]=Rt({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}var OQ={kernelName:Wl,backendName:"cpu",kernelFunc:FQ};function MQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Te(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,u=[],c=[],p=i-l,d=a;for(let f=0;f<p;++f){let m=Tm({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<o;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=Dk({inputs:{a:g,b:d},backend:n}),x=no({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),A=o2({inputs:{a:x,b:r},backend:n}),b=Ih({inputs:{x:A},backend:n,attrs:{axis:0,keepDims:!1}});u.push(b),c.push(g),c.push(y),c.push(x),c.push(A),c.push(b)}let h=SI({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var zQ={kernelName:Hp,backendName:"cpu",kernelFunc:MQ},LQ=[LX,Dq,WX,UX,zq,HX,qX,KX,YX,QX,tK,sK,aK,lK,cK,hK,mK,yK,xK,MX,vK,kK,SK,TK,Oq,Bq,EK,$q,_K,$K,PK,OK,zK,BK,VK,GK,jK,XK,ZK,JK,eZ,nZ,rZ,aZ,iZ,uZ,dZ,pZ,hZ,fZ,yZ,RX,xZ,Wq,TZ,Vq,NZ,Gq,PZ,FZ,MZ,jq,BZ,VZ,GZ,jZ,XZ,Xq,Zq,Pq,ZZ,DK,JZ,eY,nY,_X,Jq,eX,rY,nX,oY,uY,dY,fY,gY,AY,xY,rX,vY,kY,SY,TY,EY,_Y,$Y,oX,FY,zY,VY,lX,cX,HY,XY,YY,pX,QY,tJ,nJ,CI,oJ,$X,mX,lJ,Fq,O3,cJ,PX,FX,OX,pJ,fJ,gJ,AJ,bJ,vJ,kJ,yX,SJ,RJ,DJ,OJ,xX,zJ,BJ,VJ,bX,BY,HJ,qJ,KJ,YJ,QJ,tQ,sQ,aQ,kX,oQ,SX,lQ,cQ,pQ,fQ,gQ,EX,mZ,AQ,bQ,wQ,IQ,CQ,hX,PQ,OQ,zQ,eJ];for(let e of LQ)ar(e);var TI={};Ve(TI,{assertNotComplex:()=>Yc,bindCanvasToFramebuffer:()=>ZQ,bindColorTextureToFramebuffer:()=>Kf,bindTextureToProgramUniformSampler:()=>VI,bindTextureUnit:()=>LI,bindVertexBufferToProgramAttribute:()=>z3,callAndCheck:()=>Ie,canBeRepresented:()=>NI,createFragmentShader:()=>_I,createFramebuffer:()=>zI,createProgram:()=>DI,createStaticIndexBuffer:()=>FI,createStaticVertexBuffer:()=>PI,createTexture:()=>OI,createVertexShader:()=>RI,getBatchDim:()=>el,getExtensionOrThrow:()=>sp,getFramebufferErrorMessage:()=>UI,getMaxTexturesInShader:()=>qI,getNumChannels:()=>XQ,getProgramUniformLocation:()=>WI,getProgramUniformLocationOrThrow:()=>BI,getRowsCols:()=>tl,getShapeAs3D:()=>Zf,getTextureShapeFromLogicalShape:()=>HI,getWebGLDisjointQueryTimerVersion:()=>XI,getWebGLErrorMessage:()=>EI,getWebGLMaxTextureSize:()=>jI,hasExtension:()=>Gs,isCapableOfRenderingToFloatTexture:()=>KI,isDownloadFloatTextureEnabled:()=>ZI,isReshapeFree:()=>kp,isWebGLFenceEnabled:()=>YI,isWebGLVersionEnabled:()=>B3,linkProgram:()=>$I,logShaderSourceAndInfoLog:()=>ox,resetMaxTextureSize:()=>YQ,resetMaxTexturesInShader:()=>JQ,unbindColorTextureFromFramebuffer:()=>L3,unbindTextureUnit:()=>KQ,validateFramebuffer:()=>rp,validateProgram:()=>Xf,validateTextureSize:()=>MI});var Pi={},Zg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i2(e,t){Pi[e]=t}function Nr(e,t){if(!(e in Pi)||t!=null){let s=WQ(e,t);if(s!==null)Pi[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=Pi[e];return n==null||n.isContextLost()?(delete Pi[e],Nr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Pi[e])}function BQ(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function WQ(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?BQ(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Pi[e]},!1),e===1?n.getContext("webgl",Zg)||n.getContext("experimental-webgl",Zg):n.getContext("webgl2",Zg)}var wp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(wp||(wp={}));var Us;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Us||(Us={}));var In;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(In||(In={}));function Sh(e,t){return[t,e]}function VQ(e,t){return e*t}function Bf(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function Zc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function UQ(e,t){let[n,s]=Zc(e,t);return n*s*4}function ax(e,t){let n=e,s,r,a,o,i,l,u,c,p,d;return Y().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function Ie(e,t){let n=t();return Y().getBool("DEBUG")&&GQ(e),n}function GQ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+EI(e,t))}var HQ=596e-10,jQ=65504;function NI(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||HQ<Math.abs(e)&&Math.abs(e)<jQ)}function EI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function sp(e,t){return ba(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function RI(e,t){let n=ba(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function _I(e,t){let n=ba(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),Y().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw ox(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var qQ=/ERROR: [0-9]+:([0-9]+):/g;function ox(e,t){let n=qQ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((p,d)=>v.rightPad((d+1).toString(),a)+p),i=0;for(let p=0;p<o.length;p++)i=Math.max(o[p].length,i);let l=o.slice(0,s-1),u=o.slice(s-1,s),c=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function DI(e){return ba(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function $I(e,t){if(Ie(e,()=>e.linkProgram(t)),!Y().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Xf(e,t){if(Ie(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function PI(e,t){let n=ba(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function FI(e,t){let n=ba(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function XQ(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function OI(e){return ba(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function MI(e,t){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function zI(e){return ba(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function z3(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),Ie(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),Ie(e,()=>e.enableVertexAttribArray(i)),!0)}function LI(e,t,n){GI(e,n),Ie(e,()=>e.activeTexture(e.TEXTURE0+n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function KQ(e,t){GI(e,t),Ie(e,()=>e.activeTexture(e.TEXTURE0+t)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function BI(e,t,n){return ba(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function WI(e,t,n){return e.getUniformLocation(t,n)}function VI(e,t,n,s){Ie(e,()=>LI(e,t,s)),Ie(e,()=>e.uniform1i(n,s))}function ZQ(e){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),Ie(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Kf(e,t,n){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function L3(e,t){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function rp(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+UI(e,t))}function UI(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ba(e,t,n){let s=Ie(e,()=>t());if(s==null)throw new Error(n);return s}function GI(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function el(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function tl(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Zf(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[el(e),...tl(e)]),t}function HI(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?v.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let s=v.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=el(e),a=2,o=2;return e.length&&([a,o]=tl(e)),s=r*(a/2)*(o/2),v.sizeToSquarishShape(s).map(i=>i*2)}return v.sizeToSquarishShape(s)}function Wf(e){return e%2===0}function kp(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Wf(n)&&Wf(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Wf(e[0])&&Wf(t[0])}var Yf,Jf;function jI(e){if(Yf==null){let t=Nr(e);Yf=t.getParameter(t.MAX_TEXTURE_SIZE)}return Yf}function YQ(){Yf=null}function JQ(){Jf=null}function qI(e){if(Jf==null){let t=Nr(e);Jf=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Jf)}function XI(e){if(e===0)return 0;let t,n=Nr(e);return Gs(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Gs(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Gs(e,t){return e.getExtension(t)!=null}function B3(e){try{if(Nr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function KI(e){if(e===0)return!1;let t=Nr(e);if(e===1){if(!Gs(t,"OES_texture_float"))return!1}else if(!Gs(t,"EXT_color_buffer_float"))return!1;return W3(t)}function ZI(e){if(e===0)return!1;let t=Nr(e);if(e===1){if(!Gs(t,"OES_texture_float")||!Gs(t,"WEBGL_color_buffer_float"))return!1}else{if(Gs(t,"EXT_color_buffer_float"))return W3(t);let s="EXT_color_buffer_half_float";if(Gs(t,s)){let r=t.getExtension(s);return QQ(t,r)}return!1}return W3(t)}function W3(e){let t=ax(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function QQ(e,t){let n=ax(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function YI(e){return e!==2?!1:Nr(e).fenceSync!=null}function Yc(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Pe=Y();Pe.registerFlag("HAS_WEBGL",()=>Pe.getNumber("WEBGL_VERSION")>0);Pe.registerFlag("WEBGL_VERSION",()=>B3(2)?2:B3(1)?1:0);Pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Pe.get("WEBGL_VERSION")===2);Pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Pe.registerFlag("WEBGL_PACK",()=>Pe.getBool("HAS_WEBGL"));Pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_CLIP",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_PACK_REDUCE",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_CONV_IM2COL",()=>Pe.getBool("WEBGL_PACK"));Pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>jI(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>qI(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Pe.getNumber("WEBGL_VERSION");return e===0?0:XI(e)});Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Kp.isMobile());Pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>KI(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Pe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ZI(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>YI(Pe.getNumber("WEBGL_VERSION")));Pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Pe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Kp.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function ns(){let e,t,n,s,r,a,o,i,l,u;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function Ql(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function l2(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function eee(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function tee(e,t,n="index"){let s=e.map((a,o)=>o),r=eee(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function ix(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function lx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var JI=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:QI}=T;function nee(e,t,n){let s=[];if(e.forEach(h=>{let f=v.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=ux(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>see(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=ns(),l=oee(i),u,c,p=uee(i);return t.isPacked?(u=ree(t.logicalShape,o,n.enableShapeUniforms),c=lee(i)):(u=aee(t.logicalShape,o,n.enableShapeUniforms),c=iee(i)),n.packedInputs&&(p+=hee),[p,l,c,r,u,a,n.userCode].join(`
`)}function Jc(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return See(e,t);case 1:return Tee(e,t);case 2:return Eee(e,t);case 3:return _ee(e,t);case 4:return $ee(e,t);case 5:return Pee(e);case 6:return Fee(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function eS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return Iee(e);case 1:return Cee(e,t);case 2:return Nee(e,t);case 3:return Ree(e,t);default:return Dee(e,t)}}function see(e,t,n=!1,s){let r="";n?r+=eS(e,s):r+=Jc(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=Oee(e,t):r+=Mee(e,t)),r}function ree(e,t,n){switch(e.length){case 0:return tS();case 1:return fee(e,t,n);case 2:return wee(e,t,n);case 3:return gee(e,t,n);default:return Aee(e,t,n)}}function aee(e,t,n){switch(e.length){case 0:return tS();case 1:return mee(e,t,n);case 2:return kee(e,t,n);case 3:return yee(e,t,n);case 4:return xee(e,t,n);case 5:return bee(e,t);case 6:return vee(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function oee(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function iee(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function lee(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function uee(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${cee}
    ${dee}
    ${pee}
  `}var cee=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,dee=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,pee=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,hee=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function tS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function fee(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function mee(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function gee(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function yee(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${l2(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=Ql(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function Aee(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i=`
      int b${u} = index / ${o};
      index -= b${u} * ${o};
    `+i,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function xee(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${l2(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=Ql(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function bee(e,t){let n=Ql(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function vee(e,t){let n=Ql(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function wee(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function kee(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function eu(e){return`offset${e}`}function Iee(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=ns();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function See(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=eu(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function Cee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=ns();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Tee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Qc(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=eu(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function Nee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=ns();if(a!=null&&v.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Eee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&v.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let d=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=v.squeezeShape(n),l=o;if(l.length<n.length){let d=ed(e,l),h=["row","col"];return`
      ${Jc(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${td(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Qc(e)}
      }
    `;let u=a[0],c=a[1],p=eu(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function Ree(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let d=n.slice(1),h=[1,2],f=ed(e,d),m=["b","row","col"];return`
        ${eS(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${td(m,h)});
        }
      `}let i=ns();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],u=o[1],c=Math.ceil(n[2]/2),p=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function _ee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=v.squeezeShape(n),u=i;if(u.length<n.length){let m=ed(e,u),g=["row","col","depth"];return`
        ${Jc(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${td(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${Qc(e)}
      }
    `;let c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=eu(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function Dee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=ns();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],p=Math.ceil(a[o-1]/2),d=p*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,d*=a[o-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}function $ee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:u}=v.squeezeShape(n);if(l.length<n.length){let x=ed(e,l),A=["row","col","depth","depth2"];return`
      ${Jc(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${td(A,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${Qc(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;let y=eu(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${d}, ${h}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function Pee(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=v.squeezeShape(t);if(l.length<t.length){let m=ed(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${Jc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${td(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${Qc(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===i&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=eu(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Fee(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=v.squeezeShape(t);if(r.length<t.length){let g=ed(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Jc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${td(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Qc(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=eu(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Qc(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Oee(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=QI(e.shapeInfo.logicalShape,t.logicalShape),l=St(o),u=o-a,c,p=["x","y","z","w","u","v"];a===0?c="":o<2&&i.length>=1?c="coords = 0;":c=i.map(x=>`coords.${p[x+u]} = 0;`).join(`
`);let d="";o<2&&a>0?d="coords":d=e.shapeInfo.logicalShape.map((x,A)=>`coords.${p[A+u]}`).join(", ");let h="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,y=v.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,A=a-1;i.indexOf(x)>-1&&i.indexOf(A)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(A)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${h}
    }
  `}function Mee(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=St(l),c=QI(e.shapeInfo.logicalShape,t.logicalShape),p=l-i,d,h=["x","y","z","w","u","v"];i===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${h[m+p]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function St(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ux(e,t,n){let{newShape:s,keptDims:r}=v.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!v.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function ed(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function td(e,t){return t.map(n=>e[n]).join(", ")}function zee(e,t,n,s){let r=n.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=nee(r,o,t),l=_I(e.gl,i),u=e.createProgram(l);return Y().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o},nS(e,t,u))}function nS(e,t,n){let s={},r={},a={},o=[],i,l,u,c=null,p=null;p=e.getUniformLocation(n,"NAN",!1),Y().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h=0;h<t.variableNames.length;h++){let f=t.variableNames[h];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),a[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((h,f)=>{o[f]=e.getUniformLocation(n,h.name,d)}),{uniformLocations:s,customUniformLocations:o,infLoc:c,nanLoc:p,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}}function Ev(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!v.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!v.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function Lee(e,t,n,s,r){t.program.enableShapeUniforms||(Ev(t.inShapeInfos,n),Ev([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,u)=>{let c=t.program.variableNames[u],p=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],h=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(h){let{uniformShape:m}=ux(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),p!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(p,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(p,m)}return}l.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,p,u)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,u)=>{let c=t.customUniformLocations[u],p=r[u];if(l.type==="float")e.gl.uniform1fv(c,p);else if(l.type==="vec2")e.gl.uniform2fv(c,p);else if(l.type==="vec3")e.gl.uniform3fv(c,p);else if(l.type==="vec4")e.gl.uniform4fv(c,p);else if(l.type==="int")e.gl.uniform1iv(c,p);else if(l.type==="ivec2")e.gl.uniform2iv(c,p);else if(l.type==="ivec3")e.gl.uniform3iv(c,p);else if(l.type==="ivec4")e.gl.uniform4iv(c,p);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function Bee(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=ux(e.packedInputs,o.shape,l),d="",h="",f="";if(c.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(c.length===2&&!e.packedInputs)h=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){let w=v.computeStrides(c);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=o.shape.length,g=c.length===2&&v.arraysEqual(o.shape,l),y=v.sizeFromShape(o.shape)===1,x=T.getBroadcastDims(o.shape,n.shape),A=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),b=e.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${A}_${u?p:""}_${c.length}_${y}_${x}_${g}_${d}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${Y().getNumber("WEBGL_VERSION")}`,a}function gs(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var Wee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=wp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ns();this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?l2(["r","c","d"],e):Ql(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},Vee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=wp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ns();this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?l2(["r","c","d"],e):Ql(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},Uee=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Us.DOWNLOAD;let t=ns();this.outputShape=e,this.userCode=`
      ${JI}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},Gee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Us.DOWNLOAD;let t=ns();this.outputShape=e,this.userCode=`
      ${JI}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},Hee=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ns();this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?lx():ix(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},jee=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ns();this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?lx():ix(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},sS={};Ve(sS,{bindVertexProgramAttributeStreams:()=>pS,createBufferFromOutputTexture:()=>mS,createFloat16MatrixTexture:()=>lS,createFloat16PackedMatrixTexture:()=>dS,createFloat32MatrixTexture:()=>iS,createIndexBuffer:()=>oS,createPackedMatrixTexture:()=>cS,createUnsignedBytesMatrixTexture:()=>uS,createVertexBuffer:()=>aS,createVertexShader:()=>rS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>yS,downloadFloat32MatrixFromBuffer:()=>gS,downloadMatrixFromPackedOutputTexture:()=>xS,downloadPackedMatrixFromBuffer:()=>AS,getInternalFormatForFloat16MatrixTexture:()=>dx,getInternalFormatForFloat16PackedMatrixTexture:()=>fx,getInternalFormatForFloat32MatrixTexture:()=>cx,getInternalFormatForPackedMatrixTexture:()=>hx,getInternalFormatForUnsignedBytesMatrixTexture:()=>px,uploadDenseMatrixToTexture:()=>hS,uploadPixelDataToTexture:()=>fS});function rS(e){let t=ns(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return RI(e,n)}function aS(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return PI(e,t)}function oS(e){let t=new Uint16Array([0,1,2,2,1,3]);return FI(e,t)}function Ch(e,t,n,s,r,a){MI(t,n);let o=OI(e),i=e.TEXTURE_2D;return Ie(e,()=>e.bindTexture(i,o)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?Ie(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):Ie(e,()=>e.texStorage2D(i,1,s,t,n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function cx(e){return e.internalFormatFloat}function iS(e,t,n,s){let[r,a]=Sh(t,n);return Ch(e,r,a,cx(s),s.textureFormatFloat,e.FLOAT)}function dx(e){return e.internalFormatHalfFloat}function lS(e,t,n,s){let[r,a]=Sh(t,n);return Ch(e,r,a,dx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function px(e){return e.downloadTextureFormat}function uS(e,t,n,s){let[r,a]=Sh(t,n);return Ch(e,r,a,px(s),e.RGBA,e.UNSIGNED_BYTE)}function hx(e){return e.internalFormatPackedFloat}function cS(e,t,n,s){let[r,a]=Zc(t,n);return Ch(e,r,a,hx(s),e.RGBA,e.FLOAT)}function fx(e){return e.internalFormatPackedHalfFloat}function dS(e,t,n,s){let[r,a]=Zc(t,n);return Ch(e,r,a,fx(s),e.RGBA,s.textureTypeHalfFloat)}function pS(e,t,n){return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),z3(e,t,"clipSpacePos",n,3,20,0)&&z3(e,t,"uv",n,2,20,12)}function hS(e,t,n,s,r,a){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Y().getNumber("WEBGL_VERSION")===2?Ie(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function fS(e,t,n){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?Ie(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Y().getNumber("WEBGL_VERSION")===2?Ie(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function mS(e,t,n,s){let r=e.createBuffer();Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return Ie(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function gS(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function yS(e,t,n,s){let[r,a]=Sh(t,n),o=4,i=new Uint8Array(VQ(t*n,o));return Ie(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function AS(e,t,n,s,r,a,o,i){let l=e,u=new Float32Array(UQ(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function xS(e,t,n){let s=new Float32Array(t*n*4);return Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var Uu=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,i2(t,e)):this.gl=Nr(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Y().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=sp(this.gl,r),Gs(this.gl,a))this.textureHalfFloatExtension=sp(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Gs(this.gl,s))this.colorBufferHalfFloatExtension=sp(this.gl,s);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Gs(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Gs(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=aS(this.gl),this.indexBuffer=oS(this.gl),this.framebuffer=zI(this.gl),this.textureConfig=ax(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ie(e,()=>e.finish()),Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.deleteFramebuffer(this.framebuffer)),Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ie(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),iS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),lS(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),uS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),fS(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),hS(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),dS(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),cS(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(L3(this.gl,this.framebuffer),this.outputTexture=null),Ie(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>yS(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return AS(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return gS(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=mS(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>xS(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=rS(t));let n=DI(t);return Ie(t,()=>t.attachShader(n,this.vertexShader)),Ie(t,()=>t.attachShader(n,e)),$I(t,n),this.debug&&Xf(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=pS(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ie(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Xf(this.gl,this.program),Ie(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?BI(this.gl,e,t):WI(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ie(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),VI(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=Zc(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Xf(this.gl,this.program),rp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ie(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=sp(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=qee(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Kf(this.gl,e,this.framebuffer),this.debug&&rp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Kf(this.gl,this.outputTexture,this.framebuffer),this.debug&&rp(this.gl)):L3(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;Kf(s,e,this.framebuffer),this.debug&&rp(s),this.outputTexture=e,Ie(s,()=>s.viewport(0,0,t,n)),Ie(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function qee(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:Xee,bincountImpl:bS,bincountReduceImpl:Kee,ceilImpl:Zee,concatImpl:Yee,equalImpl:Jee,expImpl:Qee,expm1Impl:ete,floorImpl:tte,gatherNdImpl:nte,gatherV2Impl:ste,greaterImpl:rte,greaterEqualImpl:ate,lessImpl:ote,lessEqualImpl:ite,linSpaceImpl:lte,logImpl:ute,maxImpl:cte,maximumImpl:dte,minimumImpl:pte,multiplyImpl:hte,negImpl:fte,notEqualImpl:mte,prodImpl:gte,rangeImpl:yte,rsqrtImpl:Ate,scatterImpl:xte,sigmoidImpl:bte,simpleAbsImpl:vS,sliceImpl:vte,sparseFillEmptyRowsImpl:wte,sparseReshapeImpl:kte,sparseSegmentReductionImpl:wS,sqrtImpl:Ite,stridedSliceImpl:Ste,stringNGramsImpl:Cte,stringSplitImpl:Tte,stringToHashBucketFastImpl:Nte,subImpl:Ete,tileImpl:Rte,topKImpl:_te,transposeImpl:mx,uniqueImpl:Dte}=q5;function kS(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Zn(e,t){return t===1?[e]:kS(e,t)}function $te(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var Pte=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=gs(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Zn("rc",this.rank),n=St(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},IS=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${Fte(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?lx():ix(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Fte(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?tee(["r","c","d"],"inputShape"):Ql(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var Ote=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=_v(t,n),r=Dv(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=Rv(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===In.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===In.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===In.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===In.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===In.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=_v(n,s),a=Dv(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=Rv(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Mte(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Rv(e,t,n,s,r){let a=zte(t,s),o;if(r){let[l,u]=Zc(e[0],e[1]);o=l*u}else{let[l,u]=Sh(e[0],e[1]);o=l*u}let i=Mte(n,a);return o*i}function zte(e,t){switch(e){case In.PACKED_2X2_FLOAT32:return hx(t);case In.PACKED_2X2_FLOAT16:return fx(t);case In.UNPACKED_FLOAT32:return cx(t);case In.UNPACKED_FLOAT16:return dx(t);case In.PACKED_4X1_UNSIGNED_BYTE:return px(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function Lte(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?In.PACKED_2X2_FLOAT32:In.UNPACKED_FLOAT32:e?In.PACKED_2X2_FLOAT16:In.UNPACKED_FLOAT16}function _v(e,t){if(e===Us.UPLOAD)return In.PACKED_2X2_FLOAT32;if(e===Us.RENDER||e==null)return Lte(t);if(e===Us.DOWNLOAD||e===Us.PIXELS)return In.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Dv(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ia=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},lr="if (isnan(x)) return x;",Bte="return x;",$v="return abs(x);",Wte="return (x >= 0.0) ? x : (exp(x) - 1.0);",Vte=lr+`
  return (x < 0.0) ? 0.0 : x;
`,Ute=lr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ru="return x;",Gte="return 1.0 / (1.0 + exp(-1.0 * x));",Hte="return x;",jte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,qte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Xte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Kte="return 1.0 / (1.0 + exp(-1.0 * x));",Mi=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},Zte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length);let t=e.length,n=Zn("rc",t),s=St(t),r=$te(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},Yte=or.whereImpl,Jte=1e-7,Qte=1e-4,Vf={};function ene(e){return e in Vf||(Vf[e]={}),Vf[e]}var tne=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),nne=600;function sne(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*nne/1024/1024}var nd=class extends oc{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Uu)t=e;else{let n=Nr(Y().getNumber("WEBGL_VERSION"),e);t=new Uu(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Nr(Y().getNumber("WEBGL_VERSION"));t=new Uu(n),this.binaryCache=ene(Y().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Ote(this.gpgpu),this.numMBBeforeWarning=sne(),this.texData=new Np(this,nn())}nextDataId(){return nd.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:Us.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:Us.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let p;i?p=new Mi(o,Ru):p=new ia(o,Ru);let d=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,u;l&&(u=v.now());let c;if(s==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=T.mergeRealAndImagArrays(p,d)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new Mi(s,Ru):h=new ia(s,Ru);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let h=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...Bf(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];c=T.mergeRealAndImagArrays(f,m)}else if(l==null)c=this.getValuesFromTexture(e);else{let h=v.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){let h=this.gpgpu.gl;Ie(h,()=>h.deleteBuffer(l))}let p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&nn().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,isPacked:i,texture:l}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;i?d=new Mi(r,Ru):d=new ia(r,Ru);let h=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:o}],o),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),c=nn().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:c},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return We(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!NI(n))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=v.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Bf(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let a=Y().getBool("WEBGL_PACK")&&s===!0,o=a?Zf(t):t,i=a?new Gee(o):new Uee(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=v.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=tne){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Yte(e.shape,t)}packedUnaryOp(e,t,n){let s=new Mi(e.shape,t),r=this.compileAndRun(s,[e],n);return nn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=vS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,$v,e.dtype);let t=new ia(e.shape,$v),n=this.compileAndRun(t,[e]);return nn().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return nn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new Zte(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Pte(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[el(e.shape),...tl(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[el(t),...tl(t)],a=new IS(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let p=v.sizeFromShape(r),d=t[0]*t[1]*4;v.assert(p<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=Zf(r),i;s?i=new Vee(o):i=new Wee(o);let l=!0,u=[t!=null?t:Bf(o)],c=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,u,l,t);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===wp.DENSE){let g=a!=null?a:Bf(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),v.sizeFromShape(o.shape)===0)return i.values=v.getTypedArrayFromDType(o.dtype,0),o;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&v.sizeFromShape(g.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!kp(y.shape,g.shape)){let x=g,A=g.shape;g.shape=y.shape,g=this.packedReshape(g,A),l.push(g),y=this.texData.get(g.dataId),x.shape=A}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(o.dataId);let c={shape:o.shape,texData:i,isUniform:!1},p=Bee(e,u,c),d=this.getAndSaveBinary(p,()=>zee(this.gpgpu,e,u,c)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),Y().get("ENGINE_COMPILE_ONLY")||Lee(this.gpgpu,d,u,c,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=Y().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=v.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=K(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Ce(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Jte:Qte}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,u;l&&(u=v.now());let c=t.texShape;if(c==null&&(c=HI(n,i),t.texShape=c),r!=null){let p=Zf(n),d,h=c[1],f=c[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([h,f]=Zc(c[0],c[1])),i?d=new jee(p,m):d=new Hee(p,m);let g=m?[f,h]:c,y=this.makeTensorInfo(g,s),x=this.texData.get(y.dataId);m?x.usage=Us.PIXELS:x.usage=Us.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),h,f,r);let A=[[f,h]],b=!0,w=this.runWebGLProgram(d,[y],s,A,b),k=this.texData.get(w.dataId);t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,Y().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=k.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=v.now()-u)}else{let p=this.acquireTexture(c,o,s,i);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=rne(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await fA(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(ox(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=nS(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=o,e.outShapeLocation=i,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}};nd.nextDataId=0;function rne(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var ane="3.18.0";function SS(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}Kp.isBrowser()&&Gl("webgl",()=>new nd,2);var one={forceHalfFloat:SS},CS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,ac=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=gs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},u2=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Th=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=gs(r);let a="";if(s)if(r===0||v.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${St(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Zn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function _s(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var ine={kernelName:So,backendName:"webgl",kernelFunc:_s};function ri(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=_s({inputs:{x:s},backend:n}),l=_s({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var lne={kernelName:Rp,backendName:"webgl",kernelFunc:ri},TS="return (a < 0.) ? b * a : a;",NS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function une(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",v.createScalarValue(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Th(NS,r.shape,o.shape):new ac(TS,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var cne={kernelName:Co,backendName:"webgl",kernelFunc:une},ES="return (a < 0.) ? b * a : a;",RS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function dne(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Th(RS,s.shape,r.shape):new ac(ES,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var pne={kernelName:zo,backendName:"webgl",kernelFunc:dne},sd="if (isnan(x)) return x;",hne=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,fne=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function ut({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let p=i.texData.get(o.dataId),d=n(p.values,l);return i.makeTensorInfo(o.shape,l,d)}let u=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Mi(o.shape,t):c=new ia(o.shape,e),i.runWebGLProgram(c,[o],l)}}function Tn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:u}=o,c=i;if(s&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,w]=A,k={dataId:b.dataId,dtype:b.dtype,shape:l.shape},S={dataId:w.dataId,dtype:w.dtype,shape:u.shape},E=new ac(e,l.shape,u.shape);return c.runWebGLProgram(E,[k,S],$n(b.dtype,w.dtype))}),x=ri({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),x}let p=a||$n(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){let f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,y=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[x,A]=r(l.shape,u.shape,g,y,p),b=c.makeTensorInfo(A,p),w=c.texData.get(b.dataId);return w.values=x,b}let d=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new Th(t,l.shape,u.shape,n):h=new ac(e,l.shape,u.shape),c.runWebGLProgram(h,[l,u],p)}}function c2(e,t=!1){if(e==="linear")return t?Hte:Bte;if(e==="relu")return t?qte:Vte;if(e==="elu")return t?jte:Wte;if(e==="relu6")return t?Xte:Ute;if(e==="prelu")return t?RS:ES;if(e==="leakyrelu")return t?NS:TS;if(e==="sigmoid")return t?Kte:Gte;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var _S=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=gs(this.outputShape.length);let u=s?e[1]:e[2],c=Math.ceil(u/2),p=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${x};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},Pv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Fv=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Ov="return a * b;";function gx(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=T.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),u=new Fv(Pv.REAL,s.shape,r.shape),c=new Fv(Pv.IMAG,s.shape,r.shape),p=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=ri({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[u,c]=hte(s.shape,r.shape,i.values,l.values,a),p=n.makeTensorInfo(c,a),d=n.texData.get(p.dataId);return d.values=u,p}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Th(Ov,s.shape,r.shape):o=new ac(Ov,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var mne={kernelName:Fo,backendName:"webgl",kernelFunc:gx};function gne(e,t,n){let s=[el(e.shape),...tl(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[el(t),...tl(t)],o=new IS(a,s),i=!0,l=[s],u=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ve(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(a,i),u=v.sizeFromShape(l);v.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=o.texData.get(r.dataId);return c.isPacked&&!kp(r.shape,l)&&!(c.texture!==null&&kp(c.shape,l))?gne(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var yne={kernelName:Nl,backendName:"webgl",kernelFunc:ve},Mv=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${v.isInt(c)?c.toPrecision(2):c}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},Ane=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,c=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(o="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(o="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function xne(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function tu(e,t,n,s){let r=xne(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:u}=r[o],c,p;n==="mean"?c=o===0?new Mv({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},i):new Mv({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u}):c=new Ane({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},n),p=a,a=s.runWebGLProgram(c,[a],t),p.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(p)}return a}var bne=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=St(this.rank),r=vne(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function vne(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var wne=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=St(this.rank),r=kS("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=r[u];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function d2(e,t,n){let s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wne(e.shape,t):new bne(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function kne(e,t,n,s){let r=t,a=e.shape.length,o=v.parseAxisParam(r,e.shape),i=o,l=T.getAxesPermutation(i,a),u=l!=null,c=e;u&&(c=d2(e,l,s),i=T.getInnerMostAxes(i.length,a)),T.assertAxesAreInnerMostDims("sum",i,a);let[p,d]=T.computeOutAndReduceShapes(c.shape,i),h=p;n&&(h=T.expandShapeToKeepDim(p,o));let f=v.sizeFromShape(d),g=v.sizeFromShape(e.shape)/f,y=ve({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),x=Xp(e.dtype),A=tu(y,x,"sum",s),b=ve({inputs:{x:A},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(A),u&&s.disposeIntermediateTensorInfo(c),b}function p2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return kne(r,a,o,n)}var Ine={kernelName:qo,backendName:"webgl",kernelFunc:p2};function rn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];let u;if(o.shouldExecuteOnCPU([r])){let p=o.texData.get(r.dataId).values,d=mx(p,r.shape,r.dtype,a,l);u=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(u.dataId);h.values=d}else u=d2(r,a,o);return u}var Sne={kernelName:Br,backendName:"webgl",kernelFunc:rn},DS=1e3;function Em({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=Hl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,p,h]:[y,h,p],k=s?[x,f,d]:[x,d,f],S=ve({inputs:{x:e},backend:r,attrs:{shape:w}}),E=ve({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[S,E],$=Math.max(y,x),_=n?S.shape[1]:S.shape[2],D=a!=null,C=o!=null,F=l==="leakyrelu",V=l!=null?c2(l,!0):null,j=D||C||F||V!=null,z;if((h===1||f===1)&&_>DS&&j===!1){let W=S,ee=E;n&&(W=rn({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),R.push(W)),s&&(ee=rn({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(ee));let Q=f!==1,ie=f===1,J=W;Q&&(J=ve({inputs:{x:W},backend:r,attrs:{shape:[$,_,1]}}),R.push(J));let ae=f===1?2:1,le=ee;ie&&(le=ve({inputs:{x:ee},backend:r,attrs:{shape:[$,1,_]}}),R.push(le));let ye=gx({inputs:{a:J,b:le},backend:r});z=p2({inputs:{x:ye},backend:r,attrs:{axis:ae,keepDims:!0}}),R.push(ye)}else{let W=$n(e.dtype,t.dtype),ee=new _S(w,k,[$,h,f],n,s,D,V,C,F),Q=[S,E];if(a!=null&&Q.push(a),C&&Q.push(o),F){let ie=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));Q.push(ie),R.push(ie)}z=r.runWebGLProgram(ee,Q,W)}let Z=ve({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let W of R)r.disposeIntermediateTensorInfo(W);return Z}function Cne(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s;return Em({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var Tne={kernelName:qa,backendName:"webgl",kernelFunc:Cne},zv="return abs(x);";function Nne(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=vS(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Mi(s.shape,zv):r=new ia(s.shape,zv),n.runWebGLProgram(r,[s],s.dtype)}var Ene={kernelName:al,backendName:"webgl",kernelFunc:Nne},Rne=lr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,_ne=ut({opSnippet:Rne}),Dne={kernelName:lc,backendName:"webgl",kernelFunc:_ne},$ne=lr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Pne=ut({opSnippet:$ne}),Fne={kernelName:uc,backendName:"webgl",kernelFunc:Pne},Lv="return a + b;",One=Tn({opSnippet:Lv,packedOpSnippet:Lv,supportsComplex:!0,cpuKernelImpl:Xee}),Mne={kernelName:ma,backendName:"webgl",kernelFunc:One},zne=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},Lne=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function Qf(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return _s({inputs:{x:s[0]},backend:n});if(s.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),u=Qf({inputs:s.slice(0,l),backend:n}),c=Qf({inputs:s.slice(l),backend:n});return Qf({inputs:[u,c],backend:n})}let r=s.map(l=>l.dtype).reduce((l,u)=>$n(l,u)),a=s.map(l=>l.shape),i=Y().getBool("WEBGL_PACK")?new Lne(s[0].shape,a):new zne(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var Bne={kernelName:ao,backendName:"webgl",kernelFunc:Qf};function Wne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=rn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("all",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=v.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=tu(m,m.dtype,"all",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var Vne={kernelName:cc,backendName:"webgl",kernelFunc:Wne};function Une(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=rn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("any",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=v.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=tu(m,m.dtype,"any",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var Gne={kernelName:dc,backendName:"webgl",kernelFunc:Une},Hne=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},jne=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=St(i),u=Zn("coords",i),c,p;if(a===1){p=i+1;let S=St(p);c=`
        ${S} sourceLocR = ${S}(${u.join()}, 0);
        ++${u[i-1]};
        ${S} sourceLocG = ${S}(${u.join()}, 0);
        ++${u[i-2]};
        ${S} sourceLocA = ${S}(${u.join()}, 0);
        --${u[i-1]};
        ${S} sourceLocB = ${S}(${u.join()}, 0);
        --${u[i-2]};`}else p=i,c=`
        ${l} sourceLocR = coords;
        ++${u[i-1]};
        ${l} sourceLocG = coords;
        ++${u[i-2]};
        ${l} sourceLocA = coords;
        --${u[i-1]};
        ${l} sourceLocB = coords;
        --${u[i-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map(S=>"int "+S),m=Zn("sourceLocR",p-1).concat("inIdx.r"),g=Zn("sourceLocG",p-1).concat("inIdx.g"),y=Zn("sourceLocB",p-1).concat("inIdx.b"),x=Zn("sourceLocA",p-1).concat("inIdx.a"),A=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function $S(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=T.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new Hne(i,n,s==null),u=[t];s!=null&&u.push(s);let c=e.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=$S(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function PS(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=T.computeOptimalWindowSize(a),i=new jne(r,o,n,s==null),l=s==null?[t]:[t,s],u=e.runWebGLProgram(i,l,"int32");if(u.shape.length===t.shape.length){let c=PS(e,t,n,u);return e.disposeIntermediateTensorInfo(u),c}return u}function FS(e,t,n,s){let r=[n];if(T.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[u,c]=T.computeOutAndReduceShapes(l.shape,r),p=v.sizeFromShape(c),d=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,p]}});a.push(d);let h=$S(e,d,s);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:u}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return PS(e,t,s)}function qne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=rn({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=FS(n,l,o[0],"max");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var Xne={kernelName:oo,backendName:"webgl",kernelFunc:qne};function Kne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=rn({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=FS(n,l,o[0],"min");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var Zne={kernelName:pc,backendName:"webgl",kernelFunc:Kne},Yne=lr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Jne=ut({opSnippet:Yne}),Qne={kernelName:hc,backendName:"webgl",kernelFunc:Jne},ese=lr+"return log(x + sqrt(x * x + 1.0));",tse=ut({opSnippet:ese}),nse={kernelName:fc,backendName:"webgl",kernelFunc:tse},sse=lr+`
  return atan(x);
`,rse=ut({opSnippet:sse}),ase={kernelName:mc,backendName:"webgl",kernelFunc:rse},ose=hne+`
  return atan(a, b);
`,ise=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+fne+`
  return result;
`,lse=Tn({opSnippet:ose,packedOpSnippet:ise}),use={kernelName:yc,backendName:"webgl",kernelFunc:lse},cse=lr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,dse=ut({opSnippet:cse}),pse={kernelName:gc,backendName:"webgl",kernelFunc:dse},Ip=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let S=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let b=Math.floor(a/4)*4,w=a%4,k=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${A});
      }
    `}},yx=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let k=Math.floor(a/4)*4,S=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${k};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${w});
        }
      }
    `}};function hse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Yc(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return _s({inputs:{x:r},backend:n});let p=new Ip(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var fse={kernelName:io,backendName:"webgl",kernelFunc:hse};function mse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],p=T.computePool3DInfo(r.shape,a,o,c,i,l,u),d=new yx(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var gse={kernelName:Ep,backendName:"webgl",kernelFunc:mse},yse=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,c=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${c});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Ase=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function xse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,p=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,p,u,c),h=new Ase(d);return n.runWebGLProgram(h,[r],o.dtype)}var bse={kernelName:Om,backendName:"webgl",kernelFunc:xse};function vse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Yc([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),p=new yse(c);return n.runWebGLProgram(p,[r],o.dtype)}var wse={kernelName:Fm,backendName:"webgl",kernelFunc:vse};function kse(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Em({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var Ise={kernelName:lo,backendName:"webgl",kernelFunc:kse},Sse=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},Cse=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Tse=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;v.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[s,r,a],c=null;o!=null&&(c=o.shape,u.push(o));let p=null;i!=null&&(p=i.shape,u.push(i));let d=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Cse(s.shape,r.shape,a.shape,c,p,l):new Sse(s.shape,r.shape,a.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},Nse={kernelName:ko,backendName:"webgl",kernelFunc:Tse},Ese=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=St(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Rse(this.rank),s,r=e.map((a,o)=>`sourceLoc.${V3[o]} = start[${o}] + coords.${V3[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},V3=["x","y","z","w","u","v"];function Rse(e){if(e===1)return"sourceLoc";if(e<=6)return V3.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var _se=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=St(this.rank),n=Zn("coords",this.rank),s=Zn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,c)=>`start[${c}]`).join()});`:e.map((u,c)=>`${s[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function Dse(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Ut.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function rd(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ut.parseSliceParams(r,a,o);if(Ut.assertParamsValid(r,i,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=vte(p.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}let{isPacked:u}=n.texData.get(r.dataId),c=Ut.isSliceContinous(r.shape,i,l);if(u||!c){let p=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _se(l):new Ese(l),d=[i];return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),Dse(r,i,l,n)}var $se={kernelName:$l,backendName:"webgl",kernelFunc:rd},Pse=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=rn({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:c}}),y=rd({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},Fse={kernelName:ol,backendName:"webgl",kernelFunc:Pse};function Ose(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),u=bS(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var Mse={kernelName:Mm,backendName:"webgl",kernelFunc:Ose};function zse(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Lse={kernelName:zm,backendName:"webgl",kernelFunc:zse},Bse="return float(a != b);",OS=Tn({opSnippet:Bse,cpuKernelImpl:mte,dtype:"bool"}),Wse={kernelName:wl,backendName:"webgl",kernelFunc:OS};function Nh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return _s({inputs:{x:r.complexTensorInfos.real},backend:n})}var Vse={kernelName:Lp,backendName:"webgl",kernelFunc:Nh},Use="return float(int(x));";function Gse(e,t){let n=new ia(e.shape,Use),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function U3(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return _s({inputs:{x:r},backend:n});let o=Wt(r.shape),i=U3({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=ri({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Nh({inputs:{input:r},backend:n}),i=U3({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=_s({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Gse(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=OS({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Hse={kernelName:uo,backendName:"webgl",kernelFunc:U3},Bv="return ceil(x);",jse=ut({opSnippet:Bv,packedOpSnippet:Bv,cpuKernelImpl:Zee}),qse={kernelName:co,backendName:"webgl",kernelFunc:jse},Xse=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Kse=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Zse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;Y().getBool("WEBGL_PACK_CLIP")?i=new Kse(r.shape):i=new Xse(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var Yse={kernelName:ga,backendName:"webgl",kernelFunc:Zse},Jse=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function Wv(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Qse(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new Jse(s.shape),o=[Wv(s,r.complexTensorInfos.real),Wv(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var ere={kernelName:_p,backendName:"webgl",kernelFunc:Qse},tre=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},nre=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=St(s),a=Zn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],u=o.slice(-2),c=o.join(),p=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${c}), vec2(${u.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];p+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${Uf(o,l,m)}),
            vec2(${Uf(u,l,m)}));
        }`}let d=i.length,h=i[i.length-1];p+=`
        return getChannel(
          getT${d}(${Uf(o,l,h)}),
          vec2(${Uf(u,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Uf(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function h2(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return _s({inputs:{x:r.complexTensorInfos.imag},backend:n})}var sre={kernelName:Fp,backendName:"webgl",kernelFunc:h2};function Ou(e,t,n){let s=e[0].dtype;if(s==="complex64"){let c=e.map(m=>Nh({inputs:{input:m},backend:n})),p=e.map(m=>h2({inputs:{input:m},backend:n})),d=Ou(c,t,n),h=Ou(p,t,n),f=ri({inputs:{real:d,imag:h},backend:n});return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),p.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let c=e.map(y=>{let x=v.sizeFromShape(y.shape.slice(t));return ve({inputs:{x:y},backend:n,attrs:{shape:[-1,x]}})}),p=c.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),d=T.computeOutShape(c.map(y=>y.shape),1),h=c[0].shape[0]===1,f=Yee(p,d,s,h),m=T.computeOutShape(e.map(y=>y.shape),t),g=n.makeTensorInfo(m,s,f);return c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(e.length/2),p=Ou(e.slice(0,c),t,n),d=Ou(e.slice(c),t,n),h=Ou([p,d],t,n);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),h}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let c=new nre(e.map(p=>p.shape),t);return n.runWebGLProgram(c,e,s)}let{tensors2D:a,outShape:o}=rre(e,t,n),i=new tre(a.map(c=>c.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(c=>n.disposeIntermediateTensorInfo(c));let u=ve({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),u}function rre(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function MS(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>v.sizeFromShape(u.shape)>0);if(i.length===1)return _s({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),Ou(i,a,n)}var are={kernelName:il,backendName:"webgl",kernelFunc:MS},zS=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(s?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:A=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},ore=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},ire=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gs(this.outputShape.length);let{dataFormat:n}=t,s=ns(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let u=0;u<=1;u++)for(let c=0;c<=1;c++)l+=`
          blockIndex = rc.y + ${c};
          pos = rc.x + ${u};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+c}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+c}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function LS({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(a!=null&&!h&&a.shape.length===3){let b=rn({inputs:{x:a},backend:s,attrs:{perm:[1,2,0]}});y.push(b),a=b}if(!((p===1||d===1)&&c>DS)&&u.isPacked&&h&&u.texture!=null&&l[2]%2!==0&&v.arraysEqual(u.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},k=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,v.assert(kp(u.shape,w.shape),()=>`packed reshape ${u.shape} to ${w.shape} isn't free`);let S=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(S);let E=Em({a:w,b:S,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(E.dataId);v.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=k,R.shape=n.outShape,g=_s({inputs:{x:E},backend:s}),g.shape=n.outShape,y.push(E)}else{let b=h?e:rn({inputs:{x:e},backend:s,attrs:{perm:[0,2,3,1]}}),w=b.shape,k=w[0]*w[1]*w[2],S=ve({inputs:{x:b},backend:s,attrs:{shape:[1,k,n.inChannels]}}),E=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),R=Em({a:S,b:E,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),$=[n.batchSize,n.outHeight,n.outWidth,n.outChannels],_=ve({inputs:{x:R},backend:s,attrs:{shape:$}});g=h?_:rn({inputs:{x:_},backend:s,attrs:{perm:[0,3,1,2]}}),h||(y.push(b),y.push(_)),y.push(S),y.push(E),y.push(R)}for(let b of y)s.disposeIntermediateTensorInfo(b);return g}function BS({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,f=h==="channelsLast",m=l*u*c,g=d*p,y=[m,g],x=!0,A=!1,b=[];if(a!=null&&!f&&a.shape.length===3){let Q=rn({inputs:{x:a},backend:s,attrs:{perm:[1,2,0]}});b.push(Q),a=Q}let w=ve({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w),b.push(k);let S=new ire(y,n),E=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(S,[w],"float32",E),$=ve({inputs:{x:R},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push($);let _=r!=null,D=a!=null,C=i==="leakyrelu",F=i?c2(i,!0):null,V=new _S($.shape,k.shape,[1,g,n.outChannels],x,A,_,F,D,C),j=[$,k];if(r&&j.push(r),D&&j.push(a),C){let Q=s.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));j.push(Q),b.push(Q)}let z=s.runWebGLProgram(V,j,"float32"),Z=[1,d,p,n.outChannels],W=ve({inputs:{x:z},backend:s,attrs:{shape:Z}}),ee=f?W:rn({inputs:{x:W},backend:s,attrs:{perm:[0,3,1,2]}});f||b.push(W),b.push(z);for(let Q of b)s.disposeIntermediateTensorInfo(Q);return ee}function lre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=LS({x:r,filter:a,convInfo:d,backend:n});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=BS({x:r,filter:a,convInfo:d,backend:n});else{let m=new zS(d);h=n.runWebGLProgram(m,[r,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}var ure={kernelName:po,backendName:"webgl",kernelFunc:lre},cre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},dre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},pre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},hre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function fre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,p),h=new cre(d);return n.runWebGLProgram(h,[r,a],"float32")}var mre={kernelName:Lm,backendName:"webgl",kernelFunc:fre};function gre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,p),h=new dre(d);return n.runWebGLProgram(h,[r,a],"float32")}var yre={kernelName:ho,backendName:"webgl",kernelFunc:gre};function Are(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),c=new ore(u);return n.runWebGLProgram(c,[r,a],"float32")}var xre={kernelName:Dp,backendName:"webgl",kernelFunc:Are};function bre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,u=T.computeConv3DInfo(r.shape,l,o,1,i),c=new pre(u);return n.runWebGLProgram(c,[r,a],"float32")}var vre={kernelName:Bm,backendName:"webgl",kernelFunc:bre};function wre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,u=T.computeConv3DInfo(l,a.shape,i,1,o),c=new hre(u);return n.runWebGLProgram(c,[r,a],"float32")}var kre={kernelName:Wm,backendName:"webgl",kernelFunc:wre},Ire=sd+`
  return cos(x);
`,Sre=ut({opSnippet:Ire}),Cre={kernelName:fo,backendName:"webgl",kernelFunc:Sre},Tre=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Nre=ut({opSnippet:Tre}),Ere={kernelName:mo,backendName:"webgl",kernelFunc:Nre},Rre=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[u]=t,[c,p]=n;this.outputShape=[u,c,p,l];let d=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=c>1?[`${(o-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,A,b]=p>1?[`${(i-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},_re=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new Rre(r.shape,a.shape,i,l,u);return n.runWebGLProgram(c,[r,a,o],"float32")},Dre={kernelName:ul,backendName:"webgl",kernelFunc:_re},Sp;(function(e){e.Prod="*",e.Sum="+"})(Sp||(Sp={}));var Vv=class{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,a=this.op===Sp.Prod?"1.0":"0.0",o=n?a:`getX(${Uv(r,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=s?`end != ${i-1}`:"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${i}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${St(r)} coords = getOutputCoords();
        int end = ${Gv(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${Gv(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${Uv(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function Uv(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Gv(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function WS(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=rn({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],p=_s({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new Vv(e,l.shape,!1,a),f=[[d]],m=p;p=n.runWebGLProgram(h,[p],p.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){let d=new Vv(e,l.shape,r,a),h=p;p=n.runWebGLProgram(d,[p],p.dtype),n.disposeIntermediateTensorInfo(h)}if(i!=null){let d=T.getUndoAxesPermutation(i),h=rn({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),h}return p}function $re(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return WS(Sp.Prod,r,n,a,o,i)}var Pre={kernelName:ll,backendName:"webgl",kernelFunc:$re};function Fre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return WS(Sp.Sum,r,n,a,o,i)}var Ore={kernelName:go,backendName:"webgl",kernelFunc:Fre};function Mre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=bS(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=Kee(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var zre={kernelName:Vm,backendName:"webgl",kernelFunc:Mre},Lre=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Bre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=new Lre(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var Wre={kernelName:cl,backendName:"webgl",kernelFunc:Bre},VS=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gs(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",u="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${u}
        setOutput(result);
      }
    `}},US=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gs(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,p=c,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<c;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){let y=g*2;if(d+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<c)){let x=o%2===0?v.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):x===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<c&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<c&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<c&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Vre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s,c=l;c==null&&(c=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let p=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!0),d;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new US(p):d=new VS(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",h)}var Ure={kernelName:yo,backendName:"webgl",kernelFunc:Vre},Gre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Hre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,p=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),d=new Gre(p);return n.runWebGLProgram(d,[r,a],"float32")}var qre={kernelName:Um,backendName:"webgl",kernelFunc:jre};function Xre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,p=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),d=new Hre(p);return n.runWebGLProgram(d,[r,a],"float32")}var Kre={kernelName:Gm,backendName:"webgl",kernelFunc:Xre},Zre=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Yre(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=v.sizeFromShape(s.shape),o=ve({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new Zre(a),l=n.runWebGLProgram(i,[o],o.dtype),u=ve({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var Jre={kernelName:Hm,backendName:"webgl",kernelFunc:Yre},Qre=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:c,left:p}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${c}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function eae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),c,p=new Qre(u);c=n.runWebGLProgram(p,[r,a],"float32");let d=ve({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}var tae={kernelName:$p,backendName:"webgl",kernelFunc:eae};function nae(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=rn({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=ve({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=gx({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=p2({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var sae={kernelName:Pp,backendName:"webgl",kernelFunc:nae},rae="return (x >= 0.0) ? x : (exp(x) - 1.0);",aae=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,oae=ut({opSnippet:rae,packedOpSnippet:aae}),iae={kernelName:xo,backendName:"webgl",kernelFunc:oae},lae="return (b >= 1.0) ? a : a * (b + 1.0);",uae=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,cae=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Th(uae,s.shape,r.shape):new ac(lae,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},dae={kernelName:jm,backendName:"webgl",kernelFunc:cae},pae=`
  return vec4(equal(a, b));
`,hae="return float(a == b);",fae=Tn({opSnippet:hae,packedOpSnippet:pae,dtype:"bool",cpuKernelImpl:Jee}),mae={kernelName:dl,backendName:"webgl",kernelFunc:fae},gae=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,yae=ut({opSnippet:gae}),Aae={kernelName:Ac,backendName:"webgl",kernelFunc:yae},xae=sd+`
  return exp(x);
`,bae=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,GS=ut({opSnippet:xae,packedOpSnippet:bae,cpuKernelImpl:Qee,dtype:"float32"}),vae={kernelName:bo,backendName:"webgl",kernelFunc:GS};function G3(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var wae={kernelName:pl,backendName:"webgl",kernelFunc:G3},Hv="return exp(x) - 1.0;",kae=ut({opSnippet:Hv,packedOpSnippet:Hv,cpuKernelImpl:ete}),Iae={kernelName:hl,backendName:"webgl",kernelFunc:kae},jv=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function HS(e,t,n){let s=n.texData.get(e.dataId),r=v.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,u=new jv("real",l,t),c=new jv("imag",l,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=ri({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function Sae(e){let{inputs:t,backend:n}=e,{input:s}=t;return HS(s,!1,n)}var Cae={kernelName:qm,backendName:"webgl",kernelFunc:Sae},Tae=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Eh(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Tae(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var Nae={kernelName:xc,backendName:"webgl",kernelFunc:Eh},Eae=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Rae={kernelName:fl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Eae(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},qv="return floor(x);",_ae=ut({opSnippet:qv,packedOpSnippet:qv,cpuKernelImpl:tte}),Dae={kernelName:vo,backendName:"webgl",kernelFunc:_ae},$ae=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Pae=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Fae=Tn({opSnippet:$ae,packedOpSnippet:Pae,dtype:"int32"}),Oae={kernelName:wo,backendName:"webgl",kernelFunc:Fae},Mae=class{constructor(e){this.variableNames=["A"];let t=ns(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},zae=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=ns(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},Lae={kernelName:dp,backendName:"webgl",kernelFunc:Bae},_u;function Bae(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],p=[u,l,a];(i||o)&&(_u==null&&(_u=document.createElement("canvas").getContext("2d")),_u.canvas.width=l,_u.canvas.height=u,_u.drawImage(r,0,0,l,u),r=_u.canvas);let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=Us.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let h=Y().getBool("WEBGL_PACK")?new zae(p):new Mae(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}function Wae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!1,m),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=LS({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=BS({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,w=i!=null,k=h==="leakyrelu",S=h?c2(h,!1):null,E=new zS(g,b,S,w,k),R=[r,a],$=(_,D)=>{if(D==="NCHW"&&_.shape.length===1&&_.shape[0]!==1){let C=ve({inputs:{x:_},backend:n,attrs:{shape:[_.shape[0],1,1]}});return x.push(C),C}return _};if(b&&R.push($(o,c)),w&&R.push($(i,c)),k){let _=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));R.push(_),x.push(_)}y=n.runWebGLProgram(E,R,"float32")}let A=ve({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var Vae={kernelName:Xa,backendName:"webgl",kernelFunc:Wae};function Uae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=[],m=c;m==null&&(m=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(r.shape,a.shape,l,m,u,p,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=d?c2(d,y):null,A=[r,a],b=o!=null,w=i!=null,k=d==="leakyrelu";if(b&&A.push(o),w&&A.push(i),k){let $=n.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));A.push($),f.push($)}let S;y?S=new US(g,b,x,w,k):S=new VS(g,b,x,w,k);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(S,A,"float32",E);return f.forEach($=>n.disposeIntermediateTensorInfo($)),R}var Gae={kernelName:Ka,backendName:"webgl",kernelFunc:Uae},Hae=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=St(t.length),r=St(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function jae(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,u,c,p]=T.prepareAndValidate(s,r),d=ve({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),h=ve({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),x=n.bufferSync(s),A=nte(y,x,s.dtype,u,o,c,p,s.shape,i);return n.makeTensorInfo(l,s.dtype,A.values)}let f=new Hae(o,p,[u,c]),m=n.runWebGLProgram(f,[h,d],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var qae={kernelName:gl,backendName:"webgl",kernelFunc:jae},Xae=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=St(this.rank),s=Kae(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function Kae(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function jS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0];if(Y().get("DEBUG")){let x=n.readSync(a.dataId),A=r.shape[l];for(let b=0;b<x.length;++b){let w=x[b];v.assert(w<=A-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${A-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=v.sizeFromShape(a.shape),p=[],d=ve({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=ve({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let x=n.bufferSync(h),A=n.bufferSync(d),b=ste(A,x,f);return p.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.makeTensorInfo(u.outputShape,b.dtype,b.values)}let m=new Xae(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);let y=ve({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}var Zae={kernelName:ml,backendName:"webgl",kernelFunc:jS},Yae="return float(a > b);",Jae=`
  return vec4(greaterThan(a, b));
`,Qae=Tn({opSnippet:Yae,packedOpSnippet:Jae,cpuKernelImpl:rte,dtype:"bool"}),eoe={kernelName:yl,backendName:"webgl",kernelFunc:Qae},toe="return float(a >= b);",noe=`
  return vec4(greaterThanEqual(a, b));
`,soe=Tn({opSnippet:toe,packedOpSnippet:noe,dtype:"bool",cpuKernelImpl:ate}),roe={kernelName:Io,backendName:"webgl",kernelFunc:soe};function aoe(e){let{inputs:t,backend:n}=e,{input:s}=t;return HS(s,!0,n)}var ooe={kernelName:Xm,backendName:"webgl",kernelFunc:aoe},ioe="return float(!isnan(x) && !isinf(x));",loe=ut({opSnippet:ioe,dtype:"bool"}),uoe={kernelName:bc,backendName:"webgl",kernelFunc:loe},coe="return float(isinf(x));",doe=ut({opSnippet:coe,dtype:"bool"}),poe={kernelName:vc,backendName:"webgl",kernelFunc:doe},hoe="return float(isnan(x));",foe=ut({opSnippet:hoe,dtype:"bool"}),moe={kernelName:wc,backendName:"webgl",kernelFunc:foe},goe="return float(a < b);",yoe=`
  return vec4(lessThan(a, b));
`,Aoe=Tn({opSnippet:goe,packedOpSnippet:yoe,cpuKernelImpl:ote,dtype:"bool"}),xoe={kernelName:Al,backendName:"webgl",kernelFunc:Aoe},boe="return float(a <= b);",voe=`
  return vec4(lessThanEqual(a, b));
`,woe=Tn({opSnippet:boe,packedOpSnippet:voe,cpuKernelImpl:ite,dtype:"bool"}),koe={kernelName:xl,backendName:"webgl",kernelFunc:woe};function Ioe(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=lte(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var Soe={kernelName:Km,backendName:"webgl",kernelFunc:Ioe},Coe=sd+`
  return x < 0.0 ? 0./0. : log(x);
`,Toe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Noe=ut({opSnippet:Coe,packedOpSnippet:Toe,cpuKernelImpl:ute}),Eoe={kernelName:To,backendName:"webgl",kernelFunc:Noe},Roe=sd+`
  return log(1.0 + x);
`,_oe=ut({opSnippet:Roe}),Doe={kernelName:kc,backendName:"webgl",kernelFunc:_oe},$oe="return float(a >= 1.0 && b >= 1.0);",Poe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Foe=Tn({opSnippet:$oe,packedOpSnippet:Poe,dtype:"bool"}),Ooe={kernelName:bl,backendName:"webgl",kernelFunc:Foe},Moe="return float(!(x >= 1.0));",zoe=ut({opSnippet:Moe}),Loe={kernelName:Ic,backendName:"webgl",kernelFunc:zoe},Boe="return float(a >= 1.0 || b >= 1.0);",Woe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Voe=Tn({opSnippet:Boe,packedOpSnippet:Woe,dtype:"bool"}),Uoe={kernelName:Op,backendName:"webgl",kernelFunc:Voe},Goe=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Hoe=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},joe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,u=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Hoe(r.shape,a,o,i,l):new Goe(r.shape,a,o,i,l);return n.runWebGLProgram(u,[r],r.dtype)},qoe={kernelName:Mp,backendName:"webgl",kernelFunc:joe},Xoe=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Koe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s,p=new Xoe(r.shape,i,l,u,c);return n.runWebGLProgram(p,[r,a,o],r.dtype)},Zoe={kernelName:Zm,backendName:"webgl",kernelFunc:Koe};function Yoe(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=tu(i,e.dtype,"max",s),u=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}function qS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let A=n.texData.get(h.dataId).values,b=new Array(i);for(let S=0;S<b.length;S++)b[S]=r.shape[c[S]];let w=mx(A,r.shape,r.dtype,c,b);h=n.makeTensorInfo(b,r.dtype);let k=n.texData.get(h.dataId);k.values=w}else h=d2(r,c,n);u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("max",u,i);let[f,m]=T.computeOutAndReduceShapes(h.shape,u),g=f;o&&(g=T.expandShapeToKeepDim(f,l));let y;if(d){let A=n.texData.get(h.dataId).values,b=cte(A,v.sizeFromShape(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let w=n.texData.get(y.dataId);w.values=b}else y=Yoe(h,m,g,n);return p&&n.disposeIntermediateTensorInfo(h),y}var Joe={kernelName:No,backendName:"webgl",kernelFunc:qS},Qoe=CS+`
  return max(a, b);
`,eie=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+u2+`
  return result;
`,tie=Tn({opSnippet:Qoe,packedOpSnippet:eie,cpuKernelImpl:dte}),nie={kernelName:Eo,backendName:"webgl",kernelFunc:tie};function sie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Yc(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return _s({inputs:{x:r},backend:n});let p=new Ip(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var rie={kernelName:Ro,backendName:"webgl",kernelFunc:sie};function aie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],p=T.computePool3DInfo(r.shape,a,o,c,i,u,l),d=new yx(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var oie={kernelName:zp,backendName:"webgl",kernelFunc:aie},iie=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},lie=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=i*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function uie(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,p=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,p,u,c),h=new yx(d,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new lie(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var cie={kernelName:Jm,backendName:"webgl",kernelFunc:uie};function die(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Yc([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,p),h=!0,f=new Ip(d,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new iie(d),y=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var pie={kernelName:Ym,backendName:"webgl",kernelFunc:die};function hie(e,t,n,s){let r=new Ip(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Ip(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var fie={kernelName:Qm,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;v.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let u=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(s.shape,r,a,u,o),[p,d]=hie(s,i,c,l);return[p,d]}};function mie(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=tu(i,"float32","mean",s),u=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}var gie={kernelName:_o,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=v.parseAxisParam(a,s.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,d=o.shouldExecuteOnCPU([s]),h=[],f=s;if(p){if(d){let b=o.texData.get(f.dataId).values,w=new Array(i);for(let E=0;E<w.length;E++)w[E]=s.shape[c[E]];let k=mx(b,s.shape,s.dtype,c,w);f=o.makeTensorInfo(w,s.dtype);let S=o.texData.get(f.dataId);S.values=k}else f=d2(s,c,o);h.push(f),u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("sum",u,i);let[m,g]=T.computeOutAndReduceShapes(f.shape,u),y=m;r&&(y=T.expandShapeToKeepDim(m,l));let x=mie(f,g,y,o);for(let A of h)o.disposeIntermediateTensorInfo(A);return x}};function yie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=rn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=v.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=tu(m,m.dtype,"min",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var Aie={kernelName:Do,backendName:"webgl",kernelFunc:yie},xie=CS+`
  return min(a, b);
`,bie=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+u2+`
  return result;
`,vie=Tn({opSnippet:xie,packedOpSnippet:bie,cpuKernelImpl:pte}),wie={kernelName:$o,backendName:"webgl",kernelFunc:vie},kie=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let s=e.length,r=St(s),a=t.map(u=>u[0]).join(","),o=t.map((u,c)=>u[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},Iie=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=St(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=Zn("rc",s),l=Zn("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${i[s-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},Sie=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iie(s.shape,r,a):new kie(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},Cie={kernelName:Po,backendName:"webgl",kernelFunc:Sie},Tie=`if (b == 0.0) return NAN;
  return mod(a, b);`,Nie=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+u2+`
  return result;
`,Eie=Tn({opSnippet:Tie,packedOpSnippet:Nie}),Rie={kernelName:Sc,backendName:"webgl",kernelFunc:Eie},_ie=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Die=`
if (a == b) {
  return 1.0;
};
return a / b;`,$ie=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,XS=Tn({opSnippet:Die,packedOpSnippet:$ie,checkOutOfBounds:!0}),Pie={kernelName:Ao,backendName:"webgl",kernelFunc:XS},Xv="return a - b;",KS=Tn({opSnippet:Xv,packedOpSnippet:Xv,supportsComplex:!0,cpuKernelImpl:Ete}),Fie={kernelName:Zo,backendName:"webgl",kernelFunc:KS};function ZS(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=qS({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),c=KS({inputs:{a:r,b:u},backend:n}),p=GS({inputs:{x:c},backend:n}),d=p2({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:d},backend:n,attrs:{shape:l}}),f=XS({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}var Oie={kernelName:Xo,backendName:"webgl",kernelFunc:ZS};function Mie(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:ZS({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new _ie(u,c,a),d=[[o]],h=n.runWebGLProgram(p,[l],"int32",d);return i||n.disposeIntermediateTensorInfo(l),h}var zie={kernelName:e0,backendName:"webgl",kernelFunc:Mie},Lie=lr+`
  return -x;
`,Bie=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Wie(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=fte(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Mi(s.shape,Bie):r=new ia(s.shape,Lie),n.runWebGLProgram(r,[s],s.dtype)}var Vie={kernelName:vl,backendName:"webgl",kernelFunc:Wie},Uie=or.nonMaxSuppressionV3Impl;function Gie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=Uie(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var Hie={kernelName:kl,backendName:"webgl",kernelFunc:Gie},jie=or.nonMaxSuppressionV4Impl;function qie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:h}=jie(c,p,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Xie={kernelName:Cc,backendName:"webgl",kernelFunc:qie},Kie=or.nonMaxSuppressionV5Impl;function Zie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=Kie(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Yie={kernelName:Il,backendName:"webgl",kernelFunc:Zie},Jie=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Qie=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=v.sizeFromShape(r.shape),u=new Jie(l,a,o,i),c=ve({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);let d=[...r.shape,a],h=ve({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},ele={kernelName:Cl,backendName:"webgl",kernelFunc:Qie};function Rm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Nh({inputs:{input:s},backend:n}),a=Rm({inputs:{x:r},backend:n}),o=h2({inputs:{input:s},backend:n}),i=Rm({inputs:{x:o},backend:n}),l=ri({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Eh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var tle={kernelName:Vl,backendName:"webgl",kernelFunc:Rm};function YS(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Nh({inputs:{input:s},backend:n}),a=YS({inputs:{x:r},backend:n}),o=h2({inputs:{input:s},backend:n}),i=Rm({inputs:{x:o},backend:n}),l=ri({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Eh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var nle={kernelName:Sl,backendName:"webgl",kernelFunc:YS};function sle(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return G3({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=G3({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=MS({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var rle={kernelName:Tl,backendName:"webgl",kernelFunc:sle},ale=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let s=e.length,r=St(s),a=t.map(l=>l[0]).join(","),o=t.map((l,u)=>l[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},ole=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=St(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Zn("rc",s),l=Zn("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${u}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${u}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${p[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${c});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},JS=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(v.sizeFromShape(r.shape)===0){let u=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return Eh({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ole(r.shape,a,o):new ale(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},ile={kernelName:Oo,backendName:"webgl",kernelFunc:JS},lle=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ule=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+u2+`
  return result;
`,cle=Tn({opSnippet:lle,packedOpSnippet:ule}),dle={kernelName:Mo,backendName:"webgl",kernelFunc:cle};function ple(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],u=v.parseAxisParam(a,r.shape),c=u,p=T.getAxesPermutation(c,i),d=r;p!=null&&(d=rn({inputs:{x:r},backend:n,attrs:{perm:p}}),c=T.getInnerMostAxes(c.length,i),l.push(d)),T.assertAxesAreInnerMostDims("prod",c,i);let h;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=gte(d.shape,d.dtype,f,c);h=n.makeTensorInfo(g,y,m)}else{let[f,m]=T.computeOutAndReduceShapes(d.shape,c),g=v.sizeFromShape(m),y=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),x=Xp(r.dtype),A=tu(y,x,"prod",n);h=ve({inputs:{x:A},backend:n,attrs:{shape:f}}),l.push(y),l.push(A)}if(o){l.push(h);let f=T.expandShapeToKeepDim(h.shape,u);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var hle={kernelName:Lo,backendName:"webgl",kernelFunc:ple},QS=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=yte(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},fle={kernelName:Tc,backendName:"webgl",kernelFunc:QS},mle="return 1.0 / x;",gle=ut({opSnippet:mle}),yle={kernelName:Nc,backendName:"webgl",kernelFunc:gle},Ale=lr+`
  return (x < 0.0) ? 0.0 : x;
`,xle=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ble=ut({opSnippet:Ale,packedOpSnippet:xle}),vle={kernelName:Bo,backendName:"webgl",kernelFunc:ble},wle=lr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,kle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ile=ut({opSnippet:wle,packedOpSnippet:kle}),Sle={kernelName:Vo,backendName:"webgl",kernelFunc:Ile},Cle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Tle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Nle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Tle(r.shape,l,u,a,o):new Cle(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],"float32")}var Ele={kernelName:Wo,backendName:"webgl",kernelFunc:Nle},Rle=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function _le(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Rle(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Dle={kernelName:n0,backendName:"webgl",kernelFunc:_le},$le=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Ple=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Fle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ple(r.shape,l,u,a,o):new $le(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],r.dtype)}var Ole={kernelName:Ec,backendName:"webgl",kernelFunc:Fle},Mle=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function zle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Mle(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Lle={kernelName:t0,backendName:"webgl",kernelFunc:zle},Ble=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=St(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},Wle=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=Zn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=St(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${u(s.slice())};
            if(${r}) {
              result.a = ${c(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return p(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function u(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let f=e.map((y,x)=>d(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function Vle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return _s({inputs:{x:r},backend:n});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wle(r.shape,i):new Ble(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var Ule={kernelName:El,backendName:"webgl",kernelFunc:Vle},Gle=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Hle={kernelName:Ul,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Gle(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),p=[[u,c,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,p)}},jle=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,qle=ut({opSnippet:jle}),Xle={kernelName:Rl,backendName:"webgl",kernelFunc:qle},Kle="return inversesqrt(x);",Zle=ut({opSnippet:Kle,cpuKernelImpl:Ate}),Yle={kernelName:Uo,backendName:"webgl",kernelFunc:Zle},e9=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=St(r.length),l=St(a.length),u="";n===1?u="i":n===2&&(u="i, j");let c=`getIndices(${u})`,p="";s===1?p="i":s===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Jle(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=[p/u,u];if(p===0)return n.makeTensorInfo(o,r.dtype);let h=ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new e9(l,i,h.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,h,m],f.dtype),x=ve({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}var Qle={kernelName:_l,backendName:"webgl",kernelFunc:Jle},eue=class{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=Y().getNumber("WEBGL_VERSION")===2?r:a,i=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${i} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function tue(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:o}=s,i=new eue(r.shape[0],r.shape[1],a.shape[1],o),l=[[r.shape[1]]];return n.runWebGLProgram(i,[r,a],"int32",l)}var nue={kernelName:s0,backendName:"webgl",kernelFunc:tue},sue=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let u=0;u<t.length;u++)l.push(`${o[u]}`),u<e&&i.push(`${o[u]}`);s=i.join(),r=l.join()}let a=St(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function rue(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new sue(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],$n(r.dtype,a.dtype))}var aue={kernelName:Dl,backendName:"webgl",kernelFunc:rue},oue=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,iue=ut({opSnippet:oue}),lue={kernelName:Rc,backendName:"webgl",kernelFunc:iue},uue=sd+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,cue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,due=ut({opSnippet:uue,packedOpSnippet:cue,cpuKernelImpl:bte}),pue={kernelName:Ho,backendName:"webgl",kernelFunc:due},hue=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,fue=ut({opSnippet:hue}),mue={kernelName:_c,backendName:"webgl",kernelFunc:fue},gue=sd+`
  return sin(x);
`,yue=ut({opSnippet:gue}),Aue={kernelName:Go,backendName:"webgl",kernelFunc:yue},xue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,bue=ut({opSnippet:xue}),vue={kernelName:Pl,backendName:"webgl",kernelFunc:bue},wue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,kue=ut({opSnippet:wue}),Iue={kernelName:Dc,backendName:"webgl",kernelFunc:kue},Sue=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=JS({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(p.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),f=ve({inputs:{x:c},backend:n,attrs:{shape:p}}),m=rn({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Cue={kernelName:Fl,backendName:"webgl",kernelFunc:Sue};function Tue(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[p,d,h,f,m]=wte(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Nue={kernelName:Bp,backendName:"webgl",kernelFunc:Tue};function Eue(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,p]=kte(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var Rue={kernelName:$c,backendName:"webgl",kernelFunc:Eue};function _ue(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=wS(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var Due={kernelName:Wp,backendName:"webgl",kernelFunc:_ue};function $ue(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=wS(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var Pue={kernelName:Vp,backendName:"webgl",kernelFunc:$ue};function Fue(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=T.calculateShapes(a,r,i),h=!1;if(a.dtype==="string"){let y=n.bufferSync(r),x=n.bufferSync(a),A=v.decodeString(n.readSync(o.dataId)[0]),b=xte(y,x,i,d,c,u,l,p,A,h);return n.makeTensorInfo(i,b.dtype,b.values)}let f=new e9(u,l,r.shape.length,a.shape.length,p,[d,1],h),m=n.runWebGLProgram(f,[a,r,o],a.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}var Oue={kernelName:Up,backendName:"webgl",kernelFunc:Fue};function Mue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[i]=d;let f=rd({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,f})}var zue={kernelName:Ol,backendName:"webgl",kernelFunc:Mue},Kv="return sqrt(x);",Lue=ut({opSnippet:Kv,packedOpSnippet:Kv,cpuKernelImpl:Ite}),Bue={kernelName:jo,backendName:"webgl",kernelFunc:Lue},Wue="return x * x;",Vue=ut({opSnippet:Wue}),Uue={kernelName:Pc,backendName:"webgl",kernelFunc:Vue},Zv="return (a - b) * (a - b);",Gue=Tn({opSnippet:Zv,packedOpSnippet:Zv}),Hue={kernelName:Ko,backendName:"webgl",kernelFunc:Gue};function jue({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=lr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new ia(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var que={kernelName:Jo,backendName:"webgl",kernelFunc:jue},Xue=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=St(n.length),a=St(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,u)=>(i++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${i-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Kue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=ve({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=Ut.computeOutShape(x,A,b),E=rd({inputs:{x:r},backend:n,attrs:{begin:x,size:S}});w=ve({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([r])){let E=n.readSync(r.dataId),R=We(r.shape,r.dtype,E),$=Ste(h,R,b,x);w=n.makeTensorInfo(f,r.dtype,$.values)}else{let E=new Xue(x,b,h);w=n.runWebGLProgram(E,[r],r.dtype)}let k=ve({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}var Zue={kernelName:Ml,backendName:"webgl",kernelFunc:Kue};function Yue(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=Cte(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var Jue={kernelName:Gp,backendName:"webgl",kernelFunc:Yue};function Que(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[u,c,p]=Tte(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var ece={kernelName:r0,backendName:"webgl",kernelFunc:Que};function tce(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=Nte(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var nce={kernelName:a0,backendName:"webgl",kernelFunc:tce},sce="return tan(x);",rce=ut({opSnippet:sce}),ace={kernelName:zl,backendName:"webgl",kernelFunc:rce},oce=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ice=ut({opSnippet:oce}),lce={kernelName:Yo,backendName:"webgl",kernelFunc:ice},uce=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=St(this.rank),r=cce(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function cce(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function t9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>v.decodeString(d)):l,c=We(r.shape,r.dtype,u),p=Rte(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let o=new uce(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var dce={kernelName:ya,backendName:"webgl",kernelFunc:t9},pce=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},hce=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Ti(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function Yv(e){let t=1;for(;t<e;)t*=2;return t}function fce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<i||a>l){let $=n.readSync(r.dataId),[_,D]=_te($,u,r.dtype,a,o);return[n.makeTensorInfo(_.shape,_.dtype,_.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[r,Eh({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),d=p!==null&&p.isPacked,h=d?n.unpackTensor(r):r,m=v.sizeFromShape(u)/c,g=ve({inputs:{x:h},attrs:{shape:[m,c]},backend:n});d&&Ti(n,h);let y=Yv(a),x=Yv(c),A=null,b=()=>A===null?[g,g]:[g,A],w=($,_,D)=>{let C=b(),F=new pce(D),j=[[c],[A===null?1:0],[Number.NEGATIVE_INFINITY],[$],[_]],z=A;A=n.runWebGLProgram(F,C,"int32",j),Ti(n,z)};for(let $=1;$<y;$*=2){let _=$*2;for(let D=$;D>=1;D/=2)w(_,D,[m,x])}for(let $=x;$>y;$/=2){let _=b(),D=new hce([m,$/2]),F=[[c],[A===null?1:0],[y]],V=A;A=n.runWebGLProgram(D,_,"int32",F),Ti(n,V);let j=y/2,z=j*2;for(let Z=j;Z>=1;Z/=2)w(z,Z,A.shape)}let k=A;A=rd({inputs:{x:A},backend:n,attrs:{begin:0,size:[m,a]}}),Ti(n,k);let S=jS({inputs:{x:g,indices:A},backend:n,attrs:{axis:1,batchDims:1}});Ti(n,g);let E=u.slice(0,-1);E.push(a),k=A,A=ve({inputs:{x:A},attrs:{shape:E},backend:n}),Ti(n,k);let R=S;return S=ve({inputs:{x:S},attrs:{shape:E},backend:n}),Ti(n,R),[S,A]}var mce={kernelName:Ll,backendName:"webgl",kernelFunc:fce},gce=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function yce(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new gce(p,d,o,i,l,g);return n.runWebGLProgram(y,[r,a],"float32")}var Ace={kernelName:Bl,backendName:"webgl",kernelFunc:yce};function xce(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Yc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=Dte(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var bce={kernelName:o0,backendName:"webgl",kernelFunc:xce};function vce(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let p=[],d=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=rd({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),y=ve({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var wce={kernelName:Wl,backendName:"webgl",kernelFunc:vce},kce=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",u=Math.floor(n/4)*4,c=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function Ice(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],u=0,c=T.getAxesPermutation([u],i),p=r;c!=null&&(p=rn({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(p),u=T.getInnerMostAxes(1,i)[0]);let d=T.segment_util.computeOutShape(p.shape,u,o),h=v.sizeFromShape([p.shape[u]]),f=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=Xp(r.dtype),g=(b,w,k,S,E)=>{let R=b.shape[0],$=b.shape[1],_=T.segment_util.segOpComputeOptimalWindowSize($,E),D={windowSize:_,inSize:$,batchSize:R,numSegments:E},C=new kce(D,w),F=n.compileAndRun(C,[b,k],S);if(l.push(F),F.shape[1]===E)return F;let V=QS({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=t9({inputs:{x:V},backend:n,attrs:{reps:[$/_]}});return l.push(V),l.push(j),g(F,w,j,S,E)},y=g(f,"unsortedSegmentSum",a,m,o),x=ve({inputs:{x:y},backend:n,attrs:{shape:d}}),A=x;if(c!=null){l.push(x);let b=T.getUndoAxesPermutation(c);A=rn({inputs:{x:A},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var Sce={kernelName:Hp,backendName:"webgl",kernelFunc:Ice},Cce=[Tne,Ene,Dne,Fne,Mne,Bne,Vne,Gne,Xne,Zne,Qne,nse,ase,use,pse,fse,gse,bse,wse,Ise,Nse,Fse,Mse,Lse,Hse,qse,Yse,lne,ere,are,ure,mre,yre,xre,vre,kre,Cre,Ere,Dre,Pre,Ore,zre,Wre,Ure,qre,Kre,Jre,tae,sae,iae,dae,mae,Aae,vae,wae,Iae,Cae,Nae,Rae,Dae,Oae,Lae,Vae,Gae,qae,Zae,eoe,roe,ine,ooe,sre,uoe,poe,moe,cne,xoe,koe,Soe,Eoe,Doe,Ooe,Loe,Uoe,qoe,Zoe,Joe,nie,rie,oie,cie,pie,fie,gie,Aie,wie,Cie,Rie,zie,mne,Vie,Hie,Xie,Yie,Wse,ele,nle,rle,ile,dle,pne,hle,fle,Vse,Pie,yle,vle,Sle,yne,Ele,Dle,Ole,Lle,Ule,Hle,Xle,Yle,Qle,nue,aue,lue,pue,mue,Aue,vue,$se,Oie,Iue,Cue,Nue,Rue,Due,Pue,Oue,zue,Bue,Uue,Hue,que,Zue,Jue,ece,nce,Fie,Ine,ace,lce,dce,mce,Ace,Sne,bce,wce,Sce,tle];for(let e of Cce)ar(e);var Ht;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Ht||(Ht={}));var Cp;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Cp||(Cp={}));var n9;function Tce(e){n9=e.wasm.cwrap(qa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Nce(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=Cp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],x=u?a.shape[1]:a.shape[2],A=Hl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],r.dtype),w=n.dataIdMap.get(b.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(a.shape).buffer);return n9(d,k,r.shape.length,h,S,a.shape.length,l,u,g,f,m,p||0,w),b}var Ece={kernelName:qa,backendName:"wasm",setupFunc:Tce,kernelFunc:Nce};function Nn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,u=o.makeOutput(i.shape,t||i.dtype),c=o.dataIdMap.get(u.dataId).id;return v.sizeFromShape(u.shape)===0||n(l,Ht[i.dtype],c),u}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var Rce=Nn(al);function ss(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:u,b:c}=l,p=i.dataIdMap.get(u.dataId).id,d=i.dataIdMap.get(c.dataId).id,h=n!=null?n:u.dtype,f=T.assertAndGetBroadcastShape(u.shape,c.shape),m=i.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(p,g,u.shape.length,d,y,c.shape.length,Ht[u.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var _ce=!0,Dce=ss(ma,_ce),s9;function $ce(e){s9=e.wasm.cwrap(ao,null,["array","number","number","number"])}function Pce(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return s9(a,r.length,Ht[s.dtype],o),s}var Fce={kernelName:ao,backendName:"wasm",setupFunc:$ce,kernelFunc:Pce};function f2(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var Oce={kernelName:So,backendName:"wasm",kernelFunc:f2},r9;function Mce(e){r9=e.wasm.cwrap(Br,null,["number","array","number","number","number","array","number"])}function so(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=Lce(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=zce(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=f2({inputs:t,backend:n});return f.shape=i,f}let u=n.makeOutput(i,l.dtype),c=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return r9(c,h,l.shape.length,Ht[l.dtype],p,d,a.length),u}function zce(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function Lce(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var Bce={kernelName:Br,backendName:"wasm",kernelFunc:so,setupFunc:Mce};function ai(e,t,n){let s=e.shape,r=e.shape.length,a=v.parseAxisParam(t,s),o=a,i=T.getAxesPermutation(o,r),l=null,u=!1;if(i!=null){let c=new Array(r);for(let h=0;h<c.length;h++)c[h]=s[i[h]];o=T.getInnerMostAxes(o.length,r),l=so({inputs:{x:e},attrs:{perm:i},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:u}}var a9;function Wce(e){a9=e.wasm.cwrap(cc,null,["number, number, number"])}function Vce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=ai(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("all",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;a9(l,y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Uce={kernelName:cc,backendName:"wasm",setupFunc:Wce,kernelFunc:Vce},o9;function Gce(e){o9=e.wasm.cwrap(dc,null,["number, number, number"])}function Hce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=ai(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("any",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;o9(l,y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var jce={kernelName:dc,backendName:"wasm",setupFunc:Gce,kernelFunc:Hce},i9;function qce(e){i9=e.wasm.cwrap(oo,null,["number","number","number","number","number"])}function Xce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:u,axes:c,inputWasTransposed:p}=ai(a,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;y!==o&&(l=u,i=y)}let d=l.shape.slice(0,-1),h=t.makeOutput(d,"int32"),f=t.dataIdMap.get(h.dataId).id,m=v.sizeFromShape(h.shape),g=l.shape[c[0]];return i9(i,Ht[l.dtype],m,g,f),p&&t.disposeData(u.dataId),h}var Kce={kernelName:oo,backendName:"wasm",kernelFunc:Xce,setupFunc:qce},l9;function Zce(e){l9=e.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Yce(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,x=c.strideWidth,A=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let b=s.makeOutput(c.outShape,"float32"),w=s.dataIdMap.get(b.dataId).id;return l9(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,x,A,w),b}var Jce={kernelName:io,backendName:"wasm",setupFunc:Zce,kernelFunc:Yce};function cs(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a);return v.assert(a===v.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Qce={kernelName:Nl,backendName:"wasm",kernelFunc:cs},u9;function ede(e){u9=e.wasm.cwrap(lo,null,["number","array","number","number","array","number","number","number","number"])}function tde(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],p=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=Hl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);v.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],w=i?[y,h,p]:[y,p,h],k=cs({inputs:{x:r},backend:n,attrs:{shape:b}}),S=cs({inputs:{x:a},backend:n,attrs:{shape:w}}),E=n.dataIdMap.get(k.dataId).id,R=n.dataIdMap.get(S.dataId).id,$=o?k.shape[2]:k.shape[1],_=i?S.shape[1]:S.shape[2],D=Math.max(g,y),C=n.makeOutput([D,$,_],k.dtype),F=n.dataIdMap.get(C.dataId).id,V=new Uint8Array(new Int32Array(k.shape).buffer),j=new Uint8Array(new Int32Array(S.shape).buffer);return u9(E,V,k.shape.length,R,j,S.shape.length,o,i,F),n.disposeData(k.dataId),n.disposeData(S.dataId),C.shape=A,C}var nde={kernelName:lo,backendName:"wasm",setupFunc:ede,kernelFunc:tde};function nl(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=Ut.parseSliceParams(t,n,s),i=Ut.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),u=r.makeOutput(o,t.dtype),c=v.computeStrides(t.shape),p=r.dataIdMap.get(u.dataId);if(i){let f=Ut.computeFlatOffset(a,c);return t.dtype==="string"?p.stringBytes=l.slice(f,f+v.sizeFromShape(o)):r.typedArrayFromHeap(u).set(l.subarray(f,f+v.sizeFromShape(o))),u}if(t.dtype==="string"){let f=Sm(l,a,o,t.shape,t.dtype);return p.stringBytes=f,u}let d=r.typedArrayFromHeap(u),h=t.shape.length;if(h===2)sde(l,c[0],d,a,o);else if(h===3)rde(l,c[0],c[1],d,a,o);else if(h===4)ade(l,c[0],c[1],c[2],d,a,o);else{let f=Sm(l,a,o,t.shape,t.dtype);d.set(f)}return u}function sde(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let u=o;u<l;u++){let c=u*t+i;n.set(e.subarray(c,c+r[1]),a),a+=r[1]}}function rde(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],u=r[2],c=i+a[0],p=l+a[1];for(let d=i;d<c;d++)for(let h=l;h<p;h++){let f=d*t+h*n+u;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function ade(e,t,n,s,r,a,o){let i=0,l=a[0],u=a[1],c=a[2],p=l+o[0],d=u+o[1],h=c+o[2],f=a[3];for(let m=l;m<p;m++)for(let g=u;g<d;g++)for(let y=c;y<h;y++){let x=m*t+g*n+y*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var ode={kernelName:$l,backendName:"wasm",kernelFunc:nl};function ide(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=cs({inputs:{x:r},backend:n,attrs:{shape:l}}),f=so({inputs:{x:h},backend:n,attrs:{perm:u}}),m=cs({inputs:{x:f},backend:n,attrs:{shape:c}}),g=nl({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var lde={kernelName:ol,backendName:"wasm",kernelFunc:ide};function Rh(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var ude={kernelName:uo,backendName:"wasm",kernelFunc:Rh},cde=Nn(co),c9;function dde(e){c9=e.wasm.cwrap(ga,null,["number","number","number","number"])}function pde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return c9(i,a,o,u),l}var hde={kernelName:ga,backendName:"wasm",setupFunc:dde,kernelFunc:pde};function d9(e){let{inputs:t,backend:n}=e,s=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=T.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>v.sizeFromShape(h.shape)>0);if(a.length===1)return f2({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(v.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(T.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(A=>{let b=v.sizeFromShape(A.shape.slice(s));return cs({inputs:{x:A},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(A=>({vals:n.readSync(A.dataId),shape:A.shape}));r=T.computeOutShape(h.map(A=>A.shape),1);let m=h[0].shape[0]===1,g=Z5(f,r,t[0].dtype,m),y=T.computeOutShape(a.map(A=>A.shape),s);o.shape=y;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=T.fromStringArrayToUint8(g),h.forEach(A=>n.disposeData(A.dataId)),o}let l=v.sizeFromShape(a[0].shape.slice(0,s)),u=0,c=a.map(h=>{let f=v.sizeFromShape(h.shape.slice(s));return u+=f,f}),p=a.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*u;for(let m=0;m<p.length;m++){let g=c[m],y=h*g,x=p[m].subarray(y,y+g);d.set(x,f),f+=g}}return o}var fde={kernelName:il,backendName:"wasm",kernelFunc:d9},p9;function mde(e){p9=e.wasm.cwrap(po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gde(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:d}=n,h=T.convertConv2DDataFormat(d),f=T.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,S=f.strideHeight,E=f.strideWidth,R=f.inChannels,$=f.outChannels,_=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(f.outShape,"float32"),C=s.dataIdMap.get(D.dataId).id;return p9(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,x,A,b,_,w,k,S,E,R,$,C),D}var yde={kernelName:po,backendName:"wasm",setupFunc:mde,kernelFunc:gde},h9;function Ade(e){h9=e.wasm.cwrap(ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function xde(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=s,p=1,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(c,a.shape,o,p,i,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:w,outWidth:k,strideHeight:S,strideWidth:E}=h,R=m-1-h.padInfo.top,$=g-1-h.padInfo.left,_=h.dataFormat==="channelsLast",D=v.computeStrides(h.inShape),C=v.computeStrides(r.shape),[F,V,j]=v.computeStrides(a.shape),z=D[0],Z=_?D[1]:D[2],W=_?D[2]:1,ee=_?1:D[1],Q=C[0],ie=_?C[1]:C[2],J=_?C[2]:1,ae=_?1:C[1],le=t.makeOutput(h.inShape,"float32"),ye=t.dataIdMap.get(le.dataId).id,we=t.dataIdMap.get(r.dataId).id,Re=t.dataIdMap.get(a.dataId).id;return h9(we,Re,f,m,g,x,A,y,w,k,b,S,E,R,$,F,V,j,z,Z,W,ee,Q,ie,J,ae,ye),le}var bde={kernelName:ho,backendName:"wasm",setupFunc:Ade,kernelFunc:xde},vde=Nn(fo),wde=Nn(mo),H3;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(H3||(H3={}));var f9;function kde(e){f9=e.wasm.cwrap(ul,null,["number","number","number","number","array","number","number","number","number","number"])}function Ide(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:u}=n,c=l.shape[0],[p,d]=o,h=[c,p,d,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Rh({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(u.dataId).id,A=t.makeOutput(h,"float32"),b=t.dataIdMap.get(A.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return f9(g,y,x,c,w,p,d,H3[r],a,b),m!=null&&t.disposeData(m.dataId),A}var Sde={kernelName:ul,backendName:"wasm",setupFunc:kde,kernelFunc:Ide},m9;function Cde(e){m9=e.wasm.cwrap(ll,null,["number","number","number","number","number","number"])}function Tde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=so({inputs:{x:r},attrs:{perm:u},backend:n}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;m9(f,o?1:0,i?1:0,h,m,Ht[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=so({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Nde={kernelName:ll,backendName:"wasm",setupFunc:Cde,kernelFunc:Tde},g9;function Ede(e){g9=e.wasm.cwrap(go,null,["number","number","number","number","number","number"])}function Rde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=so({inputs:{x:r},attrs:{perm:u},backend:n}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;g9(f,o?1:0,i?1:0,h,m,Ht[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=so({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var _de={kernelName:go,backendName:"wasm",setupFunc:Ede,kernelFunc:Rde},y9;function Dde(e){y9=e.wasm.cwrap(cl,null,["number","number","number","array","number","array","array","number","number"])}function $de(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return y9(y,a,o==="NHWC"?1:0,x,r.shape.length-1,A,b,f.length,w),m}var Pde={kernelName:cl,backendName:"wasm",setupFunc:Dde,kernelFunc:$de},A9;function Fde(e){A9=e.wasm.cwrap(yo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ode(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=n,d=u==null?[1,1]:u,h=T.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,x=h.padInfo.bottom,A=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,k=h.strideHeight,S=h.strideWidth,E=h.inChannels,R=h.outChannels,$=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let _=s.makeOutput(h.outShape,"float32"),D=s.dataIdMap.get(_.dataId).id;return A9(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,x,A,$,b,w,k,S,E,R,D),_}var Mde={kernelName:yo,backendName:"wasm",setupFunc:Fde,kernelFunc:Ode},zde=Nn(xo),Lde=!1,Bde=ss(dl,Lde,"bool"),Wde=Nn(bo,"float32");function j3(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),cs({inputs:{x:r},backend:s,attrs:{shape:i}})}var Vde={kernelName:pl,backendName:"wasm",kernelFunc:j3};function x9(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var Ude={kernelName:xc,backendName:"wasm",kernelFunc:x9},b9;function Gde(e){b9=e.wasm.cwrap(fl,null,["number","number","number","number","number","number"])}function Hde(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,u,c]=s.shape;return b9(a,i,l,u,c,o),r}var jde={kernelName:fl,backendName:"wasm",kernelFunc:Hde,setupFunc:Gde},qde=Nn(vo),Xde=!1,Kde=ss(wo,Xde),v9;function Zde(e){v9=e.wasm.cwrap(ko,null,["number","number","number","number","number","number","number"])}function Yde(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:u}=n,c=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return v9(c,p,d,h,f,r,g),m}var Jde={kernelName:ko,backendName:"wasm",setupFunc:Zde,kernelFunc:Yde},w9;function Qde(e){w9=e.wasm.cwrap(Xa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function epe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d),g=Cp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let J=s.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${J.shape}) does not match the number of output channels (${A})`);b=J.id}let w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,$=m.padInfo.left,_=m.dilationHeight,D=m.dilationWidth,C=m.strideHeight,F=m.strideWidth,V=m.inChannels,j=m.padInfo.type==="SAME"?1:0,z=m.batchSize,Z=m.inHeight,W=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ee=s.makeOutput(m.outShape,"float32"),Q=s.dataIdMap.get(ee.dataId).id,ie=i==null?0:s.dataIdMap.get(i.dataId).id;return w9(y,z,Z,W,x,w,k,b,S,E,R,$,j,_,D,C,F,V,A,g,ie,f||0,Q),ee}var tpe={kernelName:Xa,backendName:"wasm",setupFunc:Qde,kernelFunc:epe},k9;function npe(e){k9=e.wasm.cwrap(Ka,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function spe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!0),g=Cp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let J=s.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${J.shape}) does not match the number of output channels (${A})`);b=J.id}let w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,$=m.padInfo.left,_=m.dilationHeight,D=m.dilationWidth,C=m.strideHeight,F=m.strideWidth,V=m.inChannels,j=m.padInfo.type==="SAME"?1:0,z=m.batchSize,Z=m.inHeight,W=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ee=s.makeOutput(m.outShape,"float32"),Q=s.dataIdMap.get(ee.dataId).id,ie=i==null?0:s.dataIdMap.get(i.dataId).id;return k9(y,z,Z,W,x,w,k,b,S,E,R,$,j,_,D,C,F,V,A,g,ie,f||0,Q),ee}var rpe={kernelName:Ka,backendName:"wasm",setupFunc:npe,kernelFunc:spe},I9;function ape(e){I9=e.wasm.cwrap(gl,null,["number","number","number","number","number","number","array","number"])}function ope(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=yy.prepareAndValidate(s,r),u=t.makeOutput(a,s.dtype);if(o===0)return u;let c=r.shape,p=c[c.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(u.dataId).id;return I9(h,Ht[s.dtype],m,o,p,i,g,y),u}var ipe={kernelName:gl,backendName:"wasm",setupFunc:ape,kernelFunc:ope},S9;function lpe(e){S9=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function upe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],u=t.readSync(a.dataId),c=r.shape[l];for(let R=0;R<u.length;++R){let $=u[R];v.assert($<=c-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${c-1}]`)}let p=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),d=cs({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=v.sizeFromShape(a.shape),f=cs({inputs:{x:a},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let y=d.shape.length-1,A=t.dataIdMap.get(d.dataId).id,w=t.dataIdMap.get(f.dataId).id,k=t.dataIdMap.get(g.dataId).id,S=new Uint8Array(new Int32Array(v.computeStrides(d.shape)).buffer),E=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return S9(A,Ht[r.dtype],S,y,w,p.batchSize,E,k),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var cpe={kernelName:ml,backendName:"wasm",setupFunc:lpe,kernelFunc:upe},dpe=!1,ppe=ss(yl,dpe,"bool"),hpe=!1,fpe=ss(Io,hpe,"bool"),C9;function mpe(e){C9=e.wasm.cwrap(Co,null,["number","number","number","number"])}function gpe(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;C9(r,Ht[t.dtype],n,o)}return a}var ype={kernelName:Co,backendName:"wasm",setupFunc:mpe,kernelFunc:gpe},Ape=!1,xpe=ss(Al,Ape,"bool"),bpe=!1,vpe=ss(xl,bpe,"bool"),wpe=Nn(To),kpe=!1,Ipe=ss(bl,kpe,"bool"),T9;function Spe(e){T9=e.wasm.cwrap(No,null,["number","number","number","number"])}function Cpe(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=ai(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("max",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;T9(l,Ht[o.dtype],y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Tpe={kernelName:No,backendName:"wasm",setupFunc:Spe,kernelFunc:Cpe},Npe=!1,Epe=ss(Eo,Npe),N9;function Rpe(e){N9=e.wasm.cwrap(Ro,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _pe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,x=c.dilationWidth,A=c.strideHeight,b=c.strideWidth,w=c.inChannels,k=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let S=s.makeOutput(c.outShape,"float32"),E=s.dataIdMap.get(S.dataId).id;return N9(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,x,A,b,w,k,E),S}var Dpe={kernelName:Ro,backendName:"wasm",setupFunc:Rpe,kernelFunc:_pe},E9;function $pe(e){E9=e.wasm.cwrap(_o,null,["number, number, number"])}function Ppe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=ai(o,r,t),f=p;if(h){let b=t.dataIdMap.get(c.dataId).id;b!==i&&(u=c,l=b,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=u;u.dtype!=="float32"&&(x=Rh({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;E9(l,y,b)}if(h&&t.disposeData(c.dataId),a){let b=T.expandShapeToKeepDim(A.shape,d);A.shape=b}return u.dtype!=="float32"&&t.disposeData(x.dataId),A}var Fpe={kernelName:_o,backendName:"wasm",setupFunc:$pe,kernelFunc:Ppe},R9;function Ope(e){R9=e.wasm.cwrap(Do,null,["number","number","number","number"])}function Mpe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=ai(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A)}let f=u.shape.length;T.assertAxesAreInnerMostDims("min",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;R9(l,Ht[o.dtype],y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var zpe={kernelName:Do,backendName:"wasm",setupFunc:Ope,kernelFunc:Mpe},Lpe=!1,Bpe=ss($o,Lpe),q3;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(q3||(q3={}));var _9;function Wpe(e){_9=e.wasm.cwrap(Po,null,["number","array","number","number","array","array","number","number"])}function Vpe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=s.map(f=>f[0]),p=s.map(f=>f[1]),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return _9(o,u,t.shape.length,Ht[t.dtype],d,h,q3[r],l),i}var Upe={kernelName:Po,backendName:"wasm",kernelFunc:Vpe,setupFunc:Wpe},Gpe=!0,Hpe=ss(Fo,Gpe),jpe=Nn(vl);function Ax(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var D9;function qpe(e){D9=e.wasm.cwrap(kl,"number",["number","number","number","number","number"])}function Xpe(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,u=t.dataIdMap.get(i.dataId).id,c=t.dataIdMap.get(l.dataId).id,p=D9(u,c,a,r,o),{pSelectedIndices:d,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=Ax(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",d)}var Kpe={kernelName:kl,backendName:"wasm",setupFunc:qpe,kernelFunc:Xpe},$9;function Zpe(e){$9=e.wasm.cwrap(Cc,"number",["number","number","number","number","number","bool"])}function Ype(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=$9(c,p,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ax(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[y,x]}var Jpe={kernelName:Cc,backendName:"wasm",setupFunc:Zpe,kernelFunc:Ype},P9;function Qpe(e){P9=e.wasm.cwrap(Il,"number",["number","number","number","number","number","number"])}function ehe(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=P9(c,p,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ax(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[y,x]}var the={kernelName:Il,backendName:"wasm",setupFunc:Qpe,kernelFunc:ehe},nhe=!1,she=ss(wl,nhe,"bool"),F9;function rhe(e){F9=e.wasm.cwrap(Cl,null,["number","number","number","number","number"])}function ahe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),u=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(r.dataId).id;return F9(p,a,o,i,u),l}var ohe={kernelName:Cl,backendName:"wasm",setupFunc:rhe,kernelFunc:ahe};function ihe(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var lhe={kernelName:Sl,backendName:"wasm",kernelFunc:ihe};function uhe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return j3({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=j3({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=d9({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var che={kernelName:Tl,backendName:"wasm",kernelFunc:uhe},O9;function dhe(e){O9=e.wasm.cwrap(Oo,null,["number","array","number","number","array","array","number","number"])}function phe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(v.sizeFromShape(t.shape)===0)return x9({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=s.map(m=>m[0]),d=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(d).buffer);return O9(o,c,t.shape.length,Ht[t.dtype],h,f,r,u),i}var M9={kernelName:Oo,backendName:"wasm",kernelFunc:phe,setupFunc:dhe},hhe=!1,fhe=ss(Mo,hhe),z9;function mhe(e){z9=e.wasm.cwrap(zo,null,["number","number","number"])}function ghe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,u=l;l.dtype!=="float32"&&(u=Rh({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(u.dataId).id);let c=n.makeOutput(s.shape,"float32"),p=n.dataIdMap.get(c.dataId).id;return z9(i,o,p),l.dtype!=="float32"&&n.disposeData(u.dataId),c}var yhe={kernelName:zo,backendName:"wasm",setupFunc:mhe,kernelFunc:ghe},L9;function Ahe(e){L9=e.wasm.cwrap(Lo,null,["number","number","number","number"])}function xhe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=ai(o,r,t),f=p;if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;L9(l,y,Ht[x.dtype],A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var bhe={kernelName:Lo,backendName:"wasm",setupFunc:Ahe,kernelFunc:xhe},vhe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Q5(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},whe={kernelName:Tc,backendName:"wasm",kernelFunc:vhe},khe=!0,Ihe=ss(Ao,khe),She=Nn(Bo),Che=Nn(Vo),B9;function The(e){B9=e.wasm.cwrap(Wo,null,["number","number","number","number","number","number","number","number","number","number"])}function Nhe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,[c,p,d,h]=r.shape,f=[c,l,u,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Rh({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return B9(y,c,p,d,h,l,u,a?1:0,o?1:0,A),g!=null&&t.disposeData(g.dataId),x}var Ehe={kernelName:Wo,backendName:"wasm",setupFunc:The,kernelFunc:Nhe},W9;function Rhe(e){W9=e.wasm.cwrap(El,null,["number","array","number","array","number","number"])}function _he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=v.parseAxisParam(a,r.shape);if(r.shape.length===0)return f2({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);W9(l,c,o.length,p,r.shape.length,u);let d=cs({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),d}var Dhe={kernelName:El,backendName:"wasm",kernelFunc:_he,setupFunc:Rhe},V9;function $he(e){V9=e.wasm.cwrap(Ul,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Phe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(l.dataId).id,[p,d,h,f]=r.shape,[m,g]=T.getImageCenter(i,d,h),y=o===0,x=255,A=typeof o=="number"?[o,o,o,y?0:x]:[...o,x],b=new Uint8Array(new Int32Array(A).buffer);return V9(u,p,d,h,f,a,m,g,b,A.length,c),l}var Fhe={kernelName:Ul,backendName:"wasm",kernelFunc:Phe,setupFunc:$he},Ohe=Nn(Rl),Mhe=Nn(Uo),U9;function zhe(e){U9=e.wasm.cwrap(_l,null,["number","number","number","number","number","number","array","number","number"])}function Lhe(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(v.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=Ay.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),x=t.dataIdMap.get(i.dataId).id;return U9(f,g,Ht[a.dtype],l,u,c,y,d,x),i}var Bhe={kernelName:_l,backendName:"wasm",setupFunc:zhe,kernelFunc:Lhe},G9;function Whe(e){G9=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Vhe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id,p=s.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:v.sizeFromShape(r.shape.slice(1));return G9(o,i,l,h,c),u}var Uhe={kernelName:Dl,backendName:"wasm",kernelFunc:Vhe,setupFunc:Whe},H9;function Ghe(e){H9=e.wasm.cwrap(Ho,null,["number","number"])}function Hhe(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||H9(s,a),r}var jhe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Ghe,kernelFunc:Hhe},qhe=Nn(Go),j9;function Xhe(e){j9=e.wasm.cwrap(Xo,null,["number","number","number","number"])}function Khe(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=v.sizeFromShape(n.shape)/i;return v.sizeFromShape(a.shape)===0||j9(r,o,i,l),a}var Zhe={kernelName:Xo,backendName:"wasm",setupFunc:Xhe,kernelFunc:Khe};function Yhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let u=M9.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),p=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=cs({inputs:{x:u},backend:n,attrs:{shape:c}}),x=so({inputs:{x:m},backend:n,attrs:{perm:p}}),w=cs({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),w}var Jhe={kernelName:Fl,backendName:"wasm",kernelFunc:Yhe},q9;function Qhe(e){q9=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function efe(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=n,i=s.shape[0],l=s.shape[1],u=t.readSync(a.dataId)[0],c=[i+u,l],p=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(c,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([u],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],s.dtype),w=t.dataIdMap.get(b.dataId).id,k=t.makeOutput([4],"int32"),S=t.dataIdMap.get(k.dataId).id,E=q9(p,d,Ht[r.dtype],i,u,l,h,m,y,A,w,S),R=t.readSync(k.dataId),$;switch(R[0]){case 1:{$=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{$=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:$=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:$=""}if(t.disposeData(k.dataId),$)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error($);let _=f,D=g;return E!==c[0]&&(_=nl({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),D=nl({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,D,x,b]}var tfe={kernelName:Bp,backendName:"wasm",setupFunc:Qhe,kernelFunc:efe},X9;function nfe(e){X9=e.wasm.cwrap($c,null,["number","number","number","number","number","number","number"])}function sfe(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(a.dataId).id,u=s.shape[0],c=v.sizeFromShape(a.shape),p=t.makeOutput([u,c],s.dtype),d=t.dataIdMap.get(p.dataId).id,h=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;X9(o,i,l,u,d,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=T.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=T.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(p.dataId),t.disposeData(h.dataId),new Error(x);return[p,h]}var rfe={kernelName:$c,backendName:"wasm",setupFunc:nfe,kernelFunc:sfe},K9;function Z9(e){K9=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Y9(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],c=i>0?l+1:0;if(c<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=r.shape.slice();p[0]=c;let d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;K9(d,Ht[r.dtype],r.shape[0],h,f,g,x,t,0);let A=n.readSync(y.dataId),b;switch(A[0]){case 0:{b=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:b=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(y.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function afe(e){return Y9(e,!0)}var ofe={kernelName:Wp,backendName:"wasm",setupFunc:Z9,kernelFunc:afe};function ife(e){return Y9(e,!1)}var lfe={kernelName:Vp,backendName:"wasm",setupFunc:Z9,kernelFunc:ife};function ufe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[i]=p;let h=nl({inputs:{x:r},attrs:{begin:u,size:d},backend:s});return u[i]+=p,h})}var cfe={kernelName:Ol,backendName:"wasm",kernelFunc:ufe},dfe=Nn(jo),pfe=Nn(Pc),hfe=!0,ffe=ss(Ko,hfe),J9;function mfe(e){J9=e.wasm.cwrap(Jo,null,["number","number","number","number"])}function gfe(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return J9(o,r,Ht[a.dtype],l),i}var yfe={kernelName:Jo,backendName:"wasm",setupFunc:mfe,kernelFunc:gfe},Q9;function Afe(e){Q9=e.wasm.cwrap(Ml,null,["number","array","number","array","array","array","array","array","number","number"])}function xfe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=cs({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ut.computeOutShape(x,A,b),S=nl({inputs:{x:r},backend:t,attrs:{begin:x,size:k}});w=cs({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}else{let k=t.makeOutput(h,"float32"),S=t.dataIdMap.get(r.dataId).id,E=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),$=new Uint8Array(new Int32Array(A).buffer),_=new Uint8Array(new Int32Array(b).buffer),D=new Uint8Array(new Int32Array(h).buffer),C=new Uint8Array(new Int32Array(v.computeStrides(h)).buffer),F=t.dataIdMap.get(k.dataId).id;Q9(S,E,r.shape.length,R,$,_,D,C,h.length,F),w=cs({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeData(k.dataId)}return w}var bfe={kernelName:Ml,backendName:"wasm",setupFunc:Afe,kernelFunc:xfe},vfe=!0,wfe=ss(Zo,vfe),eC;function kfe(e){eC=e.wasm.cwrap(qo,null,["number","number","number","number"])}function Ife(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=ai(o,r,t),f=p;if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;eC(l,y,Ht[x.dtype],A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Sfe={kernelName:qo,backendName:"wasm",setupFunc:kfe,kernelFunc:Ife},Cfe=Nn(zl),Tfe=Nn(Yo),tC;function Nfe(e){tC=e.wasm.cwrap(ya,null,["number","array","number","array","number","number"])}function Efe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let d=0;d<i.length;d++)i[d]=r.shape[d]*o[d];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=n.makeOutput(i,r.dtype),p=n.dataIdMap.get(c.dataId).id;return tC(a,l,r.shape.length,u,i.length,Ht[c.dtype],p),c}var Rfe={kernelName:ya,backendName:"wasm",setupFunc:Nfe,kernelFunc:Efe},nC;function _fe(e){nC=e.wasm.cwrap(Ll,null,["number","array","number","number","number","bool","number","number"])}var Dfe=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,s.dtype),c=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return nC(o,i,s.shape.length,Ht[s.dtype],r,a,c,d),[u,p]},$fe={kernelName:Ll,backendName:"wasm",setupFunc:_fe,kernelFunc:Dfe},sC;function Pfe(e){sC=e.wasm.cwrap(Bl,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Ffe(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),A=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(r.dataId).id,S=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return sC(w,S,a.shape[0]>1,c,f,m,h,d,p,y,r.shape.length-1,E,R,l,A),x}var Ofe={kernelName:Bl,backendName:"wasm",setupFunc:Pfe,kernelFunc:Ffe};function Mfe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),u=0;for(let h=0;h<i;h++)h!==a&&(l[u++]=r.shape[h]);let c=new Array(o),p=new Array(i).fill(0),d=r.shape.slice();d[a]=1;for(let h=0;h<c.length;h++)p[a]=h,c[h]=nl({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return c.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var zfe={kernelName:Wl,backendName:"wasm",kernelFunc:Mfe};function Lfe(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var Bfe={kernelName:Vl,backendName:"wasm",kernelFunc:Lfe},Wfe=[Ece,Rce,Dce,Fce,Uce,jce,Kce,Jce,nde,lde,ude,cde,hde,fde,yde,bde,vde,wde,Sde,Nde,_de,Pde,Mde,zde,Bde,Wde,Vde,Ude,jde,qde,Kde,Jde,tpe,rpe,ipe,cpe,ppe,fpe,Oce,ype,xpe,vpe,wpe,Ipe,Tpe,Epe,Dpe,Fpe,zpe,Bpe,Upe,Hpe,jpe,Kpe,Jpe,the,she,ohe,lhe,che,M9,fhe,yhe,bhe,whe,Ihe,She,Che,Qce,Ehe,Dhe,Fhe,Ohe,Mhe,Bhe,Uhe,jhe,qhe,ode,Zhe,Jhe,tfe,rfe,ofe,lfe,cfe,dfe,pfe,ffe,yfe,bfe,wfe,Sfe,Cfe,Tfe,Rfe,$fe,Ofe,Bce,zfe,Bfe];for(let e of Wfe)ar(e);var X3=Y();X3.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));X3.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(X3.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var Jv=sl(OR()),Vfe=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`,Ufe=sl(MR()),rC=class extends oc{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(aC),K3=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Np(this,nn())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let u=t;this.dataIdMap.set(e,{id:a,stringBytes:u,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=v.sizeFromShape(n),i=o*v.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||v.sizeFromShape(a);let i=v.bytesPerElement(r),l=this.wasm.HEAPU8.slice(s+t*i,s+n*i);return jfe(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Gfe(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function Qv(e,t,n){if(_m!=null)return _m;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),lp!=null&&lp[s]!=null?lp[s]:n+s}async function Hfe(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let u=Vfe.replace(/\n/g,"\\n"),c=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(c)}return i.endsWith(".wasm")?Qv(e,t,ap!=null?ap:l):l+i},xx&&(r.instantiateWasm=Gfe(Qv(e,t,ap!=null?ap:"")));let a=!1;r.onAbort=()=>{if(a||up)return;up=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&_m==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Jv.default.toString()],{type:"text/javascript"}),o=(0,Jv.default)(r)):o=(0,Ufe.default)(r),o.then(i=>{a=!0,up=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function jfe(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var qfe=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],_m=null,ap=null,lp={},up=!1,xx=!1;function Xfe(e,t=!1){if(fy("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),up)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");_m=e,xx=t}function bx(e,t=!1){if(up)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")ap=e;else{lp=e;let n=qfe.filter(s=>lp[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}xx=t}var aC=-1,K3=-1;function Kfe(e){aC=e}function Zfe(){if(K3===-1)throw new Error("WASM backend not initialized.");return K3}var Yfe="3.18.0",Jfe=2;Gl("wasm",async()=>{let{wasm:e}=await Hfe();return new rC(e)},Jfe);var oi=Y();oi.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);oi.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);oi.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);oi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);oi.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);oi.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);oi.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);oi.registerFlag("WEBGPU_USE_IMPORT",()=>!1);var Ke;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(Ke||(Ke={}));var Qfe="return a + b;",eme="return areal * breal - aimag * bimag;",tme="return areal * bimag + aimag * breal;",nme="return a / b;",sme="return a * b;",rme="return (a - b) * (a - b);",ame="return a - b;",ome="return f32(a == b);",ime="return vec4<f32>(a == b);",lme="return f32(a > b);",ume="return vec4<f32>(a > b);",cme="return f32(a >= b);",dme="return vec4<f32>(a >= b);",pme="return f32(a < b);",hme="return vec4<f32>(a < b);",fme="return f32(a <= b);",mme="return vec4<f32>(a <= b);",gme="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",yme=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Ame=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,oC=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,xme=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,bme=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,vme="return f32(a != b);",wme="return vec4<f32>(a != b);",kme=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Ime=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${oC}
  return resultTemp;
  `,Sme="if (a < 0.0) { return b * a; }  return a;",Cme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function e7(e,t){let n=t?oC:Ame;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function _h(e,t){switch(e){case Ke.MUL:return sme;case Ke.ADD:return Qfe;case Ke.SUB:return ame;case Ke.DIV:return nme;case Ke.EQUAL:return t?ime:ome;case Ke.GREATER:return t?ume:lme;case Ke.GREATER_EQUAL:return t?dme:cme;case Ke.LESS:return t?hme:pme;case Ke.LESS_EQUAL:return t?mme:fme;case Ke.LOGICAL_AND:return t?yme:gme;case Ke.NOT_EQUAL:return t?wme:vme;case Ke.SQUARED_DIFFERENCE:return rme;case Ke.INT_DIV:return t?bme:xme;case Ke.PRELU:return t?Cme:Sme;case Ke.MAX:return e7("max",t);case Ke.MIN:return e7("min",t);case Ke.POW:return t?Ime:kme;case Ke.COMPLEX_MULTIPLY_REAL:return eme;case Ke.COMPLEX_MULTIPLY_IMAG:return tme;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Fe;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.RELU=12]="RELU",e[e.RELU6=13]="RELU6",e[e.LEAKYRELU=14]="LEAKYRELU",e[e.RSQRT=15]="RSQRT",e[e.SIN=16]="SIN",e[e.SINH=17]="SINH",e[e.SIGMOID=18]="SIGMOID",e[e.SQRT=19]="SQRT",e[e.SQUARE=20]="SQUARE",e[e.TANH=21]="TANH",e[e.TO_INT=22]="TO_INT"})(Fe||(Fe={}));var Tme="return abs(a);",Nme="return ceil(a);",Eme="return cos(a);",Rme=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,_me="return exp(a) - 1.0;",Dme="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",$me=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Pme="return exp(a);",Fme="return floor(a);",Ome="return a;",Mme=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,zme="return f32(!(a >= 1.0));",Lme="return -a;",Bme="if (a < 0.0) { return uniforms.alpha * a; } return a;",Wme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Vme="return select(a, 0.0, a < 0.0);",Ume="return clamp(a, 0.0, 6.0);",Gme="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Hme=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,jme="return 1.0/sqrt(a);",qme="return 1.0 / (1.0 + exp(-1.0 * a));",Xme="return sin(a);",Kme=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Zme="return sqrt(a);",Yme="return a * a;",Jme=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Qme="return f32(i32((a)));";function Ri(e,t){switch(e){case Fe.ABS:return Tme;case Fe.COS:return Eme;case Fe.COSH:return Rme;case Fe.CEIL:return Nme;case Fe.ELU:return t?$me:Dme;case Fe.EXP:return Pme;case Fe.EXPM1:return _me;case Fe.FLOOR:return Fme;case Fe.LINEAR:return Ome;case Fe.LOG:return Mme;case Fe.LOGICAL_NOT:return zme;case Fe.NEG:return Lme;case Fe.LEAKYRELU:return t?Wme:Bme;case Fe.RELU:return t?Hme:Vme;case Fe.RELU6:return t?Gme:Ume;case Fe.RSQRT:return jme;case Fe.SIGMOID:return qme;case Fe.SIN:return Xme;case Fe.SINH:return Kme;case Fe.SQRT:return Zme;case Fe.SQUARE:return Yme;case Fe.TANH:return Jme;case Fe.TO_INT:return Qme;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function ii(e,t=!1){if(e===null)return null;if(e==="linear")return Ri(Fe.LINEAR);if(e==="relu")return Ri(Fe.RELU,t);if(e==="elu")return Ri(Fe.ELU,t);if(e==="relu6")return Ri(Fe.RELU6,t);if(e==="prelu")return _h(Ke.PRELU,t);if(e==="sigmoid")return Ri(Fe.SIGMOID,t);if(e==="leakyrelu")return Ri(Fe.LEAKYRELU,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function e0e(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function vn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Ha(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function em(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function vx(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function nu(){return`
  ${vx()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function at(){return`
    ${nu()}
      let index = getGlobalIndex();
`}function t0e(e,t,n,s=!1){let r=[];if(r.push(`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),s===!0)return r.push(`
      struct Uniform {
        size            : i32,
        numChannels     : i32,
        outShapeStrides : vec2<i32>,
        dispatchSize    : vec3<u32>,
      };

      @group(0) @binding(0) var<storage, write> result: array<${em(t.dtype,n.isVec4)}>;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[t7,r.join(`
`),n7(t.shape),n.getUserCode()].join(`
`);let a=!1,o=!1,i="struct Uniforms { NAN : f32, ";n.variableNames.forEach((m,g)=>{let y=vn(e[g].shape.length);(y==="vec5"||y==="vec6")&&(o=!0),(a||o)&&(i+="@align(16) "),a=o,i+=`${m.charAt(0).toLowerCase()+m.slice(1)}Shape : ${y}, `});let l=vn(t.shape.length);o=l==="vec5"||l==="vec6",(a||o)&&(i+="@align(16) "),a=o,i+=`outShape : ${l}, `;let u=t.shape.length-1,c=vn(u);o=c==="vec5"||c==="vec6",(a||o)&&(i+="@align(16) "),a=o,i+=`
       outShapeStrides: ${c}, `,n.size&&(a&&(i+="@align(16) "),a=!1,i+="size : i32, "),n.uniforms&&(a&&(i+="@align(16) "),i+=n.uniforms),i+="};",r.push(i),n.atomic?r.push(`
    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
  `):r.push(`
    @group(0) @binding(0) var<storage, write> result: array<${em(t.dtype,n.isVec4)}>;
  `),n.variableNames.forEach((m,g)=>{r.push(`
    @group(0) @binding(${1+g}) var<storage, read> ${m}: array<${n.variableTypes?n.variableTypes[g]:em(e[g].dtype,n.isVec4)}>;
      `)}),i!==""&&r.push(`
    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
    `);let[p,d]=i0e(t.shape,n.dispatchLayout),h=[t7,r.join(`
`),n7(t.shape),p,n0e(t.shape.length)];if(n.atomic||h.push(s0e(t.shape,t.dtype,n.isVec4)),d===t.shape.length){let m=e.map((g,y)=>r0e(g,t.shape,n.variableTypes?n.variableTypes[y]==="vec4<f32>":n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);h.push(m)}return h.push(n.getUserCode()),h.join(`
`)}var t7=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function n0e(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function s0e(e,t,n){let s=e.length,r=em(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3","d4","d5"].slice(0,s),i=vn(s);n?a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function r0e(e,t,n,s){let r=a0e(e,n);return e.shape.length<=t.length&&(r+=o0e(e,t,n,s)),r}function a0e(e,t){let n=e.name,s=e.shape.length,r=vn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3","d4","d5"].slice(0,s),i=o.map(c=>`${c} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${s}D`;return s===0&&(u="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function o0e(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"ByOutput",i=e.shape.length,l=t.length,u=vn(l);if(v.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}[globalIndex]);
        }

        fn ${o}Coords(coords : ${u}) -> vec4<f32> {
          return vec4<f32>(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}Index(globalIndex : i32) -> f32 {
        return f32(${r}[globalIndex]);
      }

      fn ${o}Coords(coords : ${u}) -> f32 {
        return f32(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let c=T.getBroadcastDims(e.shape,t),p=l-i,d="";if(i===0)return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}Coords(coords : ${u}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}Index(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}Coords(coords : ${u}) -> f32{
        return get${a}();
      }
    `;l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${Ha(g+p)} = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=vn(i),y=e.shape.map((x,A)=>`coords.${Ha(A+p)}`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${d}
        return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }

      fn ${o}Coords(coordsIn : ${u}) -> vec4<f32> {
        var coords = coordsIn;
        ${d}
        return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
    }

    fn ${o}Coords(coordsIn : ${u}) -> f32 {
      var coords = coordsIn;
      ${d}
      return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
    }
  `}function i0e(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${vn(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,a];let o="",i=[n,s,r],l=0;for(let d=0;d<i.length;d++){let h=i[d];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${d}]);`;else{let f=e0e(h,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${d} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${d} - d${h[m]} * ${f[m]};`:o+=`index${d} = index${d} - d${h[m]} * ${f[m]};`}}let u=[];for(let d=0;d<l;d++)u.push(`d${d}`);let c=vn(l),p=`fn getOutputCoords() -> ${c} {
    ${o}
  `;return u.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${u.join(",")}); }`,[p,l]}function n7(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=v.computeStrides(e),s=vn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a;return a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides.${Ha(i)}`,u=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides.${Ha(i)}`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides.${Ha(i)}`;return`${l}; ${u};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var iC={};Ve(iC,{ArrayBufferToTypedArray:()=>uC,GPUBytesPerElement:()=>tm,computeDispatch:()=>Le,computeWorkGroupSizeForConv2d:()=>wx,computeWorkGroupSizeForMatMul:()=>lC,computeWorkPerThreadForConv2d:()=>kx,flatDispatchLayout:()=>et,isWebGPUSupported:()=>Ix,tilesFitEvenlyIntoShape:()=>ha});var Wi=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function ha(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Le(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(Wi(e.x.map(i=>t[i]))/(n[0]*s[0])),e.y?Math.ceil(Wi(e.y.map(i=>t[i]))/(n[1]*s[1])):1,e.z?Math.ceil(Wi(e.z.map(i=>t[i]))/(n[2]*s[2])):1];return[r,a,o]}function wx(e,t){let n=Wi(e.x.map(r=>t[r])),s=Wi(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function lC(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function kx(e,t){let n=Wi(e.x.map(r=>t[r])),s=Wi(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function et(e){return{x:e.map((t,n)=>n)}}function tm(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function uC(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Ix(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}function cC(e,t,n,s,r=4){return v.assert((s%4===0||s%3===0)&&e[0]===4&&(r===3||r===4),()=>`tileInner must be divisible by 4|3. ColPerThread must be 4.
           innerElementSize must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${r}<f32>, ${s/r}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let InnerElementSize = ${r};
  let TileInner = ${s};

  ${nu()}

    let tileRow = ${t===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / InnerElementSize;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${r===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            for (var i = 0; i < RowPerThread; i = i + 1) {
                let ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                ${r===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var l0e=class{constructor(e,t,n,s,r,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let l=a!=null,u=i!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=s,this.batchBEqualOne=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=[this.tileAOuter,this.tileInner],r=[this.tileInner,this.tileBOuter];return[ha(s,this.aShape.slice(1)),ha(r,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=ii(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
        `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
          let batch = i32(globalId.z);
        `}

        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchBEqualOne?`
          let batchBSize = 0;
          let batch = 0;
          `:`
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
          let batch = i32(globalId.z);
       `}
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${cC(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function Sx(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${nu()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function u0e(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${nu()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var c0e=class{constructor(e,t,n,s,r,a=!1,o=!1,i=null,l=null,u=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let c=a?e[1]:e[2];this.workGroupSize=lC(t[1],c,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),v.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=i!=null,d=u!=null;p&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=a,this.transposeB=o,this.addBias=p,this.activation=l,this.hasPreluActivationWeights=d,this.batchAEqualOne=s,this.batchBEqualOne=r;let h=this.outputShape[2],f=this.transposeB?[this.outputShape[0],h,c]:[this.outputShape[0],c,h];[this.fitA,this.fitB]=this.getShapeFit(f),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${o}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),v.assert(s%this.workGroupSize[0]===0&&s%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[ha(r,this.aShape.slice(1)),ha(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=ii(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
        let batch = 0;
        let batchASize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        `}
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
        let batch = 0;
        let batchBSize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        `}
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Sx([this.workPerThread,this.workPerThread,1],this.workGroupSize):u0e(this.workGroupSize)}
    `}};function d0e(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${nu()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var p0e=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,u=i!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e;this.transposeA===!1?e="return f32(A[batch * batchASize + row * uniforms.dimInner + col]);":e="return f32(A[batch * batchASize + col * uniforms.dimAOuter + row]);";let t;this.transposeB===!1?t="return f32(B[batch * batchBSize + row * uniforms.dimBOuter + col]);":t="return f32(B[batch * batchBSize + col * uniforms.dimInner + row]);";let n="",s="";if(this.activation){let o=ii(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = batchIn;
          `}
        ${e}
      }

      fn mm_readB(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = batchIn;
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${d0e()}
    `}};function h0e(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${nu()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var f0e=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],v.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=ii(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
          let batch = 0;
          let batchASize = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = i32(globalId.z);
          `}
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = i32(globalId.z);
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${h0e(this.workGroupSize)}
    `}};function rt(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a),i=v.sizeFromShape(o);return v.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var m0e={kernelName:Nl,backendName:"webgpu",kernelFunc:rt};function Cx({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=Hl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,p,h]:[y,h,p],k=s?[x,f,d]:[x,d,f],S=rt({inputs:{x:e},backend:r,attrs:{shape:w}}),E=rt({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[S,E],$=Math.max(y,x),_=y===1,D=x===1,C=p%4===0&&f%4===0&&!n&&!s,F;h*f<=32?F=new p0e([$,h,f],_,D,n,s,a,l,o):!n&&!s&&(h<=16&&(f<=512||d>=2*f)||f<=16&&(h<=512||p>=2*h))?F=new f0e(w,k,[$,h,f],a,l,o):C?F=new l0e(w,[$,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),_,D,a,l,o):F=new c0e(w,[$,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),_,D,n,s,a,l,o);let V=[S,E];a&&V.push(a),o&&V.push(o);let j=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[p]}];l==="leakyrelu"&&(j.push({type:"float32",data:[i]}),F.uniforms+=" alpha : f32,");let z=r.runWebGPUProgram(F,V,e.dtype,j),Z=rt({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let W of R)r.disposeData(W.dataId);return Z}function g0e(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s;return Cx({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var y0e={kernelName:qa,backendName:"webgpu",kernelFunc:g0e},s7=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${_h(this.op,!1)}
      }

      ${at()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},A0e=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=et(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${_h(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${at()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},x0e=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${_h(this.op,this.isVec4)}
      }
      ${at()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},dC=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${_h(this.op,!1)}
      }
      ${at()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function r7(e,t,n){if(v.arraysEqual(t,n)&&v.sizeFromShape(t)%4===0)return new x0e(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new A0e(e,t,n,a):new dC(e,t,n)}function Hs(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var b0e={kernelName:So,backendName:"webgpu",kernelFunc:Hs};function ad(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=Hs({inputs:{x:s},backend:n}),l=Hs({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var v0e={kernelName:Rp,backendName:"webgpu",kernelFunc:ad},Dh=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Ri(this.op,!1)}
      }
      ${at()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function En({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let u=o.tensorMap.get(a.dataId),c=t(u.values,i);return o.makeTensorInfo(a.shape,i,c)}let l=new Dh(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function rs({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let p=l.tensorMap.get(o.dataId),d=l.tensorMap.get(i.dataId),h,f;if(e!==Ke.MUL)[h,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},w=r7(e,o.shape,i.shape);return l.runWebGPUProgram(w,[A,b],$n(y.dtype,x.dtype))});else{let g=new s7(Ke.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),y=new s7(Ke.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}let m=ad({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let u=s||$n(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let p=l.tensorMap.get(o.dataId).values,d=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?T.fromUint8ToStringArray(p):p,f=o.dtype==="string"?T.fromUint8ToStringArray(d):d,[m,g]=t(o.shape,i.shape,h,f,u);return l.makeTensorInfo(g,u,m)}let c=r7(e,o.shape,i.shape);return l.runWebGPUProgram(c,[o,i],u)}}var{addImpl:w0e,ceilImpl:k0e,concatImpl:I0e,equalImpl:S0e,expImpl:C0e,expm1Impl:T0e,floorImpl:N0e,gatherNdImpl:E0e,gatherV2Impl:R0e,greaterEqualImpl:_0e,greaterImpl:D0e,lessEqualImpl:$0e,lessImpl:P0e,logImpl:F0e,maxImpl:O0e,maximumImpl:M0e,minimumImpl:z0e,multiplyImpl:L0e,negImpl:B0e,notEqualImpl:W0e,prodImpl:V0e,rangeImpl:U0e,rsqrtImpl:G0e,scatterImpl:H0e,simpleAbsImpl:j0e,sliceImpl:q0e,stridedSliceImpl:X0e,stringNGramsImpl:K0e,subImpl:Z0e,tileImpl:Y0e,topKImpl:J0e,transposeImpl:Q0e,uniqueImpl:f5e}=q5,e2e=En({opType:Fe.ABS,cpuKernelImpl:j0e}),t2e={kernelName:al,backendName:"webgpu",kernelFunc:e2e},n2e=rs({opSnippet:Ke.ADD,cpuKernelImpl:w0e,supportsComplex:!0}),s2e={kernelName:ma,backendName:"webgpu",kernelFunc:n2e},r2e=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${at()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function a2e(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Hs({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>$n(i,l)),a=s.map(i=>i.shape),o=new r2e(a);return n.runWebGPUProgram(o,s,r)}var o2e={kernelName:ao,backendName:"webgpu",kernelFunc:a2e},pC=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let s=[t];T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=T.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ha(this.inputShape.length-1)}`,n=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)r+=`outputCoords.${Ha(a)},`;return r};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${at()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},i2e=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${vx()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},l2e=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=vn(this.outputShape.length),t=u2e(this.newDim);return`
      ${at()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function u2e(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC.${Ha(s)}`;return n.join()}function fa(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];if(n.shouldExecuteOnCPU([r])){let p=o.tensorMap.get(r.dataId).values,d=Q0e(p,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&v.arraysEqual(a,[1,0])){let c=new i2e(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}let u=new l2e(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}var c2e={kernelName:Br,backendName:"webgpu",kernelFunc:fa};function d2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=fa({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=new pC(l.shape,o[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",p);return u.forEach(h=>n.disposeData(h.dataId)),d}var p2e={kernelName:oo,backendName:"webgpu",kernelFunc:d2e};function h2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=fa({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=new pC(l.shape,o[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",p);return u.forEach(h=>n.disposeData(h.dataId)),d}var f2e={kernelName:pc,backendName:"webgpu",kernelFunc:h2e},hC=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${at()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},fC=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${at()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function m2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return Hs({inputs:{x:r},backend:n});let p,d=[{type:"int32",data:[c.strideHeight,c.strideWidth]}];return c.filterHeight===1&&c.filterWidth===1?p=new fC(c):(p=new hC(c,"avg"),d.push({type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]})),n.runWebGPUProgram(p,[r],r.dtype,d)}var g2e={kernelName:io,backendName:"webgpu",kernelFunc:m2e};function y2e(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Cx({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var A2e={kernelName:lo,backendName:"webgpu",kernelFunc:y2e},x2e=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${vn(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=vn(this.rank),t=b2e(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Z3[a]} = uniforms.start[${a}] + coords.${Z3[a]};`),`
      ${at()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Z3=["x","y","z","w","u","v"];function b2e(e){if(e===1)return"sourceLoc";if(e<=6)return Z3.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function od(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ut.parseSliceParams(r,a,o);if(Ut.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.tensorMap.get(r.dataId),d=q0e(p.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}if(v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let u=new x2e(i,l),c=[{type:"int32",data:i}];return n.runWebGPUProgram(u,[r],r.dtype,c)}var v2e={kernelName:$l,backendName:"webgpu",kernelFunc:od},w2e=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=[],f=rt({inputs:{x:r},backend:n,attrs:{shape:l}}),m=fa({inputs:{x:f},backend:n,attrs:{perm:u}}),g=rt({inputs:{x:m},backend:n,attrs:{shape:c}}),y=od({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),y},k2e={kernelName:ol,backendName:"webgpu",kernelFunc:w2e},mC=rs({opSnippet:Ke.NOT_EQUAL,dtype:"bool",cpuKernelImpl:W0e}),I2e={kernelName:wl,backendName:"webgpu",kernelFunc:mC};function $h(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Hs({inputs:{x:r.complexTensorInfos.real},backend:n})}var S2e={kernelName:Lp,backendName:"webgpu",kernelFunc:$h};function C2e(e,t){let n=new Dh(e.shape,Fe.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Y3(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Hs({inputs:{x:r},backend:n});let o=Wt(r.shape),i=Y3({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=ad({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=$h({inputs:{input:r},backend:n}),i=Y3({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Hs({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return C2e(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=mC({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var T2e={kernelName:uo,backendName:"webgpu",kernelFunc:Y3},N2e=En({opType:Fe.CEIL,cpuKernelImpl:k0e}),E2e={kernelName:co,backendName:"webgpu",kernelFunc:N2e},R2e=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${at()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},_2e=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${at()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function D2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return v.sizeFromShape(r.shape)%4===0?i=new R2e(r.shape):i=new _2e(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var $2e={kernelName:ga,backendName:"webgpu",kernelFunc:D2e},P2e=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${at()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function m2(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Hs({inputs:{x:r.complexTensorInfos.imag},backend:n})}var F2e={kernelName:Fp,backendName:"webgpu",kernelFunc:m2};function J3(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(x=>$h({inputs:{input:x},backend:n})),f=e.map(x=>m2({inputs:{input:x},backend:n})),m=J3(h,t,n),g=J3(f,t,n),y=ad({inputs:{real:m,imag:g},backend:n});return h.forEach(x=>n.disposeData(x.dataId)),f.forEach(x=>n.disposeData(x.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),y}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(b=>{let w=v.sizeFromShape(b.shape.slice(t));return rt({inputs:{x:b},backend:n,attrs:{shape:[-1,w]}})}),f=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),m=T.computeOutShape(h.map(b=>b.shape),1),g=h[0].shape[0]===1,y=I0e(f,m,s,g),x=T.computeOutShape(e.map(b=>b.shape),t),A=n.makeTensorInfo(x,s,y);return h.forEach(b=>n.disposeData(b.dataId)),A}let{tensors2D:a,outShape:o}=O2e(e,t,n),i=a.map(h=>h.shape),l=new P2e(i),u=[],c=new Array(i.length-1);if(c.length>0){c[0]=i[0][1],u.push({type:"int32",data:[c[0]]});for(let h=1;h<c.length;h++)c[h]=c[h-1]+i[h][1],u.push({type:"int32",data:[c[h]]})}let p=n.runWebGPUProgram(l,a,a[0].dtype,u);a.forEach(h=>n.disposeData(h.dataId));let d=rt({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeData(p.dataId),d}function O2e(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>rt({inputs:{x:a},backend:n,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function gC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>v.sizeFromShape(u.shape)>0);if(i.length===1)return Hs({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),J3(i,a,n)}var M2e={kernelName:il,backendName:"webgpu",kernelFunc:gC},z2e=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      dimAOuter : i32, dimBOuter : i32, dimInner : i32,`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.innerElementSize=this.convInfo.inChannels%4===0?4:3,this.innerElementSize===3?this.variableTypes=["f32","vec4<f32>"]:this.variableTypes=["vec4<f32>","vec4<f32>"],this.addBias&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),this.hasPreluActivationWeights&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>")),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.workGroupSize[0]*this.innerElementSize,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.innerElementSize}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],s=this.outputShape[3],r=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ha(e,[n,r]),ha(t,[r,s])]}getUserCode(){let e=cC(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize),t=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
        let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];

        var resData = vec${this.innerElementSize}<f32>(0.0);
        // The bounds checking is always needed since we use it to pad zero for
        // the 'same' padding type.
        if (xRow >= 0 && xRow < uniforms.xShape[1] && xCol >= 0 && xCol < uniforms.xShape[2]) {
          var coord = vec4<i32>(
            batch,
            xRow,
            xCol,
            inChCoord);
          let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
          ${this.innerElementSize===3?"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);":"resData = x[xIndex / 4];"}
        }
        return resData;`,n=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${t}
         }
         return vec${this.innerElementSize}<f32>(0.0);
        `,s=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,r="",a="";if(this.activation){let l=ii(this.activation,this.isVec4);this.hasPreluActivationWeights?r=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${l}
        }`:r=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${l}
        }`,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${r}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec${this.innerElementSize}<f32> {
          let r = row;
          let c = col * ${this.innerElementSize};
          var batch = i32(globalId.z);
          ${n}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${s}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${o}
            ${a}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},L2e=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[1],y:[2,3],z:[0]},this.workGroupSize=wx(this.dispatchLayout,this.outputShape),this.elementsPerThread=kx(this.dispatchLayout,this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}_${this.isChannelsLast}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;v.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.convInfo.outHeight*this.convInfo.outWidth,o=this.convInfo.outChannels,i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ha(s,[a,i]),ha(r,[i,o])]}getUserCode(){let e=this.isChannelsLast?`
    let coord = vec4<i32>(batch, xRow, xCol, col % inChannels);
    `:`
    let coord = vec4<i32>(batch, col % inChannels, xRow, xCol);
    `,t=this.isChannelsLast?`
    let outCoord = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let outCoord = vec4<i32>(
      batch,
      col,
      row / outWidth,
      row % outWidth);
    `,n=Sx(this.elementsPerThread,this.workGroupSize),s=`
    let inChannels = uniforms.wShape[2];
    let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
    let outRow = row / outWidth;
    let outCol = row % outWidth;

    let WRow = col / (uniforms.filterDims[1] * inChannels);
    let WCol = col / inChannels % uniforms.filterDims[1];
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    ${e}
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,r=this.fitA?`${s}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${s}
    }
    return 0.0;
    `,a=this.fitB?"return W[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,o="",i="";if(this.activation){let c=ii(this.activation,!1);this.hasPreluActivationWeights?o=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${c}
                }`:o=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${c}
                  }
                `,i="value = activation(value, outCoord);"}let l=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${o}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${r}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${a}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      ${t}
      ${l}
      ${i}
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${n}
  `}};function B2e({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=n.dataFormat==="channelsLast",u=!l,c=!1,p=l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d,h;if(p){let g=n.inHeight*n.inWidth*n.inChannels;d=rt({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,g]}}),h=rt({inputs:{x:t},backend:s,attrs:{shape:[1,g,n.outChannels]}})}else d=rt({inputs:{x:e},backend:s,attrs:{shape:l?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),h=rt({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});let f=Cx({a:l?d:h,b:l?h:d,transposeA:u,transposeB:c,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),m=rt({inputs:{x:f},backend:s,attrs:{shape:n.outShape}});return s.disposeData(d.dataId),s.disposeData(h.dataId),s.disposeData(f.dataId),m}function yC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=r!=null,u=a!=null,c=n.dataFormat==="channelsLast",p;if(c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return B2e({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});let h=(n.inChannels%4===0||n.inChannels%3===0)&&n.outChannels%4===0&&c,f=[n.padInfo.top,n.padInfo.left],m=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];h?p=new z2e(n,l,i,u):p=new L2e(n,l,i,u);let g=n.outHeight*n.outWidth,y=n.outChannels,x=n.filterHeight*n.filterWidth*n.inChannels;m.push({type:"int32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]});let A=[e,t];return l&&A.push(r),u&&A.push(a),i==="leakyrelu"&&(m.push({type:"float32",data:[o]}),p.uniforms+=" alpha : f32,"),s.runWebGPUProgram(p,A,e.dtype,m)}function W2e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p);return yC({x:r,filter:a,convInfo:d,backend:s})}var V2e={kernelName:po,backendName:"webgpu",kernelFunc:W2e},U2e=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=wx(this.dispatchLayout,this.outputShape),this.elementsPerThread=kx(this.dispatchLayout,this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${Sx(this.elementsPerThread,this.workGroupSize)}
  `}},G2e=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${at()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function H2e(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,p),h=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new G2e(d);else{f=new U2e(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],y=d.filterHeight*d.filterWidth*d.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var j2e={kernelName:ho,backendName:"webgpu",kernelFunc:H2e},q2e=En({opType:Fe.COS}),X2e={kernelName:fo,backendName:"webgpu",kernelFunc:q2e},K2e=En({opType:Fe.COSH}),Z2e={kernelName:mo,backendName:"webgpu",kernelFunc:K2e},Y2e=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${at()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},J2e=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new Y2e(r.shape[3],a.shape,i,l),p=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[r,a,o],"float32",p)},Q2e={kernelName:ul,backendName:"webgpu",kernelFunc:J2e},Tp;(function(e){e.Prod="*",e.Sum="+"})(Tp||(Tp={}));var a7=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===Tp.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${o7(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1],r="",a="";return this.exclusive?(r=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${at()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${i7(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${a};
           ${i7(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${o7(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function o7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function i7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function AC(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=fa({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],p=Hs({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new a7(e,l.shape,!1,a),f=p,m=[{type:"float32",data:[d]}];p=n.runWebGPUProgram(h,[p],p.dtype,m),n.disposeData(f.dataId)}if(r){let d=new a7(e,l.shape,r,a),h=p,f=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(d,[p],p.dtype,f),n.disposeData(h.dataId)}if(i!=null){let d=T.getUndoAxesPermutation(i),h=fa({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeData(p.dataId),n.disposeData(l.dataId),h}return p}function e1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return AC(Tp.Prod,r,n,a,o,i)}var t1e={kernelName:ll,backendName:"webgpu",kernelFunc:e1e};function n1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return AC(Tp.Sum,r,n,a,o,i)}var s1e={kernelName:go,backendName:"webgpu",kernelFunc:n1e},r1e=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${at()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function a1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=[{type:"int32",data:[a]}],g=new r1e(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var o1e={kernelName:cl,backendName:"webgpu",kernelFunc:a1e},xC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=ii(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${vx()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},bC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,
      channelMul : i32,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ii(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${nu()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function i1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s,c=l;c==null&&(c=[1,1]);let p=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!0),d=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}],h;return p.batchSize===1&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&p.strideHeight===1&&p.strideWidth===1&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.filterHeight===3&&p.inChannels%4===0?h=new xC(p):(h=new bC(p),d.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),n.runWebGPUProgram(h,[r,a],r.dtype,d)}var l1e={kernelName:yo,backendName:"webgpu",kernelFunc:i1e},vC=rs({opSnippet:Ke.MUL,cpuKernelImpl:L0e,supportsComplex:!0}),u1e={kernelName:Fo,backendName:"webgpu",kernelFunc:vC},c1e=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${at()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Ph(e,t,n,s,r){let a=e.shape.length,o=[],i=v.parseAxisParam(t,e.shape),l=i,u=T.getAxesPermutation(l,a),c=e;u!=null&&(c=fa({inputs:{x:e},attrs:{perm:u},backend:r}),l=T.getInnerMostAxes(l.length,a),o.push(c)),T.assertAxesAreInnerMostDims(s,l,a);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=p;n&&(h=T.expandShapeToKeepDim(p,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){let m=r.tensorMap.get(c.dataId).values;switch(s){case"max":let g=O0e(m,v.sizeFromShape(d),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=V0e(c.shape,c.dtype,m,l);f=r.makeTensorInfo(x,A,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(d),y=v.sizeFromShape(c.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},A=s==="mean"?"float32":Xp(e.dtype),b=[{type:"int32",data:[m]}],w=new c1e(x,s),k=r.runWebGPUProgram(w,[c],A,b);o.push(k),f=rt({inputs:{x:k},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function Tx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Ph(r,a,o,"sum",n)}var d1e={kernelName:qo,backendName:"webgpu",kernelFunc:Tx};function p1e(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=fa({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=rt({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=vC({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=Tx({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeData(m.dataId);return d}var h1e={kernelName:Pp,backendName:"webgpu",kernelFunc:p1e},f1e=En({opType:Fe.ELU}),m1e={kernelName:xo,backendName:"webgpu",kernelFunc:f1e},g1e=rs({opSnippet:Ke.EQUAL,dtype:"bool",cpuKernelImpl:S0e}),y1e={kernelName:dl,backendName:"webgpu",kernelFunc:g1e},wC=En({opType:Fe.EXP,cpuKernelImpl:C0e,dtype:"float32"}),A1e={kernelName:bo,backendName:"webgpu",kernelFunc:wC};function Q3(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),rt({inputs:{x:a},backend:s,attrs:{shape:i}})}var x1e={kernelName:pl,backendName:"webgpu",kernelFunc:Q3},b1e=En({opType:Fe.EXPM1,cpuKernelImpl:T0e}),v1e={kernelName:hl,backendName:"webgpu",kernelFunc:b1e},w1e=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${at()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function id(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new w1e(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var k1e={kernelName:xc,backendName:"webgpu",kernelFunc:id},I1e=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${at()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},S1e={kernelName:fl,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new I1e(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},C1e=En({opType:Fe.FLOOR,cpuKernelImpl:N0e}),T1e={kernelName:vo,backendName:"webgpu",kernelFunc:C1e},N1e=rs({opSnippet:Ke.INT_DIV,dtype:"int32"}),E1e={kernelName:wo,backendName:"webgpu",kernelFunc:N1e},R1e=class{constructor(e,t=!1){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.useImport=t,this.shaderKey=`fromPixels_${this.useImport}`}getUserCode(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${at()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},_1e={kernelName:dp,backendName:"webgpu",kernelFunc:D1e},Du;function D1e(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[c,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[p,c,a];if(Y().getBool("WEBGPU_USE_IMPORT")&&o)return l7({externalImage:r,backend:n,attrs:s,outShape:d,useImport:!0});if((o||i)&&(Du==null&&(Du=document.createElement("canvas").getContext("2d")),Du.canvas.width=c,Du.canvas.height=p,Du.drawImage(r,0,0,c,p),r=Du.canvas),u||l||o||i)return l7({externalImage:r,backend:n,attrs:s,outShape:d,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let y=h.length,x=0;for(let A=0;A<y;A++)A%4<a&&(f[x++]=h[A])}let m=n.makeTensorInfo(d,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}function l7(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=v.sizeFromShape(r),l=v.computeStrides(r),u=new R1e(r,a),c=[{type:"uint32",data:[i]},{type:"uint32",data:[o]},{type:"uint32",data:[...l]},{type:"uint32",data:[...u.dispatch]}];return n.runFromPixelsProgram(u,r,c,a,t)}var $1e=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${at()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},P1e={kernelName:ko,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,u=n,c=[s,o,i],p=null;a!=null&&(p=a.shape,c.push(a));let d=null;r!=null&&(d=r.shape,c.push(r));let h=new $1e(s.shape,o.shape,i.shape,p,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(h,c,s.dtype,f)}};function F1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s;if(c!=="NHWC")throw new Error(`WebGPU backend FusedConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!1,m);return yC({x:r,filter:a,convInfo:g,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:f,activation:h})}var O1e={kernelName:Xa,backendName:"webgpu",kernelFunc:F1e};function M1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=c;f==null&&(f=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=T.computeConv2DInfo(r.shape,a.shape,l,f,u,p,!0),g=[r,a],y=o!=null,x=i!=null;y&&g.push(o),x&&g.push(i);let A=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.filterHeight===3&&m.inChannels%4===0?b=new xC(m,y,d,x):(b=new bC(m,y,d,x),A.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),d==="leakyrelu"&&(A.push({type:"float32",data:[h]}),b.uniforms+=" alpha : f32,"),n.runWebGPUProgram(b,g,"float32",A)}var z1e={kernelName:Ka,backendName:"webgpu",kernelFunc:M1e},L1e=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${vn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${at()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function B1e(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,u,c,p]=T.prepareAndValidate(s,r),d=rt({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),h=rt({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),A=n.bufferSync(s),b=E0e(x,A,s.dtype,u,o,c,p,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new L1e(o,[u,c]),m=[{type:"int32",data:[o]},{type:"int32",data:p}],g=n.runWebGPUProgram(f,[h,d],h.dtype,m),y=rt({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}var W1e={kernelName:gl,backendName:"webgpu",kernelFunc:B1e},V1e=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=U1e(this.aShape);return`
      ${at()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function U1e(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)s===2?n.push("indexZ"):n.push(`${t[s]}`);return n.join()}function kC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=v.sizeFromShape(a.shape),p=[],d=rt({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=rt({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let A=n.tensorMap.get(h.dataId).values,b=We(h.shape,h.dtype,A),k=n.tensorMap.get(d.dataId).values,S=We(d.shape,d.dtype,k),E=R0e(S,b,f);return p.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(u.outputShape,E.dtype,E.values)}let m=new V1e(d.shape,f),g=n.runWebGPUProgram(m,[d,h],d.dtype);p.push(g);let y=rt({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(x=>n.disposeData(x.dataId)),y}var G1e={kernelName:ml,backendName:"webgpu",kernelFunc:kC},H1e=rs({opSnippet:Ke.GREATER,cpuKernelImpl:D0e,dtype:"bool"}),j1e={kernelName:yl,backendName:"webgpu",kernelFunc:H1e},q1e=rs({opSnippet:Ke.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:_0e}),X1e={kernelName:Io,backendName:"webgpu",kernelFunc:q1e};function K1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=[{type:"float32",data:[a]}],i=new Dh(r.shape,Fe.LEAKYRELU);return i.uniforms="alpha : f32,",n.runWebGPUProgram(i,[r],"float32",o)}var Z1e={kernelName:Co,backendName:"webgpu",kernelFunc:K1e},Y1e=rs({opSnippet:Ke.LESS,dtype:"bool",cpuKernelImpl:P0e}),J1e={kernelName:Al,backendName:"webgpu",kernelFunc:Y1e},Q1e=rs({opSnippet:Ke.LESS_EQUAL,dtype:"bool",cpuKernelImpl:$0e}),ege={kernelName:xl,backendName:"webgpu",kernelFunc:Q1e},tge=En({opType:Fe.LOG,cpuKernelImpl:F0e}),nge={kernelName:To,backendName:"webgpu",kernelFunc:tge},sge=rs({opSnippet:Ke.LOGICAL_AND,dtype:"bool"}),rge={kernelName:bl,backendName:"webgpu",kernelFunc:sge},age=En({opType:Fe.LOGICAL_NOT}),oge={kernelName:Ic,backendName:"webgpu",kernelFunc:age};function IC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return Ph(r,a,o,"max",n)}var ige={kernelName:No,backendName:"webgpu",kernelFunc:IC},lge=rs({opSnippet:Ke.MAX,cpuKernelImpl:M0e}),uge={kernelName:Eo,backendName:"webgpu",kernelFunc:lge};function cge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l),p,d=[];if(c.filterHeight===1&&c.filterWidth===1){if(v.arraysEqual(c.inShape,c.outShape))return Hs({inputs:{x:r},backend:n});p=new fC(c),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]})}else p=new hC(c,"max"),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]});return n.runWebGPUProgram(p,[r],r.dtype,d)}var dge={kernelName:Ro,backendName:"webgpu",kernelFunc:cge};function pge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return Ph(r,o,a,"mean",n)}var hge={kernelName:_o,backendName:"webgpu",kernelFunc:pge};function fge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Ph(r,a,o,"min",n)}var mge={kernelName:Do,backendName:"webgpu",kernelFunc:fge},gge=rs({opSnippet:Ke.MIN,cpuKernelImpl:z0e}),yge={kernelName:$o,backendName:"webgpu",kernelFunc:gge},Age=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,u)=>`uniforms.pad${u}[0]`).join(","),n=this.xShape.map((l,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=vn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${at()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${i}));
        }
      }
    `}},xge={kernelName:Po,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new Age(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function bge(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=B0e(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new Dh(s.shape,Fe.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var vge={kernelName:vl,backendName:"webgpu",kernelFunc:bge};function wge(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=or.nonMaxSuppressionV3Impl(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var kge={kernelName:kl,backendName:"webgpu",kernelFunc:wge};function Ige(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=or.nonMaxSuppressionV5Impl(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Sge={kernelName:Il,backendName:"webgpu",kernelFunc:Ige};function Dm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=$h({inputs:{input:s},backend:n}),a=Dm({inputs:{x:r},backend:n}),o=m2({inputs:{input:s},backend:n}),i=Dm({inputs:{x:o},backend:n}),l=ad({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return id({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Cge={kernelName:Vl,backendName:"webgpu",kernelFunc:Dm};function SC(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=$h({inputs:{input:s},backend:n}),a=SC({inputs:{x:r},backend:n}),o=m2({inputs:{input:s},backend:n}),i=Dm({inputs:{x:o},backend:n}),l=ad({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return id({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Tge={kernelName:Sl,backendName:"webgpu",kernelFunc:SC};function Nge(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Q3({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=Q3({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=gC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var Ege={kernelName:Tl,backendName:"webgpu",kernelFunc:Nge},Rge=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=vn(e),n=this.xShape.map((c,p)=>`uniforms.pad${p}[0]`).join(","),s=this.xShape.map((c,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${at()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${o} || ${i}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},CC=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(u=>v.arraysEqual(u,[0,0])))return Hs({inputs:{x:r},backend:n});if(v.sizeFromShape(r.shape)===0){let u=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return id({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let l=new Rge(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},_ge={kernelName:Oo,backendName:"webgpu",kernelFunc:CC},Dge=rs({opSnippet:Ke.POW}),$ge={kernelName:Mo,backendName:"webgpu",kernelFunc:Dge};function Pge(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new dC(Ke.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Fge={kernelName:zo,backendName:"webgpu",kernelFunc:Pge};function Oge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Ph(r,a,o,"prod",n)}var Mge={kernelName:Lo,backendName:"webgpu",kernelFunc:Oge},zge=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=U0e(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Lge={kernelName:Tc,backendName:"webgpu",kernelFunc:zge},TC=rs({opSnippet:Ke.DIV}),Bge={kernelName:Ao,backendName:"webgpu",kernelFunc:TC},Wge=En({opType:Fe.RELU}),Vge={kernelName:Bo,backendName:"webgpu",kernelFunc:Wge},Uge=En({opType:Fe.RELU6}),Gge={kernelName:Vo,backendName:"webgpu",kernelFunc:Uge},Hge=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${at()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function jge(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,u]=o,c=a&&l>1?1:0,p=a&&u>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[i?.5:0]}],f=new Hge(r.shape,l,u);return n.runWebGPUProgram(f,[r],"float32",h)}var qge={kernelName:Wo,backendName:"webgpu",kernelFunc:jge},Xge=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${at()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Kge(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=a&&l>1?1:0,p=a&&u>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new Xge(r.shape,l,u,o);return n.runWebGPUProgram(f,[r],r.dtype,h)}var Zge={kernelName:Ec,backendName:"webgpu",kernelFunc:Kge},Yge=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${at()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Jge={kernelName:Ul,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Yge(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?p.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):p.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,p)}},Qge=En({opType:Fe.RSQRT,cpuKernelImpl:G0e}),e3e={kernelName:Uo,backendName:"webgpu",kernelFunc:Qge},t3e=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=et(e),this.dispatch=Le(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`;let i=vn(r.length);this.uniforms=`sliceDim : i32, strides: ${i}, size: i32,`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"atomicAdd(&(result[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${at()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputIndexFromCoords(${r});

         ${i}
        }
      }`}};function n3e(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=[p/u,u];if(p===0)return n.makeTensorInfo(o,r.dtype);let h=rt({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=rt({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=id({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=v.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:c},{type:"int32",data:[y]}],A=new t3e(f.shape,i,h.shape.length,f.shape.length,c,d,m),b=n.runWebGPUProgram(A,[f,h],m,x,g),w=rt({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),w}var s3e={kernelName:_l,backendName:"webgpu",kernelFunc:n3e},r3e=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${at()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function a3e(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new r3e(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],$n(r.dtype,a.dtype))}var o3e={kernelName:Dl,backendName:"webgpu",kernelFunc:a3e},i3e=En({opType:Fe.SIGMOID}),l3e={kernelName:Ho,backendName:"webgpu",kernelFunc:i3e},u3e=En({opType:Fe.SIN}),c3e={kernelName:Go,backendName:"webgpu",kernelFunc:u3e},d3e=En({opType:Fe.SINH}),p3e={kernelName:Pl,backendName:"webgpu",kernelFunc:d3e},NC=rs({opSnippet:Ke.SUB,cpuKernelImpl:Z0e,supportsComplex:!0}),h3e={kernelName:Zo,backendName:"webgpu",kernelFunc:NC};function f3e(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=IC({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=rt({inputs:{x:i},backend:n,attrs:{shape:l}}),c=NC({inputs:{a:r,b:u},backend:n}),p=wC({inputs:{x:c},backend:n}),d=Tx({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=rt({inputs:{x:d},backend:n,attrs:{shape:l}}),f=TC({inputs:{a:p,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(p.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),f}var m3e={kernelName:Xo,backendName:"webgpu",kernelFunc:f3e},g3e=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=CC({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(p.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),f=rt({inputs:{x:c},backend:n,attrs:{shape:p}}),m=fa({inputs:{x:f},backend:n,attrs:{perm:d}}),g=rt({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeData(y.dataId)),g},y3e={kernelName:Fl,backendName:"webgpu",kernelFunc:g3e},A3e=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`;let l=vn(r.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${l},`;let u="";n===1?u="i":n===2&&(u="i, j"),this.indicesSnippet=`getIndices(${u})`;let c="";s===1?c="i":s===2&&(c="i, coords[1]"),this.updatesSnippet=`getUpdates(${c})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${at()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function x3e(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=T.calculateShapes(a,r,i),h=!1;if(a.dtype==="string"){let x=n.bufferSync(r),A=n.bufferSync(a),b=v.decodeString(n.readSync(o.dataId)[0]),w=H0e(x,A,i,d,c,u,l,p,b,h);return n.makeTensorInfo(i,w.dtype,w.values)}let f=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:p}],m=new A3e(u,l,r.shape.length,a.shape.length,p,[d,1],h),g=n.runWebGPUProgram(m,[a,r,o],a.dtype,f),y=rt({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeData(g.dataId),y}var b3e={kernelName:Up,backendName:"webgpu",kernelFunc:x3e};function v3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[i]=d;let f=od({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,f})}var w3e={kernelName:Ol,backendName:"webgpu",kernelFunc:v3e},k3e=En({opType:Fe.SQRT}),I3e={kernelName:jo,backendName:"webgpu",kernelFunc:k3e},S3e={kernelName:Pc,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new Dh(n.shape,Fe.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},C3e=rs({opSnippet:Ke.SQUARED_DIFFERENCE}),T3e={kernelName:Ko,backendName:"webgpu",kernelFunc:C3e},N3e=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=vn(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${at()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function E3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Ut.sliceInfo(r.shape,a,o,i,l,u,c,p,d),w;if(m)w=rt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ut.computeOutShape(x,A,b),S=od({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});w=rt({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeData(S.dataId)}else if(n.shouldExecuteOnCPU([r])){let S=n.readSync(r.dataId),E=We(r.shape,r.dtype,S),R=X0e(h,E,b,x);w=n.makeTensorInfo(f,r.dtype,R.values)}else{let S=new N3e(h),E=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(S,[r],r.dtype,E);w=rt({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return w}var R3e={kernelName:Ml,backendName:"webgpu",kernelFunc:E3e};function _3e(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=K0e(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var D3e={kernelName:Gp,backendName:"webgpu",kernelFunc:_3e},$3e=En({opType:Fe.TANH}),P3e={kernelName:Yo,backendName:"webgpu",kernelFunc:$3e},F3e=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=O3e(this.rank,"uniforms.");return`
      ${at()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function O3e(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function M3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>v.decodeString(d)):l,c=We(r.shape,r.dtype,u),p=Y0e(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let o=new F3e(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var z3e={kernelName:ya,backendName:"webgpu",kernelFunc:M3e},L3e=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${at()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},B3e=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${at()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function $u(e,t){t!==null&&e.disposeData(t.dataId)}function u7(e){let t=1;for(;t<e;)t*=2;return t}function W3e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let w=n.readSync(r.dataId),[k,S]=J0e(w,i,r.dtype,a,o);return[n.makeTensorInfo(k.shape,k.dtype,k.values),n.makeTensorInfo(S.shape,S.dtype,S.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,id({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let c=v.sizeFromShape(i)/l,p=rt({inputs:{x:r},attrs:{shape:[c,l]},backend:n}),d=u7(a),h=u7(l),f=null,m=()=>f===null?[p,p]:[p,f],g=(w,k,S)=>{let E=m(),R=new L3e(S),_=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[w]},{type:"int32",data:[k]}],D=f;f=n.runWebGPUProgram(R,E,"int32",_),$u(n,D)};for(let w=1;w<d;w*=2){let k=w*2;for(let S=w;S>=1;S/=2)g(k,S,[c,h])}for(let w=h;w>d;w/=2){let k=m(),S=new B3e([c,w/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],$=f;f=n.runWebGPUProgram(S,k,"int32",R),$u(n,$);let _=d/2,D=_*2;for(let C=_;C>=1;C/=2)g(D,C,f.shape)}let y=f;f=od({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,a]}}),$u(n,y);let x=kC({inputs:{x:p,indices:f},backend:n,attrs:{axis:1,batchDims:1}});$u(n,p);let A=i.slice(0,-1);A.push(a),y=f,f=rt({inputs:{x:f},attrs:{shape:A},backend:n}),$u(n,y);let b=x;return x=rt({inputs:{x},attrs:{shape:A},backend:n}),$u(n,b),[x,f]}var V3e={kernelName:Ll,backendName:"webgpu",kernelFunc:W3e},U3e=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=et(this.outputShape),this.dispatch=Le(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${at()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function G3e(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new U3e(g),x=o==="nearest"?1:2,A;switch(i){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,a],"float32",b)}var H3e={kernelName:Bl,backendName:"webgpu",kernelFunc:G3e};function j3e(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let p=[],d=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=od({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),y=rt({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>n.disposeData(m.dataId)),f}var q3e={kernelName:Wl,backendName:"webgpu",kernelFunc:j3e},X3e=[y0e,t2e,s2e,o2e,p2e,f2e,g2e,A2e,k2e,T2e,E2e,$2e,v0e,M2e,V2e,j2e,X2e,Z2e,Q2e,t1e,s1e,o1e,l1e,h1e,m1e,y1e,A1e,x1e,v1e,k1e,S1e,_1e,T1e,E1e,P1e,O1e,z1e,W1e,G1e,j1e,X1e,b0e,F2e,Z1e,J1e,ege,nge,rge,oge,ige,uge,dge,hge,mge,yge,xge,u1e,vge,kge,Sge,I2e,Tge,Ege,_ge,$ge,Fge,Mge,Lge,S2e,Bge,Vge,Gge,m0e,qge,Zge,Jge,e3e,s3e,o3e,l3e,c3e,p3e,v2e,R3e,D3e,m3e,y3e,b3e,w3e,I3e,S3e,T3e,h3e,d1e,P3e,z3e,V3e,H3e,c2e,q3e,Cge];for(let e of X3e)ar(e);var K3e=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=c7(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=c7(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function c7(e,t){return`${e}_${t}`}var Z3e=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,s){let r=p7(n),a=e*t*r,o=d7(e,t,n,s);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;let l=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(l),l}this.numBytesAllocated+=a;let i=this.device.createTexture({size:[e,t],format:n,usage:s});return this.usedTextures.get(o).push(i),i}releaseTexture(e,t,n,s,r){if(this.freeTextures.size===0)return;let a=d7(t,n,s,r);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let o=this.usedTextures.get(a),i=o.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(i,1);let l=p7(s),u=t*n*l;this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function d7(e,t,n,s){return`${e}_${t}_${n}_${s}`}function p7(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}var Y3e=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},h7=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=t0e(s,o,t,a),l=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function f7(e,t,n=[],s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}var J3e=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),m7=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,s=t.dispatchLayout,r=t.dispatch;if(r.every(o=>o<=n))return r;v.assert(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>n?(a=Math.ceil(Math.cbrt(r[0])),v.assert(a<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]},g2=class extends oc{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,this.fromPixelTextureLayout=null,this.fromPixelImportTextureLayout=null,!Ix())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new K3e(this.device),this.textureManager=new Z3e(this.device),this.tensorMap=new Np(this,nn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return g2.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.textureDisposalQueue.forEach(e=>this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}getTextureManager(){return this.textureManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=v.sizeFromShape(t)*tm(n);return this.tensorMap.set(s,{dtype:n,shape:t,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=v.sizeFromShape(n)*tm(s);this.tensorMap.set(e,{dtype:s,shape:n,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=T.mergeRealAndImagArrays(a,o)}else{let r=t.values!=null?t.values:await this.getBufferData(t.bufferInfo.buffer,t.bufferInfo.byteSize);s=uC(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:s,shape:r,bufferInfo:a}=t;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a.buffer==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let o=v.sizeFromShape(r)*tm(s),i=this.acquireBuffer(o);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,i,0,o),this.submitQueue();let l=this.makeTensorInfo(r,s),u=nn().makeTensorFromTensorInfo(l),c=this.tensorMap.get(l.dataId);return c.bufferInfo.buffer=i,{tensorRef:u,buffer:i,bufSize:o}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return We(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=0,s=[];e.forEach(i=>{i.data.length===0&&(i.data=[1]);let l;switch(i.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:v.assert(!1,()=>`Unsupported ${i.data.length}D shape`)}(n===5||n===6)&&(l=16),t=Math.ceil(t/l)*l,n=i.data.length,s.push(t),t+=i.data.length*4});let r=new ArrayBuffer(t);e.forEach((i,l)=>{let u=s[l];i.type==="int32"?new Int32Array(r,u,i.data.length).set(i.data):i.type==="uint32"?new Uint32Array(r,u,i.data.length).set(i.data):new Float32Array(r,u,i.data.length).set(i.data)});let a=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,r,0,t);let o={byteSize:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformDisposalQueue.push(o),{offset:0,size:t,buffer:a}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),v.sizeFromShape(r.shape)===0){let k=this.tensorMap.get(r.dataId);return k.values=v.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}e.dispatch=m7(this.device,e);let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(k=>k.shape),i="int32";o.map(k=>{a.push({type:i,data:k})});let l=v.computeStrides(r.shape);if(a.push({type:i,data:l}),e.size){let k=v.sizeFromShape(e.outputShape);a.push({type:i,data:[e.isVec4?k/4:k]})}s&&(a=[...a,...s]);let u=this.makeUniforms(a),c=t.map((k,S)=>{if(k.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(k.dataId),{dtype:this.tensorMap.get(k.dataId).dtype,shape:k.shape,name:e.variableNames[S]}}),p=c.map(k=>k.dtype).concat(r.dtype),d=c.map(k=>T.getBroadcastDims(k.shape,r.shape)),h=c.map(k=>v.arraysEqual(k.shape,r.shape)).join("_"),f=d.map(k=>k.join("_")).join(";"),m=f7(e,o,p,f,h),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(m,()=>h7(this.device,e,y,c,r)),A=this.activeTimers!=null,b=Y3e(this.device,g,t.map(k=>this.tensorToBinding(k)),this.tensorToBinding(r),u);this.ensureCommandEncoderReady();let w=this.getComputePass();return A&&this.supportTimeQuery&&w.writeTimestamp(this.querySet,0),w.setPipeline(x),w.setBindGroup(0,b),w.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),A&&this.supportTimeQuery&&w.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(k=>{this.commandQueueOwnedIds.add(k.dataId)}),this.commandQueueOwnedIds.add(r.dataId),Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),A&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}getFromPixelTextureLayout(e){return e?(this.fromPixelImportTextureLayout===null&&(this.fromPixelImportTextureLayout=this.createFromPixelTextureLayout(!0)),this.fromPixelImportTextureLayout):(this.fromPixelTextureLayout===null&&(this.fromPixelTextureLayout=this.createFromPixelTextureLayout(!1)),this.fromPixelTextureLayout)}createFromPixelTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),e?t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}):t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}copyExternalImageToTexture(e,t){let n=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,s="rgba8unorm",r=this.textureManager.acquireTexture(t[1],t[0],s,n),a=r.createView();this.queue.copyExternalImageToTexture({source:e},{texture:r},[t[1],t[0]]);let o={width:t[1],height:t[0],format:s,usage:n,texture:r};return this.textureDisposalQueue.push(o),a}runFromPixelsProgram(e,t,n,s,r){e.dispatch=m7(this.device,e);let a=this.makeTensorInfo(t,"int32");if(v.sizeFromShape(a.shape)===0){let m=this.tensorMap.get(a.dataId);return m.values=v.getTypedArrayFromDType(a.dtype,0),a}this.uploadToGPU(a.dataId);let o=f7(e,[a.shape]),i=this.getFromPixelTextureLayout(s),l=this.getAndSavePipeline(o,()=>h7(this.device,e,i.pipelineLayout,[],a,!0)),u;if(s){let m={source:r};u=this.device.importExternalTexture(m)}else u=this.copyExternalImageToTexture(r,a.shape);let c=this.tensorToBinding(a),p=this.makeUniforms(n),d=this.device.createBindGroup({layout:i.bindGroupLayout,entries:[{binding:0,resource:{buffer:c.buffer}},{binding:1,resource:u},{binding:2,resource:{buffer:p.buffer}}]});this.ensureCommandEncoderReady();let h=this.getComputePass(),f=this.activeTimers!=null;return f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,0),h.setPipeline(l),h.setBindGroup(0,d),h.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a.dataId),this.dispatchNumberInEncoder++,Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=J3e){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&v.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};g2.nextDataId=0;var EC={};Ve(EC,{WebGPUBackend:()=>g2,webgpu_util:()=>iC});Ix()&&Gl("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,s={},r=t.features.has("timestamp-query");s.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension},r?s.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let a=await t.requestDevice(s);return new g2(a,r)},3);var Q3e="3.18.0",eye="3.18.0",tye="3.18.0",nye="3.18.0",sye="3.18.0",rye="3.18.0",aye="3.18.0",Fh={tfjs:Q3e,"tfjs-core":eye,"tfjs-data":tye,"tfjs-layers":nye,"tfjs-converter":sye,"tfjs-backend-webgl":rye,"tfjs-backend-wasm":aye};var RC=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var _C=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,DC=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,$C=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,PC=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,FC=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var Nx=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},Ex=class{constructor(t,n,s){ge(this,"uniform",{});ge(this,"attribute",{});ge(this,"gl");ge(this,"id");ge(this,"compile",(t,n)=>{let s=this.gl.createShader(n);return s?(this.gl.shaderSource(s,t),this.gl.compileShader(s),this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)?s:(oe(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)}`),null)):(oe("filter: could not create shader"),null)});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!a)){if(!this.id){oe("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){oe(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),Nx(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);Nx(n,"uniform",this.uniform),Nx(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}}};function OC(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=as(100,100),u={},c={INTERMEDIATE:1},p=l.getContext("webgl");if(!p){oe("filter: cannot get webgl context");return}this.gl=p;function d(x,A){if(!(x===l.width&&A===l.height)){if(l.width=x,l.height=A,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,o),p.bufferData(p.ARRAY_BUFFER,b,p.STATIC_DRAW),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}p.viewport(0,0,l.width,l.height),r=[null,null]}}function h(x,A){let b=p.createFramebuffer();p.bindFramebuffer(p.FRAMEBUFFER,b);let w=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,w);let k=p.createTexture();return p.bindTexture(p.TEXTURE_2D,k),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,x,A,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,k,0),p.bindTexture(p.TEXTURE_2D,null),p.bindFramebuffer(p.FRAMEBUFFER,null),{fbo:b,texture:k}}function f(x){return r[x]=r[x]||h(l.width,l.height),r[x]}function m(x=0){if(!i)return;let A=null,b=null,w=!1;e===0?A=t:A=f(s).texture||null,e++,n&&!(x&c.INTERMEDIATE)?(b=null,w=e%2===0):(s=(s+1)%2,b=f(s).fbo||null),p.bindTexture(p.TEXTURE_2D,A),p.bindFramebuffer(p.FRAMEBUFFER,b),p.uniform1f(i.uniform.flipY,w?-1:1),p.drawArrays(p.TRIANGLES,0,6)}function g(x){if(u[x])return i=u[x],p.useProgram((i?i.id:null)||null),i;if(i=new Ex(p,RC,x),!i)return oe("filter: could not get webgl program"),null;let A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return p.enableVertexAttribArray(i.attribute.pos),p.vertexAttribPointer(i.attribute.pos,2,p.FLOAT,!1,b,0*A),p.enableVertexAttribArray(i.attribute.uv),p.vertexAttribPointer(i.attribute.uv,2,p.FLOAT,!1,b,2*A),u[x]=i,i}let y={colorMatrix:x=>{let A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;let b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?DC:_C,w=g(b);!w||(p.uniform1fv(w.uniform.m,A),m())},brightness:x=>{let A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{let A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{let A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let A=Math.cos(x),b=Math.sin(x),w=.213,k=.715,S=.072;y.colorMatrix([w+A*(1-w)+b*-w,k+A*-k+b*-k,S+A*-S+b*(1-S),0,0,w+A*-w+b*.143,k+A*(1-k)+b*.14,S+A*-S+b*-.283,0,0,w+A*-w+b*-(1-w),k+A*-k+b*k,S+A*(1-S)+b*S,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let A=new Float32Array(x),b=1/l.width,w=1/l.height,k=g(FC);!k||(p.uniform1fv(k.uniform.m,A),p.uniform2f(k.uniform.px,b,w),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{let A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{let A=x/7/l.width,b=x/7/l.height,w=g(PC);!w||(p.uniform2f(w.uniform.px,0,b),m(c.INTERMEDIATE),p.uniform2f(w.uniform.px,A,0),m())},pixelate:x=>{let A=x/l.width,b=x/l.height,w=g($C);!w||(p.uniform2f(w.uniform.size,A,b),m())}};this.add=function(x){let A=Array.prototype.slice.call(arguments,1),b=y[x];a.push({func:b,args:A})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){d(x.width,x.height),e=0,t||(t=p.createTexture()),p.bindTexture(p.TEXTURE_2D,t),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,p.RGBA,p.UNSIGNED_BYTE,x);for(let A=0;A<a.length;A++){n=A===a.length-1;let b=a[A];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function y2(e){let t=e.shape.length===4?Qe(e):e,n=Zt(t,3,2),s=[da(n[0]),da(n[1]),da(n[2])],r=[fn(n[0]),fn(n[1]),fn(n[2])],a=await Promise.all(r.map(h=>h.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[fe(n[0],s[0]),fe(n[1],s[1]),fe(n[2],s[2])],l=[fe(r[0],s[0]),fe(r[1],s[1]),fe(r[2],s[2])],u=[pe(o,l[0]),pe(o,l[1]),pe(o,l[2])],c=[L(i[0],u[0]),L(i[1],u[1]),L(i[2],u[2])],p=on([c[0],c[1],c[2]],2),d=U(p,[1,t.shape[0],t.shape[1],3]);return ne([...n,...s,...r,...i,...l,...u,...c,p,t]),d}var A2=3840,ht=null,un=null,ld=null,Pt,va={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function as(e,t){let n;if(me.browser)if(me.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof me.Canvas!="undefined"?n=new me.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function x2(e,t){let n=t||as(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function ud(e,t,n=!0){if(!e)return t.debug&&oe("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof nt)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof me.Canvas!="undefined"&&e instanceof me.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof nt){let s=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)s=Kt(e,0);else if(e.shape[2]===4){let r=Xl(e,[0,0,0],[-1,-1,3]);s=Kt(r,0),ne(r)}}else e.shape.length===4&&(e.shape[3]===3?s=Yn(e):e.shape[3]===4&&(s=Zi(e,[0,0,0,0],[-1,-1,-1,3])));if(s==null||s.shape.length!==4||s.shape[0]!==1||s.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(s.dtype==="int32"){let r=he(s,"float32");ne(s),s=r}return{tensor:s,canvas:t.filter.return?un:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&oe("input stream is not ready"),{tensor:null,canvas:ht};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&oe("cannot determine input dimensions"),{tensor:null,canvas:ht};let a=s,o=r;if(a>A2&&(a=A2,o=Math.trunc(a*r/s)),o>A2&&(o=A2,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input error: cannot determine dimension");(!ht||(ht==null?void 0:ht.width)!==a||(ht==null?void 0:ht.height)!==o)&&(ht=as(a,o));let i=ht.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,ht==null?void 0:ht.width,ht==null?void 0:ht.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,ht==null?void 0:ht.width,ht==null?void 0:ht.height),(!un||ht.width!==un.width||(ht==null?void 0:ht.height)!==(un==null?void 0:un.height))&&(un=as(ht.width,ht.height)),t.filter.enabled&&me.webgl.supported?(Pt||(Pt=me.browser?new OC:null),me.filter=!!Pt,!Pt||!Pt.add?(t.debug&&oe("input process error: cannot initialize filters"),me.webgl.supported=!1,t.filter.enabled=!1,x2(ht,un)):(Pt.reset(),t.filter.brightness!==0&&Pt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Pt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Pt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Pt.add("blur",t.filter.blur),t.filter.saturation!==0&&Pt.add("saturation",t.filter.saturation),t.filter.hue!==0&&Pt.add("hue",t.filter.hue),t.filter.negative&&Pt.add("negative"),t.filter.sepia&&Pt.add("sepia"),t.filter.vintage&&Pt.add("brownie"),t.filter.sepia&&Pt.add("sepia"),t.filter.kodachrome&&Pt.add("kodachrome"),t.filter.technicolor&&Pt.add("technicolor"),t.filter.polaroid&&Pt.add("polaroid"),t.filter.pixelate!==0&&Pt.add("pixelate",t.filter.pixelate),Pt.get()>0?un=Pt.apply(ht):un=Pt.draw(ht))):(x2(ht,un),Pt&&(Pt=null),me.filter=!!Pt),!n)return{tensor:null,canvas:un};if(!un)throw new Error("canvas error: cannot create output");let l,u=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(me.browser&&qs)l=qs?qs.fromPixels(e):null;else{u=e.data.length/e.height/e.width;let d=new Uint8Array(e.data.buffer);l=gt(d,[e.height,e.width,u],"int32")}else if((!ld||un.width!==ld.width||un.height!==ld.height)&&(ld=as(un.width,un.height)),qs&&me.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=qs.fromPixels(un):(ld=x2(un),l=qs.fromPixels(ld));else{let f=x2(un).getContext("2d").getImageData(0,0,a,o);u=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=gt(m,[a,o,u])}if(u===4){let d=Xl(l,[0,0,0],[-1,-1,3]);ne(l),l=d}if(!l)throw new Error("input error: cannot create tensor");let c=he(l,"float32"),p=t.filter.equalization?await y2(c):Kt(c,0);return ne([l,c]),{tensor:p,canvas:t.filter.return?un:null}}}async function MC(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!va.inputTensor)va.inputTensor=Yn(t);else if(va.inputTensor.shape[1]!==t.shape[1]||va.inputTensor.shape[2]!==t.shape[2])ne(va.inputTensor),va.inputTensor=Yn(t);else{let s={};s.diff=fe(t,va.inputTensor),s.squared=L(s.diff,s.diff),s.sum=ke(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ne([va.inputTensor,s.diff,s.squared,s.sum]),va.inputTensor=Yn(t),n=a<=(e.cacheSensitivity||0)}return n}async function zC(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||oe("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||oe("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=Yn(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Se.resizeBilinear(n,[t.shape[1],t.shape[2]]):Yn(n),s.diff=fe(s.input1,s.input2),s.squared=L(s.diff,s.diff),s.sum=ke(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ne([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var Rx=class{constructor(){ge(this,"browser");ge(this,"node");ge(this,"worker");ge(this,"platform","");ge(this,"agent","");ge(this,"backends",[]);ge(this,"initial");ge(this,"filter");ge(this,"tfjs");ge(this,"offscreen");ge(this,"perfadd",!1);ge(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});ge(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});ge(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});ge(this,"cpu",{model:void 0,flags:[]});ge(this,"kernels",[]);ge(this,"Canvas");ge(this,"Image");ge(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:Fh["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(nn().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&es()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=as(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(es()==="webgl"||es()==="humangl")){let s=js().gpgpu!=="undefined"?await js().getGPGPUContext().gl:null;s&&(this.webgl.version=s.getParameter(s.VERSION),this.webgl.renderer=s.getParameter(s.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(s){this.webgpu.supported=!1}try{this.kernels=Vr(es()).map(s=>s.kernelName.toLowerCase())}catch(s){}}async updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},me=new Rx;var os={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},Kr={};async function uye(e,t){return os.debug&&oe("load model fetch:",e,t),fetch(e,t)}function LC(e){os.cacheModels=e.cacheModels,os.verbose=e.debug,os.modelBasePath=e.modelBasePath}async function je(e){var u,c,p;let t=T4(os.modelBasePath,e||"");t.toLowerCase().endsWith(".json")||(t+=".json");let n=t.split("/"),s=n[n.length-1].replace(".json",""),r="indexeddb://"+s;Kr[s]={name:s,manifest:0,weights:0,cached:!1},os.cacheSupported=typeof window!="undefined"&&typeof window.localStorage!="undefined"&&typeof window.indexedDB!="undefined";let a={};try{a=os.cacheSupported&&os.cacheModels?await Dn.listModels():{}}catch(d){os.cacheSupported=!1}Kr[s].cached=os.cacheSupported&&os.cacheModels&&Object.keys(a).includes(r);let o=typeof fetch=="undefined"?{}:{fetchFunc:(d,h)=>uye(d,h)},i=new kh(Kr[s].cached?r:t,o),l=!1;try{i.findIOHandler(),os.debug&&oe("model load handler:",i.handler);let d=await i.handler.load();Kr[s].manifest=((u=d==null?void 0:d.weightData)==null?void 0:u.byteLength)||0,i.loadSync(d),Kr[s].weights=((p=(c=i==null?void 0:i.artifacts)==null?void 0:c.weightData)==null?void 0:p.byteLength)||0,os.verbose&&oe("load model:",i.modelUrl,{bytes:Kr[s].weights},os),l=!0}catch(d){oe("error loading model:",t,d)}if(l&&os.cacheModels&&os.cacheSupported&&!Kr[s].cached)try{let d=await i.save(r);oe("model saved:",r,d)}catch(d){oe("error saving model:",t,d)}return i}var _x="2.8.1";var t1={};Pa(t1,{Models:()=>Hh,getModelStats:()=>Vb,load:()=>Ub,reset:()=>e1,validate:()=>Gb});var ur,Dx=[],pye=["white","black","asian","indian","other"],hye=[15,23,28,35.5,45.5,55.5,65],BC=0,WC=0,$x=Number.MAX_SAFE_INTEGER;async function VC(e){var t;return me.initial&&(ur=null),ur?e.debug&&oe("cached model:",ur.modelUrl):ur=await je((t=e.face.gear)==null?void 0:t.modelPath),ur}async function Px(e,t,n,s){var o,i;if(!ur)return{age:0,gender:"unknown",genderScore:0,race:[]};let r=$x<(((o=t.face.gear)==null?void 0:o.skipFrames)||0),a=(((i=t.face.gear)==null?void 0:i.skipTime)||0)>ue()-WC;return t.skipAllowed&&a&&r&&BC===s&&Dx[n]?($x++,Dx[n]):($x=0,new Promise(async l=>{var y,x;if(!(ur!=null&&ur.inputs[0].shape))return;let u={},c=[[0,.1,.9,.9]];u.resize=Se.cropAndResize(e,c,[0],[ur.inputs[0].shape[2],ur.inputs[0].shape[1]]);let p={age:0,gender:"unknown",genderScore:0,race:[]};(y=t.face.gear)!=null&&y.enabled&&([u.age,u.gender,u.race]=ur.execute(u.resize,["age_output","gender_output","race_output"]));let d=await u.gender.data();p.gender=d[0]>d[1]?"male":"female",p.genderScore=Math.round(100*(d[0]>d[1]?d[0]:d[1]))/100;let h=await u.race.data();for(let A=0;A<h.length;A++)h[A]>(((x=t.face.gear)==null?void 0:x.minConfidence)||.2)&&p.race.push({score:Math.round(100*h[A])/100,race:pye[A]});p.race.sort((A,b)=>b.score-A.score);let m=Array.from(await u.age.data()).map((A,b)=>[hye[b],A]).sort((A,b)=>b[1]-A[1]),g=m[0][0];for(let A=1;A<m.length;A++)g+=m[A][1]*(m[A][0]-g);p.age=Math.round(10*g)/10,Object.keys(u).forEach(A=>ne(u[A])),Dx[n]=p,BC=s,WC=ue(),l(p)}))}var tt={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function GC(){tt.tf255=Ce(255,"float32"),tt.tf1=Ce(1,"float32"),tt.tf2=Ce(2,"float32"),tt.tf05=Ce(.5,"float32"),tt.tf127=Ce(127.5,"float32"),tt.rgb=Dt([.2989,.587,.114],"float32")}var Ds,b2=[],HC=0,jC=0,Fx=Number.MAX_SAFE_INTEGER;async function qC(e){return me.initial&&(Ds=null),Ds?e.debug&&oe("cached model:",Ds.modelUrl):Ds=await je(e.face.ssrnet.modelPathAge),Ds}async function Ox(e,t,n,s){var o,i,l,u;if(!Ds)return{age:0};let r=Fx<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ue()-jC;return t.skipAllowed&&r&&a&&HC===s&&((l=b2[n])==null?void 0:l.age)&&((u=b2[n])==null?void 0:u.age)>0?(Fx++,b2[n]):(Fx=0,new Promise(async c=>{if(!(Ds!=null&&Ds.inputs)||!Ds.inputs[0]||!Ds.inputs[0].shape)return;let p={};p.resize=Se.resizeBilinear(e,[Ds.inputs[0].shape[2],Ds.inputs[0].shape[1]],!1),p.enhance=L(p.resize,tt.tf255);let d={age:0};if(t.face.ssrnet.enabled&&(p.age=Ds.execute(p.enhance)),p.age){let h=await p.age.data();d.age=Math.trunc(10*h[0])/10}Object.keys(p).forEach(h=>ne(p[h])),b2[n]=d,HC=s,jC=ue(),c(d)}))}var cr,v2=[],KC=0,ZC=0,Mx=Number.MAX_SAFE_INTEGER,zx=[.2989,.587,.114];async function YC(e){return me.initial&&(cr=null),cr?e.debug&&oe("cached model:",cr.modelUrl):cr=await je(e.face.ssrnet.modelPathGender),cr}async function Lx(e,t,n,s){var o,i,l,u;if(!cr)return{gender:"unknown",genderScore:0};let r=Mx<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ue()-ZC;return t.skipAllowed&&r&&a&&KC===s&&((l=v2[n])==null?void 0:l.gender)&&((u=v2[n])==null?void 0:u.genderScore)>0?(Mx++,v2[n]):(Mx=0,new Promise(async c=>{if(!(cr!=null&&cr.inputs[0].shape))return;let p={};p.resize=Se.resizeBilinear(e,[cr.inputs[0].shape[2],cr.inputs[0].shape[1]],!1),p.enhance=K(()=>{let[f,m,g]=Zt(p.resize,3,3),y=L(f,zx[0]),x=L(m,zx[1]),A=L(g,zx[2]),b=l0([y,x,A]);return L(fe(b,tt.tf05),2)});let d={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(p.gender=cr.execute(p.enhance));let h=await p.gender.data();d.gender=h[0]>h[1]?"female":"male",d.genderScore=h[0]>h[1]?Math.trunc(100*h[0])/100:Math.trunc(100*h[1])/100,Object.keys(p).forEach(f=>ne(p[f])),v2[n]=d,KC=s,ZC=ue(),c(d)}))}var Fn,w2=[],Bx=Number.MAX_SAFE_INTEGER,QC=0,eT=0;async function tT(e){var t;return me.initial&&(Fn=null),Fn?e.debug&&oe("cached model:",Fn.modelUrl):Fn=await je((t=e.face.antispoof)==null?void 0:t.modelPath),Fn}async function Wx(e,t,n,s){var o,i;if(!Fn)return 0;let r=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>ue()-eT,a=Bx<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&QC===s&&w2[n]?(Bx++,w2[n]):(Bx=0,new Promise(async l=>{let u=Se.resizeBilinear(e,[Fn!=null&&Fn.inputs[0].shape?Fn.inputs[0].shape[2]:0,Fn!=null&&Fn.inputs[0].shape?Fn.inputs[0].shape[1]:0],!1),c=Fn==null?void 0:Fn.execute(u),p=(await c.data())[0];w2[n]=Math.round(100*p)/100,QC=s,eT=ue(),ne([u,c]),l(w2[n])}))}var dr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},Vx={count:468,mouth:13,symmetryLine:[13,dr.midwayBetweenEyes[0]]},su={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Ux=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],Mh=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],ru=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var mye=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],gye=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],yye=[33,133,362,263,1,78,308],bwe=mye.map(e=>Mh[e]),vwe=gye.map(e=>Mh[e]),wwe=yye.map(e=>Mh[e]);function li(e){let t=e.map(n=>n[0]);return t.push(e[e.length-1][1]),t}var Aye=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],xye=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],bye=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],vye=[[474,475],[475,476],[476,477],[477,474]],wye=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],kye=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Iye=[[469,470],[470,471],[471,472],[472,469]],Sye=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],kwe={lips:li(Aye),leftEye:li(xye),leftEyebrow:li(bye),leftIris:li(vye),rightEye:li(wye),rightEyebrow:li(kye),rightIris:li(Iye),faceOval:li(Sye)};var cd=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],k2=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],I2=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],S2=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],aT=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},Hx=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r],o=Se.cropAndResize(t,[a],[0],n),i=pe(o,tt.tf255);return ne(o),i},C2=(e,t)=>{let n=k2(e),s=cd(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},T2=e=>{let t=k2(e),n=cd(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},oT=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},jx=[[1,0,0],[0,1,0],[0,0,1]],Cye=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),Tye=(e,t)=>Cye(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var sT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],au=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},Nye=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},rT=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(au(e[r],Nye(t,a)))}return n},iT=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=sT(t[0],t[1]),o=rT(a,r),i=sT(-t[0],-t[1]);return rT(o,i)},Eye=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-au(t[0],n),-au(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},Rye=(e,t)=>[au(e,t[0]),au(e,t[1])];function lT(e){let t=e===192?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let u=r*(l+.5);for(let c=0;c<o;c++){let p=r*(c+.5);for(let d=0;d<i;d++)n.push([p,u])}}}return n}function uT(e,t,n,s,r){let a=cd(t),o=e.map(h=>[a[0]/r*(h[0]-r/2),a[1]/r*(h[1]-r/2),h[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?iT(n,[0,0]):jx,u=i?o.map(h=>[...Rye(h,l),h[2]]):o,c=i?Eye(s):jx,p=k2(t),d=[au(p,c[0]),au(p,c[1])];return u.map(h=>[Math.trunc(h[0]+d[0]),Math.trunc(h[1]+d[1]),Math.trunc(h[2]||0)])}function cT(e,t,n,s){let r=t.landmarks.length>=Vx.count?Vx.symmetryLine:su.symmetryLine,a=0,o=jx,i;if(e&&me.kernels.includes("rotatewithoffset"))if(a=Tye(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let u=k2(t),c=[u[0]/n.shape[2],u[1]/n.shape[1]],p=Se.rotateWithOffset(n,a,0,c);o=iT(-a,u),i=Hx(t,p,[s,s]),ne(p)}else i=Hx(t,n,[s,s]);else i=Hx(t,n,[s,s]);return[a,o,i]}var _ye=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},dT=(e,t)=>{let n=_ye(e),s=cd(t);return{startPoint:[n[0]-s[0]/2,n[1]-s[1]/2],endPoint:[n[0]+s[0]/2,n[1]+s[1]/2]}};var pT=6,Dye=1.4,Zr,hT=null,ui=0,zh=null,dd=()=>ui;async function fT(e){var t;return me.initial&&(Zr=null),Zr?e.debug&&oe("cached model:",Zr.modelUrl):Zr=await je((t=e.face.detector)==null?void 0:t.modelPath),ui=Zr.inputs[0].shape?Zr.inputs[0].shape[2]:0,zh=Ce(ui,"int32"),hT=kr(lT(ui)),Zr}function $ye(e){let t={};t.boxStarts=Oe(e,[0,1],[-1,2]),t.centers=ce(t.boxStarts,hT),t.boxSizes=Oe(e,[0,3],[-1,2]),t.boxSizesNormalized=pe(t.boxSizes,zh),t.centersNormalized=pe(t.centers,zh),t.halfBoxSize=pe(t.boxSizesNormalized,tt.tf2),t.starts=fe(t.centersNormalized,t.halfBoxSize),t.ends=ce(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,zh),t.endNormalized=L(t.ends,zh);let n=Mc([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>ne(t[s])),n}async function mT(e,t){var i,l,u,c;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let n={};n.resized=Se.resizeBilinear(e,[ui,ui]),n.div=pe(n.resized,tt.tf127),n.normalized=fe(n.div,tt.tf05);let s=Zr==null?void 0:Zr.execute(n.normalized);if(Array.isArray(s)&&s.length>2){let p=s.sort((d,h)=>d.size-h.size);n.concat384=It([p[0],p[2]],2),n.concat512=It([p[1],p[3]],2),n.concat=It([n.concat512,n.concat384],1),n.batch=Qe(n.concat,0)}else Array.isArray(s)?n.batch=Qe(s[0]):n.batch=Qe(s);ne(s),n.boxes=$ye(n.batch),n.logits=Oe(n.batch,[0,0],[-1,1]),n.sigmoid=Sn(n.logits),n.scores=Qe(n.sigmoid),n.nms=await Se.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((u=t.face.detector)==null?void 0:u.minConfidence)||0);let r=await n.nms.array(),a=[],o=await n.scores.data();for(let p=0;p<r.length;p++){let d=o[r[p]];if(d>(((c=t.face.detector)==null?void 0:c.minConfidence)||0)){let h={};h.bbox=Oe(n.boxes,[r[p],0],[1,-1]),h.slice=Oe(n.batch,[r[p],pT-1],[1,-1]),h.squeeze=Qe(h.slice),h.landmarks=U(h.squeeze,[pT,-1]);let f=await h.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await h.landmarks.array(),confidence:d},g=aT(m,[(e.shape[2]||0)/ui,(e.shape[1]||0)/ui]),y=C2(g,t.face.scale||Dye),x=T2(y);a.push(x),Object.keys(h).forEach(A=>ne(h[A]))}}return Object.keys(n).forEach(p=>ne(n[p])),a}var N2={};Pa(N2,{connected:()=>Kx,kpt:()=>Xx});var Xx=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Kx={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]};var yT=224,Pye,Fye=5,E2=[8,16,32,32,32];async function AT(){let e=[],t=0;for(;t<Fye;){let n=0,s=t;for(;s<E2.length&&E2[s]===E2[t];)n+=2,s++;let r=E2[t],a=Math.ceil(yT/r),o=Math.ceil(yT/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let u=0;u<n;++u)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}Pye={x:Dt(e.map(n=>n.x)),y:Dt(e.map(n=>n.y))}}function wa(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function xT(e,t=[1,1]){let n=[e.map(u=>u[0]),e.map(u=>u[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function R2(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var wT={initial:!0},$s={detector:null,landmarks:null},pd={detector:[224,224],landmarks:[256,256]},Zx=Number.MAX_SAFE_INTEGER,Mye={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},D2=null,Lh,ci=[[0,0],[0,0],[0,0],[0,0]],bT=0,vT=e=>1-1/(1+Math.exp(e));async function kT(e){if(wT.initial&&($s.detector=null),!$s.detector&&e.body.detector&&e.body.detector.modelPath){$s.detector=await je(e.body.detector.modelPath);let t=Object.values($s.detector.modelSignature.inputs);pd.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,pd.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&$s.detector&&oe("cached model:",$s.detector.modelUrl);return await AT(),$s.detector}async function IT(e){if(wT.initial&&($s.landmarks=null),$s.landmarks)e.debug&&oe("cached model:",$s.landmarks.modelUrl);else{$s.landmarks=await je(e.body.modelPath);let t=Object.values($s.landmarks.modelSignature.inputs);pd.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,pd.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return $s.landmarks}async function zye(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let s;if(Lh&&(n.cropped=Se.cropAndResize(e,[Lh],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let r=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];ci=[[0,0],r,a,[0,0]],n.pad=Xs(n.cropped||e,ci),n.resize=Se.resizeBilinear(n.pad,[t,t]),s=pe(n.resize,tt.tf255)}else e.shape[1]!==t?(n.resize=Se.resizeBilinear(n.cropped||e,[t,t]),s=pe(n.resize,tt.tf255)):s=pe(n.cropped||e,tt.tf255);return Object.keys(n).forEach(r=>ne(n[r])),s}function Lye(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+ci[2][0]+ci[2][1])/t[0]-ci[2][0]),Math.trunc(n.position[1]*(t[1]+ci[1][0]+ci[1][1])/t[1]-ci[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];if(Lh)for(let n of e)n.positionRaw=[n.positionRaw[0]+Lh[1],n.positionRaw[1]+Lh[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}async function Bye(e){let t=e.find(i=>i.part==="leftPalm"),n=e.find(i=>i.part==="leftWrist"),s=e.find(i=>i.part==="leftIndex");t.position[2]=((n.position[2]||0)+(s.position[2]||0))/2;let r=e.find(i=>i.part==="rightPalm"),a=e.find(i=>i.part==="rightWrist"),o=e.find(i=>i.part==="rightIndex");r.position[2]=((a.position[2]||0)+(o.position[2]||0))/2}async function Wye(e,t,n){var f;let s={};[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(f=$s.landmarks)==null?void 0:f.execute(e,Mye.landmarks);let r=(await s.poseflag.data())[0],a=await s.ld.data(),o=await s.world.data();Object.keys(s).forEach(m=>ne(s[m]));let i=[],l=5;for(let m=0;m<a.length/l;m++){let g=vT(a[l*m+3]),y=vT(a[l*m+4]),x=Math.trunc(100*g*y*r)/100,A=[a[l*m+0]/pd.landmarks[0],a[l*m+1]/pd.landmarks[1],a[l*m+2]+0],b=[Math.trunc(n[0]*A[0]),Math.trunc(n[1]*A[1]),A[2]],w=[o[l*m+0],o[l*m+1],o[l*m+2]+0];i.push({part:Xx[m],positionRaw:A,position:b,distance:w,score:x})}if(r<(t.body.minConfidence||0))return null;Bye(i);let u=Lye(i,n),c=u.map(m=>m.position),p=wa(c,[n[0],n[1]]),d={};for(let[m,g]of Object.entries(Kx)){let y=[];for(let x=0;x<g.length-1;x++){let A=u.find(w=>w.part===g[x]),b=u.find(w=>w.part===g[x+1]);A&&b&&y.push([A.position,b.position])}d[m]=y}return{id:0,score:Math.trunc(100*r)/100,box:p.box,boxRaw:p.boxRaw,keypoints:u,annotations:d}}async function Yx(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>ue()-bT,r=Zx<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&D2!==null)Zx++;else{let a={};a.landmarks=await zye(e,256),D2=await Wye(a.landmarks,t,n),Object.keys(a).forEach(o=>ne(a[o])),bT=ue(),Zx=0}return D2?[D2]:[]}var hd=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var ka,ou=0,Jx=[],CT=0,Qx=Number.MAX_SAFE_INTEGER;async function TT(e){if(me.initial&&(ka=null),ka)e.debug&&oe("cached model:",ka.modelUrl);else{ka=await je(e.object.modelPath);let t=Object.values(ka.modelSignature.inputs);ou=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return ka}async function Vye(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=Qe(e);let o=Zt(s.squeeze,6,1);s.stack=on([o[1],o[0],o[3],o[2]],1),s.boxes=Qe(s.stack),s.scores=Qe(o[4]),s.classes=Qe(o[5]),ne([e,...o]),s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await s.nms.data(),l=0;for(let u of Array.from(i)){let c=Math.trunc(100*a[0][u][4])/100,p=a[0][u][5],d=hd[p].label,[h,f]=[a[0][u][0]/ou,a[0][u][1]/ou],m=[h,f,a[0][u][2]/ou-h,a[0][u][3]/ou-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:c,class:p,label:d,box:g,boxRaw:m})}return Object.keys(s).forEach(u=>ne(s[u])),r}async function eb(e,t){let n=(t.object.skipTime||0)>ue()-CT,s=Qx<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&Jx.length>0?(Qx++,Jx):(Qx=0,new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[ou,ou]),i=t.object.enabled?ka==null?void 0:ka.execute(o,["tower_0/detections"]):null;CT=ue(),ne(o);let l=await Vye(i,a,t);Jx=l,r(l)}))}var $2={};Pa($2,{connected:()=>nb,kpt:()=>tb});var tb=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],nb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var On,ET=0,is={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},sb=Number.MAX_SAFE_INTEGER;async function RT(e){return me.initial&&(On=null),On?e.debug&&oe("cached model:",On.modelUrl):On=await je(e.body.modelPath),On}async function Uye(e,t){let[n,s]=e.shape,r=U(e,[s*n]),a=fn(r,0),o=(await a.data())[0];if(ne([r,a]),o>t){let i=Ss(r,0),l=ql(i,n),u=(await l.data())[0],c=pe(i,Ce(n,"int32")),p=(await c.data())[0];return ne([l,c]),[u,p,o]}return[0,0,o]}async function rb(e,t){let n=(t.body.skipTime||0)>ue()-ET,s=sb<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(is.keypoints).length>0?(sb++,[is]):(sb=0,new Promise(async r=>{var p;let a=K(()=>{if(!(On!=null&&On.inputs[0].shape))return null;let d=Se.resizeBilinear(e,[On.inputs[0].shape[2],On.inputs[0].shape[1]],!1),h=L(d,tt.tf2);return fe(h,tt.tf1)}),o;if(t.body.enabled&&(o=On==null?void 0:On.execute(a)),ET=ue(),ne(a),o){is.keypoints.length=0;let d=o.squeeze();ne(o);let h=d.unstack(2);ne(d);for(let f=0;f<h.length;f++){let[m,g,y]=await Uye(h[f],t.body.minConfidence);y>(((p=t.body)==null?void 0:p.minConfidence)||0)&&is.keypoints.push({score:Math.round(100*y)/100,part:tb[f],positionRaw:[m/On.inputs[0].shape[2],g/On.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/On.inputs[0].shape[2]),Math.round(e.shape[1]*g/On.inputs[0].shape[1])]})}h.forEach(f=>ne(f))}is.score=is.keypoints.reduce((d,h)=>h.score>d?h.score:d,0);let i=is.keypoints.map(d=>d.position[0]),l=is.keypoints.map(d=>d.position[1]);is.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let u=is.keypoints.map(d=>d.positionRaw[0]),c=is.keypoints.map(d=>d.positionRaw[1]);is.boxRaw=[Math.min(...u),Math.min(...c),Math.max(...u)-Math.min(...u),Math.max(...c)-Math.min(...c)];for(let[d,h]of Object.entries(nb)){let f=[];for(let m=0;m<h.length-1;m++){let g=is.keypoints.find(x=>x.part===h[m]),y=is.keypoints.find(x=>x.part===h[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}is.annotations[d]=f}r([is])}))}var Gye=["angry","disgust","fear","happy","sad","surprise","neutral"],Zs,P2=[],DT=0,$T=0,ab=Number.MAX_SAFE_INTEGER;async function PT(e){var t;return me.initial&&(Zs=null),Zs?e.debug&&oe("cached model:",Zs.modelUrl):Zs=await je((t=e.face.emotion)==null?void 0:t.modelPath),Zs}async function ob(e,t,n,s){var o,i;if(!Zs)return[];let r=ab<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>ue()-$T;return t.skipAllowed&&a&&r&&DT===s&&P2[n]&&P2[n].length>0?(ab++,P2[n]):(ab=0,new Promise(async l=>{var c,p;let u=[];if((c=t.face.emotion)!=null&&c.enabled){let d={},h=Zs!=null&&Zs.inputs[0].shape?Zs.inputs[0].shape[2]:0;d.resize=Se.resizeBilinear(e,[h,h],!1),d.channels=L(d.resize,tt.rgb),d.grayscale=ke(d.channels,3,!0),d.grayscaleSub=fe(d.grayscale,tt.tf05),d.grayscaleMul=L(d.grayscaleSub,tt.tf2),d.emotion=Zs==null?void 0:Zs.execute(d.grayscaleMul),$T=ue();let f=await d.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((p=t.face.emotion)==null?void 0:p.minConfidence)||0)&&u.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:Gye[m]});u.sort((m,g)=>g.score-m.score),Object.keys(d).forEach(m=>ne(d[m]))}P2[n]=u,DT=s,l(u)}))}var Ps,ib=[],OT=0,MT=0,zT=Number.MAX_SAFE_INTEGER;async function LT(e){return me.initial&&(Ps=null),Ps?e.debug&&oe("cached model:",Ps.modelUrl):Ps=await je(e.face.mobilefacenet.modelPath),Ps}async function lb(e,t,n,s){var o,i;if(!Ps)return[];let r=zT<(((o=t.face.embedding)==null?void 0:o.skipFrames)||0),a=(((i=t.face.embedding)==null?void 0:i.skipTime)||0)>ue()-MT;return t.skipAllowed&&a&&r&&OT===s&&ib[n]?(zT++,ib[n]):new Promise(async l=>{var c;let u=[];if(((c=t.face.embedding)==null?void 0:c.enabled)&&(Ps==null?void 0:Ps.inputs[0].shape)){let p={};p.crop=Se.resizeBilinear(e,[Ps.inputs[0].shape[2],Ps.inputs[0].shape[1]],!1),p.data=Ps==null?void 0:Ps.execute(p.crop);let d=await p.data.data();u=Array.from(d)}ib[n]=u,OT=s,MT=ue(),l(u)})}var Ia,di=0,Hye=2.3,ub=dr.leftEyeLower0,cb=dr.rightEyeLower0,fd={leftBounds:[ub[0],ub[ub.length-1]],rightBounds:[cb[0],cb[cb.length-1]]},md={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function GT(e){var t;return me.initial&&(Ia=null),Ia?e.debug&&oe("cached model:",Ia.modelUrl):Ia=await je((t=e.face.iris)==null?void 0:t.modelPath),di=Ia.inputs[0].shape?Ia.inputs[0].shape[2]:0,di===-1&&(di=64),Ia}function F2(e,t,n,s){for(let r=0;r<Ux.length;r++){let{key:a,indices:o}=Ux[r],i=dr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let u=o[l];e[i[l]]=[t[u][0],t[u][1],(t[u][2]+e[i[l]][2])/2]}}}var jye=e=>{let t=e[fd.leftBounds[0]][2],n=e[fd.rightBounds[0]][2];return t-n},WT=(e,t,n,s,r,a=!1)=>{let o=T2(C2(oT([e[n],e[s]]),Hye)),i=cd(o),l=Se.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[di,di]);if(a&&me.kernels.includes("flipleftright")){let u=Se.flipLeftRight(l);ne(l),l=u}return{box:o,boxSize:i,crop:l}},VT=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<md.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/di:o/di)*n[0]+t.startPoint[0],i/di*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(md.index)}},UT=(e,t,n)=>{let s=e[dr[`${n}EyeUpper0`][md.upperCenter]][2],r=e[dr[`${n}EyeLower0`][md.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function HT(e,t,n,s){if(!Ia)return n.debug&&oe("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=WT(e,t,fd.leftBounds[0],fd.leftBounds[1],s,!0),{box:i,boxSize:l,crop:u}=WT(e,t,fd.rightBounds[0],fd.rightBounds[1],s,!0),c=It([o,u]);ne(o),ne(u);let p=Ia.execute(c);ne(c);let d=await p.data();ne(p);let h=d.slice(0,md.numCoordinates*3),{rawCoords:f,iris:m}=VT(h,r,a,!0),g=d.slice(md.numCoordinates*3),{rawCoords:y,iris:x}=VT(g,i,l,!1),A=jye(e);Math.abs(A)<30?(F2(e,f,"left",null),F2(e,y,"right",null)):A<1?F2(e,f,"left",["EyeUpper0","EyeLower0"]):F2(e,y,"right",["EyeUpper0","EyeLower0"]);let b=UT(e,m,"left"),w=UT(e,x,"right");return e.concat(b).concat(w)}var qye=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Xye=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Kye=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Zye=[[474,475],[475,476],[476,477],[477,474]],Yye=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Jye=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Qye=[[469,470],[470,471],[471,472],[472,469]],eAe=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]];function pi(e){let t=e.map(n=>n[0]);return t.push(e[e.length-1][1]),t}var tAe={lips:pi(qye),leftEye:pi(Xye),leftEyebrow:pi(Kye),leftIris:pi(Zye),rightEye:pi(Yye),rightEyebrow:pi(Jye),rightIris:pi(Qye),faceOval:pi(eAe)},nAe=Object.entries(tAe).map(([e,t])=>t.map(n=>[n,e])).flat(),Jwe=new Map(nAe),Bh=[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],iu=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],lu=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];async function XT(e,t){let n={lips:await t.filter(a=>a.size===160)[0].data(),irisL:await t.filter(a=>a.size===10)[0].data(),eyeL:await t.filter(a=>a.size===142)[0].data(),irisR:await t.filter(a=>a.size===10)[1].data(),eyeR:await t.filter(a=>a.size===142)[1].data()},s=iu.reduce((a,o)=>a+=e[o][2],0)/iu.length;for(let a=0;a<n.irisL.length/2;a++)e.push([n.irisL[2*a+0],n.irisL[2*a+1],s]);let r=lu.reduce((a,o)=>a+=e[o][2],0)/lu.length;for(let a=0;a<n.irisR.length/2;a++)e.push([n.irisR[2*a+0],n.irisR[2*a+1],r]);for(let a=0;a<n.eyeL.length/2;a++)e[iu[a]]=[n.eyeL[2*a+0],n.eyeL[2*a+1],e[iu[a]][2]];for(let a=0;a<n.eyeR.length/2;a++)e[lu[a]]=[n.eyeR[2*a+0],n.eyeR[2*a+1],e[lu[a]][2]];for(let a=0;a<n.lips.length/2;a++)e[Bh[a]]=[n.lips[2*a+0],n.lips[2*a+1],e[Bh[a]][2]];return e}var Yr={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},Mn=null,uu=0;async function KT(e,t){var i,l,u,c,p,d,h,f,m,g,y;let n=(((i=t.face.detector)==null?void 0:i.skipTime)||0)>ue()-Yr.timestamp,s=Yr.skipped<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);!t.skipAllowed||!n||!s||Yr.boxes.length===0?(Yr.boxes=await mT(e,t),Yr.timestamp=ue(),Yr.skipped=0):Yr.skipped++;let r=[],a=[],o=0;for(let x=0;x<Yr.boxes.length;x++){let A=Yr.boxes[x],b=0,w,k={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([b,w,k.tensor]=cT((u=t.face.detector)==null?void 0:u.rotation,A,e,(c=t.face.mesh)!=null&&c.enabled?uu:dd()),(p=t==null?void 0:t.filter)!=null&&p.equalization){let S=await y2(k.tensor);ne(k.tensor),k.tensor=S}if(k.boxScore=Math.round(100*A.confidence)/100,(d=t.face.mesh)!=null&&d.enabled)if(!Mn)t.debug&&oe("face mesh detection requested, but model is not loaded");else{let S=Mn.execute(k.tensor),R=await S.find($=>$.shape[$.shape.length-1]===1).data();if(k.faceScore=Math.round(100*R[0])/100,k.faceScore<(((h=t.face.detector)==null?void 0:h.minConfidence)||1)){if(A.confidence=k.faceScore,(f=t.face.mesh)!=null&&f.keepInvalid){k.box=I2(A,e),k.boxRaw=S2(A,e),k.score=k.boxScore,k.mesh=A.landmarks.map($=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*$[0]/dd(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*$[1]/dd()]),k.meshRaw=k.mesh.map($=>[$[0]/(e.shape[2]||1),$[1]/(e.shape[1]||1),($[2]||0)/uu]);for(let $ of Object.keys(su))k.annotations[$]=[k.mesh[su[$]]]}}else{let $=S.find(F=>F.shape[F.shape.length-1]===1404),_=U($,[-1,3]),D=await _.array();ne(_),(m=t.face.attention)!=null&&m.enabled?D=await XT(D,S):(g=t.face.iris)!=null&&g.enabled&&(D=await HT(D,k.tensor,t,uu)),k.mesh=uT(D,A,b,w,uu),k.meshRaw=k.mesh.map(F=>[F[0]/(e.shape[2]||0),F[1]/(e.shape[1]||0),(F[2]||0)/uu]);for(let F of Object.keys(dr))k.annotations[F]=dr[F].map(V=>k.mesh[V]);k.score=k.faceScore;let C={...dT(k.mesh,A),confidence:A.confidence,landmarks:A.landmarks};k.box=I2(C,e),k.boxRaw=S2(C,e),a.push(C)}ne(S)}else{k.box=I2(A,e),k.boxRaw=S2(A,e),k.score=k.boxScore,k.mesh=A.landmarks.map(S=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*S[0]/dd(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*S[1]/dd()]),k.meshRaw=k.mesh.map(S=>[S[0]/(e.shape[2]||0),S[1]/(e.shape[1]||0),(S[2]||0)/uu]);for(let S of Object.keys(su))k.annotations[S]=[k.mesh[su[S]]]}k.score>(((y=t.face.detector)==null?void 0:y.minConfidence)||1)?r.push(k):ne(k.tensor)}return Yr.boxes=a,r}async function ZT(e){var t,n,s,r,a,o;return me.initial&&(Mn=null),((n=(t=e==null?void 0:e.face)==null?void 0:t.attention)==null?void 0:n.enabled)&&(Mn==null?void 0:Mn.signature)&&Object.keys(((s=Mn==null?void 0:Mn.signature)==null?void 0:s.outputs)||{}).length<6&&(Mn=null),Mn?e.debug&&oe("cached model:",Mn.modelUrl):(r=e.face.attention)!=null&&r.enabled?Mn=await je((a=e.face.attention)==null?void 0:a.modelPath):Mn=await je((o=e.face.mesh)==null?void 0:o.modelPath),uu=Mn.inputs[0].shape?Mn.inputs[0].shape[2]:0,Mn}var YT=ru,JT=Mh;var Fs,O2=[],QT=0,eN=0,pb=Number.MAX_SAFE_INTEGER;async function tN(e){var t;return me.initial&&(Fs=null),Fs?e.debug&&oe("cached model:",Fs.modelUrl):Fs=await je((t=e.face.description)==null?void 0:t.modelPath),Fs}function hb(e){let t=e.image||e.tensor||e;if(!(Fs!=null&&Fs.inputs[0].shape))return t;let n=Se.resizeBilinear(t,[Fs.inputs[0].shape[2],Fs.inputs[0].shape[1]],!1),s=L(n,tt.tf255);return ne(n),s}async function fb(e,t,n,s){var o,i,l,u;if(!Fs)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let r=pb<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>ue()-QT;return t.skipAllowed&&r&&a&&eN===s&&((l=O2[n])==null?void 0:l.age)&&((u=O2[n])==null?void 0:u.age)>0?(pb++,O2[n]):(pb=0,new Promise(async c=>{var d,h;let p={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((d=t.face.description)!=null&&d.enabled){let f=hb(e),m=Fs==null?void 0:Fs.execute(f);QT=ue(),ne(f);let y=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(y[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(p.gender=y[0]<=.5?"female":"male",p.genderScore=Math.min(.99,x));let A=Ss(m.find(R=>R.shape[1]===100),1),b=(await A.data())[0];ne(A);let k=await m.find(R=>R.shape[1]===100).data();p.age=Math.round(k[b-1]>k[b+1]?10*b-100*k[b-1]:10*b+100*k[b+1])/10;let S=m.find(R=>R.shape[1]===1024),E=S?await S.data():[];p.descriptor=Array.from(E),m.forEach(R=>ne(R))}O2[n]=p,eN=s,c(p)}))}function M2(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Wh(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function rN(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return Se.cropAndResize(t,a,[0],n)}function aN(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function z2(e,t=1.5){let n=Wh(e),s=M2(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function L2(e){let t=Wh(e),n=M2(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function rAe(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function oN(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return rAe(n)}var nN=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function hi(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function aAe(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function sN(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(hi(e[r],aAe(t,a)))}return n}function gb(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=nN(t[0],t[1]),o=sN(a,r),i=nN(-t[0],-t[1]);return sN(o,i)}function iN(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-hi(t[0],n),-hi(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function yb(e,t){return[hi(e,t[0]),hi(e,t[1])]}var uN=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var B2=class{constructor(t){ge(this,"model");ge(this,"anchors");ge(this,"anchorsTensor");ge(this,"inputSize");ge(this,"inputSizeTensor");ge(this,"doubleInputSizeTensor");this.model=t,this.anchors=uN.map(n=>[n.x,n.y]),this.anchorsTensor=kr(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Dt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Dt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=Oe(t,[0,0],[-1,2]),n.boxSizes=Oe(t,[0,2],[-1,2]),n.div=pe(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=ce(n.div,this.anchorsTensor),n.halfBoxSizes=pe(n.boxSizes,this.doubleInputSizeTensor),n.sub=fe(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=L(n.sub,this.inputSizeTensor),n.add=ce(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=L(n.add,this.inputSizeTensor);let s=Mc([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(r=>ne(n[r])),s}normalizeLandmarks(t,n){let s={};s.reshape=U(t,[-1,7,2]),s.div=pe(s.reshape,this.inputSizeTensor),s.landmarks=ce(s.div,this.anchors[n]);let r=L(s.landmarks,this.inputSizeTensor);return Object.keys(s).forEach(a=>ne(s[a])),r}async predict(t,n){let s={};s.resize=Se.resizeBilinear(t,[this.inputSize,this.inputSize]),s.div=pe(s.resize,tt.tf127),s.image=fe(s.div,tt.tf1),s.batched=this.model.execute(s.image),s.predictions=Qe(s.batched),s.slice=Oe(s.predictions,[0,0],[-1,1]),s.sigmoid=Sn(s.slice),s.scores=Qe(s.sigmoid);let r=await s.scores.data();s.boxes=Oe(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await Se.nonMaxSuppressionAsync(s.norm,s.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l={};l.box=Oe(s.norm,[i,0],[1,-1]),l.slice=Oe(s.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=U(l.norm,[-1,2]);let u=await l.box.data(),c=u.slice(0,2),p=u.slice(2,4),d=await l.palmLandmarks.array(),h={startPoint:c,endPoint:p,palmLandmarks:d,confidence:r[i]},f=aN(h,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>ne(l[m]))}return Object.keys(s).forEach(i=>ne(s[i])),o}};var lAe=5,cN=1.65,dN=[0,5,9,13,17,1,2],uAe=0,cAe=2,pN=0,W2=class{constructor(t,n){ge(this,"handDetector");ge(this,"handPoseModel");ge(this,"inputSize");ge(this,"storedBoxes");ge(this,"skipped");ge(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>yb([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return z2(L2(r),lAe)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=z2(L2(n),cN);s.palmLandmarks=[];for(let r=0;r<dN.length;r++)s.palmLandmarks.push(t[dN[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=M2(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=gb(s,[0,0]),u=i.map(h=>[...yb(h,l),h[2]]),c=iN(r),p=[...Wh(n),1],d=[hi(p,c[0]),hi(p,c[1])];return u.map(h=>[Math.trunc(h[0]+d[0]),Math.trunc(h[1]+d[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r,a=(n.hand.skipTime||0)>ue()-pN,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(r=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let u=this.storedBoxes[l];if(!!u)if(n.hand.landmarks){let c=n.hand.rotation?oN(u.palmLandmarks[uAe],u.palmLandmarks[cAe]):0,p=Wh(u),d=[p[0]/t.shape[2],p[1]/t.shape[1]],h=n.hand.rotation&&me.kernels.includes("rotatewithoffset")?Se.rotateWithOffset(t,c,0,d):t.clone(),f=gb(-c,p),m=s?this.getBoxForPalmLandmarks(u.palmLandmarks,f):u,g=rN(m,h,[this.inputSize,this.inputSize]),y=pe(g,tt.tf255);ne(g),ne(h);let[x,A]=this.handPoseModel.execute(y);pN=ue(),ne(y);let b=(await x.data())[0];if(ne(x),b>=n.hand.minConfidence/4){let w=U(A,[-1,3]),k=await w.array();ne(A),ne(w);let S=this.transformRawCoords(k,m,c,f),E=this.getBoxForHandLandmarks(S);this.storedBoxes[l]={...E,confidence:b};let R={landmarks:S,confidence:b,boxConfidence:u.confidence,fingerConfidence:b,box:{topLeft:E.startPoint,bottomRight:E.endPoint}};i.push(R)}else this.storedBoxes[l]=null;ne(A)}else{let c=z2(L2(u),cN),p={confidence:u.confidence,boxConfidence:u.confidence,fingerConfidence:0,box:{topLeft:c.startPoint,bottomRight:c.endPoint},landmarks:[]};i.push(p)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var ls={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>ls.nameMapping[e],getPoints:e=>ls.pointsMapping[e]},mi={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>mi.nameMapping[e]},jt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>jt.nameMapping[e]},fi=class{constructor(t){ge(this,"name");ge(this,"curls");ge(this,"directions");ge(this,"weights");ge(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}direction(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}weight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var{thumb:Dr,index:Sa,middle:Ca,ring:cu,pinky:du}=ls,{none:$r,half:pAe,full:Pr}=mi,{verticalUp:gd,verticalDown:h8e,horizontalLeft:Ab,horizontalRight:hAe,diagonalUpRight:fAe,diagonalUpLeft:yd,diagonalDownRight:f8e,diagonalDownLeft:m8e}=jt,gi=new fi("thumbs up");gi.curl(Dr,$r,1);gi.direction(Dr,gd,1);gi.direction(Dr,yd,.25);gi.direction(Dr,fAe,.25);for(let e of[ls.index,ls.middle,ls.ring,ls.pinky])gi.curl(e,Pr,1),gi.direction(e,Ab,1),gi.direction(e,hAe,1);var cn=new fi("victory");cn.curl(Dr,pAe,.5);cn.curl(Dr,$r,.5);cn.direction(Dr,gd,1);cn.direction(Dr,yd,1);cn.curl(Sa,$r,1);cn.direction(Sa,gd,.75);cn.direction(Sa,yd,1);cn.curl(Ca,$r,1);cn.direction(Ca,gd,1);cn.direction(Ca,yd,.75);cn.curl(cu,Pr,1);cn.direction(cu,gd,.2);cn.direction(cu,yd,1);cn.direction(cu,Ab,.2);cn.curl(du,Pr,1);cn.direction(du,gd,.2);cn.direction(du,yd,1);cn.direction(du,Ab,.2);cn.weight(Sa,2);cn.weight(Ca,2);var yi=new fi("point");yi.curl(Dr,Pr,1);yi.curl(Sa,$r,.5);yi.curl(Ca,Pr,.5);yi.curl(cu,Pr,.5);yi.curl(du,Pr,.5);yi.weight(Sa,2);yi.weight(Ca,2);var Ai=new fi("middle finger");Ai.curl(Dr,$r,1);Ai.curl(Sa,Pr,.5);Ai.curl(Ca,Pr,.5);Ai.curl(cu,Pr,.5);Ai.curl(du,Pr,.5);Ai.weight(Sa,2);Ai.weight(Ca,2);var Ad=new fi("open palm");Ad.curl(Dr,$r,.75);Ad.curl(Sa,$r,.75);Ad.curl(Ca,$r,.75);Ad.curl(cu,$r,.75);Ad.curl(du,$r,.75);var hN=[gi,cn,yi,Ai,Ad];var mAe=.7,pu={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function fN(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function gN(e,t){if(!e||!t)return[0,0];let n=fN(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=fN(e[1],e[2],t[1],t[2]);return[n,s]}function mN(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function gAe(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],c=e[2]-n[2],p=t[2]-n[2],d=Math.sqrt(s*s+o*o+u*u),h=Math.sqrt(r*r+i*i+c*c),f=Math.sqrt(a*a+l*l+p*p),m=(f*f+d*d-h*h)/(2*f*d);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>pu.NO_CURL_START_LIMIT?y=mi.none:g>pu.HALF_CURL_START_LIMIT?y=mi.half:y=mi.full,y}function yN(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=jt.horizontalLeft:r=jt.horizontalRight:s===Math.abs(t)?t>0?r=jt.horizontalLeft:r=jt.horizontalRight:n>0?r=jt.horizontalLeft:r=jt.horizontalRight,r}function AN(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=jt.verticalDown:r=jt.verticalUp:s===Math.abs(t)?t<0?r=jt.verticalDown:r=jt.verticalUp:n<0?r=jt.verticalDown:r=jt.verticalUp,r}function yAe(e,t,n,s,r,a,o,i){let l,u=AN(e,t,n,s),c=yN(r,a,o,i);return u===jt.verticalUp?c===jt.horizontalLeft?l=jt.diagonalUpLeft:l=jt.diagonalUpRight:c===jt.horizontalLeft?l=jt.diagonalDownLeft:l=jt.diagonalDownRight,l}function AAe(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],c=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),p=Math.max(Math.abs(i),Math.abs(l),Math.abs(u)),d=0,h=0,f=0,m=p/(c+1e-5);m>1.5?d+=pu.DISTANCE_VOTE_POWER:m>.66?h+=pu.DISTANCE_VOTE_POWER:f+=pu.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),y=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+u*u),A=Math.max(g,y,x),b=e[0],w=e[1],k=n[0],S=n[1];A===g?(k=n[0],S=n[1]):A===x&&(b=t[0],w=t[1]);let $=gN([b,w],[k,S]),_=mN($,pu.TOTAL_ANGLE_VOTE_POWER);d+=_[0],h+=_[1],f+=_[2];for(let C of s){let F=mN(C,pu.SINGLE_ANGLE_VOTE_POWER);d+=F[0],h+=F[1],f+=F[2]}let D;return d===Math.max(d,h,f)?D=AN(l,i,u,p):f===Math.max(h,f)?D=yN(a,r,o,c):D=yAe(l,i,u,p,a,r,o,c),D}function xN(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of ls.all){let o=ls.getPoints(a),i=[],l=[];for(let u of o){let c=e[u[0]],p=e[u[1]],d=gN(c,p),h=d[0],f=d[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of ls.all){let o=a===ls.thumb?1:0,i=ls.getPoints(a),l=e[i[o][0]],u=e[i[o+1][1]],c=e[i[3][1]],p=gAe(l,u,c),d=AAe(l,u,c,t[a].slice(o));s[a]=p,r[a]=d}return{curls:s,directions:r}}function V2(e){if(!e||e.length===0)return null;let t=xN(e),n={};for(let s of ls.all)n[ls.getName(s)]={curl:mi.getName(t.curls[s]),direction:jt.getName(t.directions[s])};return n}function bN(e){let t=[];if(!e||e.length===0)return t;let n=xN(e);for(let s of hN){let r=s.matchAgainst(n.curls,n.directions);r>=mAe&&t.push({name:s.name,confidence:r})}return t}var vN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},xd,bd,wN;async function bb(e,t){let n=await wN.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let c of Object.keys(vN))a[c]=vN[c].map(p=>n[r].landmarks[p]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let c of o)c[0]<i[0]&&(i[0]=c[0]),c[1]<i[1]&&(i[1]=c[1]),c[0]>i[2]&&(i[2]=c[0]),c[1]>i[3]&&(i[3]=c[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let u=V2(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:u})}return s}async function vb(e){var n,s;me.initial&&(xd=null,bd=null),!xd||!bd?[xd,bd]=await Promise.all([e.hand.enabled?je((n=e.hand.detector)==null?void 0:n.modelPath):null,e.hand.landmarks?je((s=e.hand.skeleton)==null?void 0:s.modelPath):null]):(e.debug&&oe("cached model:",xd.modelUrl),e.debug&&oe("cached model:",bd.modelUrl));let t=new B2(xd);return wN=new W2(t,bd),[xd,bd]}var yn=[null,null],xAe=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],xi=[[0,0],[0,0]],bAe=["hand","fist","pinch","point","face","tip","pinchtip"],IN=4,SN=1.6,vAe=512,wAe=1.4,U2=Number.MAX_SAFE_INTEGER,wb=0,Ta=[0,0],Jt={boxes:[],hands:[]},CN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function TN(e){var t;if(me.initial&&(yn[0]=null),yn[0])e.debug&&oe("cached model:",yn[0].modelUrl);else{G2(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),yn[0]=await je((t=e.hand.detector)==null?void 0:t.modelPath);let n=Object.values(yn[0].modelSignature.inputs);xi[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,xi[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return yn[0]}async function NN(e){var t;if(me.initial&&(yn[1]=null),yn[1])e.debug&&oe("cached model:",yn[1].modelUrl);else{yn[1]=await je((t=e.hand.skeleton)==null?void 0:t.modelPath);let n=Object.values(yn[1].modelSignature.inputs);xi[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,xi[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return yn[1]}async function kAe(e,t){let n=[];if(!e||!yn[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,vAe),o=Math.round(a*r/8)*8;s.resize=Se.resizeBilinear(e,[a,o]),s.cast=he(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await yn[0].executeAsync(s.cast,xAe),s.boxes=Qe(s.rawBoxes,[0,2]),s.scores=Qe(s.rawScores,[0]);let i=Jn(s.scores,1);ne(i[IN]),i.splice(IN,1),s.filtered=on(i,1),ne(i),s.max=fn(s.filtered,1),s.argmax=Ss(s.filtered,1);let l=0;s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let u=await s.nms.data(),c=await s.max.data(),p=await s.argmax.data();for(let d of Array.from(u)){let h=Oe(s.boxes,d,1),f=await h.data();ne(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=R2(m,wAe),y=[Math.trunc(m[0]*Ta[0]),Math.trunc(m[1]*Ta[1]),Math.trunc(m[2]*Ta[0]),Math.trunc(m[3]*Ta[1])],x=c[d],A=bAe[p[d]],b={id:l++,score:x,box:y,boxRaw:g,label:A};n.push(b)}return Object.keys(s).forEach(d=>ne(s[d])),n.sort((d,h)=>h.score-d.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function kb(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&yn[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={},a=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Se.cropAndResize(e,[a],[0],[xi[1][0],xi[1][1]],"bilinear"),r.div=pe(r.crop,tt.tf255),[r.score,r.keypoints]=yn[1].execute(r.div,["Identity_1","Identity"]);let o=(await r.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(o))))/100;if(i>=(n.hand.minConfidence||0)){s.fingerScore=i,r.reshaped=U(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(p=>[p[0]/xi[1][1],p[1]/xi[1][0],p[2]||0]).map(p=>[p[0]*t.boxRaw[2],p[1]*t.boxRaw[3],p[2]||0]);s.keypoints=c.map(p=>[Ta[0]*(p[0]+t.boxRaw[0]),Ta[1]*(p[1]+t.boxRaw[1]),p[2]||0]),s.landmarks=V2(s.keypoints);for(let p of Object.keys(CN))s.annotations[p]=CN[p].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(l=>ne(r[l]))}return s}async function Ib(e,t){var r,a;if(!yn[0]||!yn[1]||!((r=yn[0])!=null&&r.inputs[0].shape)||!((a=yn[1])!=null&&a.inputs[0].shape))return[];Ta=[e.shape[2]||0,e.shape[1]||0],U2++;let n=(t.hand.skipTime||0)>ue()-wb,s=U2<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?Jt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>ue()-wb,l=U2<3*(t.hand.skipFrames||0);t.skipAllowed&&Jt.hands.length===t.hand.maxDetected?Jt.hands=await Promise.all(Jt.boxes.map(c=>kb(e,c,t))):t.skipAllowed&&i&&l&&Jt.hands.length>0?Jt.hands=await Promise.all(Jt.boxes.map(c=>kb(e,c,t))):(Jt.boxes=await kAe(e,t),wb=ue(),Jt.hands=await Promise.all(Jt.boxes.map(c=>kb(e,c,t))),U2=0);let u=[...Jt.boxes];if(Jt.boxes.length=0,t.cacheSensitivity>0)for(let c=0;c<Jt.hands.length;c++){let p=xT(Jt.hands[c].keypoints,Ta);if(p.box[2]/(e.shape[2]||1)>.05&&p.box[3]/(e.shape[1]||1)>.05&&Jt.hands[c].fingerScore&&Jt.hands[c].fingerScore>(t.hand.minConfidence||0)){let d=R2(p.box,SN),h=R2(p.boxRaw,SN);Jt.boxes.push({...u[c],box:d,boxRaw:h})}}for(let c=0;c<Jt.hands.length;c++){let p=wa(Jt.hands[c].keypoints,Ta);Jt.hands[c].box=p.box,Jt.hands[c].boxRaw=p.boxRaw}o(Jt.hands)})}var zn,H2=[],Sb=Number.MAX_SAFE_INTEGER,RN=0,_N=0;async function DN(e){var t;return me.initial&&(zn=null),zn?e.debug&&oe("cached model:",zn.modelUrl):zn=await je((t=e.face.liveness)==null?void 0:t.modelPath),zn}async function Cb(e,t,n,s){var o,i;if(!zn)return 0;let r=(((o=t.face.liveness)==null?void 0:o.skipTime)||0)>ue()-_N,a=Sb<(((i=t.face.liveness)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&RN===s&&H2[n]?(Sb++,H2[n]):(Sb=0,new Promise(async l=>{let u=Se.resizeBilinear(e,[zn!=null&&zn.inputs[0].shape?zn.inputs[0].shape[2]:0,zn!=null&&zn.inputs[0].shape?zn.inputs[0].shape[1]:0],!1),c=zn==null?void 0:zn.execute(u),p=(await c.data())[0];H2[n]=Math.round(100*p)/100,RN=s,_N=ue(),ne([u,c]),l(H2[n])}))}var Vh={};Pa(Vh,{connected:()=>q2,horizontal:()=>Tb,kpt:()=>j2,relative:()=>Eb,vertical:()=>Nb});var j2=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Tb=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],Nb=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],Eb=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],q2={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var PN=.005,Os={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function Rb(e){for(let t of Tb){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of Nb){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of Eb){let s=e.keypoints.findIndex(u=>u&&u.part===t[0]),r=e.keypoints.findIndex(u=>u&&u.part===t[1]),a=e.keypoints.findIndex(u=>u&&u.part===n[0]),o=e.keypoints.findIndex(u=>u&&u.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let u=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=u}}}function FN(e){for(let t=0;t<e.length;t++)if(e[t]&&Os.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Os.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Os.keypoints[t].positionRaw[1])];n[0]<PN&&n[1]<PN?e[t]=Os.keypoints[t]:Os.keypoints[t]=e[t]}else Os.keypoints[t]=e[t];return e}function ON(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Os.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Xs(e,Os.padding),n.resize=Se.resizeBilinear(n.pad,[t,t]);let s=he(n.resize,"int32");return Object.keys(n).forEach(r=>ne(n[r])),s}function MN(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+Os.padding[2][0]+Os.padding[2][1])/t[0]-Os.padding[2][0],s.position[1]*(t[1]+Os.padding[1][0]+Os.padding[1][1])/t[1]-Os.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=wa(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Ms,X2=0,_b=Number.MAX_SAFE_INTEGER,hu={boxes:[],bodies:[],last:0};async function zN(e){return me.initial&&(Ms=null),Ms?e.debug&&oe("cached model:",Ms.modelUrl):(G2(["size"],e),Ms=await je(e.body.modelPath)),X2=Ms.inputs[0].shape?Ms.inputs[0].shape[2]:0,X2<64&&(X2=256),Ms}async function SAe(e,t,n){let s=e[0][0],r=[],a=0;for(let c=0;c<s.length;c++)if(a=s[c][2],a>t.body.minConfidence){let p=[s[c][1],s[c][0]];r.push({score:Math.round(100*a)/100,part:j2[c],positionRaw:p,position:[Math.round((n.shape[2]||0)*p[0]),Math.round((n.shape[1]||0)*p[1])]})}a=r.reduce((c,p)=>p.score>c?p.score:c,0);let o=[],i=wa(r.map(c=>c.position),[n.shape[2],n.shape[1]]),l={};for(let[c,p]of Object.entries(q2)){let d=[];for(let h=0;h<p.length-1;h++){let f=r.find(g=>g.part===p[h]),m=r.find(g=>g.part===p[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&d.push([f.position,m.position])}l[c]=d}let u={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return Rb(u),o.push(u),o}async function CAe(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let p=0;p<17;p++){let d=a[3*p+2];if(d>t.body.minConfidence){let h=[a[3*p+1],a[3*p+0]];i.push({part:j2[p],score:Math.round(100*d)/100,positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}}let l=wa(i.map(p=>p.position),[n.shape[2],n.shape[1]]),u={};for(let[p,d]of Object.entries(q2)){let h=[];for(let f=0;f<d.length-1;f++){let m=i.find(y=>y.part===d[f]),g=i.find(y=>y.part===d[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}u[p]=h}let c={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:u};Rb(c),s.push(c)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function Db(e,t){if(!Ms||!(Ms!=null&&Ms.inputs[0].shape))return[];t.skipAllowed||(hu.boxes.length=0),_b++;let n=(t.body.skipTime||0)>ue()-hu.last,s=_b<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?hu.bodies:new Promise(async r=>{let a={};_b=0,a.input=ON(e,X2),a.res=Ms==null?void 0:Ms.execute(a.input),hu.last=ue();let o=await a.res.array();hu.bodies=a.res.shape[2]===17?await SAe(o,t,e):await CAe(o,t,e);for(let i of hu.bodies)MN(i,[e.shape[2]||1,e.shape[1]||1]),FN(i.keypoints);Object.keys(a).forEach(i=>ne(a[i])),r(hu.bodies)})}var vd,K2=[],BN=0,$b=Number.MAX_SAFE_INTEGER,Y2=0,Z2=2.5;async function WN(e){if(!vd||me.initial){vd=await je(e.object.modelPath);let t=Object.values(vd.modelSignature.inputs);Y2=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&oe("cached model:",vd.modelUrl);return vd}async function TAe(e,t,n){let s=0,r=[];for(let l of[1,2,4])K(async()=>{let u=l*13,c=Qe(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)===hd.length)),p=Qe(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)<hd.length)),h=await p.reshape([-1,4,p.shape[1]/4]).argMax(2).array(),f=await c.array();for(let m=0;m<c.shape[0];m++)for(let g=0;g<c.shape[1];g++){let y=f[m][g];if(y>(n.object.minConfidence||0)&&g!==61){let x=(.5+Math.trunc(m%u))/u,A=(.5+Math.trunc(m/u))/u,b=h[m].map(D=>D*(u/l/Y2)),[w,k]=[x-Z2/l*b[0],A-Z2/l*b[1]],[S,E]=[x+Z2/l*b[2]-w,A+Z2/l*b[3]-k],R=[w,k,S,E];R=R.map(D=>Math.max(0,Math.min(D,1)));let $=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],_={id:s++,score:Math.round(100*y)/100,class:g+1,label:hd[g].label,box:$.map(D=>Math.trunc(D)),boxRaw:R};r.push(_)}}});e.forEach(l=>ne(l));let a=r.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),o=r.map(l=>l.score),i=[];if(a&&a.length>0){let l=await Se.nonMaxSuppressionAsync(a,o,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);i=await l.data(),ne(l)}return r=r.filter((l,u)=>i.includes(u)).sort((l,u)=>u.score-l.score),r}async function Pb(e,t){let n=(t.object.skipTime||0)>ue()-BN,s=$b<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&K2.length>0?($b++,K2):($b=0,!me.kernels.includes("mod")||!me.kernels.includes("sparsetodense")?K2:new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[Y2,Y2],!1),i=pe(o,tt.tf255),l=i.transpose([0,3,1,2]);ne(i),ne(o);let u;t.object.enabled&&(u=vd.execute(l)),BN=ue(),ne(l);let c=await TAe(u,a,t);K2=c,r(c)}))}var Gh=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],NAe=Gh.length,Uh=Gh.reduce((e,t,n)=>(e[t]=n,e),{}),EAe=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],L8e=EAe.map(([e,t])=>[Uh[e],Uh[t]]),UN=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function GN(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function HN(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(u,c)=>({id:c,score:u.score,boxRaw:[u.box[0]/r,u.box[1]/s,u.box[2]/r,u.box[3]/s],box:[Math.trunc(u.box[0]*o),Math.trunc(u.box[1]*a),Math.trunc(u.box[2]*o),Math.trunc(u.box[3]*a)],keypoints:u.keypoints.map(({score:p,part:d,position:h})=>({score:p,part:d,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]})),annotations:{}});return e.map((u,c)=>i(u,c))}var J2=class{constructor(t,n){ge(this,"priorityQueue");ge(this,"numberOfElements");ge(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function Fb(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+NAe)}}function Ob(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=Fb(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function Mb(e,t,n){return e<t?t:e>n?n:e}function jN(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function zb(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Fr,_Ae=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],Q2=1,wd=16,DAe=50**2;function qN(e,t,n,s,r,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,x,A)=>({y:Mb(Math.round(y.y/wd),0,x-1),x:Mb(Math.round(y.x/wd),0,A-1)}),[u,c]=s.shape,p=l(t.position,u,c),d=i(p),f=zb(t.position,d);for(let y=0;y<o;y++){let x=l(f,u,c),A=Fb(x.y,x.x,n,r);f=zb({x:x.x*wd,y:x.y*wd},{x:A.x,y:A.y})}let m=l(f,u,c),g=s.get(m.y,m.x,n);return{position:f,part:Gh[n],score:g}}function $Ae(e,t,n,s,r){let a=UN.map(([d,h])=>[Uh[d],Uh[h]]),o=a.map(([,d])=>d),i=a.map(([d])=>d),l=t.shape[2],u=o.length,c=new Array(l),p=Ob(e.part,wd,n);c[e.part.id]={score:e.score,part:Gh[e.part.id],position:p};for(let d=u-1;d>=0;--d){let h=o[d],f=i[d];c[h]&&!c[f]&&(c[f]=qN(d,c[h],f,t,n,r))}for(let d=0;d<u;++d){let h=i[d],f=o[d];c[h]&&!c[f]&&(c[f]=qN(d,c[h],f,t,n,s))}return c}function PAe(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-Q2,0),u=Math.min(n+Q2+1,a);for(let c=l;c<u;++c){let p=Math.max(s-Q2,0),d=Math.min(s+Q2+1,o);for(let h=p;h<d;++h)if(r.get(c,h,e)>t){i=!1;break}if(!i)break}return i}function FAe(e,t){let[n,s,r]=t.shape,a=new J2(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let u=t.get(o,i,l);u<e||PAe(l,u,o,i,t)&&a.enqueue({score:u,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function XN(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?jN(n,t,a.y,a.x)<=DAe:!1})}function OAe(e,t){return t.reduce((s,{position:r,score:a},o)=>(XN(e,r,o)||(s+=a),s),0)/t.length}function MAe(e,t,n,s,r,a){let o=[],i=FAe(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),u=Ob(l.part,wd,e);if(XN(o,u,l.part.id))continue;let c=$Ae(l,t,e,n,s);c=c.filter(h=>h.score>a);let p=OAe(o,c),d=GN(c);p>a&&o.push({keypoints:c,box:d,score:Math.round(100*p)/100})}return o}async function Lb(e,t){let n=K(()=>{if(!Fr.inputs[0].shape)return[];let o=Se.resizeBilinear(e,[Fr.inputs[0].shape[2],Fr.inputs[0].shape[1]]),i=fe(pe(he(o,"float32"),127.5),1),u=Fr.execute(i,_Ae).map(c=>Qe(c,[0]));return u[1]=Sn(u[1]),u}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)ne(o);let r=await MAe(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Fr.inputs[0].shape?HN(r,[e.shape[1],e.shape[2]],[Fr.inputs[0].shape[2],Fr.inputs[0].shape[1]]):[]}async function KN(e){return!Fr||me.initial?Fr=await je(e.body.modelPath):e.debug&&oe("cached model:",Fr.modelUrl),Fr}var Jr,Bb=!1;async function Wb(e){return!Jr||me.initial?Jr=await je(e.segmentation.modelPath):e.debug&&oe("cached model:",Jr.modelUrl),Jr}async function YN(e,t,n){var m,g;if(Bb)return{data:[],canvas:null,alpha:null};Bb=!0,Jr||await Wb(n);let s=await ud(e,n),r=((m=s.tensor)==null?void 0:m.shape[2])||0,a=((g=s.tensor)==null?void 0:g.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=Se.resizeBilinear(s.tensor,[Jr.inputs[0].shape?Jr.inputs[0].shape[1]:0,Jr.inputs[0].shape?Jr.inputs[0].shape[2]:0],!1),ne(s.tensor),o.norm=pe(o.resize,tt.tf255),o.res=Jr.execute(o.norm),o.squeeze=Qe(o.res,0),o.squeeze.shape[2]===2?(o.softmax=Kl(o.squeeze),[o.bg,o.fg]=Jn(o.softmax,2),o.expand=Kt(o.fg,2),o.pad=Kt(o.expand,0),o.crop=Se.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=Qe(o.crop,0)):o.data=Se.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(me.node&&!me.Canvas&&typeof ImageData=="undefined")return n.debug&&oe("canvas support missing"),Object.keys(o).forEach(y=>ne(o[y])),{data:i,canvas:null,alpha:null};let l=as(r,a);qs&&await qs.toPixels(o.data,l);let u=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(u.filter=`blur(${n.segmentation.blur}px)`);let c=u.getImageData(0,0,r,a),p=as(r,a),d=p.getContext("2d");s.canvas&&d.drawImage(s.canvas,0,0),d.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(d.filter=`blur(${n.segmentation.blur}px)`),d.drawImage(l,0,0),d.globalCompositeOperation="source-over",d.filter="none";let h=d.getImageData(0,0,r,a);for(let y=0;y<r*a;y++)h.data[4*y+3]=c.data[4*y+0];d.putImageData(h,0,0);let f=null;if(t&&p){f=as(r,a);let y=await ud(t,n);ne(y.tensor);let x=f.getContext("2d");x.drawImage(y.canvas,0,0,f.width,f.height),x.drawImage(p,0,0)}return Object.keys(o).forEach(y=>ne(o[y])),Bb=!1,{data:i,canvas:p,alpha:l}}var Hh=class{constructor(){ge(this,"ssrnetage",null);ge(this,"gear",null);ge(this,"blazeposedetect",null);ge(this,"blazepose",null);ge(this,"centernet",null);ge(this,"efficientpose",null);ge(this,"mobilefacenet",null);ge(this,"emotion",null);ge(this,"facedetect",null);ge(this,"faceiris",null);ge(this,"facemesh",null);ge(this,"faceres",null);ge(this,"ssrnetgender",null);ge(this,"handpose",null);ge(this,"handskeleton",null);ge(this,"handtrack",null);ge(this,"liveness",null);ge(this,"movenet",null);ge(this,"nanodet",null);ge(this,"posenet",null);ge(this,"segmentation",null);ge(this,"antispoof",null)}},Vb=()=>{let e=0,t=0;for(let n of Object.values(Kr))e+=n.manifest,t+=n.weights;return{numLoadedModels:Object.values(Kr).length,sizeFromManifest:e,sizeWeights:t}};function e1(e){for(let t of Object.keys(e.models))e.models[t]=null}async function Ub(e){var t,n,s,r,a,o,i,l,u,c,p,d,h,f,m,g,y,x,A,b,w,k,S,E,R,$,_,D,C,F,V;me.initial&&e1(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await vb(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await vb(e.config))),e.config.body.enabled&&!e.models.blazepose&&((o=(a=e.config.body)==null?void 0:a.modelPath)==null?void 0:o.includes("blazepose"))&&(e.models.blazepose=IT(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=kT(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(i=e.config.body)==null?void 0:i.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=RT(e.config)),e.config.body.enabled&&!e.models.movenet&&((c=(u=e.config.body)==null?void 0:u.modelPath)==null?void 0:c.includes("movenet"))&&(e.models.movenet=zN(e.config)),e.config.body.enabled&&!e.models.posenet&&((d=(p=e.config.body)==null?void 0:p.modelPath)==null?void 0:d.includes("posenet"))&&(e.models.posenet=KN(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=fT(e.config)),e.config.face.enabled&&((h=e.config.face.antispoof)==null?void 0:h.enabled)&&!e.models.antispoof&&(e.models.antispoof=tT(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=DN(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=tN(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=PT(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!((x=e.config.face.attention)!=null&&x.enabled)&&!e.models.faceiris&&(e.models.faceiris=GT(e.config)),e.config.face.enabled&&((A=e.config.face.mesh)==null?void 0:A.enabled)&&!e.models.facemesh&&(e.models.facemesh=ZT(e.config)),e.config.face.enabled&&((b=e.config.face.gear)==null?void 0:b.enabled)&&!e.models.gear&&(e.models.gear=VC(e.config)),e.config.face.enabled&&((w=e.config.face.ssrnet)==null?void 0:w.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=qC(e.config)),e.config.face.enabled&&((k=e.config.face.ssrnet)==null?void 0:k.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=YC(e.config)),e.config.face.enabled&&((S=e.config.face.mobilefacenet)==null?void 0:S.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=LT(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((R=(E=e.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handtrack"))&&(e.models.handtrack=TN(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((_=($=e.config.hand.detector)==null?void 0:$.modelPath)==null?void 0:_.includes("handtrack"))&&(e.models.handskeleton=NN(e.config)),e.config.object.enabled&&!e.models.centernet&&((C=(D=e.config.object)==null?void 0:D.modelPath)==null?void 0:C.includes("centernet"))&&(e.models.centernet=TT(e.config)),e.config.object.enabled&&!e.models.nanodet&&((V=(F=e.config.object)==null?void 0:F.modelPath)==null?void 0:V.includes("nanodet"))&&(e.models.nanodet=WN(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=Wb(e.config));for await(let j of Object.keys(e.models))e.models[j]&&typeof e.models[j]!="undefined"&&(e.models[j]=await e.models[j])}async function Gb(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models)){let s=e.models[n];if(!s)continue;let r=[],a=s==null?void 0:s.executor;if(a&&a.graph.nodes)for(let i of Object.values(a.graph.nodes)){let l=i.op.toLowerCase();r.includes(l)||r.push(l)}else!a&&e.config.debug&&oe("model signature not determined:",n);let o=[];for(let i of r)!t.includes(i)&&!e.env.kernels.includes(i)&&!e.env.kernels.includes(i.replace("_",""))&&!e.env.kernels.includes(i.replace("native",""))&&!e.env.kernels.includes(i.replace("v2",""))&&o.push(i);e.config.debug&&o.length>0&&oe("model validation failed:",n,o)}}var Ft={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function zAe(){let e=Ft.gl;!e||(Ft.extensions=e.getSupportedExtensions())}async function QN(e){var t;if(e.config.backend==="humangl"&&(Ft.name in nn().registry&&(!Ft.gl||!Ft.gl.getParameter(Ft.gl.VERSION))&&(oe("error: humangl backend invalid context"),e1(e)),!gy(Ft.name))){try{Ft.canvas=await as(100,100)}catch(s){oe("error: cannot create canvas:",s);return}try{if(Ft.gl=(t=Ft.canvas)==null?void 0:t.getContext("webgl2",Ft.webGLattr),!Ft.gl.getParameter(Ft.gl.VERSION).includes("2.0")){oe("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}Ft.canvas&&(Ft.canvas.addEventListener("webglcontextlost",async r=>{throw oe("error: humangl:",r.type),oe("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),Ft.canvas.addEventListener("webglcontextrestored",r=>{oe("error: humangl context restored:",r)}),Ft.canvas.addEventListener("webglcontextcreationerror",r=>{oe("error: humangl context create:",r)}))}catch(s){oe("error: cannot get WebGL context:",s);return}try{i2(2,Ft.gl)}catch(s){oe("error: cannot set WebGL context:",s);return}try{let s=new Uu(Ft.gl);Gl(Ft.name,()=>new nd(s),Ft.priority)}catch(s){oe("error: cannot register WebGL backend:",s);return}try{Vr("webgl").forEach(r=>{let a={...r,backendName:Ft.name};ar(a)})}catch(s){oe("error: cannot update WebGL backend registration:",s);return}let n=js().getGPGPUContext?js().getGPGPUContext().gl:null;if(n)oe(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{oe("error: no current gl context:",n,Ft.gl);return}try{Er.set("WEBGL_VERSION",2)}catch(s){oe("error: cannot set WebGL backend flags:",s);return}zAe(),oe("backend registered:",Ft.name)}}function LAe(){if(!me.kernels.includes("mod")){let e={kernelName:"Mod",backendName:es(),kernelFunc:t=>K(()=>fe(t.inputs.a,L(pe(t.inputs.a,t.inputs.b),t.inputs.b)))};ar(e),me.kernels.push("mod")}if(!me.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:es(),kernelFunc:t=>K(()=>Oc(t.inputs.a/t.inputs.b)*t.inputs.b+ql(t.inputs.a,t.inputs.b))};ar(e),me.kernels.push("floormod")}}async function n1(e,t=!1){if(e.state="backend",t||me.initial||e.config.backend&&e.config.backend.length>0&&es()!==e.config.backend){let n=ue();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&oe("running inside web worker"),me.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&oe("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),me.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&oe(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),me.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")oe("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();if(e.config.debug&&oe("enumerated webgpu adapter:",r),!r)oe("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="humangl";else{let a="requestAdapterInfo"in r?await r.requestAdapterInfo():void 0;oe("webgpu adapter info:",a)}}e.config.backend==="humangl"&&await QN(e);let s=Object.keys(nn().registryFactory);if(e.config.debug&&oe("available backends:",s),s.includes(e.config.backend)||(oe(`error: backend ${e.config.backend} not found in registry`),e.config.backend=me.node?"tensorflow":"webgl",e.config.debug&&oe(`override: setting backend ${e.config.backend}`)),e.config.debug&&oe("setting backend:",e.config.backend),e.config.backend==="wasm"){try{Y().set("CANVAS2D_WILL_READ_FREQUENTLY",!0)}catch(o){}if(e.config.debug&&oe("wasm path:",e.config.wasmPath),typeof(He==null?void 0:He.setWasmPaths)!="undefined")await bx(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&oe(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&oe("warning: wasm simd support is not enabled")}try{await my(e.config.backend),await Fc(),GC()}catch(r){return oe("error: cannot set backend:",e.config.backend,r),!1}}if(es()==="humangl"&&(Er.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Er.set("WEBGL_CPU_FORWARD",!0),Er.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Er.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(oe("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Er.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),js().getGPGPUContext)){let s=await js().getGPGPUContext().gl;e.config.debug&&oe(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}es(),hy(),await Fc(),e.performance.initBackend=Math.trunc(ue()-n),e.config.backend=es(),await me.updateBackend(),LAe()}return!0}function G2(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&oe("kernelFunc",n,t.backend)}};ar(s)}me.kernels=Vr(es()).map(n=>n.kernelName.toLowerCase())}var Yb={};Pa(Yb,{all:()=>Zb,body:()=>Id,canvas:()=>Kb,face:()=>kd,gesture:()=>Td,hand:()=>Sd,object:()=>Cd,options:()=>Ln,person:()=>Xb});var Ys=e=>{if(!e)oe("draw error: invalid canvas");else if(!e.getContext)oe("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)oe("draw error: cannot get canvas context");else return t}return null},fu=e=>Math.round(e*180/Math.PI),Na=(e,t)=>{if(!t.useDepth||typeof e=="undefined")return t.color;let n=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${t.alpha})`};function Ea(e,t,n,s,r){e.fillStyle=Na(s,r),e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Qr(e,t,n,s,r,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function Hb(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t)e.strokeStyle=Na(s[2]||0,n),e.lineTo(Math.trunc(s[0]),Math.trunc(s[1]));e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function tE(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){Hb(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function jb(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}var Ln={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1};var ft;function WAe(e,t){if(ft.drawLabels){let n=[];if(n.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&n.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&n.push(`age: ${e.age||""}`),e.iris&&n.push(`distance: ${e.iris}`),e.real&&n.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&n.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){let s=e.emotion.map(r=>`${Math.trunc(100*r.score)}% ${r.emotion}`);s.length>3&&(s.length=3),n.push(s.join(" "))}e.rotation&&e.rotation.angle&&e.rotation.gaze&&(e.rotation.angle.roll&&n.push(`roll: ${fu(e.rotation.angle.roll)}\xB0 yaw:${fu(e.rotation.angle.yaw)}\xB0 pitch:${fu(e.rotation.angle.pitch)}\xB0`),e.rotation.gaze.bearing&&n.push(`gaze: ${fu(e.rotation.gaze.bearing)}\xB0`)),n.length===0&&n.push("face"),t.fillStyle=ft.color;for(let s=n.length-1;s>=0;s--){let r=Math.max(e.box[0],0),a=s*ft.lineHeight+e.box[1];ft.shadowColor&&ft.shadowColor!==""&&(t.fillStyle=ft.shadowColor,t.fillText(n[s],r+5,a+16)),t.fillStyle=ft.labelColor,t.fillText(n[s],r+4,a+15)}}}function VAe(e,t){if(e.annotations&&e.annotations.leftEyeIris&&e.annotations.leftEyeIris[0]){t.strokeStyle=ft.useDepth?"rgba(255, 200, 255, 0.3)":ft.color,t.beginPath();let n=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,s=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],n,s,0,0,2*Math.PI),t.stroke(),ft.fillPolygons&&(t.fillStyle=ft.useDepth?"rgba(255, 255, 200, 0.3)":ft.color,t.fill())}if(e.annotations&&e.annotations.rightEyeIris&&e.annotations.rightEyeIris[0]){t.strokeStyle=ft.useDepth?"rgba(255, 200, 255, 0.3)":ft.color,t.beginPath();let n=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,s=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],n,s,0,0,2*Math.PI),t.stroke(),ft.fillPolygons&&(t.fillStyle=ft.useDepth?"rgba(255, 255, 200, 0.3)":ft.color,t.fill())}}function UAe(e,t){var n;if(ft.drawGaze&&((n=e.rotation)==null?void 0:n.angle)&&typeof Path2D!="undefined"){t.strokeStyle="pink";let s=e.box[0]+e.box[2]/2-e.box[3]*fu(e.rotation.angle.yaw)/90,r=e.box[1]+e.box[3]/2+e.box[2]*fu(e.rotation.angle.pitch)/90,a=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${s} ${e.box[1]},
        ${s} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),o=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${r},
        ${e.box[0]+e.box[2]} ${r},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(o),t.stroke(a)}}function GAe(e,t){var n,s,r,a;if(ft.drawGaze&&((s=(n=e.rotation)==null?void 0:n.gaze)==null?void 0:s.strength)&&((a=(r=e.rotation)==null?void 0:r.gaze)==null?void 0:a.bearing)&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";let o=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];jb(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[o[0],o[1]],4);let i=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];jb(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[i[0],i[1]],4)}}function HAe(e,t){if(ft.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let n=0;n<ru.length/3;n++){let s=[ru[n*3+0],ru[n*3+1],ru[n*3+2]].map(r=>e.mesh[r]);Hb(t,s,ft)}VAe(e,t)}}function jAe(e,t){if(ft.drawPoints&&e.mesh.length>=468)for(let n=0;n<e.mesh.length;n++)Ea(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2],ft),ft.drawAttention&&(Bh.includes(n)&&Ea(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]+127,ft),iu.includes(n)&&Ea(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,ft),lu.includes(n)&&Ea(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,ft))}function qAe(e,t){ft.drawBoxes&&Qr(t,e.box[0],e.box[1],e.box[2],e.box[3],ft)}async function kd(e,t,n){if(ft=Xt(Ln,n),!t||!e)return;let s=Ys(e);if(!!s){s.font=ft.font,s.strokeStyle=ft.color,s.fillStyle=ft.color;for(let r of t)qAe(r,s),WAe(r,s),r.mesh&&r.mesh.length>0&&(jAe(r,s),HAe(r,s),UAe(r,s),GAe(r,s))}}async function Id(e,t,n){var a;let s=Xt(Ln,n);if(!t||!e)return;let r=Ys(e);if(!!r){r.lineJoin="round";for(let o=0;o<t.length;o++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(Qr(r,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+s.lineHeight,t[o].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+s.lineHeight,t[o].box[2]))),s.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)!t[o].keypoints[i].score||t[o].keypoints[i].score===0||(r.fillStyle=Na(t[o].keypoints[i].position[2],s),Ea(r,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,s));if(s.drawLabels&&t[o].keypoints){r.font=s.font;for(let i of t[o].keypoints)!i.score||i.score===0||(r.fillStyle=Na(i.position[2],s),r.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4))}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)tE(r,l,s)}}}async function Sd(e,t,n){let s=Xt(Ln,n);if(!t||!e)return;let r=Ys(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Qr(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=Na(o[2],s),Ea(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let u=i[i.length-1][2]||-256;r.fillStyle=Na(u,s),r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){r.beginPath();let u=i[l][2]||0;r.strokeStyle=Na(l*u,s),r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()}};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}async function Cd(e,t,n){let s=Xt(Ln,n);if(!t||!e)return;let r=Ys(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Qr(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}async function Td(e,t,n){let s=Xt(Ln,n);if(!(!t||!e)&&s.drawGestures){let r=Ys(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let u=i[1]>0?`#${i[1]}`:"",c=`${i[0]} ${u}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(c,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(c,6,0+a*s.lineHeight),a+=1}}}}var qb=0;async function Xb(e,t,n){let s=Xt(Ln,n);if(!t||!e)return;let r=Ys(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Qr(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}async function Kb(e,t){if(!e||!t)return;let n=Ys(t);!n||n.drawImage(e,0,0)}async function Zb(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=ue(),r=Xt(Ln,n),a=Promise.all([kd(e,t.face,r),Id(e,t.body,r),Sd(e,t.hand,r),Cd(e,t.object,r),Td(e,t.gesture,r)]);return qb=me.perfadd?qb+Math.round(ue()-s):Math.round(ue()-s),t.performance.draw=qb,a}var Nd=.1,Jb=.5;function XAe(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function nE(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of dr.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});Nd&&Nd>0&&(r=r.map(o=>({x:o.x>.5?o.x+Nd:o.x-Nd,y:o.y>.5?o.y+Nd:o.y-Nd})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)XAe(o/t,i/t,r)||(s.set(Jb*s.get(0,i,o,0),0,i,o,0),s.set(Jb*s.get(0,i,o,1),0,i,o,1),s.set(Jb*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return ne(s),a}var ZAe=e=>{let t=(p,d)=>Math.atan2(p[1]-d[1],p[0]-d[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],u=Math.sqrt(l[0]*l[0]+l[1]*l[1]);return u=Math.min(u,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:u}},sE=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},s=(m,g)=>{let y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},r=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},a=m=>{let[g,y,x,A,b,w,k,S,E]=m,R,$,_;return A<1?A>-1?(_=Math.asin(A),$=Math.atan2(-k,g),R=Math.atan2(-w,b)):(_=-Math.PI/2,$=-Math.atan2(S,E),R=0):(_=Math.PI/2,$=Math.atan2(S,E),R=0),isNaN(R)&&(R=0),isNaN($)&&($=0),isNaN(_)&&(_=0),{pitch:2*-R,yaw:2*-$,roll:2*-_}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),u=n(s(l[1],l[0])),c=n(s(l[3],l[2])),p=n(r(c,u));c=r(u,p);let d=[c[0],c[1],c[2],u[0],u[1],u[2],p[0],p[1],p[2]],h=a(d),f=o.length===478?ZAe(e):{bearing:0,strength:0};return{angle:h,matrix:d,gaze:f}};var Qb=async(e,t)=>{var h,f,m,g,y,x,A,b,w,k,S,E,R,$,_,D,C,F,V,j,z,Z;let n=ue(),s,r,a,o,i,l,u,c,p=[];e.state="run:face";let d=await KT(t,e.config);if(e.performance.face=me.perfadd?(e.performance.face||0)+Math.trunc(ue()-n):Math.trunc(ue()-n),!t.shape||t.shape.length!==4)return[];if(!d)return[];for(let W=0;W<d.length;W++){if(e.analyze("Get Face"),!d[W].tensor||d[W].tensor.isDisposedInternal){oe("Face object is disposed:",d[W].tensor);continue}if((h=e.config.face.detector)!=null&&h.mask){let ae=await nE(d[W]);ne(d[W].tensor),d[W].tensor=ae}let ee=d[W].mesh&&d[W].mesh.length>200?sE(d[W],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?o=(f=e.config.face.emotion)!=null&&f.enabled?ob(d[W].tensor||gt([]),e.config,W,d.length):[]:(e.state="run:emotion",n=ue(),o=(m=e.config.face.emotion)!=null&&m.enabled?await ob(d[W].tensor||gt([]),e.config,W,d.length):[],e.performance.emotion=me.perfadd?(e.performance.emotion||0)+Math.trunc(ue()-n):Math.trunc(ue()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=(g=e.config.face.antispoof)!=null&&g.enabled?Wx(d[W].tensor||gt([]),e.config,W,d.length):0:(e.state="run:antispoof",n=ue(),l=(y=e.config.face.antispoof)!=null&&y.enabled?await Wx(d[W].tensor||gt([]),e.config,W,d.length):0,e.performance.antispoof=me.perfadd?(e.performance.antispoof||0)+Math.trunc(ue()-n):Math.trunc(ue()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?u=(x=e.config.face.liveness)!=null&&x.enabled?Cb(d[W].tensor||gt([]),e.config,W,d.length):0:(e.state="run:liveness",n=ue(),u=(A=e.config.face.liveness)!=null&&A.enabled?await Cb(d[W].tensor||gt([]),e.config,W,d.length):0,e.performance.liveness=me.perfadd?(e.performance.antispoof||0)+Math.trunc(ue()-n):Math.trunc(ue()-n)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?r=(b=e.config.face.gear)!=null&&b.enabled?Px(d[W].tensor||gt([]),e.config,W,d.length):null:(e.state="run:gear",n=ue(),r=(w=e.config.face.gear)!=null&&w.enabled?await Px(d[W].tensor||gt([]),e.config,W,d.length):null,e.performance.gear=Math.trunc(ue()-n)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(s=(k=e.config.face.ssrnet)!=null&&k.enabled?Ox(d[W].tensor||gt([]),e.config,W,d.length):null,a=(S=e.config.face.ssrnet)!=null&&S.enabled?Lx(d[W].tensor||gt([]),e.config,W,d.length):null):(e.state="run:ssrnet",n=ue(),s=(E=e.config.face.ssrnet)!=null&&E.enabled?await Ox(d[W].tensor||gt([]),e.config,W,d.length):null,a=(R=e.config.face.ssrnet)!=null&&R.enabled?await Lx(d[W].tensor||gt([]),e.config,W,d.length):null,e.performance.ssrnet=Math.trunc(ue()-n)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?i=($=e.config.face.mobilefacenet)!=null&&$.enabled?lb(d[W].tensor||gt([]),e.config,W,d.length):null:(e.state="run:mobilefacenet",n=ue(),i=(_=e.config.face.mobilefacenet)!=null&&_.enabled?await lb(d[W].tensor||gt([]),e.config,W,d.length):null,e.performance.mobilefacenet=Math.trunc(ue()-n)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?c=(D=e.config.face.description)!=null&&D.enabled?fb(d[W].tensor||gt([]),e.config,W,d.length):null:(e.state="run:description",n=ue(),c=(C=e.config.face.description)!=null&&C.enabled?await fb(d[W].tensor||gt([]),e.config,W,d.length):null,e.performance.description=me.perfadd?(e.performance.description||0)+Math.trunc(ue()-n):Math.trunc(ue()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,c,r,l,u]=await Promise.all([s,a,o,i,c,r,l,u])),e.analyze("Finish Face:"),((F=e.config.face.ssrnet)==null?void 0:F.enabled)&&s&&a&&(c={...c,age:s.age,gender:a.gender,genderScore:a.genderScore}),((V=e.config.face.gear)==null?void 0:V.enabled)&&r&&(c={...c,age:r.age,gender:r.gender,genderScore:r.genderScore,race:r.race}),((j=e.config.face.mobilefacenet)==null?void 0:j.enabled)&&i&&(c.descriptor=i),(z=e.config.face.iris)!=null&&z.enabled;let Q=d[W].annotations&&d[W].annotations.leftEyeIris&&d[W].annotations.leftEyeIris[0]&&d[W].annotations.rightEyeIris&&d[W].annotations.rightEyeIris[0]&&d[W].annotations.leftEyeIris.length>0&&d[W].annotations.rightEyeIris.length>0&&d[W].annotations.leftEyeIris[0]!==null&&d[W].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(d[W].annotations.leftEyeIris[3][0]-d[W].annotations.leftEyeIris[1][0]),Math.abs(d[W].annotations.rightEyeIris[4][1]-d[W].annotations.rightEyeIris[2][1]))/t.shape[2]:0,ie=(Z=e.config.face.detector)!=null&&Z.return?Qe(d[W].tensor):null;ne(d[W].tensor),d[W].tensor&&delete d[W].tensor;let J={...d[W],id:W};c!=null&&c.age&&(J.age=c.age),c!=null&&c.gender&&(J.gender=c.gender),c!=null&&c.genderScore&&(J.genderScore=c==null?void 0:c.genderScore),c!=null&&c.descriptor&&(J.embedding=c==null?void 0:c.descriptor),c!=null&&c.race&&(J.race=c==null?void 0:c.race),o&&(J.emotion=o),l&&(J.real=l),u&&(J.live=u),Q&&Q!==0&&(J.iris=Math.trunc(500/Q/11.7)/100),ee&&(J.rotation=ee),ie&&(J.tensor=ie),p.push(J),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),p};var rE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},aE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},oE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),u=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(u=!0,t.push({iris:n,gesture:"facing center"}));let p=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],d=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(p>.06||d>.06)&&(u=!1),p>d?p>.05&&t.push({iris:n,gesture:"looking right"}):d>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(u=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),u&&t.push({iris:n,gesture:"looking center"})}return t},iE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=bN(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var Ee={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},e4=0;function lE(e,t){var o,i,l,u,c,p,d,h,f,m,g,y,x,A,b,w,k,S,E,R,$,_,D,C,F,V,j;let n=ue();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(e.canvas&&(Ee.canvas=e.canvas),e.error&&(Ee.error=e.error),!Ee.body||e.body.length!==Ee.body.length)Ee.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let Z=e.body[z].box.map((J,ae)=>((r-1)*Ee.body[z].box[ae]+J)/r),W=e.body[z].boxRaw.map((J,ae)=>((r-1)*Ee.body[z].boxRaw[ae]+J)/r),ee=e.body[z].keypoints.map((J,ae)=>{var le,ye,we,Re,_e,Be,Ue,ot,ct;return{score:J.score,part:J.part,position:[Ee.body[z].keypoints[ae]?((r-1)*(Ee.body[z].keypoints[ae].position[0]||0)+(J.position[0]||0))/r:J.position[0],Ee.body[z].keypoints[ae]?((r-1)*(Ee.body[z].keypoints[ae].position[1]||0)+(J.position[1]||0))/r:J.position[1],Ee.body[z].keypoints[ae]?((r-1)*(Ee.body[z].keypoints[ae].position[2]||0)+(J.position[2]||0))/r:J.position[2]],positionRaw:[Ee.body[z].keypoints[ae]?((r-1)*(Ee.body[z].keypoints[ae].positionRaw[0]||0)+(J.positionRaw[0]||0))/r:J.positionRaw[0],Ee.body[z].keypoints[ae]?((r-1)*(Ee.body[z].keypoints[ae].positionRaw[1]||0)+(J.positionRaw[1]||0))/r:J.positionRaw[1],Ee.body[z].keypoints[ae]?((r-1)*(Ee.body[z].keypoints[ae].positionRaw[2]||0)+(J.positionRaw[2]||0))/r:J.positionRaw[2]],distance:[Ee.body[z].keypoints[ae]?((r-1)*(((le=Ee.body[z].keypoints[ae].distance)==null?void 0:le[0])||0)+(((ye=J.distance)==null?void 0:ye[0])||0))/r:(we=J.distance)==null?void 0:we[0],Ee.body[z].keypoints[ae]?((r-1)*(((Re=Ee.body[z].keypoints[ae].distance)==null?void 0:Re[1])||0)+(((_e=J.distance)==null?void 0:_e[1])||0))/r:(Be=J.distance)==null?void 0:Be[1],Ee.body[z].keypoints[ae]?((r-1)*(((Ue=Ee.body[z].keypoints[ae].distance)==null?void 0:Ue[2])||0)+(((ot=J.distance)==null?void 0:ot[2])||0))/r:(ct=J.distance)==null?void 0:ct[2]]}}),Q={},ie={connected:{}};(i=(o=t.body)==null?void 0:o.modelPath)!=null&&i.includes("efficientpose")?ie=$2:(u=(l=t.body)==null?void 0:l.modelPath)!=null&&u.includes("blazepose")?ie=N2:(p=(c=t.body)==null?void 0:c.modelPath)!=null&&p.includes("movenet")&&(ie=Vh);for(let[J,ae]of Object.entries(ie.connected)){let le=[];for(let ye=0;ye<ae.length-1;ye++){let we=ee.find(_e=>_e.part===ae[ye]),Re=ee.find(_e=>_e.part===ae[ye+1]);we&&Re&&le.push([we.position,Re.position])}Q[J]=le}Ee.body[z]={...e.body[z],box:Z,boxRaw:W,keypoints:ee,annotations:Q}}if(!Ee.hand||e.hand.length!==Ee.hand.length)Ee.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let Z=e.hand[z].box.map((ie,J)=>((r-1)*Ee.hand[z].box[J]+ie)/r),W=e.hand[z].boxRaw.map((ie,J)=>((r-1)*Ee.hand[z].boxRaw[J]+ie)/r);Ee.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(Ee.hand[z].keypoints=e.hand[z].keypoints);let ee=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((ie,J)=>ie.map((ae,le)=>((r-1)*(Ee.hand[z].keypoints[J][le]||1)+(ae||0))/r)):[],Q={};if(Object.keys(Ee.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)Ee.hand[z].annotations=e.hand[z].annotations,Q=Ee.hand[z].annotations;else if(e.hand[z].annotations)for(let ie of Object.keys(e.hand[z].annotations))Q[ie]=e.hand[z].annotations[ie]&&e.hand[z].annotations[ie][0]?e.hand[z].annotations[ie].map((J,ae)=>J.map((le,ye)=>((r-1)*Ee.hand[z].annotations[ie][ae][ye]+le)/r)):null;Ee.hand[z]={...e.hand[z],box:Z,boxRaw:W,keypoints:ee,annotations:Q}}if(!Ee.face||e.face.length!==Ee.face.length)Ee.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let Z=e.face[z].box.map((ee,Q)=>((r-1)*Ee.face[z].box[Q]+ee)/r),W=e.face[z].boxRaw.map((ee,Q)=>((r-1)*Ee.face[z].boxRaw[Q]+ee)/r);if(e.face[z].rotation){let ee={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};ee.matrix=(d=e.face[z].rotation)==null?void 0:d.matrix,ee.angle={roll:((r-1)*(((f=(h=Ee.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/r,yaw:((r-1)*(((x=(y=Ee.face[z].rotation)==null?void 0:y.angle)==null?void 0:x.yaw)||0)+(((b=(A=e.face[z].rotation)==null?void 0:A.angle)==null?void 0:b.yaw)||0))/r,pitch:((r-1)*(((k=(w=Ee.face[z].rotation)==null?void 0:w.angle)==null?void 0:k.pitch)||0)+(((E=(S=e.face[z].rotation)==null?void 0:S.angle)==null?void 0:E.pitch)||0))/r},ee.gaze={bearing:((r-1)*((($=(R=Ee.face[z].rotation)==null?void 0:R.gaze)==null?void 0:$.bearing)||0)+(((D=(_=e.face[z].rotation)==null?void 0:_.gaze)==null?void 0:D.bearing)||0))/r,strength:((r-1)*(((F=(C=Ee.face[z].rotation)==null?void 0:C.gaze)==null?void 0:F.strength)||0)+(((j=(V=e.face[z].rotation)==null?void 0:V.gaze)==null?void 0:j.strength)||0))/r},Ee.face[z]={...e.face[z],rotation:ee,box:Z,boxRaw:W}}Ee.face[z]={...e.face[z],box:Z,boxRaw:W}}if(!Ee.object||e.object.length!==Ee.object.length)Ee.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let Z=e.object[z].box.map((ee,Q)=>((r-1)*Ee.object[z].box[Q]+ee)/r),W=e.object[z].boxRaw.map((ee,Q)=>((r-1)*Ee.object[z].boxRaw[Q]+ee)/r);Ee.object[z]={...e.object[z],box:Z,boxRaw:W}}if(e.persons){let z=e.persons;if(!Ee.persons||z.length!==Ee.persons.length)Ee.persons=JSON.parse(JSON.stringify(z));else for(let Z=0;Z<z.length;Z++)Ee.persons[Z].box=z[Z].box.map((W,ee)=>((r-1)*Ee.persons[Z].box[ee]+W)/r)}e.gesture&&(Ee.gesture=e.gesture);let a=ue();return e4=me.perfadd?e4+Math.round(a-n):Math.round(a-n),e.performance&&(Ee.performance={...e.performance,interpolate:e4}),Ee}var s4={};Pa(s4,{distance:()=>jh,match:()=>n4,similarity:()=>t4});function jh(e,t,n={order:2,multiplier:25}){let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var uE=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function t4(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=jh(e,t,n);return uE(s,n.order||2,n.min||0,n.max||1)}function n4(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=jh(e,t[o],n);if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=uE(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function cE(e,t,n,s,r){var i,l,u,c,p,d,h,f,m,g,y,x,A,b,w,k;let a=0,o=[];for(let S of e){let E={id:a++,face:S,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let F of t)S.box[0]>F.box[0]&&S.box[0]<F.box[0]+F.box[2]&&S.box[1]+S.box[3]>F.box[1]&&S.box[1]+S.box[3]<F.box[1]+F.box[3]&&(E.body=F);if(E.body)for(let F of n)F.box[0]+F.box[2]>E.body.box[0]&&F.box[0]+F.box[2]<E.body.box[0]+E.body.box[2]&&F.box[1]+F.box[3]>E.body.box[1]&&F.box[1]+F.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=F),F.box[0]<E.body.box[0]+E.body.box[2]&&F.box[0]>E.body.box[0]&&F.box[1]+F.box[3]>E.body.box[1]&&F.box[1]+F.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=F);for(let F of s)F.face!==void 0&&F.face===S.id?(i=E.gestures)==null||i.push(F):F.iris!==void 0&&F.iris===S.id?(l=E.gestures)==null||l.push(F):F.body!==void 0&&F.body===((u=E.body)==null?void 0:u.id)?(c=E.gestures)==null||c.push(F):F.hand!==void 0&&F.hand===((d=(p=E.hands)==null?void 0:p.left)==null?void 0:d.id)?(h=E.gestures)==null||h.push(F):F.hand!==void 0&&F.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(F));let R=[],$=[],_=F=>{F&&F.length===4&&(R.push(F[0],F[0]+F[2]),$.push(F[1],F[1]+F[3]))};_((y=E.face)==null?void 0:y.box),_((x=E.body)==null?void 0:x.box),_((b=(A=E.hands)==null?void 0:A.left)==null?void 0:b.box),_((k=(w=E.hands)==null?void 0:w.right)==null?void 0:k.box);let D=Math.min(...R),C=Math.min(...$);E.box=[D,C,Math.max(...R)-D,Math.max(...$)-C],r&&r[1]&&r[2]&&(E.boxRaw=[E.box[0]/r[2],E.box[1]/r[1],E.box[2]/r[2],E.box[3]/r[1]]),o.push(E)}return o}var s1=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,r1=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function n5e(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(s1);break;case"body":case"full":n=await t(r1);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function s5e(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+s1;break;case"full":case"body":n="data:image/jpeg;base64,"+r1;break;default:n=null}let s;if(typeof Image!="undefined")s=new Image;else if(me.Image)s=new me.Image;else return;s.onload=async()=>{let r=as(s.naturalWidth,s.naturalHeight);if(!r)oe("Warmup: Canvas not found"),t(void 0);else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(void 0)})}async function r5e(e){let t=r=>Buffer.from(r,"base64"),n;e.config.warmup==="face"?n=t(s1):n=t(r1);let s;if("node"in He){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&oe("Warmup tfjs-node not loaded");return s}async function a5e(e){let t;return typeof createImageBitmap=="function"?t=await n5e(e):typeof Image!="undefined"||me.Canvas!==void 0?t=await s5e(e):t=await r5e(e),t}async function o5e(e){let t=es(),n=js();if(t!=="webgl"&&t!=="humangl"||!n||!n.checkCompileCompletion)return;Y().set("ENGINE_COMPILE_ONLY",!0);let s=nn().state.numTensors,r=[];for(let[i,l]of Object.entries(e).filter(([u,c])=>u!==null&&c!==null)){let u=l.inputs&&l.inputs[0]&&l.inputs[0].shape?[...l.inputs[0].shape]:[1,64,64,3],c=l.inputs&&l.inputs[0]&&l.inputs[0].dtype?l.inputs[0].dtype:"float32";for(let d=0;d<u.length;d++)u[d]===-1&&(u[d]=d===0?1:64);let p=Wt(u,c);try{let d=l.execute(p);r.push(i),Array.isArray(d)?d.forEach(h=>ne(h)):ne(d)}catch(d){oe("compile fail model:",i)}ne(p)}let a=await n.checkCompileCompletionAsync();n.getUniformLocations(),oe("compile pass models:",r),oe("compile pass kernels:",a.length),Y().set("ENGINE_COMPILE_ONLY",!1);let o=nn().state.numTensors;o-s>0&&oe("tensor leak:",o-s)}async function dE(e,t){let n=ue();return e.state="warmup",t&&(e.config=Xt(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ue(),persons:[],error:null}:new Promise(async s=>{await o5e(e.models);let r=await a5e(e),a=ue();e.config.debug&&oe("warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),s(r)})}var Ed,qh,Xh,a1,r4=class{constructor(t){ge(this,"version");ge(this,"config");ge(this,"result");ge(this,"state");ge(this,"process");ge(this,"tf");ge(this,"env");ge(this,"draw");ge(this,"models");ge(this,"events");ge(this,"faceTriangulation");ge(this,"faceUVMap");ge(this,"performance");Gd(this,Ed,void 0);Gd(this,qh,void 0);Gd(this,Xh,void 0);ge(this,"gl");ge(this,"analyze",(...t)=>{if(!Ud(this,qh))return;let n=this.tf.engine().state.numTensors,s=Ud(this,Ed);Hd(this,Ed,n);let r=n-s;r!==0&&oe(...t,r)});Gd(this,a1,t=>{if(!Ud(this,Xh))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof nt))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});ge(this,"similarity",t4);ge(this,"distance",jh);ge(this,"match",n4);ge(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});var s;this.env=me;let n=(((s=Fh)==null?void 0:s.tfjs)||ky).replace(/-(.*)/,"");Fa.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${n}/dist/`,Fa.modelBasePath=me.browser?"../models/":"file://models/",Fa.backend=me.browser?"humangl":"tensorflow",this.version=_x,Object.defineProperty(this,"version",{value:_x}),this.config=JSON.parse(JSON.stringify(Fa)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB!="undefined",t&&(this.config=Xt(this.config,t)),LC(this.config),this.tf=He,this.state="idle",Hd(this,Ed,0),Hd(this,qh,!1),Hd(this,Xh,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new Hh,this.draw={options:Ln,canvas:(r,a)=>Kb(r,a),face:(r,a,o)=>kd(r,a,o),body:(r,a,o)=>Id(r,a,o),hand:(r,a,o)=>Sd(r,a,o),gesture:(r,a,o)=>Td(r,a,o),object:(r,a,o)=>Cd(r,a,o),person:(r,a,o)=>Xb(r,a,o),all:(r,a,o)=>Zb(r,a,o)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=YT,this.faceUVMap=JT,this.gl=Ft,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Fa)),this.config.backend=t}validate(t){return Mg(Fa,t||this.config)}now(){return ue()}image(t,n=!0){return ud(t,this.config,n)}async segmentation(t,n){return YN(t,n,this.config)}enhance(t){return hb(t)}compare(t,n){return zC(this.config,t,n)}async init(){await n1(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=ue(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=Xt(this.config,t)),this.env.initial&&(this.config.debug&&oe(`version: ${this.version}`),this.config.debug&&oe(`tfjs version: ${this.tf.version["tfjs-core"]}`),await n1(this)||oe("error: backend check failed"),await Fc(),this.env.browser&&(this.config.debug&&oe("configuration:",this.config),this.config.debug&&oe("environment:",this.env),this.config.debug&&oe("tf flags:",this.tf.ENV.flags))),await Ub(this),this.env.initial&&this.config.debug&&oe("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(await Gb(this),this.emit("load"));let a=Math.trunc(ue()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return lE(t,this.config)}getModelStats(){return Vb()}async warmup(t){let n=ue(),s=await dE(this,t),r=ue();return this.performance.warmup=Math.trunc(r-n),s}async profile(t,n){let s=await this.tf.profile(()=>this.detect(t,n)),r={};for(let i of s.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;let a=[];Object.entries(r).forEach(i=>a.push({name:i[0],ms:i[1]})),a.sort((i,l)=>l.ms-i.ms),a.length=20;let o={};for(let i of a)o[i.name]=i.ms;return o}async detect(t,n){return this.state="detect",new Promise(async s=>{var g,y,x,A,b,w,k,S,E,R,$,_,D,C,F,V,j,z,Z,W,ee,Q;this.state="config";let r;this.config=Xt(this.config,n),this.state="check";let a=Ud(this,a1).call(this,t);a&&(oe(a,t),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ue(),persons:[],error:a}));let o=ue();await n1(this),await this.load(),r=ue(),this.state="image";let i=await ud(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ue()-r):Math.trunc(ue()-r),this.analyze("Get Image:"),!i.tensor){this.config.debug&&oe("could not convert input to tensor"),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ue(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),r=ue(),this.config.skipAllowed=await MC(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ue()-r):Math.trunc(ue()-r),this.analyze("Check Changed:");let l=[],u=[],c=[],p=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?Qb(this,i.tensor):[],this.performance.face&&delete this.performance.face):(r=ue(),l=this.config.face.enabled?await Qb(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ue()-r):Math.trunc(ue()-r)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let d=this.config.body.maxDetected===-1?Xt(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?((g=this.config.body.modelPath)!=null&&g.includes("posenet")?u=this.config.body.enabled?Lb(i.tensor,d):[]:(y=this.config.body.modelPath)!=null&&y.includes("blazepose")?u=this.config.body.enabled?Yx(i.tensor,d):[]:(x=this.config.body.modelPath)!=null&&x.includes("efficientpose")?u=this.config.body.enabled?rb(i.tensor,d):[]:(A=this.config.body.modelPath)!=null&&A.includes("movenet")&&(u=this.config.body.enabled?Db(i.tensor,d):[]),this.performance.body&&delete this.performance.body):(r=ue(),(b=this.config.body.modelPath)!=null&&b.includes("posenet")?u=this.config.body.enabled?await Lb(i.tensor,d):[]:(w=this.config.body.modelPath)!=null&&w.includes("blazepose")?u=this.config.body.enabled?await Yx(i.tensor,d):[]:(k=this.config.body.modelPath)!=null&&k.includes("efficientpose")?u=this.config.body.enabled?await rb(i.tensor,d):[]:(S=this.config.body.modelPath)!=null&&S.includes("movenet")&&(u=this.config.body.enabled?await Db(i.tensor,d):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ue()-r):Math.trunc(ue()-r)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?Xt(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?((R=(E=this.config.hand.detector)==null?void 0:E.modelPath)!=null&&R.includes("handdetect")?c=this.config.hand.enabled?bb(i.tensor,h):[]:(_=($=this.config.hand.detector)==null?void 0:$.modelPath)!=null&&_.includes("handtrack")&&(c=this.config.hand.enabled?Ib(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(r=ue(),(C=(D=this.config.hand.detector)==null?void 0:D.modelPath)!=null&&C.includes("handdetect")?c=this.config.hand.enabled?await bb(i.tensor,h):[]:(V=(F=this.config.hand.detector)==null?void 0:F.modelPath)!=null&&V.includes("handtrack")&&(c=this.config.hand.enabled?await Ib(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ue()-r):Math.trunc(ue()-r)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((j=this.config.object.modelPath)!=null&&j.includes("nanodet")?p=this.config.object.enabled?Pb(i.tensor,this.config):[]:(z=this.config.object.modelPath)!=null&&z.includes("centernet")&&(p=this.config.object.enabled?eb(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=ue(),(Z=this.config.object.modelPath)!=null&&Z.includes("nanodet")?p=this.config.object.enabled?await Pb(i.tensor,this.config):[]:(W=this.config.object.modelPath)!=null&&W.includes("centernet")&&(p=this.config.object.enabled?await eb(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ue()-r):Math.trunc(ue()-r)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,u,c,p]=await Promise.all([l,u,c,p])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(r=ue(),f=[...aE(l),...rE(u),...iE(c),...oE(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ue()-r):Math.trunc(ue()-r)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ue()-o):Math.trunc(ue()-o);let m=((Q=(ee=this.process)==null?void 0:ee.tensor)==null?void 0:Q.shape)||[];this.result={face:l,body:u,hand:c,gesture:f,object:p,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return cE(l,u,c,f,m)}},ne(i.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};Ed=new WeakMap,qh=new WeakMap,Xh=new WeakMap,a1=new WeakMap;return cR(l5e);})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
